{
"version":3,
"file":"module$node_modules$codemirror$mode$r$r.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/codemirror/mode/r/r.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$r$r\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.registerHelper(\"wordChars\", \"r\", /[\\w.]/);\n\nCodeMirror.defineMode(\"r\", function(config) {\n  function wordObj(words) {\n    var res = {};\n    for (var i = 0; i < words.length; ++i) res[words[i]] = true;\n    return res;\n  }\n  var commonAtoms = [\"NULL\", \"NA\", \"Inf\", \"NaN\", \"NA_integer_\", \"NA_real_\", \"NA_complex_\", \"NA_character_\", \"TRUE\", \"FALSE\"];\n  var commonBuiltins = [\"list\", \"quote\", \"bquote\", \"eval\", \"return\", \"call\", \"parse\", \"deparse\"];\n  var commonKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\", \"in\", \"next\", \"break\"];\n  var commonBlockKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\"];\n\n  CodeMirror.registerHelper(\"hintWords\", \"r\", commonAtoms.concat(commonBuiltins, commonKeywords));\n\n  var atoms = wordObj(commonAtoms);\n  var builtins = wordObj(commonBuiltins);\n  var keywords = wordObj(commonKeywords);\n  var blockkeywords = wordObj(commonBlockKeywords);\n  var opChars = /[+\\-*\\/^<>=!&|~$:]/;\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    curPunc = null;\n    var ch = stream.next();\n    if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"0\" && stream.eat(\"x\")) {\n      stream.eatWhile(/[\\da-f]/i);\n      return \"number\";\n    } else if (ch == \".\" && stream.eat(/\\d/)) {\n      stream.match(/\\d*(?:e[+\\-]?\\d+)?/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/\\d*(?:\\.\\d+)?(?:e[+\\-]\\d+)?L?/);\n      return \"number\";\n    } else if (ch == \"'\" || ch == '\"') {\n      state.tokenize = tokenString(ch);\n      return \"string\";\n    } else if (ch == \"`\") {\n      stream.match(/[^`]+`/);\n      return \"variable-3\";\n    } else if (ch == \".\" && stream.match(/.[.\\d]+/)) {\n      return \"keyword\";\n    } else if (/[\\w\\.]/.test(ch) && ch != \"_\") {\n      stream.eatWhile(/[\\w\\.]/);\n      var word = stream.current();\n      if (atoms.propertyIsEnumerable(word)) return \"atom\";\n      if (keywords.propertyIsEnumerable(word)) {\n        // Block keywords start new blocks, except 'else if', which only starts\n        // one new block for the 'if', no block for the 'else'.\n        if (blockkeywords.propertyIsEnumerable(word) &&\n            !stream.match(/\\s*if(\\s+|$)/, false))\n          curPunc = \"block\";\n        return \"keyword\";\n      }\n      if (builtins.propertyIsEnumerable(word)) return \"builtin\";\n      return \"variable\";\n    } else if (ch == \"%\") {\n      if (stream.skipTo(\"%\")) stream.next();\n      return \"operator variable-2\";\n    } else if (\n        (ch == \"<\" && stream.eat(\"-\")) ||\n        (ch == \"<\" && stream.match(\"<-\")) ||\n        (ch == \"-\" && stream.match(/>>?/))\n      ) {\n      return \"operator arrow\";\n    } else if (ch == \"=\" && state.ctx.argList) {\n      return \"arg-is\";\n    } else if (opChars.test(ch)) {\n      if (ch == \"$\") return \"operator dollar\";\n      stream.eatWhile(opChars);\n      return \"operator\";\n    } else if (/[\\(\\){}\\[\\];]/.test(ch)) {\n      curPunc = ch;\n      if (ch == \";\") return \"semi\";\n      return null;\n    } else {\n      return null;\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      if (stream.eat(\"\\\\\")) {\n        var ch = stream.next();\n        if (ch == \"x\") stream.match(/^[a-f0-9]{2}/i);\n        else if ((ch == \"u\" || ch == \"U\") && stream.eat(\"{\") && stream.skipTo(\"}\")) stream.next();\n        else if (ch == \"u\") stream.match(/^[a-f0-9]{4}/i);\n        else if (ch == \"U\") stream.match(/^[a-f0-9]{8}/i);\n        else if (/[0-7]/.test(ch)) stream.match(/^[0-7]{1,2}/);\n        return \"string-2\";\n      } else {\n        var next;\n        while ((next = stream.next()) != null) {\n          if (next == quote) { state.tokenize = tokenBase; break; }\n          if (next == \"\\\\\") { stream.backUp(1); break; }\n        }\n        return \"string\";\n      }\n    };\n  }\n\n  var ALIGN_YES = 1, ALIGN_NO = 2, BRACELESS = 4\n\n  function push(state, type, stream) {\n    state.ctx = {type: type,\n                 indent: state.indent,\n                 flags: 0,\n                 column: stream.column(),\n                 prev: state.ctx};\n  }\n  function setFlag(state, flag) {\n    var ctx = state.ctx\n    state.ctx = {type: ctx.type,\n                 indent: ctx.indent,\n                 flags: ctx.flags | flag,\n                 column: ctx.column,\n                 prev: ctx.prev}\n  }\n  function pop(state) {\n    state.indent = state.ctx.indent;\n    state.ctx = state.ctx.prev;\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: tokenBase,\n              ctx: {type: \"top\",\n                    indent: -config.indentUnit,\n                    flags: ALIGN_NO},\n              indent: 0,\n              afterIdent: false};\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if ((state.ctx.flags & 3) == 0) state.ctx.flags |= ALIGN_NO\n        if (state.ctx.flags & BRACELESS) pop(state)\n        state.indent = stream.indentation();\n      }\n      if (stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (style != \"comment\" && (state.ctx.flags & ALIGN_NO) == 0) setFlag(state, ALIGN_YES)\n\n      if ((curPunc == \";\" || curPunc == \"{\" || curPunc == \"}\") && state.ctx.type == \"block\") pop(state);\n      if (curPunc == \"{\") push(state, \"}\", stream);\n      else if (curPunc == \"(\") {\n        push(state, \")\", stream);\n        if (state.afterIdent) state.ctx.argList = true;\n      }\n      else if (curPunc == \"[\") push(state, \"]\", stream);\n      else if (curPunc == \"block\") push(state, \"block\", stream);\n      else if (curPunc == state.ctx.type) pop(state);\n      else if (state.ctx.type == \"block\" && style != \"comment\") setFlag(state, BRACELESS)\n      state.afterIdent = style == \"variable\" || style == \"keyword\";\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), ctx = state.ctx,\n          closing = firstChar == ctx.type;\n      if (ctx.flags & BRACELESS) ctx = ctx.prev\n      if (ctx.type == \"block\") return ctx.indent + (firstChar == \"{\" ? 0 : config.indentUnit);\n      else if (ctx.flags & ALIGN_YES) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indent + (closing ? 0 : config.indentUnit);\n    },\n\n    lineComment: \"#\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-rsrc\", \"r\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","registerHelper","defineMode","config","wordObj","words","res","i","length","tokenBase","stream","state","curPunc","ch","next","skipToEnd","eat","eatWhile","match","test","tokenize","tokenString","word","current","atoms","propertyIsEnumerable","keywords","blockkeywords","builtins","skipTo","ctx","argList","opChars","quote","backUp","push","type","indent","flags","column","prev","setFlag","flag","pop","commonAtoms","commonBuiltins","commonKeywords","concat","commonBlockKeywords","startState","indentUnit","ALIGN_NO","afterIdent","token","sol","BRACELESS","indentation","eatSpace","style","ALIGN_YES","textAfter","firstChar","charAt","closing","lineComment","defineMIME"]
}
