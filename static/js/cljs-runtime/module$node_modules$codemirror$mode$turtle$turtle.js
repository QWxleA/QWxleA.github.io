shadow$provide.module$node_modules$codemirror$mode$turtle$turtle=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)})(function(CodeMirror){CodeMirror.defineMode("turtle",function(config){function tokenBase(stream,state){var ch=stream.next();curPunc=null;if("\x3c"!=ch||stream.match(/^[\s\u00a0=]/,
!1)){if('"'==ch||"'"==ch)return state.tokenize=tokenLiteral(ch),state.tokenize(stream,state);if(/[{}\(\),\.;\[\]]/.test(ch))return curPunc=ch,null;if("#"==ch)return stream.skipToEnd(),"comment";if(operatorChars.test(ch))return stream.eatWhile(operatorChars),null;if(":"==ch)return"operator";stream.eatWhile(/[_\w\d]/);if(":"==stream.peek())return"variable-3";stream=stream.current();return keywords.test(stream)?"meta":"A"<=ch&&"Z">=ch?"comment":"keyword"}stream.match(/^[^\s\u00a0>]*>?/);return"atom"}
function tokenLiteral(quote){return function(stream,state){for(var escaped=!1,ch;null!=(ch=stream.next());){if(ch==quote&&!escaped){state.tokenize=tokenBase;break}escaped=!escaped&&"\\"==ch}return"string"}}function pushContext(state,type,col){state.context={prev:state.context,indent:state.indent,col,type}}function popContext(state){state.indent=state.context.indent;state.context=state.context.prev}var indentUnit=config.indentUnit,curPunc,keywords=RegExp("^(?:@prefix|@base|a)$","i"),operatorChars=
/[*+\-<>=&|]/;return{startState:function(){return{tokenize:tokenBase,context:null,indent:0,col:0}},token:function(stream,state){stream.sol()&&(state.context&&null==state.context.align&&(state.context.align=!1),state.indent=stream.indentation());if(stream.eatSpace())return null;var style=state.tokenize(stream,state);"comment"!=style&&state.context&&null==state.context.align&&"pattern"!=state.context.type&&(state.context.align=!0);if("("==curPunc)pushContext(state,")",stream.column());else if("["==
curPunc)pushContext(state,"]",stream.column());else if("{"==curPunc)pushContext(state,"}",stream.column());else if(/[\]\}\)]/.test(curPunc)){for(;state.context&&"pattern"==state.context.type;)popContext(state);state.context&&curPunc==state.context.type&&popContext(state)}else"."==curPunc&&state.context&&"pattern"==state.context.type?popContext(state):/atom|string|variable/.test(style)&&state.context&&(/[\}\]]/.test(state.context.type)?pushContext(state,"pattern",stream.column()):"pattern"!=state.context.type||
state.context.align||(state.context.align=!0,state.context.col=stream.column()));return style},indent:function(state,textAfter){textAfter=textAfter&&textAfter.charAt(0);state=state.context;if(/[\]\}]/.test(textAfter))for(;state&&"pattern"==state.type;)state=state.prev;textAfter=state&&textAfter==state.type;return state?"pattern"==state.type?state.col:state.align?state.col+(textAfter?0:1):state.indent+(textAfter?0:indentUnit):0},lineComment:"#"}});CodeMirror.defineMIME("text/turtle","turtle")})}
//# sourceMappingURL=module$node_modules$codemirror$mode$turtle$turtle.js.map
