{
"version":3,
"file":"module$node_modules$chrono_node$dist$common$parsers$AbstractTimeExpressionParser.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/chrono-node/dist/common/parsers/AbstractTimeExpressionParser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$common$parsers$AbstractTimeExpressionParser\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractTimeExpressionParser = void 0;\nconst index_1 = require(\"../../index\");\nconst dayjs_1 = __importDefault(require(\"dayjs\"));\nfunction primaryTimePattern(primaryPrefix, primarySuffix) {\n    return new RegExp(\"(^|\\\\s|T)\" +\n        `${primaryPrefix}` +\n        \"(\\\\d{1,4})\" +\n        \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\\uff1a)\" +\n        \"(\\\\d{1,2})\" +\n        \"(?:\" +\n        \"(?:\\\\:|\\\\\uff1a)\" +\n        \"(\\\\d{2})\" +\n        \"(?:\\\\.(\\\\d{1,6}))?\" +\n        \")?\" +\n        \")?\" +\n        \"(?:\\\\s*(a\\\\.m\\\\.|p\\\\.m\\\\.|am?|pm?))?\" +\n        `${primarySuffix}`, \"i\");\n}\nfunction followingTimePatten(followingPhase, followingSuffix) {\n    return new RegExp(`^(${followingPhase})` +\n        \"(\\\\d{1,4})\" +\n        \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\\uff1a)\" +\n        \"(\\\\d{1,2})\" +\n        \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\\uff1a)\" +\n        \"(\\\\d{1,2})(?:\\\\.(\\\\d{1,6}))?\" +\n        \")?\" +\n        \")?\" +\n        \"(?:\\\\s*(a\\\\.m\\\\.|p\\\\.m\\\\.|am?|pm?))?\" +\n        `${followingSuffix}`, \"i\");\n}\nconst HOUR_GROUP = 2;\nconst MINUTE_GROUP = 3;\nconst SECOND_GROUP = 4;\nconst MILLI_SECOND_GROUP = 5;\nconst AM_PM_HOUR_GROUP = 6;\nclass AbstractTimeExpressionParser {\n    constructor(strictMode = false) {\n        this.cachedPrimaryPrefix = null;\n        this.cachedPrimarySuffix = null;\n        this.cachedPrimaryTimePattern = null;\n        this.cachedFollowingPhase = null;\n        this.cachedFollowingSuffix = null;\n        this.cachedFollowingTimePatten = null;\n        this.strictMode = strictMode;\n    }\n    primarySuffix() {\n        return \"(?=\\\\W|$)\";\n    }\n    followingSuffix() {\n        return \"(?=\\\\W|$)\";\n    }\n    pattern(context) {\n        return this.getPrimaryTimePatternThroughCache();\n    }\n    extract(context, match) {\n        const refDate = dayjs_1.default(context.refDate);\n        const result = context.createParsingResult(match.index + match[1].length, match[0].substring(match[1].length));\n        result.start.imply(\"day\", refDate.date());\n        result.start.imply(\"month\", refDate.month() + 1);\n        result.start.imply(\"year\", refDate.year());\n        result.start = this.extractPrimaryTimeComponents(context, match);\n        if (!result.start) {\n            match.index += match[0].length;\n            return null;\n        }\n        const remainingText = context.text.substring(match.index + match[0].length);\n        const followingPattern = this.getFollowingTimePatternThroughCache();\n        match = followingPattern.exec(remainingText);\n        if (!match ||\n            match[0].match(/^\\s*([+-])\\s*\\d{3,4}$/)) {\n            return this.checkAndReturnWithoutFollowingPattern(result);\n        }\n        result.end = this.extractFollowingTimeComponents(context, match, result);\n        if (result.end) {\n            if (result.end) {\n                result.text += match[0];\n            }\n        }\n        return result;\n    }\n    extractPrimaryTimeComponents(context, match, strict = false) {\n        const components = context.createParsingComponents();\n        let hour = 0;\n        let minute = 0;\n        let meridiem = null;\n        hour = parseInt(match[HOUR_GROUP]);\n        if (match[MINUTE_GROUP] != null) {\n            if (match[MINUTE_GROUP].length == 1 && !match[AM_PM_HOUR_GROUP]) {\n                return null;\n            }\n            minute = parseInt(match[MINUTE_GROUP]);\n        }\n        else if (hour > 100) {\n            if (this.strictMode) {\n                return null;\n            }\n            minute = hour % 100;\n            hour = Math.floor(hour / 100);\n        }\n        if (minute >= 60 || hour > 24) {\n            return null;\n        }\n        if (hour > 12) {\n            meridiem = index_1.Meridiem.PM;\n        }\n        if (match[AM_PM_HOUR_GROUP] != null) {\n            if (hour > 12)\n                return null;\n            const ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm == \"a\") {\n                meridiem = index_1.Meridiem.AM;\n                if (hour == 12) {\n                    hour = 0;\n                }\n            }\n            if (ampm == \"p\") {\n                meridiem = index_1.Meridiem.PM;\n                if (hour != 12) {\n                    hour += 12;\n                }\n            }\n        }\n        components.assign(\"hour\", hour);\n        components.assign(\"minute\", minute);\n        if (meridiem !== null) {\n            components.assign(\"meridiem\", meridiem);\n        }\n        else {\n            if (hour < 12) {\n                components.imply(\"meridiem\", index_1.Meridiem.AM);\n            }\n            else {\n                components.imply(\"meridiem\", index_1.Meridiem.PM);\n            }\n        }\n        if (match[MILLI_SECOND_GROUP] != null) {\n            const millisecond = parseInt(match[MILLI_SECOND_GROUP].substring(0, 3));\n            if (millisecond >= 1000)\n                return null;\n            components.assign(\"millisecond\", millisecond);\n        }\n        if (match[SECOND_GROUP] != null) {\n            const second = parseInt(match[SECOND_GROUP]);\n            if (second >= 60)\n                return null;\n            components.assign(\"second\", second);\n        }\n        return components;\n    }\n    extractFollowingTimeComponents(context, match, result) {\n        const components = context.createParsingComponents();\n        if (match[MILLI_SECOND_GROUP] != null) {\n            const millisecond = parseInt(match[MILLI_SECOND_GROUP].substring(0, 3));\n            if (millisecond >= 1000)\n                return null;\n            components.assign(\"millisecond\", millisecond);\n        }\n        if (match[SECOND_GROUP] != null) {\n            const second = parseInt(match[SECOND_GROUP]);\n            if (second >= 60)\n                return null;\n            components.assign(\"second\", second);\n        }\n        let hour = parseInt(match[HOUR_GROUP]);\n        let minute = 0;\n        let meridiem = -1;\n        if (match[MINUTE_GROUP] != null) {\n            minute = parseInt(match[MINUTE_GROUP]);\n        }\n        else if (hour > 100) {\n            minute = hour % 100;\n            hour = Math.floor(hour / 100);\n        }\n        if (minute >= 60 || hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = index_1.Meridiem.PM;\n        }\n        if (match[AM_PM_HOUR_GROUP] != null) {\n            if (hour > 12) {\n                return null;\n            }\n            const ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm == \"a\") {\n                meridiem = index_1.Meridiem.AM;\n                if (hour == 12) {\n                    hour = 0;\n                    if (!components.isCertain(\"day\")) {\n                        components.imply(\"day\", components.get(\"day\") + 1);\n                    }\n                }\n            }\n            if (ampm == \"p\") {\n                meridiem = index_1.Meridiem.PM;\n                if (hour != 12)\n                    hour += 12;\n            }\n            if (!result.start.isCertain(\"meridiem\")) {\n                if (meridiem == index_1.Meridiem.AM) {\n                    result.start.imply(\"meridiem\", index_1.Meridiem.AM);\n                    if (result.start.get(\"hour\") == 12) {\n                        result.start.assign(\"hour\", 0);\n                    }\n                }\n                else {\n                    result.start.imply(\"meridiem\", index_1.Meridiem.PM);\n                    if (result.start.get(\"hour\") != 12) {\n                        result.start.assign(\"hour\", result.start.get(\"hour\") + 12);\n                    }\n                }\n            }\n        }\n        components.assign(\"hour\", hour);\n        components.assign(\"minute\", minute);\n        if (meridiem >= 0) {\n            components.assign(\"meridiem\", meridiem);\n        }\n        else {\n            const startAtPM = result.start.isCertain(\"meridiem\") && result.start.get(\"hour\") > 12;\n            if (startAtPM) {\n                if (result.start.get(\"hour\") - 12 > hour) {\n                    components.imply(\"meridiem\", index_1.Meridiem.AM);\n                }\n                else if (hour <= 12) {\n                    components.assign(\"hour\", hour + 12);\n                    components.assign(\"meridiem\", index_1.Meridiem.PM);\n                }\n            }\n            else if (hour > 12) {\n                components.imply(\"meridiem\", index_1.Meridiem.PM);\n            }\n            else if (hour <= 12) {\n                components.imply(\"meridiem\", index_1.Meridiem.AM);\n            }\n        }\n        if (components.date().getTime() < result.start.date().getTime()) {\n            components.imply(\"day\", components.get(\"day\") + 1);\n        }\n        return components;\n    }\n    checkAndReturnWithoutFollowingPattern(result) {\n        if (result.text.match(/^\\d$/)) {\n            return null;\n        }\n        const endingWithNumbers = result.text.match(/[^\\d:.](\\d[\\d.]+)$/);\n        if (endingWithNumbers) {\n            const endingNumbers = endingWithNumbers[1];\n            if (this.strictMode) {\n                return null;\n            }\n            if (endingNumbers.includes(\".\") && !endingNumbers.match(/\\d(\\.\\d{2})+$/)) {\n                return null;\n            }\n            const endingNumberVal = parseInt(endingNumbers);\n            if (endingNumberVal > 24) {\n                return null;\n            }\n        }\n        return result;\n    }\n    getPrimaryTimePatternThroughCache() {\n        const primaryPrefix = this.primaryPrefix();\n        const primarySuffix = this.primarySuffix();\n        if (this.cachedPrimaryPrefix === primaryPrefix && this.cachedPrimarySuffix === primarySuffix) {\n            return this.cachedPrimaryTimePattern;\n        }\n        this.cachedPrimaryTimePattern = primaryTimePattern(primaryPrefix, primarySuffix);\n        this.cachedPrimaryPrefix = primaryPrefix;\n        this.cachedPrimarySuffix = primarySuffix;\n        return this.cachedPrimaryTimePattern;\n    }\n    getFollowingTimePatternThroughCache() {\n        const followingPhase = this.followingPhase();\n        const followingSuffix = this.followingSuffix();\n        if (this.cachedFollowingPhase === followingPhase && this.cachedFollowingSuffix === followingSuffix) {\n            return this.cachedFollowingTimePatten;\n        }\n        this.cachedFollowingTimePatten = followingTimePatten(followingPhase, followingSuffix);\n        this.cachedFollowingPhase = followingPhase;\n        this.cachedFollowingSuffix = followingSuffix;\n        return this.cachedFollowingTimePatten;\n    }\n}\nexports.AbstractTimeExpressionParser = AbstractTimeExpressionParser;\n\n};"],
"names":["shadow$provide","global","require","module","exports","__importDefault","mod","__esModule","Object","defineProperty","value","AbstractTimeExpressionParser","index_1","dayjs_1","constructor","strictMode","cachedFollowingTimePatten","cachedFollowingSuffix","cachedFollowingPhase","cachedPrimaryTimePattern","cachedPrimarySuffix","cachedPrimaryPrefix","primarySuffix","followingSuffix","pattern","context","getPrimaryTimePatternThroughCache","extract","match","refDate","default","result","createParsingResult","index","length","substring","start","imply","date","month","year","extractPrimaryTimeComponents","remainingText","text","getFollowingTimePatternThroughCache","followingPattern","exec","checkAndReturnWithoutFollowingPattern","end","extractFollowingTimeComponents","strict","components","createParsingComponents","minute","meridiem","hour","parseInt","HOUR_GROUP","MINUTE_GROUP","AM_PM_HOUR_GROUP","Math","floor","Meridiem","PM","ampm","toLowerCase","AM","assign","MILLI_SECOND_GROUP","millisecond","SECOND_GROUP","second","isCertain","get","getTime","endingWithNumbers","endingNumbers","includes","endingNumberVal","primaryPrefix","RegExp","followingPhase"]
}
