{
"version":3,
"file":"module$node_modules$chrono_node$dist$locales$pt$parsers$PTWeekdayParser.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,uEAAA,CAA4F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEpIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,OAAMC,YAAcN,OAAA,CAAQ,2DAAR,CACdO,OAAAA,CAAYP,OAAA,CAAQ,oDAAR,CACZQ,OAAAA,CAAmCR,OAAA,CAAQ,oFAAR,CACzC,OAAMS,QAAUT,OAAA,CAAQ,wDAAR,CAAhB;AACMU,QAAU,IAAIC,MAAJ,CAAW,iEAAX,CAEX,IAAGJ,MAAUK,CAAAA,eAAV,CAA0BN,WAAYO,CAAAA,kBAAtC,CAAH,GAFW,CAGZ,2FAHY,CAKK,GALL,CAShB,MAAMC,gBAAN,QAA8BN,OAAiCO,CAAAA,sCAA/D,CACIC,YAAY,EAAG,CACX,MAAON,QADI,CAGfO,YAAY,CAACC,OAAD,CAAUC,KAAV,CAAiB,CACzB,IAAMC,UAAYD,KAAA,CAPJE,CAOI,CAAqBC,CAAAA,WAArB,EACZC,UAAAA,CAASjB,WAAYO,CAAAA,kBAAZ,CAA+BO,SAA/B,CACf,IAAeI,IAAAA,EAAf,GAAID,SAAJ,CACI,MAAO,KAGX;IAAME,QAAUN,KAAA,CAZFO,CAYE,CAEhBC,MAAA,CAAYL,CAHGH,KAAAS,CAbFC,CAaED,CAGHN,EADSG,OACTH,EADoB,EACpBA,EAAAA,WAAL,EACHQ,QAAAA,CAAW,IACH,UAAZ,EAAIH,KAAJ,CACIG,OADJ,CACe,MADf,CAGiB,SAAZ,EAAIH,KAAJ,EAAiC,SAAjC,EAAyBA,KAAzB,CACDG,OADC,CACU,MADV,CAGY,MAHZ,EAGIH,KAHJ,GAIDG,OAJC,CAIU,MAJV,CAMCC,MAAAA,CAAOtB,OAAQuB,CAAAA,cAAR,CAAuBd,OAAQe,CAAAA,OAA/B,CAAwCV,SAAxC,CAAgDO,OAAhD,CACb,OAAOZ,QACFgB,CAAAA,uBADE,EAEFC,CAAAA,MAFE,CAEK,SAFL,CAEgBZ,SAFhB,CAGFa,CAAAA,KAHE,CAGI,KAHJ,CAGWL,KAAKA,CAAAA,IAAL,EAHX,CAIFK,CAAAA,KAJE,CAII,OAJJ,CAIaL,KAAKM,CAAAA,KAAL,EAJb,CAI4B,CAJ5B,CAKFD,CAAAA,KALE,CAKI,MALJ,CAKYL,KAAKO,CAAAA,IAAL,EALZ,CArBkB,CAJjC,CAiCApC,OAAQqC,CAAAA,OAAR,CAAkBzB,eAjDkH;",
"sources":["node_modules/chrono-node/dist/locales/pt/parsers/PTWeekdayParser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$locales$pt$parsers$PTWeekdayParser\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst pattern_1 = require(\"../../../utils/pattern\");\nconst AbstractParserWithWordBoundary_1 = require(\"../../../common/parsers/AbstractParserWithWordBoundary\");\nconst weeks_1 = require(\"../../../calculation/weeks\");\nconst PATTERN = new RegExp(\"(?:(?:\\\\,|\\\\(|\\\\\uff08)\\\\s*)?\" +\n    \"(?:(este|esta|passado|pr[o\u00f3]ximo)\\\\s*)?\" +\n    `(${pattern_1.matchAnyPattern(constants_1.WEEKDAY_DICTIONARY)})` +\n    \"(?:\\\\s*(?:\\\\,|\\\\)|\\\\\uff09))?\" +\n    \"(?:\\\\s*(este|esta|passado|pr[\u00f3o]ximo)\\\\s*semana)?\" +\n    \"(?=\\\\W|\\\\d|$)\", \"i\");\nconst PREFIX_GROUP = 1;\nconst WEEKDAY_GROUP = 2;\nconst POSTFIX_GROUP = 3;\nclass PTWeekdayParser extends AbstractParserWithWordBoundary_1.AbstractParserWithWordBoundaryChecking {\n    innerPattern() {\n        return PATTERN;\n    }\n    innerExtract(context, match) {\n        const dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        const offset = constants_1.WEEKDAY_DICTIONARY[dayOfWeek];\n        if (offset === undefined) {\n            return null;\n        }\n        const prefix = match[PREFIX_GROUP];\n        const postfix = match[POSTFIX_GROUP];\n        let norm = prefix || postfix || \"\";\n        norm = norm.toLowerCase();\n        let modifier = null;\n        if (norm == \"passado\") {\n            modifier = \"this\";\n        }\n        else if (norm == \"pr\u00f3ximo\" || norm == \"proximo\") {\n            modifier = \"next\";\n        }\n        else if (norm == \"este\") {\n            modifier = \"this\";\n        }\n        const date = weeks_1.toDayJSWeekday(context.refDate, offset, modifier);\n        return context\n            .createParsingComponents()\n            .assign(\"weekday\", offset)\n            .imply(\"day\", date.date())\n            .imply(\"month\", date.month() + 1)\n            .imply(\"year\", date.year());\n    }\n}\nexports.default = PTWeekdayParser;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","constants_1","pattern_1","AbstractParserWithWordBoundary_1","weeks_1","PATTERN","RegExp","matchAnyPattern","WEEKDAY_DICTIONARY","PTWeekdayParser","AbstractParserWithWordBoundaryChecking","innerPattern","innerExtract","context","match","dayOfWeek","WEEKDAY_GROUP","toLowerCase","offset","undefined","postfix","POSTFIX_GROUP","norm","prefix","PREFIX_GROUP","modifier","date","toDayJSWeekday","refDate","createParsingComponents","assign","imply","month","year","default"]
}
