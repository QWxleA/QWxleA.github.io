{
"version":3,
"file":"module$node_modules$element_resize_detector$src$listener_handler.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,gEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7HD,MAAOC,CAAAA,OAAP,CAAiBC,QAAQ,CAACC,SAAD,CAAY,CASjCC,QAASA,aAAY,CAACC,OAAD,CAAU,CACvBC,OAAAA,CAAKH,SAAUI,CAAAA,GAAV,CAAcF,OAAd,CAET,OAAWG,KAAAA,EAAX,GAAIF,OAAJ,CACW,EADX,CAIOG,cAAA,CAAeH,OAAf,CAJP,EAI6B,EAPF,CAR/B,IAAIG,eAAiB,EAkDrB,OAAO,CACHF,IAAKH,YADF,CAEHM,IA5BJC,QAAoB,CAACN,OAAD,CAAUO,QAAV,CAAoB,CAChCN,OAAAA,CAAKH,SAAUI,CAAAA,GAAV,CAAcF,OAAd,CAELI,eAAA,CAAeH,OAAf,CAAJ,GACIG,cAAA,CAAeH,OAAf,CADJ,CACyB,EADzB,CAIAG,eAAA,CAAeH,OAAf,CAAmBO,CAAAA,IAAnB,CAAwBD,QAAxB,CAPoC,CA0BjC,CAGHE,eAnBJA,QAAuB,CAACT,OAAD;AAAUO,QAAV,CAAoB,CACnCG,OAAAA,CAAYX,YAAA,CAAaC,OAAb,CAChB,KAFuC,IAE9BW,EAAI,CAF0B,CAEvBC,IAAMF,OAAUG,CAAAA,MAAhC,CAAwCF,CAAxC,CAA4CC,GAA5C,CAAiD,EAAED,CAAnD,CACI,GAAID,OAAA,CAAUC,CAAV,CAAJ,GAAqBJ,QAArB,CAA+B,CAC7BG,OAAUI,CAAAA,MAAV,CAAiBH,CAAjB,CAAoB,CAApB,CACA,MAF6B,CAHI,CAgBpC,CAIHI,mBAVJA,QAA2B,CAACf,OAAD,CAAU,CAEnC,GADIU,OACJ,CADgBX,YAAA,CAAaC,OAAb,CAChB,CACAU,OAAUG,CAAAA,MAAV,CAAmB,CAHgB,CAM9B,CAnD0B,CAHwF;",
"sources":["node_modules/element-resize-detector/src/listener-handler.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$element_resize_detector$src$listener_handler\"] = function(global,require,module,exports) {\n\"use strict\";\n\nmodule.exports = function(idHandler) {\n    var eventListeners = {};\n\n    /**\n     * Gets all listeners for the given element.\n     * @public\n     * @param {element} element The element to get all listeners for.\n     * @returns All listeners for the given element.\n     */\n    function getListeners(element) {\n        var id = idHandler.get(element);\n\n        if (id === undefined) {\n            return [];\n        }\n\n        return eventListeners[id] || [];\n    }\n\n    /**\n     * Stores the given listener for the given element. Will not actually add the listener to the element.\n     * @public\n     * @param {element} element The element that should have the listener added.\n     * @param {function} listener The callback that the element has added.\n     */\n    function addListener(element, listener) {\n        var id = idHandler.get(element);\n\n        if(!eventListeners[id]) {\n            eventListeners[id] = [];\n        }\n\n        eventListeners[id].push(listener);\n    }\n\n    function removeListener(element, listener) {\n        var listeners = getListeners(element);\n        for (var i = 0, len = listeners.length; i < len; ++i) {\n            if (listeners[i] === listener) {\n              listeners.splice(i, 1);\n              break;\n            }\n        }\n    }\n\n    function removeAllListeners(element) {\n      var listeners = getListeners(element);\n      if (!listeners) { return; }\n      listeners.length = 0;\n    }\n\n    return {\n        get: getListeners,\n        add: addListener,\n        removeListener: removeListener,\n        removeAllListeners: removeAllListeners\n    };\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","idHandler","getListeners","element","id","get","undefined","eventListeners","add","addListener","listener","push","removeListener","listeners","i","len","length","splice","removeAllListeners"]
}
