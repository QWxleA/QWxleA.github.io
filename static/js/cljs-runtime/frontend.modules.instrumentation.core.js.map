{"version":3,"sources":["frontend/modules/instrumentation/core.cljs"],"mappings":";AAMA,6CAAA,7CAAMA;AAAN,AAEE,oBAAU,AAAA,+GAAA,AAAAC,gBAAwBC;AAAlC;;AAAA,AACE,AAACC;;AACD,OAACC;;;AAEL,2DAAA,3DAAMC,8HAAoBC;AAA1B,AACE,+BAAA,/BAACC,gHAAuCD;;AACxC,qBAAA,rBAACE,2CAAkCF;;AACnC,AAACG,iDAAgBH;;AACjB,oBAAUA;AAAV;;AAAA,AACE,OAACF","names":["frontend.modules.instrumentation.core/init","cljs.core/deref","frontend.state/state","frontend.modules.instrumentation.posthog/init","frontend.modules.instrumentation.sentry/init","frontend.modules.instrumentation.core/disable-instrument","disable?","frontend.state/set-state!","frontend.storage/set","frontend.modules.instrumentation.posthog/opt-out"],"sourcesContent":["(ns frontend.modules.instrumentation.core\n  (:require [frontend.modules.instrumentation.posthog :as posthog]\n            [frontend.modules.instrumentation.sentry :as sentry]\n            [frontend.state :as state]\n            [frontend.storage :as storage]))\n\n(defn init\n  []\n  (when-not (:instrument/disabled? @state/state)\n    (posthog/init)\n    (sentry/init)))\n\n(defn disable-instrument [disable?]\n  (state/set-state! :instrument/disabled? disable?)\n  (storage/set \"instrument-disabled\" disable?)\n  (posthog/opt-out disable?)\n  (when-not disable?\n    (sentry/init)))\n"]}