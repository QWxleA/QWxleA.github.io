{
"version":3,
"file":"module$node_modules$$sentry$react$dist$profiler.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/@sentry/react/dist/profiler.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$react$dist$profiler\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar browser_1 = require(\"@sentry/browser\");\nvar utils_1 = require(\"@sentry/utils\");\nvar hoist_non_react_statics_1 = tslib_1.__importDefault(require(\"hoist-non-react-statics\"));\nvar React = tslib_1.__importStar(require(\"react\"));\nvar constants_1 = require(\"./constants\");\nexports.UNKNOWN_COMPONENT = 'unknown';\nvar TRACING_GETTER = {\n    id: 'Tracing',\n};\nvar globalTracingIntegration = null;\n/** @deprecated remove when @sentry/apm no longer used */\nvar getTracingIntegration = function () {\n    if (globalTracingIntegration) {\n        return globalTracingIntegration;\n    }\n    globalTracingIntegration = browser_1.getCurrentHub().getIntegration(TRACING_GETTER);\n    return globalTracingIntegration;\n};\n/**\n * pushActivity creates an new react activity.\n * Is a no-op if Tracing integration is not valid\n * @param name displayName of component that started activity\n * @deprecated remove when @sentry/apm no longer used\n */\nfunction pushActivity(name, op) {\n    if (globalTracingIntegration === null) {\n        return null;\n    }\n    return globalTracingIntegration.constructor.pushActivity(name, {\n        description: \"<\" + name + \">\",\n        op: op,\n    });\n}\n/**\n * popActivity removes a React activity.\n * Is a no-op if Tracing integration is not valid.\n * @param activity id of activity that is being popped\n * @deprecated remove when @sentry/apm no longer used\n */\nfunction popActivity(activity) {\n    if (activity === null || globalTracingIntegration === null) {\n        return;\n    }\n    globalTracingIntegration.constructor.popActivity(activity);\n}\n/**\n * Obtain a span given an activity id.\n * Is a no-op if Tracing integration is not valid.\n * @param activity activity id associated with obtained span\n * @deprecated remove when @sentry/apm no longer used\n */\nfunction getActivitySpan(activity) {\n    if (activity === null || globalTracingIntegration === null) {\n        return undefined;\n    }\n    return globalTracingIntegration.constructor.getActivitySpan(activity);\n}\n/**\n * The Profiler component leverages Sentry's Tracing integration to generate\n * spans based on component lifecycles.\n */\nvar Profiler = /** @class */ (function (_super) {\n    tslib_1.__extends(Profiler, _super);\n    function Profiler(props) {\n        var _this = _super.call(this, props) || this;\n        /**\n         * The span of the mount activity\n         * Made protected for the React Native SDK to access\n         */\n        _this._mountSpan = undefined;\n        // The activity representing how long it takes to mount a component.\n        _this._mountActivity = null;\n        var _a = _this.props, name = _a.name, _b = _a.disabled, disabled = _b === void 0 ? false : _b;\n        if (disabled) {\n            return _this;\n        }\n        // If they are using @sentry/apm, we need to push/pop activities\n        // eslint-disable-next-line deprecation/deprecation\n        if (getTracingIntegration()) {\n            // eslint-disable-next-line deprecation/deprecation\n            _this._mountActivity = pushActivity(name, constants_1.REACT_MOUNT_OP);\n        }\n        else {\n            var activeTransaction = getActiveTransaction();\n            if (activeTransaction) {\n                _this._mountSpan = activeTransaction.startChild({\n                    description: \"<\" + name + \">\",\n                    op: constants_1.REACT_MOUNT_OP,\n                });\n            }\n        }\n        return _this;\n    }\n    // If a component mounted, we can finish the mount activity.\n    Profiler.prototype.componentDidMount = function () {\n        if (this._mountSpan) {\n            this._mountSpan.finish();\n        }\n        else {\n            // eslint-disable-next-line deprecation/deprecation\n            this._mountSpan = getActivitySpan(this._mountActivity);\n            // eslint-disable-next-line deprecation/deprecation\n            popActivity(this._mountActivity);\n            this._mountActivity = null;\n        }\n    };\n    Profiler.prototype.componentDidUpdate = function (_a) {\n        var _this = this;\n        var updateProps = _a.updateProps, _b = _a.includeUpdates, includeUpdates = _b === void 0 ? true : _b;\n        // Only generate an update span if hasUpdateSpan is true, if there is a valid mountSpan,\n        // and if the updateProps have changed. It is ok to not do a deep equality check here as it is expensive.\n        // We are just trying to give baseline clues for further investigation.\n        if (includeUpdates && this._mountSpan && updateProps !== this.props.updateProps) {\n            // See what props haved changed between the previous props, and the current props. This is\n            // set as data on the span. We just store the prop keys as the values could be potenially very large.\n            var changedProps = Object.keys(updateProps).filter(function (k) { return updateProps[k] !== _this.props.updateProps[k]; });\n            if (changedProps.length > 0) {\n                // The update span is a point in time span with 0 duration, just signifying that the component\n                // has been updated.\n                var now = utils_1.timestampWithMs();\n                this._mountSpan.startChild({\n                    data: {\n                        changedProps: changedProps,\n                    },\n                    description: \"<\" + this.props.name + \">\",\n                    endTimestamp: now,\n                    op: constants_1.REACT_UPDATE_OP,\n                    startTimestamp: now,\n                });\n            }\n        }\n    };\n    // If a component is unmounted, we can say it is no longer on the screen.\n    // This means we can finish the span representing the component render.\n    Profiler.prototype.componentWillUnmount = function () {\n        var _a = this.props, name = _a.name, _b = _a.includeRender, includeRender = _b === void 0 ? true : _b;\n        if (this._mountSpan && includeRender) {\n            // If we were able to obtain the spanId of the mount activity, we should set the\n            // next activity as a child to the component mount activity.\n            this._mountSpan.startChild({\n                description: \"<\" + name + \">\",\n                endTimestamp: utils_1.timestampWithMs(),\n                op: constants_1.REACT_RENDER_OP,\n                startTimestamp: this._mountSpan.endTimestamp,\n            });\n        }\n    };\n    Profiler.prototype.render = function () {\n        return this.props.children;\n    };\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    Profiler.defaultProps = {\n        disabled: false,\n        includeRender: true,\n        includeUpdates: true,\n    };\n    return Profiler;\n}(React.Component));\nexports.Profiler = Profiler;\n/**\n * withProfiler is a higher order component that wraps a\n * component in a {@link Profiler} component. It is recommended that\n * the higher order component be used over the regular {@link Profiler} component.\n *\n * @param WrappedComponent component that is wrapped by Profiler\n * @param options the {@link ProfilerProps} you can pass into the Profiler\n */\nfunction withProfiler(WrappedComponent, \n// We do not want to have `updateProps` given in options, it is instead filled through the HOC.\noptions) {\n    var componentDisplayName = (options && options.name) || WrappedComponent.displayName || WrappedComponent.name || exports.UNKNOWN_COMPONENT;\n    var Wrapped = function (props) { return (React.createElement(Profiler, tslib_1.__assign({}, options, { name: componentDisplayName, updateProps: props }),\n        React.createElement(WrappedComponent, tslib_1.__assign({}, props)))); };\n    Wrapped.displayName = \"profiler(\" + componentDisplayName + \")\";\n    // Copy over static methods from Wrapped component to Profiler HOC\n    // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n    hoist_non_react_statics_1.default(Wrapped, WrappedComponent);\n    return Wrapped;\n}\nexports.withProfiler = withProfiler;\n/**\n *\n * `useProfiler` is a React hook that profiles a React component.\n *\n * Requires React 16.8 or above.\n * @param name displayName of component being profiled\n */\nfunction useProfiler(name, options) {\n    if (options === void 0) { options = {\n        disabled: false,\n        hasRenderSpan: true,\n    }; }\n    var _a = tslib_1.__read(React.useState(function () {\n        if (options && options.disabled) {\n            return undefined;\n        }\n        var activeTransaction = getActiveTransaction();\n        if (activeTransaction) {\n            return activeTransaction.startChild({\n                description: \"<\" + name + \">\",\n                op: constants_1.REACT_MOUNT_OP,\n            });\n        }\n        return undefined;\n    }), 1), mountSpan = _a[0];\n    React.useEffect(function () {\n        if (mountSpan) {\n            mountSpan.finish();\n        }\n        return function () {\n            if (mountSpan && options.hasRenderSpan) {\n                mountSpan.startChild({\n                    description: \"<\" + name + \">\",\n                    endTimestamp: utils_1.timestampWithMs(),\n                    op: constants_1.REACT_RENDER_OP,\n                    startTimestamp: mountSpan.endTimestamp,\n                });\n            }\n        };\n        // We only want this to run once.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n}\nexports.useProfiler = useProfiler;\n/** Grabs active transaction off scope */\nfunction getActiveTransaction(hub) {\n    if (hub === void 0) { hub = browser_1.getCurrentHub(); }\n    if (hub) {\n        var scope = hub.getScope();\n        if (scope) {\n            return scope.getTransaction();\n        }\n    }\n    return undefined;\n}\nexports.getActiveTransaction = getActiveTransaction;\n//# sourceMappingURL=profiler.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getActiveTransaction","hub","browser_1","getCurrentHub","scope","getScope","getTransaction","Object","defineProperty","value","tslib_1","utils_1","hoist_non_react_statics_1","__importDefault","React","__importStar","constants_1","UNKNOWN_COMPONENT","TRACING_GETTER","id","globalTracingIntegration","Profiler","_super","props","_this","call","_mountSpan","undefined","_mountActivity","_a","name","_b","disabled","getIntegration","constructor","pushActivity","description","op","REACT_MOUNT_OP","activeTransaction","startChild","__extends","prototype","componentDidMount","Profiler.prototype.componentDidMount","finish","activity","getActivitySpan","popActivity","componentDidUpdate","Profiler.prototype.componentDidUpdate","updateProps","includeUpdates","changedProps","keys","filter","k","length","now","timestampWithMs","data","endTimestamp","REACT_UPDATE_OP","startTimestamp","componentWillUnmount","Profiler.prototype.componentWillUnmount","includeRender","REACT_RENDER_OP","render","Profiler.prototype.render","children","defaultProps","Component","withProfiler","WrappedComponent","options","componentDisplayName","displayName","Wrapped","createElement","__assign","default","useProfiler","hasRenderSpan","mountSpan","__read","useState","useEffect"]
}
