shadow$provide.module$node_modules$chrono_node$dist$common$refiners$AbstractMergeDateTimeRefiner=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});global=require("module$node_modules$chrono_node$dist$common$abstractRefiners");const mergingCalculation_1=require("module$node_modules$chrono_node$dist$calculation$mergingCalculation");class ENMergeDateTimeRefiner extends global.MergingRefiner{shouldMergeResults(textBetween,currentResult,nextResult){return(currentResult.start.isOnlyDate()&&
nextResult.start.isOnlyTime()||nextResult.start.isOnlyDate()&&currentResult.start.isOnlyTime())&&null!=textBetween.match(this.patternBetween())}mergeResults(textBetween,currentResult,nextResult){const result=currentResult.start.isOnlyDate()?mergingCalculation_1.mergeDateTimeResult(currentResult,nextResult):mergingCalculation_1.mergeDateTimeResult(nextResult,currentResult);result.index=currentResult.index;result.text=currentResult.text+textBetween+nextResult.text;return result}}exports.default=ENMergeDateTimeRefiner}
//# sourceMappingURL=module$node_modules$chrono_node$dist$common$refiners$AbstractMergeDateTimeRefiner.js.map
