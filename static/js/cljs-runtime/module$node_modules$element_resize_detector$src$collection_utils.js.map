{
"version":3,
"file":"module$node_modules$element_resize_detector$src$collection_utils.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,gEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYvHC,CATMF,MAAOC,CAAAA,OASbC,CATuB,EASvBA,EAAAA,OAAN,CAAgBC,QAAQ,CAACC,UAAD,CAAaC,QAAb,CAAuB,CAC3C,IAAI,IAAIC,EAAI,CAAZ,CAAeA,CAAf,CAAmBF,UAAWG,CAAAA,MAA9B,CAAsCD,CAAA,EAAtC,CAA2C,CACvC,IAAIE,OAASH,QAAA,CAASD,UAAA,CAAWE,CAAX,CAAT,CACb,IAAGE,MAAH,CACI,MAAOA,OAH4B,CADA,CAZ8E;",
"sources":["node_modules/element-resize-detector/src/collection-utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$element_resize_detector$src$collection_utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar utils = module.exports = {};\n\n/**\n * Loops through the collection and calls the callback for each element. if the callback returns truthy, the loop is broken and returns the same value.\n * @public\n * @param {*} collection The collection to loop through. Needs to have a length property set and have indices set from 0 to length - 1.\n * @param {function} callback The callback to be called for each element. The element will be given as a parameter to the callback. If this callback returns truthy, the loop is broken and the same value is returned.\n * @returns {*} The value that a callback has returned (if truthy). Otherwise nothing.\n */\nutils.forEach = function(collection, callback) {\n    for(var i = 0; i < collection.length; i++) {\n        var result = callback(collection[i]);\n        if(result) {\n            return result;\n        }\n    }\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","forEach","utils.forEach","collection","callback","i","length","result"]
}
