{"version":3,"sources":["rewrite_cljc/zip/whitespace.cljc"],"mappings":"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","names":["rewrite-cljc.zip.whitespace/whitespace?","zloc","G__78697","rewrite-cljc.custom-zipper.core/node","rewrite-cljc.node/whitespace?","rewrite-cljc.zip.whitespace/linebreak?","G__78698","rewrite-cljc.node/linebreak?","rewrite-cljc.zip.whitespace/comment?","G__78699","rewrite-cljc.node/comment?","rewrite-cljc.zip.whitespace/whitespace-not-linebreak?","and__5041__auto__","cljs.core/not","rewrite-cljc.zip.whitespace/whitespace-or-comment?","G__78700","rewrite-cljc.node/whitespace-or-comment?","rewrite-cljc.zip.whitespace/skip","f","p?","cljs.core/iterate","cljs.core.take_while","cljs.core/identity","cljs.core/complement","rewrite-cljc.custom-zipper.core/end?","cljs.core.drop_while","cljs.core/first","var_args","G__78703","rewrite-cljc.zip.whitespace/skip-whitespace","js/Error","rewrite_cljc.zip.whitespace.skip_whitespace","rewrite-cljc.custom-zipper.core/right","rewrite-cljc.zip.whitespace/skip-whitespace-left","rewrite-cljc.custom-zipper.core/left","G__78705","rewrite-cljc.zip.whitespace/insert-space-left","rewrite_cljc.zip.whitespace.insert_space_left","n","rewrite-cljc.custom-zipper.core/insert-left","rewrite-cljc.node/spaces","G__78707","rewrite-cljc.zip.whitespace/insert-space-right","rewrite_cljc.zip.whitespace.insert_space_right","rewrite-cljc.custom-zipper.core/insert-right","G__78709","rewrite-cljc.zip.whitespace/insert-newline-left","rewrite_cljc.zip.whitespace.insert_newline_left","rewrite-cljc.node/newlines","G__78713","rewrite-cljc.zip.whitespace/insert-newline-right","rewrite_cljc.zip.whitespace.insert_newline_right","args__5772__auto__","len__5766__auto__","i__5767__auto__","argseq__5773__auto__","cljs.core/IndexedSeq","rewrite-cljc.zip.whitespace/prepend-space","p__78717","vec__78718","cljs.core.nth","seq78715","G__78716","cljs.core/next","self__5751__auto__","or__5043__auto__","rewrite-cljc.zip.whitespace/append-space","p__78723","vec__78724","seq78721","G__78722","rewrite-cljc.zip.whitespace/prepend-newline","p__78729","vec__78730","seq78727","G__78728","rewrite-cljc.zip.whitespace/append-newline","p__78736","vec__78737","seq78734","G__78735"],"sourcesContent":["(ns  ^:no-doc rewrite-cljc.zip.whitespace\n  (:require [rewrite-cljc.custom-zipper.core :as z]\n            [rewrite-cljc.node :as node]))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n;; ## Predicates\n\n(defn whitespace?\n  \"Returns true when the current the node in `zloc` is a Clojure whitespace (which includes the comma).\"\n  [zloc]\n  (some-> zloc z/node node/whitespace?))\n\n(defn linebreak?\n  \"Returns true when the current node in `zloc` is a linebreak.\"\n  [zloc]\n  (some-> zloc z/node node/linebreak?))\n\n(defn comment?\n  \"Returns true when the current node in `zloc` is a comment.\"\n  [zloc]\n  (some-> zloc z/node node/comment?))\n\n(defn whitespace-not-linebreak?\n  \"Returns true when current node in `zloc` is a whitespace but not a linebreak.\"\n  [zloc]\n  (and\n   (whitespace? zloc)\n   (not (linebreak? zloc))))\n\n(defn whitespace-or-comment?\n  \"Returns true when current node in `zloc` is whitespace or a comment.\"\n  [zloc]\n  (some-> zloc z/node node/whitespace-or-comment?))\n\n\n;; ## Movement\n\n(defn skip\n  \"Return zipper with location moved to first location not satisfying predicate `p?` starting from the node in\n   `zloc` and traversing by function `f`.\"\n  [f p? zloc]\n  (->> (iterate f zloc)\n       (take-while identity)\n       (take-while (complement z/end?))\n       (drop-while p?)\n       (first)))\n\n(defn skip-whitespace\n  \"Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc`\n   and traversing by function `f`.\n\n   `f` defaults to [[rewrite-cljc.zip/right]]\"\n  ([zloc] (skip-whitespace z/right zloc))\n  ([f zloc] (skip f whitespace-or-comment? zloc)))\n\n(defn skip-whitespace-left\n  \"Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc` traversing left.\"\n  [zloc]\n  (skip-whitespace z/left zloc))\n\n;; ## Insertion\n\n(defn ^{:added \"0.5.0\"} insert-space-left\n  \"Return zipper with `n` space whitespace node inserted to the left of the current node in `zloc`.\n   `n` defaults to 1.\"\n  ([zloc] (insert-space-left zloc 1))\n  ([zloc n]\n   {:pre [(>= n 0)]}\n   (if (pos? n)\n     (z/insert-left zloc (node/spaces n))\n     zloc)))\n\n(defn ^{:added \"0.5.0\"} insert-space-right\n  \"Return zipper with `n` space whitespace node inserted to the right of the current node in `zloc`.\n   `n` defaults to 1.\"\n  ([zloc] (insert-space-right zloc 1))\n  ([zloc n]\n   {:pre [(>= n 0)]}\n   (if (pos? n)\n     (z/insert-right zloc (node/spaces n))\n     zloc)))\n\n(defn ^{:added \"0.5.0\"} insert-newline-left\n  \"Return zipper with `n` newlines node inserted to the left of the current node in `zloc`.\n   `n` defaults to 1.\"\n  ([zloc] (insert-newline-left zloc 1))\n  ([zloc n]\n   (z/insert-left zloc (node/newlines n))))\n\n(defn ^{:added \"0.5.0\"} insert-newline-right\n  \"Return zipper with `n` newlines node inserted to the right of the current node in `zloc`.\n   `n` defaults to 1.\"\n  ([zloc] (insert-newline-right zloc 1))\n  ([zloc n]\n   (z/insert-right zloc (node/newlines n))))\n\n;; ## Deprecated Functions\n\n(defn ^{:deprecated \"0.5.0\"} prepend-space\n   \"DEPRECATED: renamed to [[insert-space-left]].\"\n  [zloc & [n]]\n  (insert-space-left zloc (or n 1)))\n\n(defn ^{:deprecated \"0.5.0\"} append-space\n   \"DEPRECATED: renamed to [[insert-space-right]].\"\n  [zloc & [n]]\n  (insert-space-right zloc (or n 1)))\n\n(defn ^{:deprecated \"0.5.0\"} prepend-newline\n   \"DEPRECATED: renamed to [[insert-newline-left]].\"\n  [zloc & [n]]\n  (insert-newline-left zloc (or n 1)))\n\n(defn ^{:deprecated \"0.5.0\"} append-newline\n   \"DEPRECATED: renamed to [[insert-newline-right]].\"\n  [zloc & [n]]\n  (insert-newline-right zloc (or n 1)))\n"]}