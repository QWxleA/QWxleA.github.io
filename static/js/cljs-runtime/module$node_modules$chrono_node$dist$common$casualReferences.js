shadow$provide.module$node_modules$chrono_node$dist$common$casualReferences=function(global,require,module,exports){global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});exports.tonight=exports.tomorrow=exports.yesterday=exports.today=exports.now=void 0;const results_1=require("module$node_modules$chrono_node$dist$results"),dayjs_1=global(require("module$node_modules$dayjs$dayjs_min")),dayjs_2=require("module$node_modules$chrono_node$dist$utils$dayjs"),
index_1=require("module$node_modules$chrono_node$dist$index");exports.now=function(refDate){const targetDate=dayjs_1.default(refDate);refDate=new results_1.ParsingComponents(refDate,{});dayjs_2.assignSimilarDate(refDate,targetDate);dayjs_2.assignSimilarTime(refDate,targetDate);return refDate};exports.today=function(refDate){const targetDate=dayjs_1.default(refDate);refDate=new results_1.ParsingComponents(refDate,{});dayjs_2.assignSimilarDate(refDate,targetDate);dayjs_2.implySimilarTime(refDate,targetDate);
return refDate};exports.yesterday=function(refDate){let targetDate=dayjs_1.default(refDate);refDate=new results_1.ParsingComponents(refDate,{});targetDate=targetDate.add(-1,"day");dayjs_2.assignSimilarDate(refDate,targetDate);dayjs_2.implySimilarTime(refDate,targetDate);return refDate};exports.tomorrow=function(refDate){const targetDate=dayjs_1.default(refDate);refDate=new results_1.ParsingComponents(refDate,{});dayjs_2.assignTheNextDay(refDate,targetDate);return refDate};exports.tonight=function(refDate,
implyHour=22){const targetDate=dayjs_1.default(refDate);refDate=new results_1.ParsingComponents(refDate,{});refDate.imply("hour",implyHour);refDate.imply("meridiem",index_1.Meridiem.PM);dayjs_2.assignSimilarDate(refDate,targetDate);return refDate}}
//# sourceMappingURL=module$node_modules$chrono_node$dist$common$casualReferences.js.map
