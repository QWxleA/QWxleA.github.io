{
"version":3,
"file":"module$frontend$idbkv.js",
"lineCount":6,
"mappings":"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",
"sources":["frontend/idbkv.js"],
"sourcesContent":["shadow$provide[\"module$frontend$idbkv\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nclass Store {\n    constructor(dbName = 'keyval-store', storeName = 'keyval', version = 1) {\n        this.storeName = storeName;\n        this._dbName = dbName;\n        this._storeName = storeName;\n        this._version = version;\n        this.id = `dbName:${dbName};;storeName:${storeName}`;\n        this._init();\n    }\n    _init() {\n      if (this._dbp) {\n        return;\n      }\n      this._dbp = new Promise((resolve, reject) => {\n        const openreq = indexedDB.open(this._dbName, this._version);\n        openreq.onerror = () => reject(openreq.error);\n        openreq.onsuccess = () => resolve(openreq.result);\n        // First time setup: create an empty object store\n        openreq.onupgradeneeded = () => {\n          openreq.result.createObjectStore(this._storeName);\n        };\n      });\n    }\n    _withIDBStore(type, callback) {\n        this._init();\n        return this._dbp.then(db => new Promise((resolve, reject) => {\n            const transaction = db.transaction(this.storeName, type);\n            transaction.oncomplete = () => resolve();\n            transaction.onabort = transaction.onerror = () => reject(transaction.error);\n            callback(transaction.objectStore(this.storeName));\n        }));\n    }\n    _close() {\n        this._init();\n        return this._dbp.then(db => {\n            db.close();\n            this._dbp = undefined;\n        });\n    }\n}\nclass Batcher {\n    constructor(executor) {\n        this.executor = executor;\n        this.items = [];\n    }\n  async process() {\n        const toProcess = this.items;\n        this.items = [];\n        await this.executor(toProcess.map(({ item }) => item));\n        toProcess.map(({ onProcessed }) => onProcessed());\n        if (this.items.length) {\n            this.ongoing = this.process();\n        }\n        else {\n            this.ongoing = undefined;\n        }\n    }\n    async queue(item) {\n        const result = new Promise((resolve) => this.items.push({ item, onProcessed: resolve }));\n        if (!this.ongoing)\n            this.ongoing = this.process();\n        return result;\n    }\n}\nlet store;\nfunction getDefaultStore() {\n    if (!store)\n        store = new Store();\n    return store;\n}\nfunction get(key, store = getDefaultStore()) {\n    let req;\n    return store._withIDBStore('readwrite', store => {\n        req = store.get(key);\n    }).then(() => req.result);\n}\nconst setBatchers = {};\nfunction set(key, value, store = getDefaultStore()) {\n    if (!setBatchers[store.id]) {\n        setBatchers[store.id] = new Batcher((items) => store._withIDBStore('readwrite', store => {\n            for (const item of items) {\n                store.put(item.value, item.key);\n            }\n        }));\n    }\n    return setBatchers[store.id].queue({ key, value });\n}\nfunction setBatch(items, store = getDefaultStore()) {\n  return store._withIDBStore('readwrite', store => {\n    for (const item of items) {\n            store.put(item.value, item.key);\n    }\n  });\n}\nfunction update(key, updater, store = getDefaultStore()) {\n    return store._withIDBStore('readwrite', store => {\n        const req = store.get(key);\n        req.onsuccess = () => {\n            store.put(updater(req.result), key);\n        };\n    });\n}\nfunction del(key, store = getDefaultStore()) {\n    return store._withIDBStore('readwrite', store => {\n        store.delete(key);\n    });\n}\nfunction clear(store = getDefaultStore()) {\n    return store._withIDBStore('readwrite', store => {\n        store.clear();\n    });\n}\nfunction keys(store = getDefaultStore()) {\n    const keys = [];\n    return store._withIDBStore('readwrite', store => {\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n        // And openKeyCursor isn't supported by Safari.\n        (store.openKeyCursor || store.openCursor).call(store).onsuccess = function () {\n            if (!this.result)\n                return;\n            keys.push(this.result.key);\n            this.result.continue();\n        };\n    }).then(() => keys);\n}\nfunction close(store = getDefaultStore()) {\n    return store._close();\n}\n\nexports.Store = Store;\nexports.get = get;\nexports.set = set;\nexports.setBatch = setBatch;\nexports.update = update;\nexports.del = del;\nexports.clear = clear;\nexports.keys = keys;\nexports.close = close;\n\n};"],
"names":["shadow$provide","global","require","module","exports","getDefaultStore","store","Store","Object","defineProperty","value","constructor","dbName","storeName","version","_dbName","_storeName","_version","id","_init","_dbp","Promise","resolve","reject","openreq","indexedDB","open","onerror","openreq.onerror","error","onsuccess","openreq.onsuccess","result","onupgradeneeded","openreq.onupgradeneeded","createObjectStore","_withIDBStore","type","callback","then","db","transaction","oncomplete","transaction.oncomplete","onabort","transaction.onerror","objectStore","_close","close","undefined","Batcher","executor","items","process","toProcess","map","item","onProcessed","ongoing","length","queue","push","setBatchers","get","key","req","set","put","setBatch","update","updater","req.onsuccess","del","delete","clear","keys","call","openKeyCursor","openCursor","continue"]
}
