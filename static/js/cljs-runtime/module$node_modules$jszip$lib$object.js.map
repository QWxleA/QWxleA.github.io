{
"version":3,
"file":"module$node_modules$jszip$lib$object.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/jszip/lib/object.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jszip$lib$object\"] = function(global,require,module,exports) {\n'use strict';\nvar utf8 = require('./utf8');\nvar utils = require('./utils');\nvar GenericWorker = require('./stream/GenericWorker');\nvar StreamHelper = require('./stream/StreamHelper');\nvar defaults = require('./defaults');\nvar CompressedObject = require('./compressedObject');\nvar ZipObject = require('./zipObject');\nvar generate = require(\"./generate\");\nvar nodejsUtils = require(\"./nodejsUtils\");\nvar NodejsStreamInputAdapter = require(\"./nodejs/NodejsStreamInputAdapter\");\n\n\n/**\n * Add a file in the current folder.\n * @private\n * @param {string} name the name of the file\n * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data of the file\n * @param {Object} originalOptions the options of the file\n * @return {Object} the new file.\n */\nvar fileAdd = function(name, data, originalOptions) {\n    // be sure sub folders exist\n    var dataType = utils.getTypeOf(data),\n        parent;\n\n\n    /*\n     * Correct options.\n     */\n\n    var o = utils.extend(originalOptions || {}, defaults);\n    o.date = o.date || new Date();\n    if (o.compression !== null) {\n        o.compression = o.compression.toUpperCase();\n    }\n\n    if (typeof o.unixPermissions === \"string\") {\n        o.unixPermissions = parseInt(o.unixPermissions, 8);\n    }\n\n    // UNX_IFDIR  0040000 see zipinfo.c\n    if (o.unixPermissions && (o.unixPermissions & 0x4000)) {\n        o.dir = true;\n    }\n    // Bit 4    Directory\n    if (o.dosPermissions && (o.dosPermissions & 0x0010)) {\n        o.dir = true;\n    }\n\n    if (o.dir) {\n        name = forceTrailingSlash(name);\n    }\n    if (o.createFolders && (parent = parentFolder(name))) {\n        folderAdd.call(this, parent, true);\n    }\n\n    var isUnicodeString = dataType === \"string\" && o.binary === false && o.base64 === false;\n    if (!originalOptions || typeof originalOptions.binary === \"undefined\") {\n        o.binary = !isUnicodeString;\n    }\n\n\n    var isCompressedEmpty = (data instanceof CompressedObject) && data.uncompressedSize === 0;\n\n    if (isCompressedEmpty || o.dir || !data || data.length === 0) {\n        o.base64 = false;\n        o.binary = true;\n        data = \"\";\n        o.compression = \"STORE\";\n        dataType = \"string\";\n    }\n\n    /*\n     * Convert content to fit.\n     */\n\n    var zipObjectContent = null;\n    if (data instanceof CompressedObject || data instanceof GenericWorker) {\n        zipObjectContent = data;\n    } else if (nodejsUtils.isNode && nodejsUtils.isStream(data)) {\n        zipObjectContent = new NodejsStreamInputAdapter(name, data);\n    } else {\n        zipObjectContent = utils.prepareContent(name, data, o.binary, o.optimizedBinaryString, o.base64);\n    }\n\n    var object = new ZipObject(name, zipObjectContent, o);\n    this.files[name] = object;\n    /*\n    TODO: we can't throw an exception because we have async promises\n    (we can have a promise of a Date() for example) but returning a\n    promise is useless because file(name, data) returns the JSZip\n    object for chaining. Should we break that to allow the user\n    to catch the error ?\n\n    return external.Promise.resolve(zipObjectContent)\n    .then(function () {\n        return object;\n    });\n    */\n};\n\n/**\n * Find the parent folder of the path.\n * @private\n * @param {string} path the path to use\n * @return {string} the parent folder, or \"\"\n */\nvar parentFolder = function (path) {\n    if (path.slice(-1) === '/') {\n        path = path.substring(0, path.length - 1);\n    }\n    var lastSlash = path.lastIndexOf('/');\n    return (lastSlash > 0) ? path.substring(0, lastSlash) : \"\";\n};\n\n/**\n * Returns the path with a slash at the end.\n * @private\n * @param {String} path the path to check.\n * @return {String} the path with a trailing slash.\n */\nvar forceTrailingSlash = function(path) {\n    // Check the name ends with a /\n    if (path.slice(-1) !== \"/\") {\n        path += \"/\"; // IE doesn't like substr(-1)\n    }\n    return path;\n};\n\n/**\n * Add a (sub) folder in the current folder.\n * @private\n * @param {string} name the folder's name\n * @param {boolean=} [createFolders] If true, automatically create sub\n *  folders. Defaults to false.\n * @return {Object} the new folder.\n */\nvar folderAdd = function(name, createFolders) {\n    createFolders = (typeof createFolders !== 'undefined') ? createFolders : defaults.createFolders;\n\n    name = forceTrailingSlash(name);\n\n    // Does this folder already exist?\n    if (!this.files[name]) {\n        fileAdd.call(this, name, null, {\n            dir: true,\n            createFolders: createFolders\n        });\n    }\n    return this.files[name];\n};\n\n/**\n* Cross-window, cross-Node-context regular expression detection\n* @param  {Object}  object Anything\n* @return {Boolean}        true if the object is a regular expression,\n* false otherwise\n*/\nfunction isRegExp(object) {\n    return Object.prototype.toString.call(object) === \"[object RegExp]\";\n}\n\n// return the actual prototype of JSZip\nvar out = {\n    /**\n     * @see loadAsync\n     */\n    load: function() {\n        throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\");\n    },\n\n\n    /**\n     * Call a callback function for each entry at this folder level.\n     * @param {Function} cb the callback function:\n     * function (relativePath, file) {...}\n     * It takes 2 arguments : the relative path and the file.\n     */\n    forEach: function(cb) {\n        var filename, relativePath, file;\n        for (filename in this.files) {\n            if (!this.files.hasOwnProperty(filename)) {\n                continue;\n            }\n            file = this.files[filename];\n            relativePath = filename.slice(this.root.length, filename.length);\n            if (relativePath && filename.slice(0, this.root.length) === this.root) { // the file is in the current root\n                cb(relativePath, file); // TODO reverse the parameters ? need to be clean AND consistent with the filter search fn...\n            }\n        }\n    },\n\n    /**\n     * Filter nested files/folders with the specified function.\n     * @param {Function} search the predicate to use :\n     * function (relativePath, file) {...}\n     * It takes 2 arguments : the relative path and the file.\n     * @return {Array} An array of matching elements.\n     */\n    filter: function(search) {\n        var result = [];\n        this.forEach(function (relativePath, entry) {\n            if (search(relativePath, entry)) { // the file matches the function\n                result.push(entry);\n            }\n\n        });\n        return result;\n    },\n\n    /**\n     * Add a file to the zip file, or search a file.\n     * @param   {string|RegExp} name The name of the file to add (if data is defined),\n     * the name of the file to find (if no data) or a regex to match files.\n     * @param   {String|ArrayBuffer|Uint8Array|Buffer} data  The file data, either raw or base64 encoded\n     * @param   {Object} o     File options\n     * @return  {JSZip|Object|Array} this JSZip object (when adding a file),\n     * a file (when searching by string) or an array of files (when searching by regex).\n     */\n    file: function(name, data, o) {\n        if (arguments.length === 1) {\n            if (isRegExp(name)) {\n                var regexp = name;\n                return this.filter(function(relativePath, file) {\n                    return !file.dir && regexp.test(relativePath);\n                });\n            }\n            else { // text\n                var obj = this.files[this.root + name];\n                if (obj && !obj.dir) {\n                    return obj;\n                } else {\n                    return null;\n                }\n            }\n        }\n        else { // more than one argument : we have data !\n            name = this.root + name;\n            fileAdd.call(this, name, data, o);\n        }\n        return this;\n    },\n\n    /**\n     * Add a directory to the zip file, or search.\n     * @param   {String|RegExp} arg The name of the directory to add, or a regex to search folders.\n     * @return  {JSZip} an object with the new directory as the root, or an array containing matching folders.\n     */\n    folder: function(arg) {\n        if (!arg) {\n            return this;\n        }\n\n        if (isRegExp(arg)) {\n            return this.filter(function(relativePath, file) {\n                return file.dir && arg.test(relativePath);\n            });\n        }\n\n        // else, name is a new folder\n        var name = this.root + arg;\n        var newFolder = folderAdd.call(this, name);\n\n        // Allow chaining by returning a new object with this folder as the root\n        var ret = this.clone();\n        ret.root = newFolder.name;\n        return ret;\n    },\n\n    /**\n     * Delete a file, or a directory and all sub-files, from the zip\n     * @param {string} name the name of the file to delete\n     * @return {JSZip} this JSZip object\n     */\n    remove: function(name) {\n        name = this.root + name;\n        var file = this.files[name];\n        if (!file) {\n            // Look for any folders\n            if (name.slice(-1) !== \"/\") {\n                name += \"/\";\n            }\n            file = this.files[name];\n        }\n\n        if (file && !file.dir) {\n            // file\n            delete this.files[name];\n        } else {\n            // maybe a folder, delete recursively\n            var kids = this.filter(function(relativePath, file) {\n                return file.name.slice(0, name.length) === name;\n            });\n            for (var i = 0; i < kids.length; i++) {\n                delete this.files[kids[i].name];\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * Generate the complete zip file\n     * @param {Object} options the options to generate the zip file :\n     * - compression, \"STORE\" by default.\n     * - type, \"base64\" by default. Values are : string, base64, uint8array, arraybuffer, blob.\n     * @return {String|Uint8Array|ArrayBuffer|Buffer|Blob} the zip file\n     */\n    generate: function(options) {\n        throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\");\n    },\n\n    /**\n     * Generate the complete zip file as an internal stream.\n     * @param {Object} options the options to generate the zip file :\n     * - compression, \"STORE\" by default.\n     * - type, \"base64\" by default. Values are : string, base64, uint8array, arraybuffer, blob.\n     * @return {StreamHelper} the streamed zip file.\n     */\n    generateInternalStream: function(options) {\n      var worker, opts = {};\n      try {\n          opts = utils.extend(options || {}, {\n              streamFiles: false,\n              compression: \"STORE\",\n              compressionOptions : null,\n              type: \"\",\n              platform: \"DOS\",\n              comment: null,\n              mimeType: 'application/zip',\n              encodeFileName: utf8.utf8encode\n          });\n\n          opts.type = opts.type.toLowerCase();\n          opts.compression = opts.compression.toUpperCase();\n\n          // \"binarystring\" is preferred but the internals use \"string\".\n          if(opts.type === \"binarystring\") {\n            opts.type = \"string\";\n          }\n\n          if (!opts.type) {\n            throw new Error(\"No output type specified.\");\n          }\n\n          utils.checkSupport(opts.type);\n\n          // accept nodejs `process.platform`\n          if(\n              opts.platform === 'darwin' ||\n              opts.platform === 'freebsd' ||\n              opts.platform === 'linux' ||\n              opts.platform === 'sunos'\n          ) {\n              opts.platform = \"UNIX\";\n          }\n          if (opts.platform === 'win32') {\n              opts.platform = \"DOS\";\n          }\n\n          var comment = opts.comment || this.comment || \"\";\n          worker = generate.generateWorker(this, opts, comment);\n      } catch (e) {\n        worker = new GenericWorker(\"error\");\n        worker.error(e);\n      }\n      return new StreamHelper(worker, opts.type || \"string\", opts.mimeType);\n    },\n    /**\n     * Generate the complete zip file asynchronously.\n     * @see generateInternalStream\n     */\n    generateAsync: function(options, onUpdate) {\n        return this.generateInternalStream(options).accumulate(onUpdate);\n    },\n    /**\n     * Generate the complete zip file asynchronously.\n     * @see generateInternalStream\n     */\n    generateNodeStream: function(options, onUpdate) {\n        options = options || {};\n        if (!options.type) {\n            options.type = \"nodebuffer\";\n        }\n        return this.generateInternalStream(options).toNodejsStream(onUpdate);\n    }\n};\nmodule.exports = out;\n\n};"],
"names":["shadow$provide","global","require","module","exports","utf8","utils","GenericWorker","StreamHelper","defaults","CompressedObject","ZipObject","generate","nodejsUtils","NodejsStreamInputAdapter","fileAdd","name","data","originalOptions","dataType","getTypeOf","o","extend","date","Date","compression","toUpperCase","unixPermissions","parseInt","dir","dosPermissions","forceTrailingSlash","createFolders","path","slice","substring","length","lastSlash","lastIndexOf","folderAdd","call","parent","isUnicodeString","binary","base64","uncompressedSize","zipObjectContent","isNode","isStream","prepareContent","optimizedBinaryString","object","files","out","load","Error","forEach","cb","filename","relativePath","hasOwnProperty","file","root","filter","search","result","entry","push","arguments","Object","prototype","toString","regexp","test","obj","folder","arg","newFolder","ret","clone","remove","kids","i","options","generateInternalStream","opts","streamFiles","compressionOptions","type","platform","comment","mimeType","encodeFileName","utf8encode","toLowerCase","checkSupport","worker","generateWorker","e","error","generateAsync","onUpdate","accumulate","generateNodeStream","toNodejsStream"]
}
