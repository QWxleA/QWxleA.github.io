{
"version":3,
"file":"module$node_modules$codemirror$mode$twig$twig.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/codemirror/mode/twig/twig.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$twig$twig\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"),  require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"twig:inner\", function() {\n    var keywords = [\"and\", \"as\", \"autoescape\", \"endautoescape\", \"block\", \"do\", \"endblock\", \"else\", \"elseif\", \"extends\", \"for\", \"endfor\", \"embed\", \"endembed\", \"filter\", \"endfilter\", \"flush\", \"from\", \"if\", \"endif\", \"in\", \"is\", \"include\", \"import\", \"not\", \"or\", \"set\", \"spaceless\", \"endspaceless\", \"with\", \"endwith\", \"trans\", \"endtrans\", \"blocktrans\", \"endblocktrans\", \"macro\", \"endmacro\", \"use\", \"verbatim\", \"endverbatim\"],\n        operator = /^[+\\-*&%=<>!?|~^]/,\n        sign = /^[:\\[\\(\\{]/,\n        atom = [\"true\", \"false\", \"null\", \"empty\", \"defined\", \"divisibleby\", \"divisible by\", \"even\", \"odd\", \"iterable\", \"sameas\", \"same as\"],\n        number = /^(\\d[+\\-\\*\\/])?\\d+(\\.\\d+)?/;\n\n    keywords = new RegExp(\"((\" + keywords.join(\")|(\") + \"))\\\\b\");\n    atom = new RegExp(\"((\" + atom.join(\")|(\") + \"))\\\\b\");\n\n    function tokenBase (stream, state) {\n      var ch = stream.peek();\n\n      //Comment\n      if (state.incomment) {\n        if (!stream.skipTo(\"#}\")) {\n          stream.skipToEnd();\n        } else {\n          stream.eatWhile(/\\#|}/);\n          state.incomment = false;\n        }\n        return \"comment\";\n      //Tag\n      } else if (state.intag) {\n        //After operator\n        if (state.operator) {\n          state.operator = false;\n          if (stream.match(atom)) {\n            return \"atom\";\n          }\n          if (stream.match(number)) {\n            return \"number\";\n          }\n        }\n        //After sign\n        if (state.sign) {\n          state.sign = false;\n          if (stream.match(atom)) {\n            return \"atom\";\n          }\n          if (stream.match(number)) {\n            return \"number\";\n          }\n        }\n\n        if (state.instring) {\n          if (ch == state.instring) {\n            state.instring = false;\n          }\n          stream.next();\n          return \"string\";\n        } else if (ch == \"'\" || ch == '\"') {\n          state.instring = ch;\n          stream.next();\n          return \"string\";\n        } else if (stream.match(state.intag + \"}\") || stream.eat(\"-\") && stream.match(state.intag + \"}\")) {\n          state.intag = false;\n          return \"tag\";\n        } else if (stream.match(operator)) {\n          state.operator = true;\n          return \"operator\";\n        } else if (stream.match(sign)) {\n          state.sign = true;\n        } else {\n          if (stream.eat(\" \") || stream.sol()) {\n            if (stream.match(keywords)) {\n              return \"keyword\";\n            }\n            if (stream.match(atom)) {\n              return \"atom\";\n            }\n            if (stream.match(number)) {\n              return \"number\";\n            }\n            if (stream.sol()) {\n              stream.next();\n            }\n          } else {\n            stream.next();\n          }\n\n        }\n        return \"variable\";\n      } else if (stream.eat(\"{\")) {\n        if (stream.eat(\"#\")) {\n          state.incomment = true;\n          if (!stream.skipTo(\"#}\")) {\n            stream.skipToEnd();\n          } else {\n            stream.eatWhile(/\\#|}/);\n            state.incomment = false;\n          }\n          return \"comment\";\n        //Open tag\n        } else if (ch = stream.eat(/\\{|%/)) {\n          //Cache close tag\n          state.intag = ch;\n          if (ch == \"{\") {\n            state.intag = \"}\";\n          }\n          stream.eat(\"-\");\n          return \"tag\";\n        }\n      }\n      stream.next();\n    };\n\n    return {\n      startState: function () {\n        return {};\n      },\n      token: function (stream, state) {\n        return tokenBase(stream, state);\n      }\n    };\n  });\n\n  CodeMirror.defineMode(\"twig\", function(config, parserConfig) {\n    var twigInner = CodeMirror.getMode(config, \"twig:inner\");\n    if (!parserConfig || !parserConfig.base) return twigInner;\n    return CodeMirror.multiplexingMode(\n      CodeMirror.getMode(config, parserConfig.base), {\n        open: /\\{[{#%]/, close: /[}#%]\\}/, mode: twigInner, parseDelimiters: true\n      }\n    );\n  });\n  CodeMirror.defineMIME(\"text/x-twig\", \"twig\");\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","tokenBase","stream","state","ch","peek","incomment","skipTo","eatWhile","skipToEnd","intag","operator","match","atom","number","sign","instring","next","eat","sol","keywords","RegExp","join","startState","token","config","parserConfig","twigInner","getMode","base","multiplexingMode","open","close","mode","parseDelimiters","defineMIME"]
}
