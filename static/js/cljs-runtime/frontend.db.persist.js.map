{"version":3,"sources":["frontend/db/persist.cljs"],"mappings":";AAQA,qCAAA,rCAAMA;AAAN,AAEE,oBAAI,AAACC;AACH,OAAAC,gDAAA,KAAA,WAAAC;AAAA,AAAA,OAAAD,0KAAA,WAAQG,rIAAO,wGAAA,xGAACC;AAAhB,AAAA,OAAAJ,sEAAA,WACQG,jCAAO,AAACE,cAAIF;AADpB,AAAA,OAAAH,oHAAA,WAGQG,/EAAO,EAAI,AAACG,cAAIH,aAAQA,WAAO,AAACI;AAHxC,AAAA,OAAAL,2BAAA,AAIEC;;;;;;AACF,OAACI;;;AAEL,2CAAA,3CAAMC,8FACHC;AADH,AAEE,oBAAI,AAACV;AACH,OAAAC,gDAAA,KAAA,WAAAC;AAAA,AAAA,OAAAD,8LAAA,WAAQG,zJAAO,wGAAA,xGAACC,6HAA6BK;AAA7C,AAAA,OAAAT,gDACe,kBAAIG,QAAOA,OACP,iBAAMM,iBAAW,CAAKC,0EAAqBD;AAA3C,AACE,OAACE,sBAAaF;MAHnC,WACQN;AADR,AAAA,OAAAD,2BAAA,AAIEC;;;;;AACF,OAACQ,sBAAaF;;;AAElB,uCAAA,vCAAMG,sFACHC,IAAIC;AADP,AAEE,oBAAI,AAACf;AACH,AACE,wGAAA,xGAACK,oHAAoBS,IAAIC;;AAEzB,OAACC,+BAAiBF;;AACpB,oCAAA,mFAAA,2CAAA,wDAAA,nNAACG,+MAAsBH,0DAAWC;;;AAEtC,yCAAA,zCAAMG,0FACHC;AADH,AAEE,IAAML,MAAI,AAACM,+BAAsBD;AAAjC,AACE,oBAAI,AAACnB;AACH,AACE,wGAAA,xGAACK,sHAAsBS;;AACvB,OAACE,+BAAiBF;;AACrB,OAACE,+BAAiBF","names":["frontend.db.persist/get-all-graphs","frontend.util/electron?","promesa.core.bind","___42626__auto__","promesa.protocols/-promise","result","electron.ipc.ipc","cljs.core/vec","cljs.core/seq","frontend.idb/get-nfs-dbs","frontend.db.persist/get-serialized-graph","graph-name","frontend.config/idb-db-prefix","frontend.idb/get-item","frontend.db.persist/save-graph!","key","value","frontend.idb/remove-item!","frontend.idb/set-batch!","frontend.db.persist/delete-graph!","graph","frontend.db.conn/datascript-db"],"sourcesContent":["(ns frontend.db.persist\n  (:require [frontend.util :as util]\n            [frontend.idb :as idb]\n            [frontend.config :as config]\n            [electron.ipc :as ipc]\n            [frontend.db.conn :as db-conn]\n            [promesa.core :as p]))\n\n(defn get-all-graphs\n  []\n  (if (util/electron?)\n    (p/let [result (ipc/ipc \"getGraphs\")\n            result (vec result)\n            ;; backward compatibility (release <= 0.5.4)\n            result (if (seq result) result (idb/get-nfs-dbs))]\n      result)\n    (idb/get-nfs-dbs)))\n\n(defn get-serialized-graph\n  [graph-name]\n  (if (util/electron?)\n    (p/let [result (ipc/ipc \"getSerializedGraph\" graph-name)\n            result (if result result\n                       (let [graph-name (str config/idb-db-prefix graph-name)]\n                         (idb/get-item graph-name)))]\n      result)\n    (idb/get-item graph-name)))\n\n(defn save-graph!\n  [key value]\n  (if (util/electron?)\n    (do\n      (ipc/ipc \"saveGraph\" key value)\n      ;; remove cache before 0.5.5\n      (idb/remove-item! key))\n    (idb/set-batch! [{:key key :value value}])))\n\n(defn delete-graph!\n  [graph]\n  (let [key (db-conn/datascript-db graph)]\n    (if (util/electron?)\n      (do\n        (ipc/ipc \"deleteGraph\" key)\n        (idb/remove-item! key))\n     (idb/remove-item! key))))\n"]}