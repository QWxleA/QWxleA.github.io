{
"version":3,
"file":"module$node_modules$chrono_node$dist$locales$pt$constants.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEtHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,SAAR,CAAoBJ,OAAQK,CAAAA,YAA5B,CAA2CL,OAAQM,CAAAA,gBAAnD,CAAsEN,OAAQO,CAAAA,kBAA9E,CAAmG,IAAK,EACxGP,QAAQO,CAAAA,kBAAR,CAA6B,CACzB,QAAW,CADc,CAEzB,IAAO,CAFkB,CAGzB,QAAW,CAHc,CAIzB,gBAAiB,CAJQ,CAKzB,IAAO,CALkB,CAMzB,QAAS,CANgB,CAOzB,cAAe,CAPU,CAQzB,IAAO,CARkB,CASzB,OAAU,CATe,CAUzB,eAAgB,CAVS,CAWzB,IAAO,CAXkB,CAYzB,OAAU,CAZe,CAazB,eAAgB,CAbS,CAczB,IAAO,CAdkB,CAezB,MAAS,CAfgB,CAgBzB,cAAe,CAhBU,CAiBzB,IAAO,CAjBkB,CAkBzB,SAAU,CAlBe,CAmBzB,OAAU,CAnBe,CAoBzB,IAAO,CApBkB,CAsB7BP,QAAQM,CAAAA,gBAAR;AAA2B,CACvB,QAAW,CADY,CAEvB,IAAO,CAFgB,CAGvB,OAAQ,CAHe,CAIvB,UAAa,CAJU,CAKvB,IAAO,CALgB,CAMvB,OAAQ,CANe,CAOvB,QAAS,CAPc,CAQvB,IAAO,CARgB,CASvB,OAAQ,CATe,CAUvB,MAAS,CAVc,CAWvB,IAAO,CAXgB,CAYvB,OAAQ,CAZe,CAavB,KAAQ,CAbe,CAcvB,IAAO,CAdgB,CAevB,OAAQ,CAfe,CAgBvB,MAAS,CAhBc,CAiBvB,IAAO,CAjBgB,CAkBvB,OAAQ,CAlBe,CAmBvB,MAAS,CAnBc,CAoBvB,IAAO,CApBgB,CAqBvB,OAAQ,CArBe,CAsBvB,OAAU,CAtBa,CAuBvB,IAAO,CAvBgB,CAwBvB,OAAQ,CAxBe,CAyBvB,SAAY,CAzBW,CA0BvB,IAAO,CA1BgB,CA2BvB,OAAQ,CA3Be,CA4BvB,QAAW,EA5BY,CA6BvB,IAAO,EA7BgB,CA8BvB,OAAQ,EA9Be,CA+BvB,SAAY,EA/BW,CAgCvB,IAAO,EAhCgB,CAiCvB,OAAQ,EAjCe,CAkCvB,SAAY,EAlCW,CAmCvB,IAAO,EAnCgB,CAoCvB,OAAQ,EApCe,CAsC3BN,QAAQK,CAAAA,YAAR,CAAuB,uEAoBvBL,QAAQI,CAAAA,SAAR,CAnBAA,QAAkB,CAACI,KAAD,CAAQ,CACtB,MAAIA,MAAMA,CAAAA,KAAN,CAAY,cAAZ,CAAJ,EACQC,KASGA,CATUC,QAAA,CAASF,KAAT,CASVC,CARU,GAQVA,CARHA,KAQGA;CANCA,KAMDA,CAPc,EAAjB,CAAIA,KAAJ,CACiBA,KADjB,CAC8B,IAD9B,CAIiBA,KAJjB,CAI8B,GAG3BA,EAAAA,KAVX,EAYID,KAAMA,CAAAA,KAAN,CAAY,cAAZ,CAAJ,EACIA,KACO,CADCA,KAAMG,CAAAA,OAAN,CAAc,cAAd,CAA8B,EAA9B,CACD,CAAA,CAACD,QAAA,CAASF,KAAT,CAFZ,EAIOE,QAAA,CAASF,KAAT,CAjBe,CAjE4F;",
"sources":["node_modules/chrono-node/dist/locales/pt/constants.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$locales$pt$constants\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseYear = exports.YEAR_PATTERN = exports.MONTH_DICTIONARY = exports.WEEKDAY_DICTIONARY = void 0;\nexports.WEEKDAY_DICTIONARY = {\n    \"domingo\": 0,\n    \"dom\": 0,\n    \"segunda\": 1,\n    \"segunda-feira\": 1,\n    \"seg\": 1,\n    \"ter\u00e7a\": 2,\n    \"ter\u00e7a-feira\": 2,\n    \"ter\": 2,\n    \"quarta\": 3,\n    \"quarta-feira\": 3,\n    \"qua\": 3,\n    \"quinta\": 4,\n    \"quinta-feira\": 4,\n    \"qui\": 4,\n    \"sexta\": 5,\n    \"sexta-feira\": 5,\n    \"sex\": 5,\n    \"s\u00e1bado\": 6,\n    \"sabado\": 6,\n    \"sab\": 6,\n};\nexports.MONTH_DICTIONARY = {\n    \"janeiro\": 1,\n    \"jan\": 1,\n    \"jan.\": 1,\n    \"fevereiro\": 2,\n    \"fev\": 2,\n    \"fev.\": 2,\n    \"mar\u00e7o\": 3,\n    \"mar\": 3,\n    \"mar.\": 3,\n    \"abril\": 4,\n    \"abr\": 4,\n    \"abr.\": 4,\n    \"maio\": 5,\n    \"mai\": 5,\n    \"mai.\": 5,\n    \"junho\": 6,\n    \"jun\": 6,\n    \"jun.\": 6,\n    \"julho\": 7,\n    \"jul\": 7,\n    \"jul.\": 7,\n    \"agosto\": 8,\n    \"ago\": 8,\n    \"ago.\": 8,\n    \"setembro\": 9,\n    \"set\": 9,\n    \"set.\": 9,\n    \"outubro\": 10,\n    \"out\": 10,\n    \"out.\": 10,\n    \"novembro\": 11,\n    \"nov\": 11,\n    \"nov.\": 11,\n    \"dezembro\": 12,\n    \"dez\": 12,\n    \"dez.\": 12,\n};\nexports.YEAR_PATTERN = \"[0-9]{1,4}(?![^\\\\s]\\\\d)(?:\\\\s*[a|d]\\\\.?\\\\s*c\\\\.?|\\\\s*a\\\\.?\\\\s*d\\\\.?)?\";\nfunction parseYear(match) {\n    if (match.match(/^[0-9]{1,4}$/)) {\n        let yearNumber = parseInt(match);\n        if (yearNumber < 100) {\n            if (yearNumber > 50) {\n                yearNumber = yearNumber + 1900;\n            }\n            else {\n                yearNumber = yearNumber + 2000;\n            }\n        }\n        return yearNumber;\n    }\n    if (match.match(/a\\.?\\s*c\\.?/i)) {\n        match = match.replace(/a\\.?\\s*c\\.?/i, \"\");\n        return -parseInt(match);\n    }\n    return parseInt(match);\n}\nexports.parseYear = parseYear;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","parseYear","YEAR_PATTERN","MONTH_DICTIONARY","WEEKDAY_DICTIONARY","match","yearNumber","parseInt","replace"]
}
