shadow$provide.module$node_modules$jszip$lib$generate$index=function(global,require,module,exports){var compressions=require("module$node_modules$jszip$lib$compressions"),ZipFileWorker=require("module$node_modules$jszip$lib$generate$ZipFileWorker");exports.generateWorker=function(zip,options,comment){var zipFileWorker=new ZipFileWorker(options.streamFiles,comment,options.platform,options.encodeFileName),entriesCount=0;try{zip.forEach(function(relativePath,file){entriesCount++;var compressionName=
file.options.compression||options.compression,compression=compressions[compressionName];if(!compression)throw Error(compressionName+" is not a valid compression method !");compressionName=file.dir;var date=file.date;file._compressWorker(compression,file.options.compressionOptions||options.compressionOptions||{}).withStreamInfo("file",{name:relativePath,dir:compressionName,date,comment:file.comment||"",unixPermissions:file.unixPermissions,dosPermissions:file.dosPermissions}).pipe(zipFileWorker)}),
zipFileWorker.entriesCount=entriesCount}catch(e){zipFileWorker.error(e)}return zipFileWorker}}
//# sourceMappingURL=module$node_modules$jszip$lib$generate$index.js.map
