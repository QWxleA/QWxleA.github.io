shadow$provide.module$node_modules$codemirror$mode$brainfuck$brainfuck=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)})(function(CodeMirror){var reserve="\x3e\x3c+-.,[]".split("");CodeMirror.defineMode("brainfuck",function(){return{startState:function(){return{commentLine:!1,left:0,right:0,
commentLoop:!1}},token:function(stream,state){if(stream.eatSpace())return null;stream.sol()&&(state.commentLine=!1);var ch=stream.next().toString();if(-1!==reserve.indexOf(ch)){if(!0===state.commentLine)return stream.eol()&&(state.commentLine=!1),"comment";if("]"===ch||"["===ch)return"["===ch?state.left++:state.right++,"bracket";if("+"===ch||"-"===ch)return"keyword";if("\x3c"===ch||"\x3e"===ch)return"atom";if("."===ch||","===ch)return"def"}else return state.commentLine=!0,stream.eol()&&(state.commentLine=
!1),"comment";stream.eol()&&(state.commentLine=!1)}}});CodeMirror.defineMIME("text/x-brainfuck","brainfuck")})}
//# sourceMappingURL=module$node_modules$codemirror$mode$brainfuck$brainfuck.js.map
