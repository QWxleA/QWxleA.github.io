{
"version":3,
"file":"module$node_modules$chrono_node$dist$locales$nl$parsers$NLCasualTimeParser.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,0EAAA,CAA+F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEnIC,MAAAA,CAAmB,IAAnBA,EAA2B,IAAKA,CAAAA,eAAhCA,EAAoD,QAAS,CAACC,GAAD,CAAM,CACnE,MAAQA,IAAD,EAAQA,GAAIC,CAAAA,UAAZ,CAA0BD,GAA1B,CAAgC,CAAE,UAAWA,GAAb,CAD4B,CAGvEE,OAAOC,CAAAA,cAAP,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAAEM,MAAO,CAAA,CAAT,CAA7C,CACA,OAAMC,QAAUT,OAAA,CAAQ,4CAAR,CACVU,OAAAA,CAAmCV,OAAA,CAAQ,oFAAR,CACzC,OAAMW,QAAUR,MAAA,CAAgBH,OAAA,CAAQ,qCAAR,CAAhB,CAAhB;AACMY,QAAUZ,OAAA,CAAQ,kDAAR,CAGhB,MAAMa,mBAAN,QAAiCH,OAAiCI,CAAAA,sCAAlE,CACIC,YAAY,EAAG,CACX,MAAO,iGADI,CAGfC,YAAY,CAACC,OAAD,CAAUC,KAAV,CAAiB,CACzB,MAAMC,WAAaR,OAAQS,CAAAA,OAAR,CAAgBH,OAAQI,CAAAA,OAAxB,CAAnB,CACMC,UAAYL,OAAQM,CAAAA,uBAAR,EACO,OAAzB,GAAIL,KAAA,CATMM,CASN,CAAJ,GACIF,SAAUG,CAAAA,MAAV,CAAiB,KAAjB,CAAwBR,OAAQI,CAAAA,OAAQK,CAAAA,OAAhB,EAAxB,CAEA,CADAJ,SAAUG,CAAAA,MAAV,CAAiB,OAAjB,CAA0BR,OAAQI,CAAAA,OAAQM,CAAAA,QAAhB,EAA1B;AAAuD,CAAvD,CACA,CAAAL,SAAUG,CAAAA,MAAV,CAAiB,MAAjB,CAAyBR,OAAQI,CAAAA,OAAQO,CAAAA,WAAhB,EAAzB,CAHJ,CAKA,QAAQV,KAAA,CAbKW,CAaL,CAAoBC,CAAAA,WAApB,EAAR,EACI,KAAK,UAAL,CACA,KAAK,cAAL,CACIR,SAAUS,CAAAA,KAAV,CAAgB,UAAhB,CAA4BtB,OAAQuB,CAAAA,QAASC,CAAAA,EAA7C,CACAX,UAAUS,CAAAA,KAAV,CAAgB,MAAhB,CAAwB,EAAxB,CACA,MACJ,MAAK,OAAL,CACA,KAAK,YAAL,CACIT,SAAUS,CAAAA,KAAV,CAAgB,UAAhB,CAA4BtB,OAAQuB,CAAAA,QAASC,CAAAA,EAA7C,CACAX,UAAUS,CAAAA,KAAV,CAAgB,MAAhB,CAAwB,EAAxB,CACA,MACJ,MAAK,aAAL,CACInB,OAAQsB,CAAAA,gBAAR,CAAyBZ,SAAzB,CAAoCH,UAApC,CACAG,UAAUS,CAAAA,KAAV,CAAgB,MAAhB,CAAwB,CAAxB,CACAT,UAAUS,CAAAA,KAAV,CAAgB,QAAhB,CAA0B,CAA1B,CACAT,UAAUS,CAAAA,KAAV,CAAgB,QAAhB,CAA0B,CAA1B,CACA,MACJ,MAAK,SAAL,CACA,KAAK,aAAL,CACIT,SAAUS,CAAAA,KAAV,CAAgB,UAAhB;AAA4BtB,OAAQuB,CAAAA,QAASG,CAAAA,EAA7C,CACAb,UAAUS,CAAAA,KAAV,CAAgB,MAAhB,CAAwB,CAAxB,CACA,MACJ,MAAK,QAAL,CACA,KAAK,YAAL,CACIT,SAAUS,CAAAA,KAAV,CAAgB,UAAhB,CAA4BtB,OAAQuB,CAAAA,QAASG,CAAAA,EAA7C,CACA,CAAAb,SAAUS,CAAAA,KAAV,CAAgB,MAAhB,CAAwB,EAAxB,CAzBR,CA4BA,MAAOT,UApCkB,CAJjC,CA2CApB,OAAQkB,CAAAA,OAAR,CAAkBP,kBAvDqH;",
"sources":["node_modules/chrono-node/dist/locales/nl/parsers/NLCasualTimeParser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$locales$nl$parsers$NLCasualTimeParser\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst index_1 = require(\"../../../index\");\nconst AbstractParserWithWordBoundary_1 = require(\"../../../common/parsers/AbstractParserWithWordBoundary\");\nconst dayjs_1 = __importDefault(require(\"dayjs\"));\nconst dayjs_2 = require(\"../../../utils/dayjs\");\nconst DAY_GROUP = 1;\nconst MOMENT_GROUP = 2;\nclass NLCasualTimeParser extends AbstractParserWithWordBoundary_1.AbstractParserWithWordBoundaryChecking {\n    innerPattern() {\n        return /(deze)?\\s*(namiddag|avond|middernacht|ochtend|middag|'s middags|'s avonds|'s ochtends)(?=\\W|$)/i;\n    }\n    innerExtract(context, match) {\n        const targetDate = dayjs_1.default(context.refDate);\n        const component = context.createParsingComponents();\n        if (match[DAY_GROUP] === \"deze\") {\n            component.assign(\"day\", context.refDate.getDate());\n            component.assign(\"month\", context.refDate.getMonth() + 1);\n            component.assign(\"year\", context.refDate.getFullYear());\n        }\n        switch (match[MOMENT_GROUP].toLowerCase()) {\n            case \"namiddag\":\n            case \"'s namiddags\":\n                component.imply(\"meridiem\", index_1.Meridiem.PM);\n                component.imply(\"hour\", 15);\n                break;\n            case \"avond\":\n            case \"'s avonds'\":\n                component.imply(\"meridiem\", index_1.Meridiem.PM);\n                component.imply(\"hour\", 20);\n                break;\n            case \"middernacht\":\n                dayjs_2.assignTheNextDay(component, targetDate);\n                component.imply(\"hour\", 0);\n                component.imply(\"minute\", 0);\n                component.imply(\"second\", 0);\n                break;\n            case \"ochtend\":\n            case \"'s ochtends\":\n                component.imply(\"meridiem\", index_1.Meridiem.AM);\n                component.imply(\"hour\", 6);\n                break;\n            case \"middag\":\n            case \"'s middags\":\n                component.imply(\"meridiem\", index_1.Meridiem.AM);\n                component.imply(\"hour\", 12);\n                break;\n        }\n        return component;\n    }\n}\nexports.default = NLCasualTimeParser;\n\n};"],
"names":["shadow$provide","global","require","module","exports","__importDefault","mod","__esModule","Object","defineProperty","value","index_1","AbstractParserWithWordBoundary_1","dayjs_1","dayjs_2","NLCasualTimeParser","AbstractParserWithWordBoundaryChecking","innerPattern","innerExtract","context","match","targetDate","default","refDate","component","createParsingComponents","DAY_GROUP","assign","getDate","getMonth","getFullYear","MOMENT_GROUP","toLowerCase","imply","Meridiem","PM","assignTheNextDay","AM"]
}
