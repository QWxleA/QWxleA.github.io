{
"version":3,
"file":"module$node_modules$earcut$src$earcut.js",
"lineCount":21,
"mappings":"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",
"sources":["node_modules/earcut/src/earcut.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$earcut$src$earcut\"] = function(global,require,module,exports) {\n'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    var filteredBridge = filterPoints(bridge, bridge.next);\n    filterPoints(bridgeReverse, bridgeReverse.next);\n\n    // Check if input node was removed by the filtering\n    return outerNode === bridge ? filteredBridge : outerNode;\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","earcut","data","holeIndices","dim","hasHoles","length","outerLen","outerNode","linkedList","triangles","next","prev","maxX","queue","len","i","start","end","list","steiner","push","p","leftmost","x","y","sort","compareX","bridge","findHoleBridge","hole","bridgeReverse","splitPolygon","filteredBridge","filterPoints","minX","minY","maxY","invSize","Math","max","earcutLinked","clockwise","signedArea","last","insertNode","equals","removeNode","again","area","ear","pass","z","zOrder","prevZ","nextZ","numMerges","pSize","qSize","inSize","tail","q","e","stop","a","b","c","pointInTriangle","intersects","locallyInside","inside","px","py","isEarHashed","maxTX","maxTY","minZ","minTX","minTY","maxZ","n","hx","hy","qx","Infinity","m","mx","my","tanMin","tan","abs","ax","ay","bx","by","cx","cy","r","p1","p2","q1","q2","o1","sign","o2","o3","o4","onSegment","min","num","a2","Node","b2","an","bp","sum","j","default","deviation","earcut.deviation","polygonArea","trianglesArea","flatten","earcut.flatten","result","vertices","holes","dimensions","holeIndex","d"]
}
