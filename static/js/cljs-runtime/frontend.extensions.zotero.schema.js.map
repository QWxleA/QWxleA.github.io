{"version":3,"sources":["frontend/extensions/zotero/schema.cljs"],"mappings":";AAKA,AAAKA,4GACC,tDACA,AAACC;AAEP,2CAAA,3CAAMC,8FAAQC;AAAd,2MAEO,AAACC,+CAAO,WAAAC,1EACR,AAACM,3LAED,mGAAA,AAAA,5FAACC,6CAAKC;AAHE,AAAA,IAAAP,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;gBAAA,AAAAE,4CAAAF,eAAA,vEAAaG;AAAb,AAA0B,OAACC,6CAAED,UAAUN;GAD/CH","names":["frontend.extensions.zotero.schema/items-with-fields","clojure.edn.read_string","frontend.extensions.zotero.schema/fields","type","cljs.core.filter","p__90213","map__90214","cljs.core/--destructure-map","cljs.core.get","item-type","cljs.core._EQ_","cljs.core/first","cljs.core.mapv","camel-snake-kebab.core/->kebab-case-keyword"],"sourcesContent":["(ns frontend.extensions.zotero.schema\n  (:require [camel-snake-kebab.core :as csk]\n            [clojure.edn :as edn]\n            [shadow.resource :as rc]))\n\n(def items-with-fields\n  (-> (rc/inline \"zotero-items.edn\")\n      (edn/read-string)))\n\n(defn fields [type]\n  (->> items-with-fields\n       (filter (fn [{:keys [item-type]}] (= item-type type)))\n       (first)\n       :fields\n       (mapv csk/->kebab-case-keyword)))\n"]}