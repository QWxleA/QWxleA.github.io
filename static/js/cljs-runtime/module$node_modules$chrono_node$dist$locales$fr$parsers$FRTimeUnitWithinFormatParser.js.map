{
"version":3,
"file":"module$node_modules$chrono_node$dist$locales$fr$parsers$FRTimeUnitWithinFormatParser.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oFAAA,CAAyG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEjJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,OAAMC,YAAcN,OAAA,CAAQ,2DAAR,CAApB,CACMO,UAAYP,OAAA,CAAQ,8CAAR,CACZQ,OAAAA,CAAmCR,OAAA,CAAQ,oFAAR,CACzC,MAAMS,6BAAN,QAA2CD,OAAiCE,CAAAA,sCAA5E,CACIC,YAAY,EAAG,CACX,MAAO,KAAIC,MAAJ,CAAY,gCAA+BN,WAAYO,CAAAA,kBAA3C,YAAZ;AAAuF,GAAvF,CADI,CAGfC,YAAY,CAACC,OAAD,CAAUC,KAAV,CAAiB,CACnBC,KAAAA,CAAYX,WAAYY,CAAAA,cAAZ,CAA2BF,KAAA,CAAM,CAAN,CAA3B,CAClB,OAAOT,UAAUY,CAAAA,iBAAkBC,CAAAA,yBAA5B,CAAsDL,OAAQM,CAAAA,OAA9D,CAAuEJ,KAAvE,CAFkB,CAJjC,CASAf,OAAQoB,CAAAA,OAAR,CAAkBb,4BAf+H;",
"sources":["node_modules/chrono-node/dist/locales/fr/parsers/FRTimeUnitWithinFormatParser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$locales$fr$parsers$FRTimeUnitWithinFormatParser\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst results_1 = require(\"../../../results\");\nconst AbstractParserWithWordBoundary_1 = require(\"../../../common/parsers/AbstractParserWithWordBoundary\");\nclass FRTimeUnitWithinFormatParser extends AbstractParserWithWordBoundary_1.AbstractParserWithWordBoundaryChecking {\n    innerPattern() {\n        return new RegExp(`(?:dans|en|pour|pendant)\\\\s*(${constants_1.TIME_UNITS_PATTERN})(?=\\\\W|$)`, \"i\");\n    }\n    innerExtract(context, match) {\n        const timeUnits = constants_1.parseTimeUnits(match[1]);\n        return results_1.ParsingComponents.createRelativeFromRefDate(context.refDate, timeUnits);\n    }\n}\nexports.default = FRTimeUnitWithinFormatParser;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","constants_1","results_1","AbstractParserWithWordBoundary_1","FRTimeUnitWithinFormatParser","AbstractParserWithWordBoundaryChecking","innerPattern","RegExp","TIME_UNITS_PATTERN","innerExtract","context","match","timeUnits","parseTimeUnits","ParsingComponents","createRelativeFromRefDate","refDate","default"]
}
