{
"version":3,
"file":"module$node_modules$codemirror$mode$troff$troff.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/codemirror/mode/troff/troff.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$troff$troff\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd)\n    define([\"../../lib/codemirror\"], mod);\n  else\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('troff', function() {\n\n  var words = {};\n\n  function tokenBase(stream) {\n    if (stream.eatSpace()) return null;\n\n    var sol = stream.sol();\n    var ch = stream.next();\n\n    if (ch === '\\\\') {\n      if (stream.match('fB') || stream.match('fR') || stream.match('fI') ||\n          stream.match('u')  || stream.match('d')  ||\n          stream.match('%')  || stream.match('&')) {\n        return 'string';\n      }\n      if (stream.match('m[')) {\n        stream.skipTo(']');\n        stream.next();\n        return 'string';\n      }\n      if (stream.match('s+') || stream.match('s-')) {\n        stream.eatWhile(/[\\d-]/);\n        return 'string';\n      }\n      if (stream.match('\\(') || stream.match('*\\(')) {\n        stream.eatWhile(/[\\w-]/);\n        return 'string';\n      }\n      return 'string';\n    }\n    if (sol && (ch === '.' || ch === '\\'')) {\n      if (stream.eat('\\\\') && stream.eat('\\\"')) {\n        stream.skipToEnd();\n        return 'comment';\n      }\n    }\n    if (sol && ch === '.') {\n      if (stream.match('B ') || stream.match('I ') || stream.match('R ')) {\n        return 'attribute';\n      }\n      if (stream.match('TH ') || stream.match('SH ') || stream.match('SS ') || stream.match('HP ')) {\n        stream.skipToEnd();\n        return 'quote';\n      }\n      if ((stream.match(/[A-Z]/) && stream.match(/[A-Z]/)) || (stream.match(/[a-z]/) && stream.match(/[a-z]/))) {\n        return 'attribute';\n      }\n    }\n    stream.eatWhile(/[\\w-]/);\n    var cur = stream.current();\n    return words.hasOwnProperty(cur) ? words[cur] : null;\n  }\n\n  function tokenize(stream, state) {\n    return (state.tokens[0] || tokenBase) (stream, state);\n  };\n\n  return {\n    startState: function() {return {tokens:[]};},\n    token: function(stream, state) {\n      return tokenize(stream, state);\n    }\n  };\n});\n\nCodeMirror.defineMIME('text/troff', 'troff');\nCodeMirror.defineMIME('text/x-troff', 'troff');\nCodeMirror.defineMIME('application/x-troff', 'troff');\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","tokenBase","stream","eatSpace","sol","ch","next","match","skipTo","eatWhile","eat","skipToEnd","cur","current","words","hasOwnProperty","startState","tokens","token","state","defineMIME"]
}
