{
"version":3,
"file":"module$node_modules$codemirror$mode$elm$elm.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/codemirror/mode/elm/elm.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$elm$elm\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"elm\", function() {\n\n    function switchState(source, setState, f)\n    {\n      setState(f);\n      return f(source, setState);\n    }\n\n    var lowerRE = /[a-z]/;\n    var upperRE = /[A-Z]/;\n    var innerRE = /[a-zA-Z0-9_]/;\n\n    var digitRE = /[0-9]/;\n    var hexRE = /[0-9A-Fa-f]/;\n    var symbolRE = /[-&*+.\\\\/<>=?^|:]/;\n    var specialRE = /[(),[\\]{}]/;\n    var spacesRE = /[ \\v\\f]/; // newlines are handled in tokenizer\n\n    function normal()\n    {\n      return function(source, setState)\n      {\n        if (source.eatWhile(spacesRE))\n        {\n          return null;\n        }\n\n        var char = source.next();\n\n        if (specialRE.test(char))\n        {\n          return (char === '{' && source.eat('-'))\n            ? switchState(source, setState, chompMultiComment(1))\n            : (char === '[' && source.match('glsl|'))\n                ? switchState(source, setState, chompGlsl)\n                : 'builtin';\n        }\n\n        if (char === '\\'')\n        {\n          return switchState(source, setState, chompChar);\n        }\n\n        if (char === '\"')\n        {\n          return source.eat('\"')\n            ? source.eat('\"')\n                ? switchState(source, setState, chompMultiString)\n                : 'string'\n            : switchState(source, setState, chompSingleString);\n        }\n\n        if (upperRE.test(char))\n        {\n          source.eatWhile(innerRE);\n          return 'variable-2';\n        }\n\n        if (lowerRE.test(char))\n        {\n          var isDef = source.pos === 1;\n          source.eatWhile(innerRE);\n          return isDef ? \"def\" : \"variable\";\n        }\n\n        if (digitRE.test(char))\n        {\n          if (char === '0')\n          {\n            if (source.eat(/[xX]/))\n            {\n              source.eatWhile(hexRE); // should require at least 1\n              return \"number\";\n            }\n          }\n          else\n          {\n            source.eatWhile(digitRE);\n          }\n          if (source.eat('.'))\n          {\n            source.eatWhile(digitRE); // should require at least 1\n          }\n          if (source.eat(/[eE]/))\n          {\n            source.eat(/[-+]/);\n            source.eatWhile(digitRE); // should require at least 1\n          }\n          return \"number\";\n        }\n\n        if (symbolRE.test(char))\n        {\n          if (char === '-' && source.eat('-'))\n          {\n            source.skipToEnd();\n            return \"comment\";\n          }\n          source.eatWhile(symbolRE);\n          return \"keyword\";\n        }\n\n        if (char === '_')\n        {\n          return \"keyword\";\n        }\n\n        return \"error\";\n      }\n    }\n\n    function chompMultiComment(nest)\n    {\n      if (nest == 0)\n      {\n        return normal();\n      }\n      return function(source, setState)\n      {\n        while (!source.eol())\n        {\n          var char = source.next();\n          if (char == '{' && source.eat('-'))\n          {\n            ++nest;\n          }\n          else if (char == '-' && source.eat('}'))\n          {\n            --nest;\n            if (nest === 0)\n            {\n              setState(normal());\n              return 'comment';\n            }\n          }\n        }\n        setState(chompMultiComment(nest));\n        return 'comment';\n      }\n    }\n\n    function chompMultiString(source, setState)\n    {\n      while (!source.eol())\n      {\n        var char = source.next();\n        if (char === '\"' && source.eat('\"') && source.eat('\"'))\n        {\n          setState(normal());\n          return 'string';\n        }\n      }\n      return 'string';\n    }\n\n    function chompSingleString(source, setState)\n    {\n      while (source.skipTo('\\\\\"')) { source.next(); source.next(); }\n      if (source.skipTo('\"'))\n      {\n        source.next();\n        setState(normal());\n        return 'string';\n      }\n      source.skipToEnd();\n      setState(normal());\n      return 'error';\n    }\n\n    function chompChar(source, setState)\n    {\n      while (source.skipTo(\"\\\\'\")) { source.next(); source.next(); }\n      if (source.skipTo(\"'\"))\n      {\n        source.next();\n        setState(normal());\n        return 'string';\n      }\n      source.skipToEnd();\n      setState(normal());\n      return 'error';\n    }\n\n    function chompGlsl(source, setState)\n    {\n      while (!source.eol())\n      {\n        var char = source.next();\n        if (char === '|' && source.eat(']'))\n        {\n          setState(normal());\n          return 'string';\n        }\n      }\n      return 'string';\n    }\n\n    var wellKnownWords = {\n      case: 1,\n      of: 1,\n      as: 1,\n      if: 1,\n      then: 1,\n      else: 1,\n      let: 1,\n      in: 1,\n      type: 1,\n      alias: 1,\n      module: 1,\n      where: 1,\n      import: 1,\n      exposing: 1,\n      port: 1\n    };\n\n    return {\n      startState: function ()  { return { f: normal() }; },\n      copyState:  function (s) { return { f: s.f }; },\n\n      token: function(stream, state) {\n        var type = state.f(stream, function(s) { state.f = s; });\n        var word = stream.current();\n        return (wellKnownWords.hasOwnProperty(word)) ? 'keyword' : type;\n      }\n    };\n\n  });\n\n  CodeMirror.defineMIME(\"text/x-elm\", \"elm\");\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","switchState","source","setState","f","normal","eatWhile","spacesRE","char","next","specialRE","test","eat","chompMultiComment","match","chompGlsl","chompChar","chompMultiString","chompSingleString","upperRE","innerRE","lowerRE","isDef","pos","digitRE","hexRE","symbolRE","skipToEnd","nest","eol","skipTo","wellKnownWords","case","of","as","if","then","else","let","in","type","alias","where","import","exposing","port","startState","copyState","s","token","stream","state","word","current","hasOwnProperty","defineMIME"]
}
