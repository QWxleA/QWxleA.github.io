shadow$provide.module$node_modules$chrono_node$dist$locales$fr$parsers$FRSpecificTimeExpressionParser=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});const index_1=require("module$node_modules$chrono_node$dist$index"),FIRST_REG_PATTERN=RegExp("(^|\\s|T)(?:(?:[àa])\\s*)?(\\d{1,2})(?:h|:)?(?:(\\d{1,2})(?:m|:)?)?(?:(\\d{1,2})(?:s|:)?)?(?:\\s*(A\\.M\\.|P\\.M\\.|AM?|PM?))?(?\x3d\\W|$)","i"),SECOND_REG_PATTERN=RegExp("^\\s*(\\-|\\–|\\~|\\〜|[àa]|\\?)\\s*(\\d{1,2})(?:h|:)?(?:(\\d{1,2})(?:m|:)?)?(?:(\\d{1,2})(?:s|:)?)?(?:\\s*(A\\.M\\.|P\\.M\\.|AM?|PM?))?(?\x3d\\W|$)",
"i");class FRSpecificTimeExpressionParser{pattern(context){return FIRST_REG_PATTERN}extract(context,match){const result=context.createParsingResult(match.index+match[1].length,match[0].substring(match[1].length));if(result.text.match(/^\d{4}$/))return match.index+=match[0].length,null;result.start=FRSpecificTimeExpressionParser.extractTimeComponent(result.start.clone(),match);if(!result.start)return match.index+=match[0].length,null;context=context.text.substring(match.index+match[0].length);if(context=
SECOND_REG_PATTERN.exec(context))result.end=FRSpecificTimeExpressionParser.extractTimeComponent(result.start.clone(),context),result.end&&(result.text+=context[0]);return result}static extractTimeComponent(extractingComponents,match){let hour,minute=0,meridiem=null;hour=parseInt(match[2]);null!=match[3]&&(minute=parseInt(match[3]));if(60<=minute||24<hour)return null;12<=hour&&(meridiem=index_1.Meridiem.PM);if(null!=match[5]){if(12<hour)return null;const ampm=match[5][0].toLowerCase();"a"==ampm&&(meridiem=
index_1.Meridiem.AM,12==hour&&(hour=0));"p"==ampm&&(meridiem=index_1.Meridiem.PM,12!=hour&&(hour+=12))}extractingComponents.assign("hour",hour);extractingComponents.assign("minute",minute);null!==meridiem?extractingComponents.assign("meridiem",meridiem):12>hour?extractingComponents.imply("meridiem",index_1.Meridiem.AM):extractingComponents.imply("meridiem",index_1.Meridiem.PM);if(null!=match[4]){match=parseInt(match[4]);if(60<=match)return null;extractingComponents.assign("second",match)}return extractingComponents}}
exports.default=FRSpecificTimeExpressionParser}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$fr$parsers$FRSpecificTimeExpressionParser.js.map
