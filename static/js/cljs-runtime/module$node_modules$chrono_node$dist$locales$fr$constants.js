shadow$provide.module$node_modules$chrono_node$dist$locales$fr$constants=function(global,require,module,exports){function parseNumberPattern(match){match=match.toLowerCase();return void 0!==exports.INTEGER_WORD_DICTIONARY[match]?exports.INTEGER_WORD_DICTIONARY[match]:"une"===match||"un"===match?1:match.match(/quelques?/)?3:match.match(/demi-?/)?.5:parseFloat(match)}Object.defineProperty(exports,"__esModule",{value:!0});exports.parseTimeUnits=exports.TIME_UNITS_PATTERN=exports.parseYear=exports.YEAR_PATTERN=
exports.parseOrdinalNumberPattern=exports.ORDINAL_NUMBER_PATTERN=exports.parseNumberPattern=exports.NUMBER_PATTERN=exports.TIME_UNIT_DICTIONARY=exports.INTEGER_WORD_DICTIONARY=exports.MONTH_DICTIONARY=exports.WEEKDAY_DICTIONARY=void 0;global=require("module$node_modules$chrono_node$dist$utils$pattern");exports.WEEKDAY_DICTIONARY={dimanche:0,dim:0,lundi:1,lun:1,mardi:2,mar:2,mercredi:3,mer:3,jeudi:4,jeu:4,vendredi:5,ven:5,samedi:6,sam:6};exports.MONTH_DICTIONARY={janvier:1,jan:1,"jan.":1,"février":2,
"fév":2,"fév.":2,fevrier:2,fev:2,"fev.":2,mars:3,mar:3,"mar.":3,avril:4,avr:4,"avr.":4,mai:5,juin:6,jun:6,juillet:7,juil:7,jul:7,"jul.":7,"août":8,aout:8,septembre:9,sep:9,"sep.":9,sept:9,"sept.":9,octobre:10,oct:10,"oct.":10,novembre:11,nov:11,"nov.":11,"décembre":12,decembre:12,dec:12,"dec.":12};exports.INTEGER_WORD_DICTIONARY={un:1,deux:2,trois:3,quatre:4,cinq:5,six:6,sept:7,huit:8,neuf:9,dix:10,onze:11,douze:12,treize:13};exports.TIME_UNIT_DICTIONARY={sec:"second",seconde:"second",secondes:"second",
min:"minute",mins:"minute",minute:"minute",minutes:"minute",h:"hour",hr:"hour",hrs:"hour",heure:"hour",heures:"hour",jour:"d",jours:"d",semaine:"week",semaines:"week",mois:"month",trimestre:"quarter",trimestres:"quarter",ans:"year","année":"year","années":"year"};exports.NUMBER_PATTERN=`(?:${global.matchAnyPattern(exports.INTEGER_WORD_DICTIONARY)}|[0-9]+|[0-9]+\\.[0-9]+|une?|quelques?|demi-?)`;exports.parseNumberPattern=parseNumberPattern;exports.ORDINAL_NUMBER_PATTERN="(?:[0-9]{1,2}(?:er)?)";exports.parseOrdinalNumberPattern=
function(match){match=match.toLowerCase();match=match.replace(/(?:er)$/i,"");return parseInt(match)};exports.YEAR_PATTERN="(?:[1-9][0-9]{0,3}\\s*(?:AC|AD|p\\.\\s*C(?:hr?)?\\.\\s*n\\.)|[1-2][0-9]{3}|[5-9][0-9])";exports.parseYear=function(match){if(/AC/i.test(match))return match=match.replace(/BC/i,""),-parseInt(match);if(/AD/i.test(match)||/C/i.test(match))return match=match.replace(/[^\d]+/i,""),parseInt(match);match=parseInt(match);100>match&&(match=50<match?match+1900:match+2E3);return match};
require=`(${exports.NUMBER_PATTERN})\\s{0,5}(${global.matchAnyPattern(exports.TIME_UNIT_DICTIONARY)})\\s{0,5}`;const SINGLE_TIME_UNIT_REGEX=new RegExp(require,"i");exports.TIME_UNITS_PATTERN=global.repeatedTimeunitPattern("",require);exports.parseTimeUnits=function(timeunitText){const fragments={};let match=SINGLE_TIME_UNIT_REGEX.exec(timeunitText);for(;match;){var fragments$jscomp$0=fragments,match$jscomp$0=match;const num=parseNumberPattern(match$jscomp$0[1]);match$jscomp$0=exports.TIME_UNIT_DICTIONARY[match$jscomp$0[2].toLowerCase()];
fragments$jscomp$0[match$jscomp$0]=num;timeunitText=timeunitText.substring(match[0].length);match=SINGLE_TIME_UNIT_REGEX.exec(timeunitText)}return fragments}}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$fr$constants.js.map
