shadow$provide.module$node_modules$codemirror$mode$rst$rst=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror"),require("module$node_modules$codemirror$mode$python$python"),require("module$node_modules$codemirror$mode$stex$stex"),require("module$node_modules$codemirror$addon$mode$overlay")):"function"==typeof define&&define.amd?define(["../../lib/codemirror","../python/python","../stex/stex",
"../../addon/mode/overlay"],mod):mod(CodeMirror)})(function(CodeMirror){CodeMirror.defineMode("rst",function(config,options){var rx_strong=/^\*\*[^\*\s](?:[^\*]*[^\*\s])?\*\*/,rx_emphasis=/^\*[^\*\s](?:[^\*]*[^\*\s])?\*/,rx_literal=/^``[^`\s](?:[^`]*[^`\s])``/,rx_number=/^(?:[\d]+(?:[\.,]\d+)*)/,rx_positive=/^(?:\s\+[\d]+(?:[\.,]\d+)*)/,rx_negative=/^(?:\s\-[\d]+(?:[\.,]\d+)*)/,rx_uri=RegExp("^[Hh][Tt][Tt][Pp][Ss]?://(?:[\\d\\w.-]+)\\.(?:\\w{2,6})(?:/[\\d\\w\\#\\%\\\x26\\-\\.\\,\\/\\:\\\x3d\\?\\~]+)*");
config=CodeMirror.getMode(config,options.backdrop||"rst-base");return CodeMirror.overlayMode(config,{token:function(stream){if(stream.match(rx_strong)&&stream.match(/\W+|$/,!1))return"strong";if(stream.match(rx_emphasis)&&stream.match(/\W+|$/,!1))return"em";if(stream.match(rx_literal)&&stream.match(/\W+|$/,!1))return"string-2";if(stream.match(rx_number))return"number";if(stream.match(rx_positive))return"positive";if(stream.match(rx_negative))return"negative";if(stream.match(rx_uri))return"link";for(;!(null==
stream.next()||stream.match(rx_strong,!1)||stream.match(rx_emphasis,!1)||stream.match(rx_literal,!1)||stream.match(rx_number,!1)||stream.match(rx_positive,!1)||stream.match(rx_negative,!1)||stream.match(rx_uri,!1)););return null}},!0)},"python","stex");CodeMirror.defineMode("rst-base",function(config){function format(string){var args=Array.prototype.slice.call(arguments,1);return string.replace(/{(\d+)}/g,function(match,n){return"undefined"!=typeof args[n]?args[n]:match})}function to_normal(stream,
state){var token=null;if(stream.sol()&&stream.match(rx_examples,!1))change(state,to_mode,{mode:mode_python,local:CodeMirror.startState(mode_python)});else if(stream.sol()&&stream.match(rx_explicit))change(state,to_explicit),token="meta";else if(stream.sol()&&stream.match(rx_section))change(state,to_normal),token="header";else if(state.ctx.phase==rx_role_pre||stream.match(rx_role_pre,!1))switch(stage(state)){case 0:change(state,to_normal,context(rx_role_pre,1));stream.match(/^:/);token="meta";break;
case 1:change(state,to_normal,context(rx_role_pre,2));stream.match(rx_NAME);token="keyword";stream.current().match(/^(?:math|latex)/)&&(state.tmp_stex=!0);break;case 2:change(state,to_normal,context(rx_role_pre,3));stream.match(/^:`/);token="meta";break;case 3:state.tmp_stex&&(state.tmp_stex=void 0,state.tmp={mode:mode_stex,local:CodeMirror.startState(mode_stex)});if(state.tmp){if("`"==stream.peek()){change(state,to_normal,context(rx_role_pre,4));state.tmp=void 0;break}token=state.tmp.mode.token(stream,
state.tmp.local);break}change(state,to_normal,context(rx_role_pre,4));stream.match(rx_TEXT2);token="string";break;case 4:change(state,to_normal,context(rx_role_pre,5));stream.match(/^`/);token="meta";break;case 5:change(state,to_normal,context(rx_role_pre,6));stream.match(rx_TAIL);break;default:change(state,to_normal)}else if(state.ctx.phase==rx_role_suf||stream.match(rx_role_suf,!1))switch(stage(state)){case 0:change(state,to_normal,context(rx_role_suf,1));stream.match(/^`/);token="meta";break;case 1:change(state,
to_normal,context(rx_role_suf,2));stream.match(rx_TEXT2);token="string";break;case 2:change(state,to_normal,context(rx_role_suf,3));stream.match(/^`:/);token="meta";break;case 3:change(state,to_normal,context(rx_role_suf,4));stream.match(rx_NAME);token="keyword";break;case 4:change(state,to_normal,context(rx_role_suf,5));stream.match(/^:/);token="meta";break;case 5:change(state,to_normal,context(rx_role_suf,6));stream.match(rx_TAIL);break;default:change(state,to_normal)}else if(state.ctx.phase==rx_role||
stream.match(rx_role,!1))switch(stage(state)){case 0:change(state,to_normal,context(rx_role,1));stream.match(/^:/);token="meta";break;case 1:change(state,to_normal,context(rx_role,2));stream.match(rx_NAME);token="keyword";break;case 2:change(state,to_normal,context(rx_role,3));stream.match(/^:/);token="meta";break;case 3:change(state,to_normal,context(rx_role,4));stream.match(rx_TAIL);break;default:change(state,to_normal)}else if(state.ctx.phase==rx_substitution_ref||stream.match(rx_substitution_ref,
!1))switch(stage(state)){case 0:change(state,to_normal,context(rx_substitution_ref,1));stream.match(rx_substitution_text);token="variable-2";break;case 1:change(state,to_normal,context(rx_substitution_ref,2));stream.match(/^_?_?/)&&(token="link");break;default:change(state,to_normal)}else if(stream.match(rx_footnote_ref))change(state,to_normal),token="quote";else if(stream.match(rx_citation_ref))change(state,to_normal),token="quote";else if(stream.match(rx_link_ref1)){if(change(state,to_normal),!stream.peek()||
stream.peek().match(/^\W$/))token="link"}else if(state.ctx.phase==rx_link_ref2||stream.match(rx_link_ref2,!1))switch(stage(state)){case 0:!stream.peek()||stream.peek().match(/^\W$/)?change(state,to_normal,context(rx_link_ref2,1)):stream.match(rx_link_ref2);break;case 1:change(state,to_normal,context(rx_link_ref2,2));stream.match(/^`/);token="link";break;case 2:change(state,to_normal,context(rx_link_ref2,3));stream.match(rx_TEXT2);break;case 3:change(state,to_normal,context(rx_link_ref2,4));stream.match(/^`_/);
token="link";break;default:change(state,to_normal)}else stream.match(rx_verbatim)?change(state,to_verbatim):stream.next()&&change(state,to_normal);return token}function to_explicit(stream,state){var token=null;if(state.ctx.phase==rx_substitution||stream.match(rx_substitution,!1))switch(stage(state)){case 0:change(state,to_explicit,context(rx_substitution,1));stream.match(rx_substitution_text);token="variable-2";break;case 1:change(state,to_explicit,context(rx_substitution,2));stream.match(rx_substitution_sepa);
break;case 2:change(state,to_explicit,context(rx_substitution,3));stream.match(rx_substitution_name);token="keyword";break;case 3:change(state,to_explicit,context(rx_substitution,4));stream.match(rx_substitution_tail);token="meta";break;default:change(state,to_normal)}else if(state.ctx.phase==rx_directive||stream.match(rx_directive,!1))switch(stage(state)){case 0:change(state,to_explicit,context(rx_directive,1));stream.match(rx_directive_name);token="keyword";stream.current().match(/^(?:math|latex)/)?
state.tmp_stex=!0:stream.current().match(/^python/)&&(state.tmp_py=!0);break;case 1:change(state,to_explicit,context(rx_directive,2));stream.match(rx_directive_tail);token="meta";if(stream.match(/^latex\s*$/)||state.tmp_stex)state.tmp_stex=void 0,change(state,to_mode,{mode:mode_stex,local:CodeMirror.startState(mode_stex)});break;case 2:change(state,to_explicit,context(rx_directive,3));if(stream.match(/^python\s*$/)||state.tmp_py)state.tmp_py=void 0,change(state,to_mode,{mode:mode_python,local:CodeMirror.startState(mode_python)});
break;default:change(state,to_normal)}else if(state.ctx.phase==rx_link||stream.match(rx_link,!1))switch(stage(state)){case 0:change(state,to_explicit,context(rx_link,1));stream.match(rx_link_head);stream.match(rx_link_name);token="link";break;case 1:change(state,to_explicit,context(rx_link,2));stream.match(rx_link_tail);token="meta";break;default:change(state,to_normal)}else stream.match(rx_footnote)?(change(state,to_normal),token="quote"):stream.match(rx_citation)?(change(state,to_normal),token=
"quote"):(stream.eatSpace(),stream.eol()?change(state,to_normal):(stream.skipToEnd(),change(state,to_comment),token="comment"));return token}function to_comment(stream,state){return as_block(stream,state,"comment")}function to_verbatim(stream,state){return as_block(stream,state,"meta")}function as_block(stream,state,token){if(stream.eol()||stream.eatSpace())return stream.skipToEnd(),token;change(state,to_normal);return null}function to_mode(stream,state){if(state.ctx.mode&&state.ctx.local)return stream.sol()?
(stream.eatSpace()||change(state,to_normal),null):state.ctx.mode.token(stream,state.ctx.local);change(state,to_normal);return null}function context(phase,stage,mode,local){return{phase,stage,mode,local}}function change(state,tok,ctx){state.tok=tok;state.ctx=ctx||{}}function stage(state){return state.ctx.stage||0}var mode_python=CodeMirror.getMode(config,"python"),mode_stex=CodeMirror.getMode(config,"stex"),rx_TAIL=new RegExp(format("^{0}","(?:\\s*|\\W|$)")),rx_NAME=new RegExp(format("^{0}","(?:[^\\W\\d_](?:[\\w!\"#$%\x26'()\\*\\+,\\-\\./:;\x3c\x3d\x3e\\?]*[^\\W_])?)"));
config=format("(?:{0}|`{1}`)","(?:[^\\W\\d_](?:[\\w!\"#$%\x26'()\\*\\+,\\-\\./:;\x3c\x3d\x3e\\?]*[^\\W_])?)","(?:[^\\W\\d_](?:[\\w\\s!\"#$%\x26'()\\*\\+,\\-\\./:;\x3c\x3d\x3e\\?]*[^\\W_])?)");var rx_TEXT2=new RegExp(format("^{0}","(?:[^\\`]+)")),rx_section=RegExp("^([!'#$%\x26\"()*+,-./:;\x3c\x3d\x3e?@\\[\\\\\\]^_`{|}~])\\1{3,}\\s*$"),rx_explicit=new RegExp(format("^\\.\\.{0}","\\s+")),rx_link=new RegExp(format("^_{0}:{1}|^__:{1}",config,"(?:\\s*|\\W|$)")),rx_directive=new RegExp(format("^{0}::{1}",
config,"(?:\\s*|\\W|$)")),rx_substitution=new RegExp(format("^\\|{0}\\|{1}{2}::{3}","(?:[^\\s\\|](?:[^\\|]*[^\\s\\|])?)","\\s+",config,"(?:\\s*|\\W|$)")),rx_footnote=new RegExp(format("^\\[(?:\\d+|#{0}?|\\*)]{1}",config,"(?:\\s*|\\W|$)")),rx_citation=new RegExp(format("^\\[{0}\\]{1}",config,"(?:\\s*|\\W|$)")),rx_substitution_ref=new RegExp(format("^\\|{0}\\|","(?:[^\\s\\|](?:[^\\|]*[^\\s\\|])?)")),rx_footnote_ref=new RegExp(format("^\\[(?:\\d+|#{0}?|\\*)]_",config)),rx_citation_ref=new RegExp(format("^\\[{0}\\]_",
config)),rx_link_ref1=new RegExp(format("^{0}__?",config)),rx_link_ref2=new RegExp(format("^`{0}`_","(?:[^\\`]+)")),rx_role_pre=new RegExp(format("^:{0}:`{1}`{2}","(?:[^\\W\\d_](?:[\\w!\"#$%\x26'()\\*\\+,\\-\\./:;\x3c\x3d\x3e\\?]*[^\\W_])?)","(?:[^\\`]+)","(?:\\s*|\\W|$)")),rx_role_suf=new RegExp(format("^`{1}`:{0}:{2}","(?:[^\\W\\d_](?:[\\w!\"#$%\x26'()\\*\\+,\\-\\./:;\x3c\x3d\x3e\\?]*[^\\W_])?)","(?:[^\\`]+)","(?:\\s*|\\W|$)")),rx_role=new RegExp(format("^:{0}:{1}","(?:[^\\W\\d_](?:[\\w!\"#$%\x26'()\\*\\+,\\-\\./:;\x3c\x3d\x3e\\?]*[^\\W_])?)",
"(?:\\s*|\\W|$)")),rx_directive_name=new RegExp(format("^{0}",config)),rx_directive_tail=new RegExp(format("^::{0}","(?:\\s*|\\W|$)")),rx_substitution_text=new RegExp(format("^\\|{0}\\|","(?:[^\\s\\|](?:[^\\|]*[^\\s\\|])?)")),rx_substitution_sepa=new RegExp(format("^{0}","\\s+")),rx_substitution_name=new RegExp(format("^{0}",config)),rx_substitution_tail=new RegExp(format("^::{0}","(?:\\s*|\\W|$)")),rx_link_head=RegExp("^_"),rx_link_name=new RegExp(format("^{0}|_",config)),rx_link_tail=new RegExp(format("^:{0}",
"(?:\\s*|\\W|$)")),rx_verbatim=RegExp("^::\\s*$"),rx_examples=RegExp("^\\s+(?:\x3e\x3e\x3e|In \\[\\d+\\]:)\\s");return{startState:function(){return{tok:to_normal,ctx:context(void 0,0)}},copyState:function(state){var ctx=state.ctx,tmp=state.tmp;ctx.local&&(ctx={mode:ctx.mode,local:CodeMirror.copyState(ctx.mode,ctx.local)});tmp&&={mode:tmp.mode,local:CodeMirror.copyState(tmp.mode,tmp.local)};return{tok:state.tok,ctx,tmp}},innerMode:function(state){return state.tmp?{state:state.tmp.local,mode:state.tmp.mode}:
state.ctx.mode?{state:state.ctx.local,mode:state.ctx.mode}:null},token:function(stream,state){return state.tok(stream,state)}}},"python","stex");CodeMirror.defineMIME("text/x-rst","rst")})}
//# sourceMappingURL=module$node_modules$codemirror$mode$rst$rst.js.map
