{
"version":3,
"file":"module$node_modules$codemirror$mode$commonlisp$commonlisp.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/codemirror/mode/commonlisp/commonlisp.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$commonlisp$commonlisp\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"commonlisp\", function (config) {\n  var specialForm = /^(block|let*|return-from|catch|load-time-value|setq|eval-when|locally|symbol-macrolet|flet|macrolet|tagbody|function|multiple-value-call|the|go|multiple-value-prog1|throw|if|progn|unwind-protect|labels|progv|let|quote)$/;\n  var assumeBody = /^with|^def|^do|^prog|case$|^cond$|bind$|when$|unless$/;\n  var numLiteral = /^(?:[+\\-]?(?:\\d+|\\d*\\.\\d+)(?:[efd][+\\-]?\\d+)?|[+\\-]?\\d+(?:\\/[+\\-]?\\d+)?|#b[+\\-]?[01]+|#o[+\\-]?[0-7]+|#x[+\\-]?[\\da-f]+)/;\n  var symbol = /[^\\s'`,@()\\[\\]\";]/;\n  var type;\n\n  function readSym(stream) {\n    var ch;\n    while (ch = stream.next()) {\n      if (ch == \"\\\\\") stream.next();\n      else if (!symbol.test(ch)) { stream.backUp(1); break; }\n    }\n    return stream.current();\n  }\n\n  function base(stream, state) {\n    if (stream.eatSpace()) {type = \"ws\"; return null;}\n    if (stream.match(numLiteral)) return \"number\";\n    var ch = stream.next();\n    if (ch == \"\\\\\") ch = stream.next();\n\n    if (ch == '\"') return (state.tokenize = inString)(stream, state);\n    else if (ch == \"(\") { type = \"open\"; return \"bracket\"; }\n    else if (ch == \")\" || ch == \"]\") { type = \"close\"; return \"bracket\"; }\n    else if (ch == \";\") { stream.skipToEnd(); type = \"ws\"; return \"comment\"; }\n    else if (/['`,@]/.test(ch)) return null;\n    else if (ch == \"|\") {\n      if (stream.skipTo(\"|\")) { stream.next(); return \"symbol\"; }\n      else { stream.skipToEnd(); return \"error\"; }\n    } else if (ch == \"#\") {\n      var ch = stream.next();\n      if (ch == \"(\") { type = \"open\"; return \"bracket\"; }\n      else if (/[+\\-=\\.']/.test(ch)) return null;\n      else if (/\\d/.test(ch) && stream.match(/^\\d*#/)) return null;\n      else if (ch == \"|\") return (state.tokenize = inComment)(stream, state);\n      else if (ch == \":\") { readSym(stream); return \"meta\"; }\n      else if (ch == \"\\\\\") { stream.next(); readSym(stream); return \"string-2\" }\n      else return \"error\";\n    } else {\n      var name = readSym(stream);\n      if (name == \".\") return null;\n      type = \"symbol\";\n      if (name == \"nil\" || name == \"t\" || name.charAt(0) == \":\") return \"atom\";\n      if (state.lastType == \"open\" && (specialForm.test(name) || assumeBody.test(name))) return \"keyword\";\n      if (name.charAt(0) == \"&\") return \"variable-2\";\n      return \"variable\";\n    }\n  }\n\n  function inString(stream, state) {\n    var escaped = false, next;\n    while (next = stream.next()) {\n      if (next == '\"' && !escaped) { state.tokenize = base; break; }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    return \"string\";\n  }\n\n  function inComment(stream, state) {\n    var next, last;\n    while (next = stream.next()) {\n      if (next == \"#\" && last == \"|\") { state.tokenize = base; break; }\n      last = next;\n    }\n    type = \"ws\";\n    return \"comment\";\n  }\n\n  return {\n    startState: function () {\n      return {ctx: {prev: null, start: 0, indentTo: 0}, lastType: null, tokenize: base};\n    },\n\n    token: function (stream, state) {\n      if (stream.sol() && typeof state.ctx.indentTo != \"number\")\n        state.ctx.indentTo = state.ctx.start + 1;\n\n      type = null;\n      var style = state.tokenize(stream, state);\n      if (type != \"ws\") {\n        if (state.ctx.indentTo == null) {\n          if (type == \"symbol\" && assumeBody.test(stream.current()))\n            state.ctx.indentTo = state.ctx.start + config.indentUnit;\n          else\n            state.ctx.indentTo = \"next\";\n        } else if (state.ctx.indentTo == \"next\") {\n          state.ctx.indentTo = stream.column();\n        }\n        state.lastType = type;\n      }\n      if (type == \"open\") state.ctx = {prev: state.ctx, start: stream.column(), indentTo: null};\n      else if (type == \"close\") state.ctx = state.ctx.prev || state.ctx;\n      return style;\n    },\n\n    indent: function (state, _textAfter) {\n      var i = state.ctx.indentTo;\n      return typeof i == \"number\" ? i : state.ctx.start + 1;\n    },\n\n    closeBrackets: {pairs: \"()[]{}\\\"\\\"\"},\n    lineComment: \";;\",\n    blockCommentStart: \"#|\",\n    blockCommentEnd: \"|#\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-common-lisp\", \"commonlisp\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","config","readSym","stream","ch","next","symbol","test","backUp","current","base","state","eatSpace","type","match","numLiteral","tokenize","inString","skipToEnd","skipTo","inComment","name","charAt","lastType","specialForm","assumeBody","escaped","last","startState","ctx","prev","start","indentTo","token","sol","style","indentUnit","column","indent","_textAfter","i","closeBrackets","pairs","lineComment","blockCommentStart","blockCommentEnd","defineMIME"]
}
