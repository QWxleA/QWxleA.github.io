shadow$provide.module$node_modules$chrono_node$dist$locales$en$index=function(global,require,module,exports){function createCasualConfiguration(littleEndian=!1){littleEndian=createConfiguration(!1,littleEndian);littleEndian.parsers.unshift(new ENCasualDateParser_1.default);littleEndian.parsers.unshift(new ENCasualTimeParser_1.default);littleEndian.parsers.unshift(new ENMonthNameParser_1.default);littleEndian.parsers.unshift(new ENRelativeDateFormatParser_1.default);littleEndian.parsers.unshift(new ENTimeUnitCasualRelativeFormatParser_1.default);
return littleEndian}function createConfiguration(strictMode=!0,littleEndian=!1){return configurations_1.includeCommonConfiguration({parsers:[new SlashDateFormatParser_1.default(littleEndian),new ENTimeUnitWithinFormatParser_1.default,new ENMonthNameLittleEndianParser_1.default,new ENMonthNameMiddleEndianParser_1.default,new ENWeekdayParser_1.default,new ENCasualYearMonthDayParser_1.default,new ENSlashMonthFormatParser_1.default,new ENTimeExpressionParser_1.default(strictMode),new ENTimeUnitAgoFormatParser_1.default(strictMode),
new ENTimeUnitLaterFormatParser_1.default(strictMode)],refiners:[new ENMergeDateTimeRefiner_1.default,new ENMergeDateRangeRefiner_1.default]},strictMode)}global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});exports.createConfiguration=exports.createCasualConfiguration=exports.parseDate=exports.parse=exports.GB=exports.strict=exports.casual=void 0;const ENTimeUnitWithinFormatParser_1=global(require("module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeUnitWithinFormatParser")),
ENMonthNameLittleEndianParser_1=global(require("module$node_modules$chrono_node$dist$locales$en$parsers$ENMonthNameLittleEndianParser")),ENMonthNameMiddleEndianParser_1=global(require("module$node_modules$chrono_node$dist$locales$en$parsers$ENMonthNameMiddleEndianParser")),ENMonthNameParser_1=global(require("module$node_modules$chrono_node$dist$locales$en$parsers$ENMonthNameParser")),ENCasualYearMonthDayParser_1=global(require("module$node_modules$chrono_node$dist$locales$en$parsers$ENCasualYearMonthDayParser")),
ENSlashMonthFormatParser_1=global(require("module$node_modules$chrono_node$dist$locales$en$parsers$ENSlashMonthFormatParser")),ENTimeExpressionParser_1=global(require("module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeExpressionParser")),ENTimeUnitAgoFormatParser_1=global(require("module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeUnitAgoFormatParser")),ENTimeUnitLaterFormatParser_1=global(require("module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeUnitLaterFormatParser")),
ENMergeDateRangeRefiner_1=global(require("module$node_modules$chrono_node$dist$locales$en$refiners$ENMergeDateRangeRefiner")),ENMergeDateTimeRefiner_1=global(require("module$node_modules$chrono_node$dist$locales$en$refiners$ENMergeDateTimeRefiner")),configurations_1=require("module$node_modules$chrono_node$dist$configurations"),ENCasualDateParser_1=global(require("module$node_modules$chrono_node$dist$locales$en$parsers$ENCasualDateParser")),ENCasualTimeParser_1=global(require("module$node_modules$chrono_node$dist$locales$en$parsers$ENCasualTimeParser")),
ENWeekdayParser_1=global(require("module$node_modules$chrono_node$dist$locales$en$parsers$ENWeekdayParser")),ENRelativeDateFormatParser_1=global(require("module$node_modules$chrono_node$dist$locales$en$parsers$ENRelativeDateFormatParser"));module=require("module$node_modules$chrono_node$dist$chrono");const SlashDateFormatParser_1=global(require("module$node_modules$chrono_node$dist$common$parsers$SlashDateFormatParser")),ENTimeUnitCasualRelativeFormatParser_1=global(require("module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeUnitCasualRelativeFormatParser"));
exports.casual=new module.Chrono(createCasualConfiguration(!1));exports.strict=new module.Chrono(createConfiguration(!0,!1));exports.GB=new module.Chrono(createConfiguration(!1,!0));exports.parse=function(text,ref,option){return exports.casual.parse(text,ref,option)};exports.parseDate=function(text,ref,option){return exports.casual.parseDate(text,ref,option)};exports.createCasualConfiguration=createCasualConfiguration;exports.createConfiguration=createConfiguration}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$en$index.js.map
