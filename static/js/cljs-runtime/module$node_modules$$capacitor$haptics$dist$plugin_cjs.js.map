{
"version":3,
"file":"module$node_modules$$capacitor$haptics$dist$plugin_cjs.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,CAAA,sDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGnHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEIC,OAAAA,CAAON,OAAA,CAAQ,oDAAR,CAEXE,QAAQK,CAAAA,WAAR,CAAsB,IAAK,EAC1B,UAAS,CAACA,WAAD,CAAc,CAMpBA,WAAA,CAAA,KAAA,CAAuB,OAMvBA,YAAA,CAAA,MAAA,CAAwB,QAMxBA,YAAA,CAAA,KAAA,CAAuB,OAlBH,CAAvB,CAAD,CAmBGL,OAAQK,CAAAA,WAnBX,GAmB2BL,OAAQK,CAAAA,WAnBnC,CAmBiD,EAnBjD,EAoBAL,QAAQM,CAAAA,gBAAR,CAA2B,IAAK,EAC/B,UAAS,CAACA,gBAAD,CAAmB,CAMzBA,gBAAA,CAAA,OAAA,CAA8B,SAM9BA;gBAAA,CAAA,OAAA,CAA8B,SAM9BA,iBAAA,CAAA,KAAA,CAA4B,OAlBH,CAA5B,CAAD,CAmBGN,OAAQM,CAAAA,gBAnBX,GAmBgCN,OAAQM,CAAAA,gBAnBxC,CAmB2D,EAnB3D,EAwBMC,QAAAA,CAA0BP,OAAQM,CAAAA,gBAKlCE,OAAAA,CAAqBR,OAAQK,CAAAA,WAEnC,OAAMI,QAAUL,MAAKM,CAAAA,cAAL,CAAoB,SAApB,CAA+B,CAC3CC,IAAK,EAAAA,EAAMC,OAAQC,CAAAA,OAAR,EAAkBC,CAAAA,IAAlB,CAAuB,QAAS,EAAG,CAAE,MAAOH,IAAT,CAAnC,CAAoDG,CAAAA,IAApD,CAAyDC,CAAA,EAAK,IAAIA,CAAEC,CAAAA,UAApE,CADgC,CAA/B,CAIhB,MAAMA,WAAN,QAAyBZ,OAAKa,CAAAA,SAA9B,CACIC,WAAW,EAAG,CACV,KAAA,CAAM,GAAGC,SAAT,CACA,KAAKC,CAAAA,gBAAL,CAAwB,CAAA,CAFd,CAIRC,YAAM,CAACC,OAAD,CAAU,CACZC,OAAAA,CAAU,IAAKC,CAAAA,gBAAL,CAAkC,IAAZ,GAAAF,OAAA,EAAgC,IAAK,EAArC,GAAoBA,OAApB;AAAyC,IAAK,EAA9C,CAAkDA,OAAQG,CAAAA,KAAhF,CAChB,KAAKC,CAAAA,kBAAL,CAAwBH,OAAxB,CAFkB,CAIhBI,kBAAY,CAACL,OAAD,CAAU,CAClBC,OAAAA,CAAU,IAAKK,CAAAA,sBAAL,CAAwC,IAAZ,GAAAN,OAAA,EAAgC,IAAK,EAArC,GAAoBA,OAApB,CAAyC,IAAK,EAA9C,CAAkDA,OAAQO,CAAAA,IAAtF,CAChB,KAAKH,CAAAA,kBAAL,CAAwBH,OAAxB,CAFwB,CAItBO,aAAO,CAACR,OAAD,CAAU,CAEnB,IAAKI,CAAAA,kBAAL,CAAwB,EADM,IAAZ,GAAAJ,OAAA,EAAgC,IAAK,EAArC,GAAoBA,OAApB,CAAyC,IAAK,EAA9C,CAAkDA,OAAQS,CAAAA,QACpD,GADiE,GACjE,CAAxB,CAFmB,CAIjBC,oBAAc,EAAG,CACnB,IAAKZ,CAAAA,gBAAL,CAAwB,CAAA,CADL,CAGjBa,sBAAgB,EAAG,CACjB,IAAKb,CAAAA,gBAAT,EACI,IAAKM,CAAAA,kBAAL,CAAwB,CAAC,EAAD,CAAxB,CAFiB,CAKnBQ,kBAAY,EAAG,CACjB,IAAKd,CAAAA,gBAAL,CAAwB,CAAA,CADP,CAGrBI,gBAAgB,CAACC,KAAA;AAAQzB,OAAQK,CAAAA,WAAY8B,CAAAA,KAA7B,CAAoC,CAChD,MAAIV,MAAJ,GAAczB,OAAQK,CAAAA,WAAY+B,CAAAA,MAAlC,CACW,CAAC,EAAD,CADX,CAGSX,KAAJ,GAAczB,OAAQK,CAAAA,WAAYgC,CAAAA,KAAlC,CACM,CAAC,EAAD,CADN,CAGE,CAAC,EAAD,CAPyC,CASpDT,sBAAsB,CAACC,IAAA,CAAO7B,OAAQM,CAAAA,gBAAiBgC,CAAAA,OAAjC,CAA0C,CAC5D,MAAIT,KAAJ,GAAa7B,OAAQM,CAAAA,gBAAiBiC,CAAAA,OAAtC,CACW,CAAC,EAAD,CAAK,EAAL,CAAS,EAAT,CAAa,EAAb,CAAiB,EAAjB,CADX,CAGSV,IAAJ,GAAa7B,OAAQM,CAAAA,gBAAiBkC,CAAAA,KAAtC,CACM,CAAC,EAAD,CAAK,EAAL,CAAS,EAAT,CADN,CAGE,CAAC,EAAD,CAAK,EAAL,CAAS,EAAT,CAPqD,CAShEd,kBAAkB,CAACH,OAAD,CAAU,CACxB,GAAIkB,SAAUX,CAAAA,OAAd,CACIW,SAAUX,CAAAA,OAAV,CAAkBP,OAAlB,CADJ,KAII,MAAM,KAAKmB,CAAAA,WAAL,CAAiB,0CAAjB,CAAN,CALoB,CA9ChC,CAwDA,IAAI/B,IAAmBV,MAAO0C,CAAAA,MAAP,CAAc,CACjCC,UAAW,IADsB,CAErB5B,UAFqB,CAAd,CAKvBhB;OAAQS,CAAAA,OAAR,CAAkBA,OAClBT,QAAQQ,CAAAA,kBAAR,CAA6BA,MAC7BR,QAAQO,CAAAA,uBAAR,CAAkCA,OA/HiF;",
"sources":["node_modules/@capacitor/haptics/dist/plugin.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$capacitor$haptics$dist$plugin_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar core = require('@capacitor/core');\n\nexports.ImpactStyle = void 0;\n(function (ImpactStyle) {\n    /**\n     * A collision between large, heavy user interface elements\n     *\n     * @since 1.0.0\n     */\n    ImpactStyle[\"Heavy\"] = \"HEAVY\";\n    /**\n     * A collision between moderately sized user interface elements\n     *\n     * @since 1.0.0\n     */\n    ImpactStyle[\"Medium\"] = \"MEDIUM\";\n    /**\n     * A collision between small, light user interface elements\n     *\n     * @since 1.0.0\n     */\n    ImpactStyle[\"Light\"] = \"LIGHT\";\n})(exports.ImpactStyle || (exports.ImpactStyle = {}));\nexports.NotificationType = void 0;\n(function (NotificationType) {\n    /**\n     * A notification feedback type indicating that a task has completed successfully\n     *\n     * @since 1.0.0\n     */\n    NotificationType[\"Success\"] = \"SUCCESS\";\n    /**\n     * A notification feedback type indicating that a task has produced a warning\n     *\n     * @since 1.0.0\n     */\n    NotificationType[\"Warning\"] = \"WARNING\";\n    /**\n     * A notification feedback type indicating that a task has failed\n     *\n     * @since 1.0.0\n     */\n    NotificationType[\"Error\"] = \"ERROR\";\n})(exports.NotificationType || (exports.NotificationType = {}));\n/**\n * @deprecated Use `NotificationType`.\n * @since 1.0.0\n */\nconst HapticsNotificationType = exports.NotificationType;\n/**\n * @deprecated Use `ImpactStyle`.\n * @since 1.0.0\n */\nconst HapticsImpactStyle = exports.ImpactStyle;\n\nconst Haptics = core.registerPlugin('Haptics', {\n    web: () => Promise.resolve().then(function () { return web; }).then(m => new m.HapticsWeb()),\n});\n\nclass HapticsWeb extends core.WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.selectionStarted = false;\n    }\n    async impact(options) {\n        const pattern = this.patternForImpact(options === null || options === void 0 ? void 0 : options.style);\n        this.vibrateWithPattern(pattern);\n    }\n    async notification(options) {\n        const pattern = this.patternForNotification(options === null || options === void 0 ? void 0 : options.type);\n        this.vibrateWithPattern(pattern);\n    }\n    async vibrate(options) {\n        const duration = (options === null || options === void 0 ? void 0 : options.duration) || 300;\n        this.vibrateWithPattern([duration]);\n    }\n    async selectionStart() {\n        this.selectionStarted = true;\n    }\n    async selectionChanged() {\n        if (this.selectionStarted) {\n            this.vibrateWithPattern([70]);\n        }\n    }\n    async selectionEnd() {\n        this.selectionStarted = false;\n    }\n    patternForImpact(style = exports.ImpactStyle.Heavy) {\n        if (style === exports.ImpactStyle.Medium) {\n            return [43];\n        }\n        else if (style === exports.ImpactStyle.Light) {\n            return [20];\n        }\n        return [61];\n    }\n    patternForNotification(type = exports.NotificationType.Success) {\n        if (type === exports.NotificationType.Warning) {\n            return [30, 40, 30, 50, 60];\n        }\n        else if (type === exports.NotificationType.Error) {\n            return [27, 45, 50];\n        }\n        return [35, 65, 21];\n    }\n    vibrateWithPattern(pattern) {\n        if (navigator.vibrate) {\n            navigator.vibrate(pattern);\n        }\n        else {\n            throw this.unavailable('Browser does not support the vibrate API');\n        }\n    }\n}\n\nvar web = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    HapticsWeb: HapticsWeb\n});\n\nexports.Haptics = Haptics;\nexports.HapticsImpactStyle = HapticsImpactStyle;\nexports.HapticsNotificationType = HapticsNotificationType;\n//# sourceMappingURL=plugin.cjs.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","core","ImpactStyle","NotificationType","HapticsNotificationType","HapticsImpactStyle","Haptics","registerPlugin","web","Promise","resolve","then","m","HapticsWeb","WebPlugin","constructor","arguments","selectionStarted","impact","options","pattern","patternForImpact","style","vibrateWithPattern","notification","patternForNotification","type","vibrate","duration","selectionStart","selectionChanged","selectionEnd","Heavy","Medium","Light","Success","Warning","Error","navigator","unavailable","freeze","__proto__"]
}
