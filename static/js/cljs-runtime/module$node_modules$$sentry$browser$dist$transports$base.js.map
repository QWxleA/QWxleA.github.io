{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$transports$base.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@sentry/browser/dist/transports/base.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$transports$base\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@sentry/core\");\nvar utils_1 = require(\"@sentry/utils\");\nvar utils_2 = require(\"./utils\");\nfunction requestTypeToCategory(ty) {\n    var tyStr = ty;\n    return tyStr === 'event' ? 'error' : tyStr;\n}\nvar global = utils_1.getGlobalObject();\n/** Base Transport class implementation */\nvar BaseTransport = /** @class */ (function () {\n    function BaseTransport(options) {\n        var _this = this;\n        this.options = options;\n        /** A simple buffer holding all requests. */\n        this._buffer = utils_1.makePromiseBuffer(30);\n        /** Locks transport after receiving rate limits in a response */\n        this._rateLimits = {};\n        this._outcomes = {};\n        this._api = core_1.initAPIDetails(options.dsn, options._metadata, options.tunnel);\n        // eslint-disable-next-line deprecation/deprecation\n        this.url = core_1.getStoreEndpointWithUrlEncodedAuth(this._api.dsn);\n        if (this.options.sendClientReports && global.document) {\n            global.document.addEventListener('visibilitychange', function () {\n                if (global.document.visibilityState === 'hidden') {\n                    _this._flushOutcomes();\n                }\n            });\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendEvent = function (event) {\n        return this._sendRequest(core_1.eventToSentryRequest(event, this._api), event);\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendSession = function (session) {\n        return this._sendRequest(core_1.sessionToSentryRequest(session, this._api), session);\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.close = function (timeout) {\n        return this._buffer.drain(timeout);\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.recordLostEvent = function (reason, category) {\n        var _a;\n        if (!this.options.sendClientReports) {\n            return;\n        }\n        // We want to track each category (event, transaction, session) separately\n        // but still keep the distinction between different type of outcomes.\n        // We could use nested maps, but it's much easier to read and type this way.\n        // A correct type for map-based implementation if we want to go that route\n        // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n        var key = requestTypeToCategory(category) + \":\" + reason;\n        utils_1.logger.log(\"Adding outcome: \" + key);\n        this._outcomes[key] = (_a = this._outcomes[key], (_a !== null && _a !== void 0 ? _a : 0)) + 1;\n    };\n    /**\n     * Send outcomes as an envelope\n     */\n    BaseTransport.prototype._flushOutcomes = function () {\n        if (!this.options.sendClientReports) {\n            return;\n        }\n        var outcomes = this._outcomes;\n        this._outcomes = {};\n        // Nothing to send\n        if (!Object.keys(outcomes).length) {\n            utils_1.logger.log('No outcomes to flush');\n            return;\n        }\n        utils_1.logger.log(\"Flushing outcomes:\\n\" + JSON.stringify(outcomes, null, 2));\n        var url = core_1.getEnvelopeEndpointWithUrlEncodedAuth(this._api.dsn, this._api.tunnel);\n        var discardedEvents = Object.keys(outcomes).map(function (key) {\n            var _a = tslib_1.__read(key.split(':'), 2), category = _a[0], reason = _a[1];\n            return {\n                reason: reason,\n                category: category,\n                quantity: outcomes[key],\n            };\n            // TODO: Improve types on discarded_events to get rid of cast\n        });\n        var envelope = utils_1.createClientReportEnvelope(discardedEvents, this._api.tunnel && utils_1.dsnToString(this._api.dsn));\n        try {\n            utils_2.sendReport(url, utils_1.serializeEnvelope(envelope));\n        }\n        catch (e) {\n            utils_1.logger.error(e);\n        }\n    };\n    /**\n     * Handle Sentry repsonse for promise-based transports.\n     */\n    BaseTransport.prototype._handleResponse = function (_a) {\n        var requestType = _a.requestType, response = _a.response, headers = _a.headers, resolve = _a.resolve, reject = _a.reject;\n        var status = utils_1.eventStatusFromHttpCode(response.status);\n        /**\n         * \"The name is case-insensitive.\"\n         * https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n         */\n        var limited = this._handleRateLimit(headers);\n        if (limited && utils_1.isDebugBuild()) {\n            utils_1.logger.warn(\"Too many \" + requestType + \" requests, backing off until: \" + this._disabledUntil(requestType));\n        }\n        if (status === 'success') {\n            resolve({ status: status });\n            return;\n        }\n        reject(response);\n    };\n    /**\n     * Gets the time that given category is disabled until for rate limiting\n     */\n    BaseTransport.prototype._disabledUntil = function (requestType) {\n        var category = requestTypeToCategory(requestType);\n        return this._rateLimits[category] || this._rateLimits.all;\n    };\n    /**\n     * Checks if a category is rate limited\n     */\n    BaseTransport.prototype._isRateLimited = function (requestType) {\n        return this._disabledUntil(requestType) > new Date(Date.now());\n    };\n    /**\n     * Sets internal _rateLimits from incoming headers. Returns true if headers contains a non-empty rate limiting header.\n     */\n    BaseTransport.prototype._handleRateLimit = function (headers) {\n        var e_1, _a, e_2, _b;\n        var now = Date.now();\n        var rlHeader = headers['x-sentry-rate-limits'];\n        var raHeader = headers['retry-after'];\n        if (rlHeader) {\n            try {\n                // rate limit headers are of the form\n                //     <header>,<header>,..\n                // where each <header> is of the form\n                //     <retry_after>: <categories>: <scope>: <reason_code>\n                // where\n                //     <retry_after> is a delay in ms\n                //     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n                //         <category>;<category>;...\n                //     <scope> is what's being limited (org, project, or key) - ignored by SDK\n                //     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n                for (var _c = tslib_1.__values(rlHeader.trim().split(',')), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var limit = _d.value;\n                    var parameters = limit.split(':', 2);\n                    var headerDelay = parseInt(parameters[0], 10);\n                    var delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n                    try {\n                        for (var _e = (e_2 = void 0, tslib_1.__values(parameters[1].split(';'))), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var category = _f.value;\n                            this._rateLimits[category || 'all'] = new Date(now + delay);\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return true;\n        }\n        else if (raHeader) {\n            this._rateLimits.all = new Date(now + utils_1.parseRetryAfterHeader(raHeader, now));\n            return true;\n        }\n        return false;\n    };\n    return BaseTransport;\n}());\nexports.BaseTransport = BaseTransport;\n//# sourceMappingURL=base.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","core_1","utils_1","utils_2","getGlobalObject","BaseTransport","options","_this","_buffer","makePromiseBuffer","_rateLimits","_outcomes","_api","initAPIDetails","dsn","_metadata","tunnel","url","getStoreEndpointWithUrlEncodedAuth","sendClientReports","document","addEventListener","visibilityState","_flushOutcomes","prototype","sendEvent","BaseTransport.prototype.sendEvent","event","_sendRequest","eventToSentryRequest","sendSession","BaseTransport.prototype.sendSession","session","sessionToSentryRequest","close","BaseTransport.prototype.close","timeout","drain","recordLostEvent","BaseTransport.prototype.recordLostEvent","reason","category","_a","key","logger","log","BaseTransport.prototype._flushOutcomes","outcomes","keys","length","JSON","stringify","getEnvelopeEndpointWithUrlEncodedAuth","discardedEvents","map","__read","split","quantity","envelope","createClientReportEnvelope","dsnToString","sendReport","serializeEnvelope","e","error","_handleResponse","BaseTransport.prototype._handleResponse","requestType","response","headers","resolve","reject","status","eventStatusFromHttpCode","_handleRateLimit","limited","isDebugBuild","warn","_disabledUntil","BaseTransport.prototype._disabledUntil","all","_isRateLimited","BaseTransport.prototype._isRateLimited","Date","now","BaseTransport.prototype._handleRateLimit","e_2","_b","rlHeader","raHeader","_c","__values","trim","_d","next","done","parameters","headerDelay","parseInt","delay","isNaN","_e","_f","e_2_1","return","call","e_1_1","e_1","parseRetryAfterHeader"]
}
