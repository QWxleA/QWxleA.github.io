{
"version":3,
"file":"goog.ui.keyboardeventdata.js",
"lineCount":109,
"mappings":"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",
"sources":["goog/ui/keyboardeventdata.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\ngoog.provide('goog.ui.KeyboardEventData');\n\ngoog.require('goog.asserts');\ngoog.require('goog.events.BrowserEvent');\n\n\n\n/**\n * Data object that contains all the necessary information from a keyboard event\n * that is required to process it in `KeyboardShortcutHandler`.\n *\n * Prefer using `goog.ui.KeyboardEventData.Builder` over using this constructor.\n * @param {number} keyCode\n * @param {string} key\n * @param {boolean} shiftKey\n * @param {boolean} altKey\n * @param {boolean} ctrlKey\n * @param {boolean} metaKey\n * @param {!Node} target\n * @param {!EventTarget} rootTarget\n * @param {function(): void} preventDefaultFn\n * @param {function(): void} stopPropagationFn\n * @constructor @struct @final\n * @package\n */\ngoog.ui.KeyboardEventData = function(\n    keyCode, key, shiftKey, altKey, ctrlKey, metaKey, target, rootTarget,\n    preventDefaultFn, stopPropagationFn) {\n  'use strict';\n  /** @private @const {number} */\n  this.keyCode_ = keyCode;\n\n  /** @private @const {string} */\n  this.key_ = key;\n\n  /** @private @const {boolean} */\n  this.shiftKey_ = shiftKey;\n\n  /** @private @const {boolean} */\n  this.altKey_ = altKey;\n\n  /** @private @const {boolean} */\n  this.ctrlKey_ = ctrlKey;\n\n  /** @private @const {boolean} */\n  this.metaKey_ = metaKey;\n\n  /** @private @const {!Node} */\n  this.target_ = target;\n\n  /**\n   * For events fired from inside `open` Shadow DOM elements, the root event\n   * target (i.e. the first `EventTarget` in the composed path). For all other\n   * events, the original target.\n   * @private @const {!EventTarget}\n   */\n  this.rootTarget_ = rootTarget;\n\n  /** @private @const {function(): void} */\n  this.preventDefaultFn_ = preventDefaultFn;\n\n  /** @private @const {function(): void} */\n  this.stopPropagationFn_ = stopPropagationFn;\n};\n\n\n/** @return {number} The keyCode of the event. */\ngoog.ui.KeyboardEventData.prototype.getKeyCode = function() {\n  'use strict';\n  return this.keyCode_;\n};\n\n\n/** @return {string} The key of the event, or `''` if not one. */\ngoog.ui.KeyboardEventData.prototype.getKey = function() {\n  'use strict';\n  return this.key_;\n};\n\n\n/** @return {boolean} If the shift key was pressed. */\ngoog.ui.KeyboardEventData.prototype.getShiftKey = function() {\n  'use strict';\n  return this.shiftKey_;\n};\n\n\n/** @return {boolean} If the alt key was pressed. */\ngoog.ui.KeyboardEventData.prototype.getAltKey = function() {\n  'use strict';\n  return this.altKey_;\n};\n\n\n/** @return {boolean} If the ctrl key was pressed. */\ngoog.ui.KeyboardEventData.prototype.getCtrlKey = function() {\n  'use strict';\n  return this.ctrlKey_;\n};\n\n\n/** @return {boolean} If the meta key was pressed. */\ngoog.ui.KeyboardEventData.prototype.getMetaKey = function() {\n  'use strict';\n  return this.metaKey_;\n};\n\n\n/** @return {!Node} The target of the event. */\ngoog.ui.KeyboardEventData.prototype.getTarget = function() {\n  'use strict';\n  return this.target_;\n};\n\n\n/** @return {!EventTarget} The rootTarget of the event. */\ngoog.ui.KeyboardEventData.prototype.getRootTarget = function() {\n  'use strict';\n  return this.rootTarget_;\n};\n\n\n/** @return {function(): void} Callback to prevent default. */\ngoog.ui.KeyboardEventData.prototype.getPreventDefaultFn = function() {\n  'use strict';\n  return this.preventDefaultFn_;\n};\n\n\n/** @return {function(): void} Callback to stop propagation. */\ngoog.ui.KeyboardEventData.prototype.getStopPropagationFn = function() {\n  'use strict';\n  return this.stopPropagationFn_;\n};\n\n\n/**\n * @param {!goog.events.BrowserEvent} event\n * @return {!goog.ui.KeyboardEventData}\n */\ngoog.ui.KeyboardEventData.fromBrowserEvent = function(event) {\n  'use strict';\n  var e = event.getBrowserEvent();\n  // Check existence to prevent classic FF reference error in strict mode.\n  var hasComposed = e && 'composed' in e;\n  var hasComposedPath = e && 'composedPath' in e;\n  // EventTarget is updated, when browser supports shadow dom and event is\n  // triggered inside `open` shadow root.\n  var path = hasComposed && hasComposedPath && e.composed && e.composedPath();\n  var rootTarget = (path && path.length > 0) ? path[0] : event.target;\n\n  return new goog.ui.KeyboardEventData.Builder()\n      .keyCode(event.keyCode || 0)\n      .key(event.key || '')\n      .shiftKey(!!event.shiftKey)\n      .altKey(!!event.altKey)\n      .ctrlKey(!!event.ctrlKey)\n      .metaKey(!!event.metaKey)\n      .target(event.target)\n      .rootTarget(rootTarget)\n      .preventDefaultFn(() => event.preventDefault())\n      .stopPropagationFn(() => event.stopPropagation())\n      .build();\n};\n\n\n\n/**\n * Builder for `KeyboardEventData`. All fields are required except `key`, which\n * defaults to `''`.\n * @constructor @struct @final\n */\ngoog.ui.KeyboardEventData.Builder = function() {\n  'use strict';\n  /** @private {?number} */\n  this.keyCode_ = null;\n\n  /** @private {string} */\n  this.key_ = '';\n\n  /** @private {?boolean} */\n  this.shiftKey_ = null;\n\n  /** @private {?boolean} */\n  this.altKey_ = null;\n\n  /** @private {?boolean} */\n  this.ctrlKey_ = null;\n\n  /** @private {?boolean} */\n  this.metaKey_ = null;\n\n  /** @private {?Node} */\n  this.target_ = null;\n\n  /** @private {?EventTarget} */\n  this.rootTarget_ = null;\n\n  /** @private {?function(): void} */\n  this.preventDefaultFn_ = null;\n\n  /** @private {?function(): void} */\n  this.stopPropagationFn_ = null;\n};\n\n\n/**\n * @param {number} keyCode\n * @return {!goog.ui.KeyboardEventData.Builder}\n */\ngoog.ui.KeyboardEventData.Builder.prototype.keyCode = function(keyCode) {\n  'use strict';\n  this.keyCode_ = keyCode;\n  return this;\n};\n\n\n/**\n * @param {string} key\n * @return {!goog.ui.KeyboardEventData.Builder}\n */\ngoog.ui.KeyboardEventData.Builder.prototype.key = function(key) {\n  'use strict';\n  this.key_ = key;\n  return this;\n};\n\n\n/**\n * @param {boolean} shiftKey\n * @return {!goog.ui.KeyboardEventData.Builder}\n */\ngoog.ui.KeyboardEventData.Builder.prototype.shiftKey = function(shiftKey) {\n  'use strict';\n  this.shiftKey_ = shiftKey;\n  return this;\n};\n\n\n/**\n * @param {boolean} altKey\n * @return {!goog.ui.KeyboardEventData.Builder}\n */\ngoog.ui.KeyboardEventData.Builder.prototype.altKey = function(altKey) {\n  'use strict';\n  this.altKey_ = altKey;\n  return this;\n};\n\n\n/**\n * @param {boolean} ctrlKey\n * @return {!goog.ui.KeyboardEventData.Builder}\n */\ngoog.ui.KeyboardEventData.Builder.prototype.ctrlKey = function(ctrlKey) {\n  'use strict';\n  this.ctrlKey_ = ctrlKey;\n  return this;\n};\n\n\n/**\n * @param {boolean} metaKey\n * @return {!goog.ui.KeyboardEventData.Builder}\n */\ngoog.ui.KeyboardEventData.Builder.prototype.metaKey = function(metaKey) {\n  'use strict';\n  this.metaKey_ = metaKey;\n  return this;\n};\n\n\n/**\n * @param {?Node} target\n * @return {!goog.ui.KeyboardEventData.Builder}\n */\ngoog.ui.KeyboardEventData.Builder.prototype.target = function(target) {\n  'use strict';\n  this.target_ = target;\n  return this;\n};\n\n\n/**\n * @param {?EventTarget} rootTarget\n * @return {!goog.ui.KeyboardEventData.Builder}\n */\ngoog.ui.KeyboardEventData.Builder.prototype.rootTarget = function(rootTarget) {\n  'use strict';\n  this.rootTarget_ = rootTarget;\n  return this;\n};\n\n\n/**\n * @param {function(): void} preventDefaultFn\n * @return {!goog.ui.KeyboardEventData.Builder}\n */\ngoog.ui.KeyboardEventData.Builder.prototype.preventDefaultFn = function(\n    preventDefaultFn) {\n  'use strict';\n  this.preventDefaultFn_ = preventDefaultFn;\n  return this;\n};\n\n\n/**\n * @param {function(): void} stopPropagationFn\n * @return {!goog.ui.KeyboardEventData.Builder}\n */\ngoog.ui.KeyboardEventData.Builder.prototype.stopPropagationFn = function(\n    stopPropagationFn) {\n  'use strict';\n  this.stopPropagationFn_ = stopPropagationFn;\n  return this;\n};\n\n\n/** @return {!goog.ui.KeyboardEventData} */\ngoog.ui.KeyboardEventData.Builder.prototype.build = function() {\n  'use strict';\n  return new goog.ui.KeyboardEventData(\n      goog.asserts.assertNumber(this.keyCode_), this.key_,\n      goog.asserts.assertBoolean(this.shiftKey_),\n      goog.asserts.assertBoolean(this.altKey_),\n      goog.asserts.assertBoolean(this.ctrlKey_),\n      goog.asserts.assertBoolean(this.metaKey_),\n      goog.asserts.assert(this.target_), goog.asserts.assert(this.rootTarget_),\n      goog.asserts.assertFunction(this.preventDefaultFn_),\n      goog.asserts.assertFunction(this.stopPropagationFn_));\n};\n"],
"names":["goog","provide","require","ui","KeyboardEventData","goog.ui.KeyboardEventData","keyCode","key","shiftKey","altKey","ctrlKey","metaKey","target","rootTarget","preventDefaultFn","stopPropagationFn","keyCode_","key_","shiftKey_","altKey_","ctrlKey_","metaKey_","target_","rootTarget_","preventDefaultFn_","stopPropagationFn_","prototype","getKeyCode","goog.ui.KeyboardEventData.prototype.getKeyCode","getKey","goog.ui.KeyboardEventData.prototype.getKey","getShiftKey","goog.ui.KeyboardEventData.prototype.getShiftKey","getAltKey","goog.ui.KeyboardEventData.prototype.getAltKey","getCtrlKey","goog.ui.KeyboardEventData.prototype.getCtrlKey","getMetaKey","goog.ui.KeyboardEventData.prototype.getMetaKey","getTarget","goog.ui.KeyboardEventData.prototype.getTarget","getRootTarget","goog.ui.KeyboardEventData.prototype.getRootTarget","getPreventDefaultFn","goog.ui.KeyboardEventData.prototype.getPreventDefaultFn","getStopPropagationFn","goog.ui.KeyboardEventData.prototype.getStopPropagationFn","fromBrowserEvent","goog.ui.KeyboardEventData.fromBrowserEvent","event","e","getBrowserEvent","hasComposed","hasComposedPath","path","composed","composedPath","length","Builder","preventDefault","stopPropagation","build","goog.ui.KeyboardEventData.Builder","goog.ui.KeyboardEventData.Builder.prototype.keyCode","goog.ui.KeyboardEventData.Builder.prototype.key","goog.ui.KeyboardEventData.Builder.prototype.shiftKey","goog.ui.KeyboardEventData.Builder.prototype.altKey","goog.ui.KeyboardEventData.Builder.prototype.ctrlKey","goog.ui.KeyboardEventData.Builder.prototype.metaKey","goog.ui.KeyboardEventData.Builder.prototype.target","goog.ui.KeyboardEventData.Builder.prototype.rootTarget","goog.ui.KeyboardEventData.Builder.prototype.preventDefaultFn","goog.ui.KeyboardEventData.Builder.prototype.stopPropagationFn","goog.ui.KeyboardEventData.Builder.prototype.build","asserts","assertNumber","assertBoolean","assert","assertFunction"]
}
