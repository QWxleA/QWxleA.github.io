{
"version":3,
"file":"module$node_modules$jsonfile$index.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/jsonfile/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jsonfile$index\"] = function(global,require,module,exports) {\nlet _fs\ntry {\n  _fs = require('graceful-fs')\n} catch (_) {\n  _fs = require('fs')\n}\nconst universalify = require('universalify')\nconst { stringify, stripBom } = require('./utils')\n\nasync function _readFile (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  let data = await universalify.fromCallback(fs.readFile)(file, options)\n\n  data = stripBom(data)\n\n  let obj\n  try {\n    obj = JSON.parse(data, options ? options.reviver : null)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n\n  return obj\n}\n\nconst readFile = universalify.fromPromise(_readFile)\n\nfunction readFileSync (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  try {\n    let content = fs.readFileSync(file, options)\n    content = stripBom(content)\n    return JSON.parse(content, options.reviver)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n}\n\nasync function _writeFile (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n\n  await universalify.fromCallback(fs.writeFile)(file, str, options)\n}\n\nconst writeFile = universalify.fromPromise(_writeFile)\n\nfunction writeFileSync (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n  // not sure if fs.writeFileSync returns anything, but just in case\n  return fs.writeFileSync(file, str, options)\n}\n\nconst jsonfile = {\n  readFile,\n  readFileSync,\n  writeFile,\n  writeFileSync\n}\n\nmodule.exports = jsonfile\n\n};"],
"names":["shadow$provide","global","require","module","exports","_fs","_","universalify","stringify","stripBom","readFile","fromPromise","_readFile","file","options","encoding","shouldThrow","throws","data","fromCallback","fs","obj","JSON","parse","reviver","err","message","writeFile","_writeFile","str","jsonfile","readFileSync","content","writeFileSync"]
}
