{"version":3,"sources":["frontend/components/right_sidebar.cljs"],"mappings":"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","names":["rum.core/lazy-build","rum.core/build-defc","frontend.components.right-sidebar/toggle","frontend.util/mobile?","frontend.ui/with-shortcut","frontend.handler.ui/toggle-right-sidebar!","frontend.ui.icon","frontend.components.right-sidebar/block-cp","rum.core/reactive","repo","idx","block","id","frontend.components.page/page","frontend.components.right-sidebar/page-cp","page-name","attrs61354","daiquiri.core/create-element","cljs.core/map?","daiquiri.interpreter/element-attributes","daiquiri.normalize.merge_with_class","daiquiri.interpreter/interpret","frontend.components.right-sidebar/contents","frontend.db-mixins/query","temp__5720__auto__","contents","G__61355","frontend.db/entity","frontend.components.page/contents-page","frontend.components.right-sidebar/block-with-breadcrumb","sidebar-key","ref?","block-id","frontend.components.block/breadcrumb","frontend.components.right-sidebar/build-sidebar-item","db-id","block-type","G__61356","cljs.core/Keyword","frontend.context.i18n.t","frontend.components.onboarding/help","frontend.components.page/page-graph","lookup","cljs.core/integer?","reitit.frontend.easy.href","e","frontend.components.right_sidebar.goog$module$goog$object.get","frontend.db.model/get-page-original-name","frontend.extensions.slide/slide","var_args","G__61358","frontend.components.right-sidebar/close","js/Error","on-close","frontend.components.right_sidebar.close","class","G__61359","cljs.core.assoc","frontend.components.svg/close","attrs61366","frontend.components.right-sidebar/sidebar-item","item","collapse?","frontend.state/sub","vec__61367","cljs.core.nth","title","component","frontend.state/sidebar-block-toggle-collapse!","frontend.ui/rotating-arrow","frontend.state/sidebar-remove-block!","frontend.components.right-sidebar/get-page","match","route-name","cljs.core.get_in","page","G__61370","frontend.date.journal_name","clojure.string/lower-case","frontend.components.right-sidebar/get-current-page","cljs.core/deref","frontend.state/state","frontend.components.right-sidebar/sidebar-resizer","el-ref","rum.core/use-ref","rum.core.use_effect_BANG_","el","and__5041__auto__","cljs.core/fn?","js/window.interact","rum.core/deref","js/interact","cljs-bean.core/->js","width","js/document.documentElement.clientWidth","offset","right-el-ratio","right-el","js/document.getElementById","frontend.handler.ui/persist-right-sidebar-width!","js/document.documentElement","rum.core/build-defcs","attrs61403","frontend.components.right-sidebar/sidebar-inner","rum.core.local","state","js/setTimeout","cljs.core/reset!","cljs.core.get","t","blocks","*anim-finished?","_e","frontend.state/sidebar-add-block!","iter__5520__auto__","s__61405","cljs.core/LazySeq","cljs.core/seq","cljs.core/chunked-seq?","c__5518__auto__","size__5519__auto__","cljs.core/count","b__61407","cljs.core/chunk-buffer","i__61406","vec__61408","cljs.core/-nth","vec__61411","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__61404","cljs.core/chunk-rest","vec__61414","cljs.core/first","vec__61417","cljs.core/cons","cljs.core/rest","medley.core.indexed","rum.core/with-key","daiquiri.util/join-classes","frontend.components.right-sidebar/sidebar","frontend.state/sub-right-sidebar-blocks","cljs.core/empty?","frontend.state/get-current-repo","sidebar-open?","frontend.context.i18n/t","cljs.core/chunk-first"],"sourcesContent":["(ns frontend.components.right-sidebar\n  (:require [cljs-bean.core :as bean]\n            [clojure.string :as string]\n            [frontend.components.block :as block]\n            [frontend.components.onboarding :as onboarding]\n            [frontend.components.page :as page]\n            [frontend.components.svg :as svg]\n            [frontend.context.i18n :refer [t]]\n            [frontend.date :as date]\n            [frontend.db :as db]\n            [frontend.db-mixins :as db-mixins]\n            [frontend.db.model :as db-model]\n            [frontend.extensions.slide :as slide]\n            [frontend.state :as state]\n            [frontend.ui :as ui]\n            [frontend.handler.ui :as ui-handler]\n            [frontend.util :as util]\n            [goog.object :as gobj]\n            [medley.core :as medley]\n            [reitit.frontend.easy :as rfe]\n            [rum.core :as rum]))\n\n(rum/defc toggle\n  []\n  (when-not (util/mobile?)\n    (ui/with-shortcut :ui/toggle-right-sidebar \"left\"\n      [:a.button.fade-link.toggle-right-sidebar\n       {:on-click ui-handler/toggle-right-sidebar!}\n       (ui/icon \"layout-sidebar-right\" {:style {:fontSize \"20px\"}})])))\n\n(rum/defc block-cp < rum/reactive\n  [repo idx block]\n  (let [id (:block/uuid block)]\n    (page/page {:parameters  {:path {:name (str id)}}\n                :sidebar?    true\n                :sidebar/idx idx\n                :repo        repo})))\n\n(rum/defc page-cp < rum/reactive\n  [repo page-name]\n  (page/page {:parameters {:path {:name page-name}}\n              :sidebar?   true\n              :repo       repo}))\n\n(rum/defc contents < rum/reactive db-mixins/query\n  []\n  [:div.contents.flex-col.flex.ml-3\n   (when-let [contents (db/entity [:block/name \"contents\"])]\n     (page/contents-page contents))])\n\n(defn- block-with-breadcrumb\n  [repo block idx sidebar-key ref?]\n  (let [block-id (:block/uuid block)]\n    [[:div.mt-1 {:class (if ref? \"ml-8\" \"ml-1\")}\n      (block/breadcrumb {:id     \"block-parent\"\n                         :block? true\n                         :sidebar-key sidebar-key} repo block-id {})]\n     [:div.ml-2\n      (block-cp repo idx block)]]))\n\n(defn build-sidebar-item\n  [repo idx db-id block-type]\n  (case block-type\n    :contents\n    [(t :right-side-bar/contents)\n     (contents)]\n\n    :help\n    [(t :right-side-bar/help) (onboarding/help)]\n\n    :page-graph\n    [(str (t :right-side-bar/page-graph))\n     (page/page-graph)]\n\n    :block-ref\n    #_:clj-kondo/ignore\n    (let [lookup (if (integer? db-id) db-id [:block/uuid db-id])]\n      (when-let [block (db/entity repo lookup)]\n       [(t :right-side-bar/block-ref)\n        (block-with-breadcrumb repo block idx [repo db-id block-type] true)]))\n\n    :block\n    #_:clj-kondo/ignore\n    (let [lookup (if (integer? db-id) db-id [:block/uuid db-id])]\n      (when-let [block (db/entity repo lookup)]\n        (block-with-breadcrumb repo block idx [repo db-id block-type] false)))\n\n    :page\n    (when-let [page-name (if (integer? db-id)\n                           (:block/name (db/entity db-id))\n                           db-id)]\n      [[:a.page-title {:href     (rfe/href :page {:name page-name})\n                       :on-click (fn [e]\n                                   (when (gobj/get e \"shiftKey\")\n                                     (.preventDefault e)))}\n        (db-model/get-page-original-name page-name)]\n       [:div.ml-2\n        (page-cp repo page-name)]])\n\n    :page-presentation\n    (let [page-name (:block/name (db/entity db-id))]\n      [[:a {:href (rfe/href :page {:name page-name})}\n        (db-model/get-page-original-name page-name)]\n       [:div.ml-2.slide.mt-2\n        (slide/slide page-name)]])\n\n    [\"\" [:span]]))\n\n(defn close\n  ([on-close]\n   (close nil on-close))\n  ([class on-close]\n   [:a.close.opacity-50.hover:opacity-100.flex.items-center\n    (cond-> {:on-click on-close\n             :style {:margin-right -4}}\n      class\n      (assoc :class class))\n    svg/close]))\n\n(rum/defc sidebar-item < rum/reactive\n  [repo idx db-id block-type]\n  (let [item (build-sidebar-item repo idx db-id block-type)]\n    (when item\n      (let [collapse? (state/sub [:ui/sidebar-collapsed-blocks db-id])]\n        [:div.sidebar-item.content.color-level.px-4.shadow-lg\n         (let [[title component] item]\n           [:div.flex.flex-col\n            [:div.flex.flex-row.justify-between\n             [:div.flex.flex-row.justify-center\n              [:a.opacity-50.hover:opacity-100.flex.items-center.pr-1\n               {:on-click #(state/sidebar-block-toggle-collapse! db-id)}\n               (ui/rotating-arrow collapse?)]\n              [:div.ml-1.font-medium\n               title]]\n             (close #(state/sidebar-remove-block! idx))]\n            [:div {:class (if collapse? \"hidden\" \"initial\")}\n             component]])]))))\n\n(defn- get-page\n  [match]\n  (let [route-name (get-in match [:data :name])\n        page (case route-name\n               :page\n               (get-in match [:path-params :name])\n\n               :file\n               (get-in match [:path-params :path])\n\n               (date/journal-name))]\n    (when page\n      (string/lower-case page))))\n\n(defn get-current-page\n  []\n  (let [match (:route-match @state/state)]\n    (get-page match)))\n\n(rum/defc sidebar-resizer\n  []\n  (let [el-ref (rum/use-ref nil)]\n    (rum/use-effect!\n     (fn []\n       (when-let [el (and (fn? js/window.interact) (rum/deref el-ref))]\n         (-> (js/interact el)\n             (.draggable\n              (bean/->js\n               {:listeners\n                {:move\n                 (fn [^js/MouseEvent e]\n                   (let [width js/document.documentElement.clientWidth\n                         offset (.-left (.-rect e))\n                         right-el-ratio (- 1 (.toFixed (/ offset width) 6))\n                         right-el-ratio (cond\n                                          (< right-el-ratio 0.2) 0.2\n                                          (> right-el-ratio 0.7) 0.7\n                                          :else right-el-ratio)\n                         right-el (js/document.getElementById \"right-sidebar\")]\n                     (when right-el\n                       (let [width (str (* right-el-ratio 100) \"%\")]\n                         (.setProperty (.-style right-el) \"width\" width)\n                         (ui-handler/persist-right-sidebar-width!)))))}}))\n             (.styleCursor false)\n             (.on \"dragstart\" #(.. js/document.documentElement -classList (add \"is-resizing-buf\")))\n             (.on \"dragend\" #(.. js/document.documentElement -classList (remove \"is-resizing-buf\")))))\n       #())\n     [])\n    [:span.resizer {:ref el-ref}]))\n\n(rum/defcs sidebar-inner <\n  (rum/local false ::anim-finished?)\n  {:will-mount (fn [state]\n                 (js/setTimeout (fn [] (reset! (get state ::anim-finished?) true)) 300)\n                 state)}\n  [state repo t blocks]\n  (let [*anim-finished? (get state ::anim-finished?)]\n    [:div.cp__right-sidebar-inner.flex.flex-col.h-full#right-sidebar-container\n\n     (sidebar-resizer)\n     [:div.cp__right-sidebar-scrollable\n      [:div.cp__right-sidebar-topbar.flex.flex-row.justify-between.items-center.pl-4.pr-2.h-12\n       [:div.cp__right-sidebar-settings.hide-scrollbar {:key \"right-sidebar-settings\"}\n        [:div.ml-4.text-sm\n         [:a.cp__right-sidebar-settings-btn {:on-click (fn [_e]\n                                                         (state/sidebar-add-block! repo \"contents\" :contents))}\n          (t :right-side-bar/contents)]]\n\n        [:div.ml-4.text-sm\n         [:a.cp__right-sidebar-settings-btn {:on-click (fn []\n                                                         (when-let [page (get-current-page)]\n                                                           (state/sidebar-add-block!\n                                                            repo\n                                                            page\n                                                            :page-graph)))}\n          (t :right-side-bar/page)]]\n\n        [:div.ml-4.text-sm\n         [:a.cp__right-sidebar-settings-btn {:on-click (fn [_e]\n                                                         (state/sidebar-add-block! repo \"help\" :help))}\n          (t :right-side-bar/help)]]]\n\n       [:div.flex.align-items {:style {:z-index 999\n                                       :margin-right 2}}\n        (toggle)]]\n\n      [:.sidebar-item-list.flex-1.scrollbar-spacing\n       (if @*anim-finished?\n         (for [[idx [repo db-id block-type]] (medley/indexed blocks)]\n           (rum/with-key\n             (sidebar-item repo idx db-id block-type)\n             (str \"sidebar-block-\" idx)))\n         [:div.p-4\n          [:span.font-medium.opacity-50 \"Loading ...\"]])]]]))\n\n(rum/defcs sidebar < rum/reactive\n  [state]\n  (let [blocks (state/sub-right-sidebar-blocks)\n        blocks (if (empty? blocks)\n                 [[(state/get-current-repo) \"contents\" :contents nil]]\n                 blocks)\n        sidebar-open? (state/sub :ui/sidebar-open?)\n        repo (state/sub :git/current-repo)]\n    [:div#right-sidebar.cp__right-sidebar.h-screen\n     {:class (if sidebar-open? \"open\" \"closed\")}\n     (when sidebar-open?\n       (sidebar-inner repo t blocks))]))\n"]}