{
"version":3,
"file":"module$node_modules$jszip$lib$stream$ConvertWorker.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,kDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAW/GC,QAASA,cAAa,CAACC,QAAD,CAAW,CAC7BC,aAAcC,CAAAA,IAAd,CAAmB,IAAnB,CAAyB,mBAAzB,CAA+CF,QAA/C,CACA,KAAKA,CAAAA,QAAL,CAAgBA,QAFa,CARjC,IAAIC,cAAgBL,OAAA,CAAQ,oDAAR,CAApB,CACIO,MAAQP,OAAA,CAAQ,qCAAR,CAWZO,MAAMC,CAAAA,QAAN,CAAeL,aAAf,CAA8BE,aAA9B,CAKAF,cAAcM,CAAAA,SAAUC,CAAAA,YAAxB,CAAuCC,QAAS,CAACC,KAAD,CAAQ,CACpD,IAAKC,CAAAA,IAAL,CAAU,CACNC,KAAOP,KAAMQ,CAAAA,WAAN,CAAkB,IAAKX,CAAAA,QAAvB,CAAiCQ,KAAME,CAAAA,IAAvC,CADD;AAENE,KAAOJ,KAAMI,CAAAA,IAFP,CAAV,CADoD,CAMxDf,OAAOC,CAAAA,OAAP,CAAiBC,aA1B8F;",
"sources":["node_modules/jszip/lib/stream/ConvertWorker.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jszip$lib$stream$ConvertWorker\"] = function(global,require,module,exports) {\n'use strict';\n\nvar GenericWorker = require('./GenericWorker');\nvar utils = require('../utils');\n\n/**\n * A worker which convert chunks to a specified type.\n * @constructor\n * @param {String} destType the destination type.\n */\nfunction ConvertWorker(destType) {\n    GenericWorker.call(this, \"ConvertWorker to \" + destType);\n    this.destType = destType;\n}\nutils.inherits(ConvertWorker, GenericWorker);\n\n/**\n * @see GenericWorker.processChunk\n */\nConvertWorker.prototype.processChunk = function (chunk) {\n    this.push({\n        data : utils.transformTo(this.destType, chunk.data),\n        meta : chunk.meta\n    });\n};\nmodule.exports = ConvertWorker;\n\n};"],
"names":["shadow$provide","global","require","module","exports","ConvertWorker","destType","GenericWorker","call","utils","inherits","prototype","processChunk","ConvertWorker.prototype.processChunk","chunk","push","data","transformTo","meta"]
}
