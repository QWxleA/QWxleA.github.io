{
"version":3,
"file":"module$node_modules$codemirror$mode$mllike$mllike.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/codemirror/mode/mllike/mllike.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$mllike$mllike\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('mllike', function(_config, parserConfig) {\n  var words = {\n    'as': 'keyword',\n    'do': 'keyword',\n    'else': 'keyword',\n    'end': 'keyword',\n    'exception': 'keyword',\n    'fun': 'keyword',\n    'functor': 'keyword',\n    'if': 'keyword',\n    'in': 'keyword',\n    'include': 'keyword',\n    'let': 'keyword',\n    'of': 'keyword',\n    'open': 'keyword',\n    'rec': 'keyword',\n    'struct': 'keyword',\n    'then': 'keyword',\n    'type': 'keyword',\n    'val': 'keyword',\n    'while': 'keyword',\n    'with': 'keyword'\n  };\n\n  var extraWords = parserConfig.extraWords || {};\n  for (var prop in extraWords) {\n    if (extraWords.hasOwnProperty(prop)) {\n      words[prop] = parserConfig.extraWords[prop];\n    }\n  }\n  var hintWords = [];\n  for (var k in words) { hintWords.push(k); }\n  CodeMirror.registerHelper(\"hintWords\", \"mllike\", hintWords);\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n\n    if (ch === '\"') {\n      state.tokenize = tokenString;\n      return state.tokenize(stream, state);\n    }\n    if (ch === '{') {\n      if (stream.eat('|')) {\n        state.longString = true;\n        state.tokenize = tokenLongString;\n        return state.tokenize(stream, state);\n      }\n    }\n    if (ch === '(') {\n      if (stream.eat('*')) {\n        state.commentLevel++;\n        state.tokenize = tokenComment;\n        return state.tokenize(stream, state);\n      }\n    }\n    if (ch === '~' || ch === '?') {\n      stream.eatWhile(/\\w/);\n      return 'variable-2';\n    }\n    if (ch === '`') {\n      stream.eatWhile(/\\w/);\n      return 'quote';\n    }\n    if (ch === '/' && parserConfig.slashComments && stream.eat('/')) {\n      stream.skipToEnd();\n      return 'comment';\n    }\n    if (/\\d/.test(ch)) {\n      if (ch === '0' && stream.eat(/[bB]/)) {\n        stream.eatWhile(/[01]/);\n      } if (ch === '0' && stream.eat(/[xX]/)) {\n        stream.eatWhile(/[0-9a-fA-F]/)\n      } if (ch === '0' && stream.eat(/[oO]/)) {\n        stream.eatWhile(/[0-7]/);\n      } else {\n        stream.eatWhile(/[\\d_]/);\n        if (stream.eat('.')) {\n          stream.eatWhile(/[\\d]/);\n        }\n        if (stream.eat(/[eE]/)) {\n          stream.eatWhile(/[\\d\\-+]/);\n        }\n      }\n      return 'number';\n    }\n    if ( /[+\\-*&%=<>!?|@\\.~:]/.test(ch)) {\n      return 'operator';\n    }\n    if (/[\\w\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      var cur = stream.current();\n      return words.hasOwnProperty(cur) ? words[cur] : 'variable';\n    }\n    return null\n  }\n\n  function tokenString(stream, state) {\n    var next, end = false, escaped = false;\n    while ((next = stream.next()) != null) {\n      if (next === '\"' && !escaped) {\n        end = true;\n        break;\n      }\n      escaped = !escaped && next === '\\\\';\n    }\n    if (end && !escaped) {\n      state.tokenize = tokenBase;\n    }\n    return 'string';\n  };\n\n  function tokenComment(stream, state) {\n    var prev, next;\n    while(state.commentLevel > 0 && (next = stream.next()) != null) {\n      if (prev === '(' && next === '*') state.commentLevel++;\n      if (prev === '*' && next === ')') state.commentLevel--;\n      prev = next;\n    }\n    if (state.commentLevel <= 0) {\n      state.tokenize = tokenBase;\n    }\n    return 'comment';\n  }\n\n  function tokenLongString(stream, state) {\n    var prev, next;\n    while (state.longString && (next = stream.next()) != null) {\n      if (prev === '|' && next === '}') state.longString = false;\n      prev = next;\n    }\n    if (!state.longString) {\n      state.tokenize = tokenBase;\n    }\n    return 'string';\n  }\n\n  return {\n    startState: function() {return {tokenize: tokenBase, commentLevel: 0, longString: false};},\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      return state.tokenize(stream, state);\n    },\n\n    blockCommentStart: \"(*\",\n    blockCommentEnd: \"*)\",\n    lineComment: parserConfig.slashComments ? \"//\" : null\n  };\n});\n\nCodeMirror.defineMIME('text/x-ocaml', {\n  name: 'mllike',\n  extraWords: {\n    'and': 'keyword',\n    'assert': 'keyword',\n    'begin': 'keyword',\n    'class': 'keyword',\n    'constraint': 'keyword',\n    'done': 'keyword',\n    'downto': 'keyword',\n    'external': 'keyword',\n    'function': 'keyword',\n    'initializer': 'keyword',\n    'lazy': 'keyword',\n    'match': 'keyword',\n    'method': 'keyword',\n    'module': 'keyword',\n    'mutable': 'keyword',\n    'new': 'keyword',\n    'nonrec': 'keyword',\n    'object': 'keyword',\n    'private': 'keyword',\n    'sig': 'keyword',\n    'to': 'keyword',\n    'try': 'keyword',\n    'value': 'keyword',\n    'virtual': 'keyword',\n    'when': 'keyword',\n\n    // builtins\n    'raise': 'builtin',\n    'failwith': 'builtin',\n    'true': 'builtin',\n    'false': 'builtin',\n\n    // Pervasives builtins\n    'asr': 'builtin',\n    'land': 'builtin',\n    'lor': 'builtin',\n    'lsl': 'builtin',\n    'lsr': 'builtin',\n    'lxor': 'builtin',\n    'mod': 'builtin',\n    'or': 'builtin',\n\n    // More Pervasives\n    'raise_notrace': 'builtin',\n    'trace': 'builtin',\n    'exit': 'builtin',\n    'print_string': 'builtin',\n    'print_endline': 'builtin',\n\n     'int': 'type',\n     'float': 'type',\n     'bool': 'type',\n     'char': 'type',\n     'string': 'type',\n     'unit': 'type',\n\n     // Modules\n     'List': 'builtin'\n  }\n});\n\nCodeMirror.defineMIME('text/x-fsharp', {\n  name: 'mllike',\n  extraWords: {\n    'abstract': 'keyword',\n    'assert': 'keyword',\n    'base': 'keyword',\n    'begin': 'keyword',\n    'class': 'keyword',\n    'default': 'keyword',\n    'delegate': 'keyword',\n    'do!': 'keyword',\n    'done': 'keyword',\n    'downcast': 'keyword',\n    'downto': 'keyword',\n    'elif': 'keyword',\n    'extern': 'keyword',\n    'finally': 'keyword',\n    'for': 'keyword',\n    'function': 'keyword',\n    'global': 'keyword',\n    'inherit': 'keyword',\n    'inline': 'keyword',\n    'interface': 'keyword',\n    'internal': 'keyword',\n    'lazy': 'keyword',\n    'let!': 'keyword',\n    'match': 'keyword',\n    'member': 'keyword',\n    'module': 'keyword',\n    'mutable': 'keyword',\n    'namespace': 'keyword',\n    'new': 'keyword',\n    'null': 'keyword',\n    'override': 'keyword',\n    'private': 'keyword',\n    'public': 'keyword',\n    'return!': 'keyword',\n    'return': 'keyword',\n    'select': 'keyword',\n    'static': 'keyword',\n    'to': 'keyword',\n    'try': 'keyword',\n    'upcast': 'keyword',\n    'use!': 'keyword',\n    'use': 'keyword',\n    'void': 'keyword',\n    'when': 'keyword',\n    'yield!': 'keyword',\n    'yield': 'keyword',\n\n    // Reserved words\n    'atomic': 'keyword',\n    'break': 'keyword',\n    'checked': 'keyword',\n    'component': 'keyword',\n    'const': 'keyword',\n    'constraint': 'keyword',\n    'constructor': 'keyword',\n    'continue': 'keyword',\n    'eager': 'keyword',\n    'event': 'keyword',\n    'external': 'keyword',\n    'fixed': 'keyword',\n    'method': 'keyword',\n    'mixin': 'keyword',\n    'object': 'keyword',\n    'parallel': 'keyword',\n    'process': 'keyword',\n    'protected': 'keyword',\n    'pure': 'keyword',\n    'sealed': 'keyword',\n    'tailcall': 'keyword',\n    'trait': 'keyword',\n    'virtual': 'keyword',\n    'volatile': 'keyword',\n\n    // builtins\n    'List': 'builtin',\n    'Seq': 'builtin',\n    'Map': 'builtin',\n    'Set': 'builtin',\n    'Option': 'builtin',\n    'int': 'builtin',\n    'string': 'builtin',\n    'not': 'builtin',\n    'true': 'builtin',\n    'false': 'builtin',\n\n    'raise': 'builtin',\n    'failwith': 'builtin'\n  },\n  slashComments: true\n});\n\n\nCodeMirror.defineMIME('text/x-sml', {\n  name: 'mllike',\n  extraWords: {\n    'abstype': 'keyword',\n    'and': 'keyword',\n    'andalso': 'keyword',\n    'case': 'keyword',\n    'datatype': 'keyword',\n    'fn': 'keyword',\n    'handle': 'keyword',\n    'infix': 'keyword',\n    'infixr': 'keyword',\n    'local': 'keyword',\n    'nonfix': 'keyword',\n    'op': 'keyword',\n    'orelse': 'keyword',\n    'raise': 'keyword',\n    'withtype': 'keyword',\n    'eqtype': 'keyword',\n    'sharing': 'keyword',\n    'sig': 'keyword',\n    'signature': 'keyword',\n    'structure': 'keyword',\n    'where': 'keyword',\n    'true': 'keyword',\n    'false': 'keyword',\n\n    // types\n    'int': 'builtin',\n    'real': 'builtin',\n    'string': 'builtin',\n    'char': 'builtin',\n    'bool': 'builtin'\n  },\n  slashComments: true\n});\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","_config","parserConfig","tokenBase","stream","state","ch","next","tokenize","tokenString","eat","longString","tokenLongString","commentLevel","tokenComment","eatWhile","slashComments","skipToEnd","test","cur","current","words","hasOwnProperty","end","escaped","prev","extraWords","prop","hintWords","k","push","registerHelper","startState","token","eatSpace","blockCommentStart","blockCommentEnd","lineComment","defineMIME","name"]
}
