{
"version":3,
"file":"module$node_modules$$capacitor$keyboard$dist$plugin_cjs.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEIC,OAAAA,CAAON,OAAA,CAAQ,oDAAR,CAGXE,QAAQK,CAAAA,aAAR,CAAwB,IAAK,EAC5B,UAAS,CAACA,aAAD,CAAgB,CAMtBA,aAAA,CAAA,IAAA,CAAwB,MAMxBA,cAAA,CAAA,KAAA,CAAyB,OASzBA,cAAA,CAAA,OAAA,CAA2B,SArBL,CAAzB,CAAD,CAsBGL,OAAQK,CAAAA,aAtBX,GAsB6BL,OAAQK,CAAAA,aAtBrC,CAsBqD,EAtBrD,EAuBAL,QAAQM,CAAAA,cAAR,CAAyB,IAAK,EAC7B,UAAS,CAACA,cAAD,CAAiB,CAOvBA,cAAA,CAAA,IAAA;AAAyB,MAOzBA,eAAA,CAAA,KAAA,CAA0B,OAO1BA,eAAA,CAAA,MAAA,CAA2B,QAM3BA,eAAA,CAAA,IAAA,CAAyB,MA3BF,CAA1B,CAAD,CA4BGN,OAAQM,CAAAA,cA5BX,GA4B8BN,OAAQM,CAAAA,cA5BtC,CA4BuD,EA5BvD,EA8BMC,OAAAA,CAAWH,MAAKI,CAAAA,cAAL,CAAoB,UAApB,CAEjBR,QAAQO,CAAAA,QAAR,CAAmBA,MAjEiG;",
"sources":["node_modules/@capacitor/keyboard/dist/plugin.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$capacitor$keyboard$dist$plugin_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar core = require('@capacitor/core');\n\n/// <reference types=\"@capacitor/cli\" />\nexports.KeyboardStyle = void 0;\n(function (KeyboardStyle) {\n    /**\n     * Dark keyboard.\n     *\n     * @since 1.0.0\n     */\n    KeyboardStyle[\"Dark\"] = \"DARK\";\n    /**\n     * Light keyboard.\n     *\n     * @since 1.0.0\n     */\n    KeyboardStyle[\"Light\"] = \"LIGHT\";\n    /**\n     * On iOS 13 and newer the keyboard style is based on the device appearance.\n     * If the device is using Dark mode, the keyboard will be dark.\n     * If the device is using Light mode, the keyboard will be light.\n     * On iOS 12 the keyboard will be light.\n     *\n     * @since 1.0.0\n     */\n    KeyboardStyle[\"Default\"] = \"DEFAULT\";\n})(exports.KeyboardStyle || (exports.KeyboardStyle = {}));\nexports.KeyboardResize = void 0;\n(function (KeyboardResize) {\n    /**\n     * Only the `body` HTML element will be resized.\n     * Relative units are not affected, because the viewport does not change.\n     *\n     * @since 1.0.0\n     */\n    KeyboardResize[\"Body\"] = \"body\";\n    /**\n     * Only the `ion-app` HTML element will be resized.\n     * Use it only for Ionic Framework apps.\n     *\n     * @since 1.0.0\n     */\n    KeyboardResize[\"Ionic\"] = \"ionic\";\n    /**\n     * The whole native Web View will be resized when the keyboard shows/hides.\n     * This affects the `vh` relative unit.\n     *\n     * @since 1.0.0\n     */\n    KeyboardResize[\"Native\"] = \"native\";\n    /**\n     * Neither the app nor the Web View are resized.\n     *\n     * @since 1.0.0\n     */\n    KeyboardResize[\"None\"] = \"none\";\n})(exports.KeyboardResize || (exports.KeyboardResize = {}));\n\nconst Keyboard = core.registerPlugin('Keyboard');\n\nexports.Keyboard = Keyboard;\n//# sourceMappingURL=plugin.cjs.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","core","KeyboardStyle","KeyboardResize","Keyboard","registerPlugin"]
}
