{"version":3,"sources":["frontend/modules/outliner/transaction.cljc"],"mappings":"","names":[],"sourcesContent":["(ns frontend.modules.outliner.transaction\n  #?(:cljs (:require-macros [frontend.modules.outliner.transaction])))\n\n(defmacro transact!\n  \"Batch all the transactions in `body` to a single transaction, Support nested transact! calls.\n  Currently there are no options, it'll execute body and collect all transaction data generated by body.\n  `Args`:\n    `opts`: Every key is optional, opts except `additional-tx` will be transacted as `tx-meta`.\n            {:graph \\\"Which graph will be transacted to\\\"\n             :outliner-op \\\"For example, :save-block, :insert-blocks, etc. \\\"\n             :additional-tx \\\"Additional tx data that can be bundled together\n                              with the body in this macro.\\\"}\n  `Example`:\n  (transact! {:graph \\\"test\\\"}\n    (insert-blocks! ...)\n    ;; do something\n    (move-blocks! ...)\n    (delete-blocks! ...))\"\n  [opts & body]\n  (assert (map? opts))\n  `(let [transact-data# frontend.modules.outliner.core/*transaction-data*\n         opts# (if transact-data#\n                 (assoc ~opts :nested-transaction? true)\n                 ~opts)]\n     (if transact-data#\n       (do ~@body)\n       (binding [frontend.modules.outliner.core/*transaction-data* (transient [])]\n         ~@body\n         (let [r# (persistent! frontend.modules.outliner.core/*transaction-data*)\n               tx# (mapcat :tx-data r#)\n               ;; FIXME: should we merge all the tx-meta?\n               tx-meta# (first (map :tx-meta r#))\n               all-tx# (concat tx# (:additional-tx opts#))\n               opts## (merge (dissoc opts# :additional-tx) tx-meta#)]\n           (when (seq all-tx#)\n             (when-not (:nested-transaction? opts#) ; transact only for the whole transaction\n               (let [result# (frontend.modules.outliner.datascript/transact! all-tx# opts##)]\n                 {:tx-report result#\n                  :tx-data all-tx#\n                  :tx-meta tx-meta#}))))))))\n"]}