{
"version":3,
"file":"module$node_modules$$pixi$display$dist$cjs$display.js",
"lineCount":58,
"mappings":"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",
"sources":["node_modules/@pixi/display/dist/cjs/display.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$display$dist$cjs$display\"] = function(global,require,module,exports) {\n/*!\n * @pixi/display - v6.2.0\n * Compiled Mon, 01 Nov 2021 16:52:10 UTC\n *\n * @pixi/display is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar settings = require('@pixi/settings');\nvar math = require('@pixi/math');\nvar utils = require('@pixi/utils');\n\n/**\n * Sets the default value for the container property 'sortableChildren'.\n * If set to true, the container will sort its children by zIndex value\n * when updateTransform() is called, or manually if sortChildren() is called.\n *\n * This actually changes the order of elements in the array, so should be treated\n * as a basic solution that is not performant compared to other solutions,\n * such as @link https://github.com/pixijs/pixi-display\n *\n * Also be aware of that this may not work nicely with the addChildAt() function,\n * as the zIndex sorting may cause the child to automatically sorted to another position.\n *\n * @static\n * @constant\n * @name SORTABLE_CHILDREN\n * @memberof PIXI.settings\n * @type {boolean}\n * @default false\n */\nsettings.settings.SORTABLE_CHILDREN = false;\n\n/**\n * 'Builder' pattern for bounds rectangles.\n *\n * This could be called an Axis-Aligned Bounding Box.\n * It is not an actual shape. It is a mutable thing; no 'EMPTY' or those kind of problems.\n *\n * @class\n * @memberof PIXI\n */\nvar Bounds = /** @class */ (function () {\n    function Bounds() {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.minX = Infinity;\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.minY = Infinity;\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.maxX = -Infinity;\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.maxY = -Infinity;\n        this.rect = null;\n        /**\n         * It is updated to _boundsID of corresponding object to keep bounds in sync with content.\n         * Updated from outside, thus public modifier.\n         *\n         * @member {number}\n         * @public\n         */\n        this.updateID = -1;\n    }\n    /**\n     * Checks if bounds are empty.\n     *\n     * @return {boolean} True if empty.\n     */\n    Bounds.prototype.isEmpty = function () {\n        return this.minX > this.maxX || this.minY > this.maxY;\n    };\n    /**\n     * Clears the bounds and resets.\n     *\n     */\n    Bounds.prototype.clear = function () {\n        this.minX = Infinity;\n        this.minY = Infinity;\n        this.maxX = -Infinity;\n        this.maxY = -Infinity;\n    };\n    /**\n     * Can return Rectangle.EMPTY constant, either construct new rectangle, either use your rectangle\n     * It is not guaranteed that it will return tempRect\n     *\n     * @param {PIXI.Rectangle} rect - temporary object will be used if AABB is not empty\n     * @returns {PIXI.Rectangle} A rectangle of the bounds\n     */\n    Bounds.prototype.getRectangle = function (rect) {\n        if (this.minX > this.maxX || this.minY > this.maxY) {\n            return math.Rectangle.EMPTY;\n        }\n        rect = rect || new math.Rectangle(0, 0, 1, 1);\n        rect.x = this.minX;\n        rect.y = this.minY;\n        rect.width = this.maxX - this.minX;\n        rect.height = this.maxY - this.minY;\n        return rect;\n    };\n    /**\n     * This function should be inlined when its possible.\n     *\n     * @param {PIXI.IPointData} point - The point to add.\n     */\n    Bounds.prototype.addPoint = function (point) {\n        this.minX = Math.min(this.minX, point.x);\n        this.maxX = Math.max(this.maxX, point.x);\n        this.minY = Math.min(this.minY, point.y);\n        this.maxY = Math.max(this.maxY, point.y);\n    };\n    /**\n     * Adds a point, after transformed. This should be inlined when its possible.\n     *\n     * @param matrix\n     * @param point\n     */\n    Bounds.prototype.addPointMatrix = function (matrix, point) {\n        var a = matrix.a, b = matrix.b, c = matrix.c, d = matrix.d, tx = matrix.tx, ty = matrix.ty;\n        var x = (a * point.x) + (c * point.y) + tx;\n        var y = (b * point.x) + (d * point.y) + ty;\n        this.minX = Math.min(this.minX, x);\n        this.maxX = Math.max(this.maxX, x);\n        this.minY = Math.min(this.minY, y);\n        this.maxY = Math.max(this.maxY, y);\n    };\n    /**\n     * Adds a quad, not transformed\n     *\n     * @param {Float32Array} vertices - The verts to add.\n     */\n    Bounds.prototype.addQuad = function (vertices) {\n        var minX = this.minX;\n        var minY = this.minY;\n        var maxX = this.maxX;\n        var maxY = this.maxY;\n        var x = vertices[0];\n        var y = vertices[1];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n        x = vertices[2];\n        y = vertices[3];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n        x = vertices[4];\n        y = vertices[5];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n        x = vertices[6];\n        y = vertices[7];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    };\n    /**\n     * Adds sprite frame, transformed.\n     *\n     * @param {PIXI.Transform} transform - transform to apply\n     * @param {number} x0 - left X of frame\n     * @param {number} y0 - top Y of frame\n     * @param {number} x1 - right X of frame\n     * @param {number} y1 - bottom Y of frame\n     */\n    Bounds.prototype.addFrame = function (transform, x0, y0, x1, y1) {\n        this.addFrameMatrix(transform.worldTransform, x0, y0, x1, y1);\n    };\n    /**\n     * Adds sprite frame, multiplied by matrix\n     *\n     * @param {PIXI.Matrix} matrix - matrix to apply\n     * @param {number} x0 - left X of frame\n     * @param {number} y0 - top Y of frame\n     * @param {number} x1 - right X of frame\n     * @param {number} y1 - bottom Y of frame\n     */\n    Bounds.prototype.addFrameMatrix = function (matrix, x0, y0, x1, y1) {\n        var a = matrix.a;\n        var b = matrix.b;\n        var c = matrix.c;\n        var d = matrix.d;\n        var tx = matrix.tx;\n        var ty = matrix.ty;\n        var minX = this.minX;\n        var minY = this.minY;\n        var maxX = this.maxX;\n        var maxY = this.maxY;\n        var x = (a * x0) + (c * y0) + tx;\n        var y = (b * x0) + (d * y0) + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n        x = (a * x1) + (c * y0) + tx;\n        y = (b * x1) + (d * y0) + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n        x = (a * x0) + (c * y1) + tx;\n        y = (b * x0) + (d * y1) + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n        x = (a * x1) + (c * y1) + tx;\n        y = (b * x1) + (d * y1) + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    };\n    /**\n     * Adds screen vertices from array\n     *\n     * @param {Float32Array} vertexData - calculated vertices\n     * @param {number} beginOffset - begin offset\n     * @param {number} endOffset - end offset, excluded\n     */\n    Bounds.prototype.addVertexData = function (vertexData, beginOffset, endOffset) {\n        var minX = this.minX;\n        var minY = this.minY;\n        var maxX = this.maxX;\n        var maxY = this.maxY;\n        for (var i = beginOffset; i < endOffset; i += 2) {\n            var x = vertexData[i];\n            var y = vertexData[i + 1];\n            minX = x < minX ? x : minX;\n            minY = y < minY ? y : minY;\n            maxX = x > maxX ? x : maxX;\n            maxY = y > maxY ? y : maxY;\n        }\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    };\n    /**\n     * Add an array of mesh vertices\n     *\n     * @param {PIXI.Transform} transform - mesh transform\n     * @param {Float32Array} vertices - mesh coordinates in array\n     * @param {number} beginOffset - begin offset\n     * @param {number} endOffset - end offset, excluded\n     */\n    Bounds.prototype.addVertices = function (transform, vertices, beginOffset, endOffset) {\n        this.addVerticesMatrix(transform.worldTransform, vertices, beginOffset, endOffset);\n    };\n    /**\n     * Add an array of mesh vertices.\n     *\n     * @param {PIXI.Matrix} matrix - mesh matrix\n     * @param {Float32Array} vertices - mesh coordinates in array\n     * @param {number} beginOffset - begin offset\n     * @param {number} endOffset - end offset, excluded\n     * @param {number} [padX=0] - x padding\n     * @param {number} [padY=0] - y padding\n     */\n    Bounds.prototype.addVerticesMatrix = function (matrix, vertices, beginOffset, endOffset, padX, padY) {\n        if (padX === void 0) { padX = 0; }\n        if (padY === void 0) { padY = padX; }\n        var a = matrix.a;\n        var b = matrix.b;\n        var c = matrix.c;\n        var d = matrix.d;\n        var tx = matrix.tx;\n        var ty = matrix.ty;\n        var minX = this.minX;\n        var minY = this.minY;\n        var maxX = this.maxX;\n        var maxY = this.maxY;\n        for (var i = beginOffset; i < endOffset; i += 2) {\n            var rawX = vertices[i];\n            var rawY = vertices[i + 1];\n            var x = (a * rawX) + (c * rawY) + tx;\n            var y = (d * rawY) + (b * rawX) + ty;\n            minX = Math.min(minX, x - padX);\n            maxX = Math.max(maxX, x + padX);\n            minY = Math.min(minY, y - padY);\n            maxY = Math.max(maxY, y + padY);\n        }\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    };\n    /**\n     * Adds other Bounds.\n     *\n     * @param {PIXI.Bounds} bounds - The Bounds to be added\n     */\n    Bounds.prototype.addBounds = function (bounds) {\n        var minX = this.minX;\n        var minY = this.minY;\n        var maxX = this.maxX;\n        var maxY = this.maxY;\n        this.minX = bounds.minX < minX ? bounds.minX : minX;\n        this.minY = bounds.minY < minY ? bounds.minY : minY;\n        this.maxX = bounds.maxX > maxX ? bounds.maxX : maxX;\n        this.maxY = bounds.maxY > maxY ? bounds.maxY : maxY;\n    };\n    /**\n     * Adds other Bounds, masked with Bounds.\n     *\n     * @param {PIXI.Bounds} bounds - The Bounds to be added.\n     * @param {PIXI.Bounds} mask - TODO\n     */\n    Bounds.prototype.addBoundsMask = function (bounds, mask) {\n        var _minX = bounds.minX > mask.minX ? bounds.minX : mask.minX;\n        var _minY = bounds.minY > mask.minY ? bounds.minY : mask.minY;\n        var _maxX = bounds.maxX < mask.maxX ? bounds.maxX : mask.maxX;\n        var _maxY = bounds.maxY < mask.maxY ? bounds.maxY : mask.maxY;\n        if (_minX <= _maxX && _minY <= _maxY) {\n            var minX = this.minX;\n            var minY = this.minY;\n            var maxX = this.maxX;\n            var maxY = this.maxY;\n            this.minX = _minX < minX ? _minX : minX;\n            this.minY = _minY < minY ? _minY : minY;\n            this.maxX = _maxX > maxX ? _maxX : maxX;\n            this.maxY = _maxY > maxY ? _maxY : maxY;\n        }\n    };\n    /**\n     * Adds other Bounds, multiplied by matrix. Bounds shouldn't be empty.\n     *\n     * @param {PIXI.Bounds} bounds - other bounds\n     * @param {PIXI.Matrix} matrix - multiplicator\n     */\n    Bounds.prototype.addBoundsMatrix = function (bounds, matrix) {\n        this.addFrameMatrix(matrix, bounds.minX, bounds.minY, bounds.maxX, bounds.maxY);\n    };\n    /**\n     * Adds other Bounds, masked with Rectangle.\n     *\n     * @param {PIXI.Bounds} bounds - TODO\n     * @param {PIXI.Rectangle} area - TODO\n     */\n    Bounds.prototype.addBoundsArea = function (bounds, area) {\n        var _minX = bounds.minX > area.x ? bounds.minX : area.x;\n        var _minY = bounds.minY > area.y ? bounds.minY : area.y;\n        var _maxX = bounds.maxX < area.x + area.width ? bounds.maxX : (area.x + area.width);\n        var _maxY = bounds.maxY < area.y + area.height ? bounds.maxY : (area.y + area.height);\n        if (_minX <= _maxX && _minY <= _maxY) {\n            var minX = this.minX;\n            var minY = this.minY;\n            var maxX = this.maxX;\n            var maxY = this.maxY;\n            this.minX = _minX < minX ? _minX : minX;\n            this.minY = _minY < minY ? _minY : minY;\n            this.maxX = _maxX > maxX ? _maxX : maxX;\n            this.maxY = _maxY > maxY ? _maxY : maxY;\n        }\n    };\n    /**\n     * Pads bounds object, making it grow in all directions.\n     * If paddingY is omitted, both paddingX and paddingY will be set to paddingX.\n     *\n     * @param {number} [paddingX=0] - The horizontal padding amount.\n     * @param {number} [paddingY=0] - The vertical padding amount.\n     */\n    Bounds.prototype.pad = function (paddingX, paddingY) {\n        if (paddingX === void 0) { paddingX = 0; }\n        if (paddingY === void 0) { paddingY = paddingX; }\n        if (!this.isEmpty()) {\n            this.minX -= paddingX;\n            this.maxX += paddingX;\n            this.minY -= paddingY;\n            this.maxY += paddingY;\n        }\n    };\n    /**\n     * Adds padded frame. (x0, y0) should be strictly less than (x1, y1)\n     *\n     * @param {number} x0 - left X of frame\n     * @param {number} y0 - top Y of frame\n     * @param {number} x1 - right X of frame\n     * @param {number} y1 - bottom Y of frame\n     * @param {number} padX - padding X\n     * @param {number} padY - padding Y\n     */\n    Bounds.prototype.addFramePad = function (x0, y0, x1, y1, padX, padY) {\n        x0 -= padX;\n        y0 -= padY;\n        x1 += padX;\n        y1 += padY;\n        this.minX = this.minX < x0 ? this.minX : x0;\n        this.maxX = this.maxX > x1 ? this.maxX : x1;\n        this.minY = this.minY < y0 ? this.minY : y0;\n        this.maxY = this.maxY > y1 ? this.maxY : y1;\n    };\n    return Bounds;\n}());\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) { if (b.hasOwnProperty(p)) { d[p] = b[p]; } } };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\n/**\n * The base class for all objects that are rendered on the screen.\n *\n * This is an abstract class and can not be used on its own; rather it should be extended.\n *\n * ## Display objects implemented in PixiJS\n *\n * | Display Object                  | Description                                                           |\n * | ------------------------------- | --------------------------------------------------------------------- |\n * | {@link PIXI.Container}          | Adds support for `children` to DisplayObject                          |\n * | {@link PIXI.Graphics}           | Shape-drawing display object similar to the Canvas API                |\n * | {@link PIXI.Sprite}             | Draws textures (i.e. images)                                          |\n * | {@link PIXI.Text}               | Draws text using the Canvas API internally                            |\n * | {@link PIXI.BitmapText}         | More scaleable solution for text rendering, reusing glyph textures    |\n * | {@link PIXI.TilingSprite}       | Draws textures/images in a tiled fashion                              |\n * | {@link PIXI.AnimatedSprite}     | Draws an animation of multiple images                                 |\n * | {@link PIXI.Mesh}               | Provides a lower-level API for drawing meshes with custom data        |\n * | {@link PIXI.NineSlicePlane}     | Mesh-related                                                          |\n * | {@link PIXI.SimpleMesh}         | v4-compatible mesh                                                    |\n * | {@link PIXI.SimplePlane}        | Mesh-related                                                          |\n * | {@link PIXI.SimpleRope}         | Mesh-related                                                          |\n *\n * ## Transforms\n *\n * The [transform]{@link DisplayObject#transform} of a display object describes the projection from its\n * local coordinate space to its parent's local coordinate space. The following properties are derived\n * from the transform:\n *\n * <table>\n *   <thead>\n *     <tr>\n *       <th>Property</th>\n *       <th>Description</th>\n *     </tr>\n *   </thead>\n *   <tbody>\n *     <tr>\n *       <td>[pivot]{@link PIXI.DisplayObject#pivot}</td>\n *       <td>\n *         Invariant under rotation, scaling, and skewing. The projection of into the parent's space of the pivot\n *         is equal to position, regardless of the other three transformations. In other words, It is the center of\n *         rotation, scaling, and skewing.\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[position]{@link PIXI.DisplayObject#position}</td>\n *       <td>\n *         Translation. This is the position of the [pivot]{@link PIXI.DisplayObject#pivot} in the parent's local\n *         space. The default value of the pivot is the origin (0,0). If the top-left corner of your display object\n *         is (0,0) in its local space, then the position will be its top-left corner in the parent's local space.\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[scale]{@link PIXI.DisplayObject#scale}</td>\n *       <td>\n *         Scaling. This will stretch (or compress) the display object's projection. The scale factors are along the\n *         local coordinate axes. In other words, the display object is scaled before rotated or skewed. The center\n *         of scaling is the [pivot]{@link PIXI.DisplayObject#pivot}.\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[rotation]{@link PIXI.DisplayObject#rotation}</td>\n *       <td>\n *          Rotation. This will rotate the display object's projection by this angle (in radians).\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[skew]{@link PIXI.DisplayObject#skew}</td>\n *       <td>\n *         <p>Skewing. This can be used to deform a rectangular display object into a parallelogram.</p>\n *         <p>\n *         In PixiJS, skew has a slightly different behaviour than the conventional meaning. It can be\n *         thought of the net rotation applied to the coordinate axes (separately). For example, if \"skew.x\" is\n *         \u237a and \"skew.y\" is \u03b2, then the line x = 0 will be rotated by \u237a (y = -x*cot\u237a) and the line y = 0 will be\n *         rotated by \u03b2 (y = x*tan\u03b2). A line y = x*tan\u03f4 (i.e. a line at angle \u03f4 to the x-axis in local-space) will\n *         be rotated by an angle between \u237a and \u03b2.\n *         </p>\n *         <p>\n *         It can be observed that if skew is applied equally to both axes, then it will be equivalent to applying\n *         a rotation. Indeed, if \"skew.x\" = -\u03f4 and \"skew.y\" = \u03f4, it will produce an equivalent of \"rotation\" = \u03f4.\n *         </p>\n *         <p>\n *         Another quite interesting observation is that \"skew.x\", \"skew.y\", rotation are communtative operations. Indeed,\n *         because rotation is essentially a careful combination of the two.\n *         </p>\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>angle</td>\n *       <td>Rotation. This is an alias for [rotation]{@link PIXI.DisplayObject#rotation}, but in degrees.</td>\n *     </tr>\n *     <tr>\n *       <td>x</td>\n *       <td>Translation. This is an alias for position.x!</td>\n *     </tr>\n *     <tr>\n *       <td>y</td>\n *       <td>Translation. This is an alias for position.y!</td>\n *     </tr>\n *     <tr>\n *       <td>width</td>\n *       <td>\n *         Implemented in [Container]{@link PIXI.Container}. Scaling. The width property calculates scale.x by dividing\n *         the \"requested\" width by the local bounding box width. It is indirectly an abstraction over scale.x, and there\n *         is no concept of user-defined width.\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>height</td>\n *       <td>\n *         Implemented in [Container]{@link PIXI.Container}. Scaling. The height property calculates scale.y by dividing\n *         the \"requested\" height by the local bounding box height. It is indirectly an abstraction over scale.y, and there\n *         is no concept of user-defined height.\n *       </td>\n *     </tr>\n *   </tbody>\n * </table>\n *\n * ## Bounds\n *\n * The bounds of a display object is defined by the minimum axis-aligned rectangle in world space that can fit\n * around it. The abstract `calculateBounds` method is responsible for providing it (and it should use the\n * `worldTransform` to calculate in world space).\n *\n * There are a few additional types of bounding boxes:\n *\n * | Bounds                | Description                                                                              |\n * | --------------------- | ---------------------------------------------------------------------------------------- |\n * | World Bounds          | This is synonymous is the regular bounds described above. See `getBounds()`.             |\n * | Local Bounds          | This the axis-aligned bounding box in the parent's local space. See `getLocalBounds()`.  |\n * | Render Bounds         | The bounds, but including extra rendering effects like filter padding.                   |\n * | Projected Bounds      | The bounds of the projected display object onto the screen. Usually equals world bounds. |\n * | Relative Bounds       | The bounds of a display object when projected onto a ancestor's (or parent's) space.     |\n * | Natural Bounds        | The bounds of an object in its own local space (not parent's space, like in local bounds)|\n * | Content Bounds        | The natural bounds when excluding all children of a `Container`.                         |\n *\n * ### calculateBounds\n *\n * [Container]{@link Container} already implements `calculateBounds` in a manner that includes children.\n *\n * But for a non-Container display object, the `calculateBounds` method must be overridden in order for `getBounds` and\n * `getLocalBounds` to work. This method must write the bounds into `this._bounds`.\n *\n * Generally, the following technique works for most simple cases: take the list of points\n * forming the \"hull\" of the object (i.e. outline of the object's shape), and then add them\n * using {@link PIXI.Bounds#addPointMatrix}.\n *\n * ```js\n * calculateBounds(): void\n * {\n *     const points = [...];\n *\n *     for (let i = 0, j = points.length; i < j; i++)\n *     {\n *         this._bounds.addPointMatrix(this.worldTransform, points[i]);\n *     }\n * }\n * ```\n *\n * You can optimize this for a large number of points by using {@link PIXI.Bounds#addVerticesMatrix} to pass them\n * in one array together.\n *\n * ## Alpha\n *\n * This alpha sets a display object's **relative opacity** w.r.t its parent. For example, if the alpha of a display\n * object is 0.5 and its parent's alpha is 0.5, then it will be rendered with 25% opacity (assuming alpha is not\n * applied on any ancestor further up the chain).\n *\n * The alpha with which the display object will be rendered is called the [worldAlpha]{@link PIXI.DisplayObject#worldAlpha}.\n *\n * ## Renderable vs Visible\n *\n * The `renderable` and `visible` properties can be used to prevent a display object from being rendered to the\n * screen. However, there is a subtle difference between the two. When using `renderable`, the transforms  of the display\n * object (and its children subtree) will continue to be calculated. When using `visible`, the transforms will not\n * be calculated.\n *\n * It is recommended that applications use the `renderable` property for culling. See\n * [@pixi-essentials/cull]{@link https://www.npmjs.com/package/@pixi-essentials/cull} or\n * [pixi-cull]{@link https://www.npmjs.com/package/pixi-cull} for more details.\n *\n * Otherwise, to prevent an object from rendering in the general-purpose sense - `visible` is the property to use. This\n * one is also better in terms of performance.\n *\n * @class\n * @extends PIXI.utils.EventEmitter\n * @memberof PIXI\n */\nvar DisplayObject = /** @class */ (function (_super) {\n    __extends(DisplayObject, _super);\n    function DisplayObject() {\n        var _this = _super.call(this) || this;\n        _this.tempDisplayObjectParent = null;\n        // TODO: need to create Transform from factory\n        /**\n         * World transform and local transform of this object.\n         * This will become read-only later, please do not assign anything there unless you know what are you doing.\n         *\n         * @member {PIXI.Transform}\n         */\n        _this.transform = new math.Transform();\n        /**\n         * The opacity of the object.\n         *\n         * @member {number}\n         */\n        _this.alpha = 1;\n        /**\n         * The visibility of the object. If false the object will not be drawn, and\n         * the updateTransform function will not be called.\n         *\n         * Only affects recursive calls from parent. You can ask for bounds or call updateTransform manually.\n         *\n         * @member {boolean}\n         */\n        _this.visible = true;\n        /**\n         * Can this object be rendered, if false the object will not be drawn but the updateTransform\n         * methods will still be called.\n         *\n         * Only affects recursive calls from parent. You can ask for bounds manually.\n         *\n         * @member {boolean}\n         */\n        _this.renderable = true;\n        /**\n         * The display object container that contains this display object.\n         *\n         * @member {PIXI.Container}\n         */\n        _this.parent = null;\n        /**\n         * The multiplied alpha of the displayObject.\n         *\n         * @member {number}\n         * @readonly\n         */\n        _this.worldAlpha = 1;\n        /**\n         * Which index in the children array the display component was before the previous zIndex sort.\n         * Used by containers to help sort objects with the same zIndex, by using previous array index as the decider.\n         *\n         * @member {number}\n         * @protected\n         */\n        _this._lastSortedIndex = 0;\n        /**\n         * The zIndex of the displayObject.\n         * A higher value will mean it will be rendered on top of other displayObjects within the same container.\n         *\n         * @member {number}\n         * @protected\n         */\n        _this._zIndex = 0;\n        /**\n         * The area the filter is applied to. This is used as more of an optimization\n         * rather than figuring out the dimensions of the displayObject each frame you can set this rectangle.\n         *\n         * Also works as an interaction mask.\n         *\n         * @member {?PIXI.Rectangle}\n         */\n        _this.filterArea = null;\n        /**\n         * Sets the filters for the displayObject.\n         * * IMPORTANT: This is a WebGL only feature and will be ignored by the canvas renderer.\n         * To remove filters simply set this property to `'null'`.\n         *\n         * @member {?PIXI.Filter[]}\n         */\n        _this.filters = null;\n        /**\n         * Currently enabled filters\n         * @member {PIXI.Filter[]}\n         * @protected\n         */\n        _this._enabledFilters = null;\n        /**\n         * The bounds object, this is used to calculate and store the bounds of the displayObject.\n         *\n         * @member {PIXI.Bounds}\n         */\n        _this._bounds = new Bounds();\n        /**\n         * Local bounds object, swapped with `_bounds` when using `getLocalBounds()`.\n         *\n         * @member {PIXI.Bounds}\n         */\n        _this._localBounds = null;\n        /**\n         * Flags the cached bounds as dirty.\n         *\n         * @member {number}\n         * @protected\n         */\n        _this._boundsID = 0;\n        /**\n         * Cache of this display-object's bounds-rectangle.\n         *\n         * @member {PIXI.Bounds}\n         * @protected\n         */\n        _this._boundsRect = null;\n        /**\n         * Cache of this display-object's local-bounds rectangle.\n         *\n         * @member {PIXI.Bounds}\n         * @protected\n         */\n        _this._localBoundsRect = null;\n        /**\n         * The original, cached mask of the object.\n         *\n         * @member {PIXI.Container|PIXI.MaskData|null}\n         * @protected\n         */\n        _this._mask = null;\n        /**\n         * The number of times this object is used as a mask by another object.\n         *\n         * @member {number}\n         * @private\n         */\n        _this._maskRefCount = 0;\n        /**\n         * If the object has been destroyed via destroy(). If true, it should not be used.\n         *\n         * @member {boolean}\n         * @protected\n         */\n        _this._destroyed = false;\n        /**\n         * used to fast check if a sprite is.. a sprite!\n         * @member {boolean}\n         */\n        _this.isSprite = false;\n        /**\n         * Does any other displayObject use this object as a mask?\n         * @member {boolean}\n         */\n        _this.isMask = false;\n        return _this;\n    }\n    /**\n     * Mixes all enumerable properties and methods from a source object to DisplayObject.\n     *\n     * @param {object} source - The source of properties and methods to mix in.\n     */\n    DisplayObject.mixin = function (source) {\n        // in ES8/ES2017, this would be really easy:\n        // Object.defineProperties(DisplayObject.prototype, Object.getOwnPropertyDescriptors(source));\n        // get all the enumerable property keys\n        var keys = Object.keys(source);\n        // loop through properties\n        for (var i = 0; i < keys.length; ++i) {\n            var propertyName = keys[i];\n            // Set the property using the property descriptor - this works for accessors and normal value properties\n            Object.defineProperty(DisplayObject.prototype, propertyName, Object.getOwnPropertyDescriptor(source, propertyName));\n        }\n    };\n    Object.defineProperty(DisplayObject.prototype, \"destroyed\", {\n        /**\n         * Fired when this DisplayObject is added to a Container.\n         *\n         * @instance\n         * @event added\n         * @param {PIXI.Container} container - The container added to.\n         */\n        /**\n         * Fired when this DisplayObject is removed from a Container.\n         *\n         * @instance\n         * @event removed\n         * @param {PIXI.Container} container - The container removed from.\n         */\n        /**\n         * Fired when this DisplayObject is destroyed.\n         *\n         * @instance\n         * @event destroyed\n         */\n        /**\n         * Readonly flag for destroyed display objects.\n         */\n        get: function () {\n            return this._destroyed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Recursively updates transform of all objects from the root to this one\n     * internal function for toLocal()\n     */\n    DisplayObject.prototype._recursivePostUpdateTransform = function () {\n        if (this.parent) {\n            this.parent._recursivePostUpdateTransform();\n            this.transform.updateTransform(this.parent.transform);\n        }\n        else {\n            this.transform.updateTransform(this._tempDisplayObjectParent.transform);\n        }\n    };\n    /**\n     * Updates the object transform for rendering.\n     *\n     * TODO - Optimization pass!\n     */\n    DisplayObject.prototype.updateTransform = function () {\n        this._boundsID++;\n        this.transform.updateTransform(this.parent.transform);\n        // multiply the alphas..\n        this.worldAlpha = this.alpha * this.parent.worldAlpha;\n    };\n    /**\n     * Calculates and returns the (world) bounds of the display object as a [Rectangle]{@link PIXI.Rectangle}.\n     *\n     * This method is expensive on containers with a large subtree (like the stage). This is because the bounds\n     * of a container depend on its children's bounds, which recursively causes all bounds in the subtree to\n     * be recalculated. The upside, however, is that calling `getBounds` once on a container will indeed update\n     * the bounds of all children (the whole subtree, in fact). This side effect should be exploited by using\n     * `displayObject._bounds.getRectangle()` when traversing through all the bounds in a scene graph. Otherwise,\n     * calling `getBounds` on each object in a subtree will cause the total cost to increase quadratically as\n     * its height increases.\n     *\n     * * The transforms of all objects in a container's **subtree** and of all **ancestors** are updated.\n     * * The world bounds of all display objects in a container's **subtree** will also be recalculated.\n     *\n     * The `_bounds` object stores the last calculation of the bounds. You can use to entirely skip bounds\n     * calculation if needed.\n     *\n     * ```js\n     * const lastCalculatedBounds = displayObject._bounds.getRectangle(optionalRect);\n     * ```\n     *\n     * Do know that usage of `getLocalBounds` can corrupt the `_bounds` of children (the whole subtree, actually). This\n     * is a known issue that has not been solved. See [getLocalBounds]{@link PIXI.DisplayObject#getLocalBounds} for more\n     * details.\n     *\n     * `getBounds` should be called with `skipUpdate` equal to `true` in a render() call. This is because the transforms\n     * are guaranteed to be update-to-date. In fact, recalculating inside a render() call may cause corruption in certain\n     * cases.\n     *\n     * @param {boolean} [skipUpdate] - Setting to `true` will stop the transforms of the scene graph from\n     *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n     *  nice performance boost.\n     * @param {PIXI.Rectangle} [rect] - Optional rectangle to store the result of the bounds calculation.\n     * @return {PIXI.Rectangle} The minimum axis-aligned rectangle in world space that fits around this object.\n     */\n    DisplayObject.prototype.getBounds = function (skipUpdate, rect) {\n        if (!skipUpdate) {\n            if (!this.parent) {\n                this.parent = this._tempDisplayObjectParent;\n                this.updateTransform();\n                this.parent = null;\n            }\n            else {\n                this._recursivePostUpdateTransform();\n                this.updateTransform();\n            }\n        }\n        if (this._bounds.updateID !== this._boundsID) {\n            this.calculateBounds();\n            this._bounds.updateID = this._boundsID;\n        }\n        if (!rect) {\n            if (!this._boundsRect) {\n                this._boundsRect = new math.Rectangle();\n            }\n            rect = this._boundsRect;\n        }\n        return this._bounds.getRectangle(rect);\n    };\n    /**\n     * Retrieves the local bounds of the displayObject as a rectangle object.\n     *\n     * @param {PIXI.Rectangle} [rect] - Optional rectangle to store the result of the bounds calculation.\n     * @return {PIXI.Rectangle} The rectangular bounding area.\n     */\n    DisplayObject.prototype.getLocalBounds = function (rect) {\n        if (!rect) {\n            if (!this._localBoundsRect) {\n                this._localBoundsRect = new math.Rectangle();\n            }\n            rect = this._localBoundsRect;\n        }\n        if (!this._localBounds) {\n            this._localBounds = new Bounds();\n        }\n        var transformRef = this.transform;\n        var parentRef = this.parent;\n        this.parent = null;\n        this.transform = this._tempDisplayObjectParent.transform;\n        var worldBounds = this._bounds;\n        var worldBoundsID = this._boundsID;\n        this._bounds = this._localBounds;\n        var bounds = this.getBounds(false, rect);\n        this.parent = parentRef;\n        this.transform = transformRef;\n        this._bounds = worldBounds;\n        this._bounds.updateID += this._boundsID - worldBoundsID; // reflect side-effects\n        return bounds;\n    };\n    /**\n     * Calculates the global position of the display object.\n     *\n     * @param {PIXI.IPointData} position - The world origin to calculate from.\n     * @param {PIXI.Point} [point] - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point).\n     * @param {boolean} [skipUpdate=false] - Should we skip the update transform.\n     * @return {PIXI.Point} A point object representing the position of this object.\n     */\n    DisplayObject.prototype.toGlobal = function (position, point, skipUpdate) {\n        if (skipUpdate === void 0) { skipUpdate = false; }\n        if (!skipUpdate) {\n            this._recursivePostUpdateTransform();\n            // this parent check is for just in case the item is a root object.\n            // If it is we need to give it a temporary parent so that displayObjectUpdateTransform works correctly\n            // this is mainly to avoid a parent check in the main loop. Every little helps for performance :)\n            if (!this.parent) {\n                this.parent = this._tempDisplayObjectParent;\n                this.displayObjectUpdateTransform();\n                this.parent = null;\n            }\n            else {\n                this.displayObjectUpdateTransform();\n            }\n        }\n        // don't need to update the lot\n        return this.worldTransform.apply(position, point);\n    };\n    /**\n     * Calculates the local position of the display object relative to another point.\n     *\n     * @param {PIXI.IPointData} position - The world origin to calculate from.\n     * @param {PIXI.DisplayObject} [from] - The DisplayObject to calculate the global position from.\n     * @param {PIXI.Point} [point] - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point).\n     * @param {boolean} [skipUpdate=false] - Should we skip the update transform\n     * @return {PIXI.Point} A point object representing the position of this object\n     */\n    DisplayObject.prototype.toLocal = function (position, from, point, skipUpdate) {\n        if (from) {\n            position = from.toGlobal(position, point, skipUpdate);\n        }\n        if (!skipUpdate) {\n            this._recursivePostUpdateTransform();\n            // this parent check is for just in case the item is a root object.\n            // If it is we need to give it a temporary parent so that displayObjectUpdateTransform works correctly\n            // this is mainly to avoid a parent check in the main loop. Every little helps for performance :)\n            if (!this.parent) {\n                this.parent = this._tempDisplayObjectParent;\n                this.displayObjectUpdateTransform();\n                this.parent = null;\n            }\n            else {\n                this.displayObjectUpdateTransform();\n            }\n        }\n        // simply apply the matrix..\n        return this.worldTransform.applyInverse(position, point);\n    };\n    /**\n     * Set the parent Container of this DisplayObject.\n     *\n     * @param {PIXI.Container} container - The Container to add this DisplayObject to.\n     * @return {PIXI.Container} The Container that this DisplayObject was added to.\n     */\n    DisplayObject.prototype.setParent = function (container) {\n        if (!container || !container.addChild) {\n            throw new Error('setParent: Argument must be a Container');\n        }\n        container.addChild(this);\n        return container;\n    };\n    /**\n     * Convenience function to set the position, scale, skew and pivot at once.\n     *\n     * @param {number} [x=0] - The X position\n     * @param {number} [y=0] - The Y position\n     * @param {number} [scaleX=1] - The X scale value\n     * @param {number} [scaleY=1] - The Y scale value\n     * @param {number} [rotation=0] - The rotation\n     * @param {number} [skewX=0] - The X skew value\n     * @param {number} [skewY=0] - The Y skew value\n     * @param {number} [pivotX=0] - The X pivot value\n     * @param {number} [pivotY=0] - The Y pivot value\n     * @return {PIXI.DisplayObject} The DisplayObject instance\n     */\n    DisplayObject.prototype.setTransform = function (x, y, scaleX, scaleY, rotation, skewX, skewY, pivotX, pivotY) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (scaleX === void 0) { scaleX = 1; }\n        if (scaleY === void 0) { scaleY = 1; }\n        if (rotation === void 0) { rotation = 0; }\n        if (skewX === void 0) { skewX = 0; }\n        if (skewY === void 0) { skewY = 0; }\n        if (pivotX === void 0) { pivotX = 0; }\n        if (pivotY === void 0) { pivotY = 0; }\n        this.position.x = x;\n        this.position.y = y;\n        this.scale.x = !scaleX ? 1 : scaleX;\n        this.scale.y = !scaleY ? 1 : scaleY;\n        this.rotation = rotation;\n        this.skew.x = skewX;\n        this.skew.y = skewY;\n        this.pivot.x = pivotX;\n        this.pivot.y = pivotY;\n        return this;\n    };\n    /**\n     * Base destroy method for generic display objects. This will automatically\n     * remove the display object from its parent Container as well as remove\n     * all current event listeners and internal references. Do not use a DisplayObject\n     * after calling `destroy()`.\n     *\n     */\n    DisplayObject.prototype.destroy = function (_options) {\n        if (this.parent) {\n            this.parent.removeChild(this);\n        }\n        this.emit('destroyed');\n        this.removeAllListeners();\n        this.transform = null;\n        this.parent = null;\n        this._bounds = null;\n        this.mask = null;\n        this.filters = null;\n        this.filterArea = null;\n        this.hitArea = null;\n        this.interactive = false;\n        this.interactiveChildren = false;\n        this._destroyed = true;\n    };\n    Object.defineProperty(DisplayObject.prototype, \"_tempDisplayObjectParent\", {\n        /**\n         * @protected\n         * @member {PIXI.Container}\n         */\n        get: function () {\n            if (this.tempDisplayObjectParent === null) {\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                this.tempDisplayObjectParent = new TemporaryDisplayObject();\n            }\n            return this.tempDisplayObjectParent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Used in Renderer, cacheAsBitmap and other places where you call an `updateTransform` on root\n     *\n     * ```\n     * const cacheParent = elem.enableTempParent();\n     * elem.updateTransform();\n     * elem.disableTempParent(cacheParent);\n     * ```\n     *\n     * @returns {PIXI.Container} current parent\n     */\n    DisplayObject.prototype.enableTempParent = function () {\n        var myParent = this.parent;\n        this.parent = this._tempDisplayObjectParent;\n        return myParent;\n    };\n    /**\n     * Pair method for `enableTempParent`\n     *\n     * @param {PIXI.Container} cacheParent - Actual parent of element\n     */\n    DisplayObject.prototype.disableTempParent = function (cacheParent) {\n        this.parent = cacheParent;\n    };\n    Object.defineProperty(DisplayObject.prototype, \"x\", {\n        /**\n         * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n         * An alias to position.x\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this.position.x;\n        },\n        set: function (value) {\n            this.transform.position.x = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"y\", {\n        /**\n         * The position of the displayObject on the y axis relative to the local coordinates of the parent.\n         * An alias to position.y\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this.position.y;\n        },\n        set: function (value) {\n            this.transform.position.y = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"worldTransform\", {\n        /**\n         * Current transform of the object based on world (parent) factors.\n         *\n         * @member {PIXI.Matrix}\n         * @readonly\n         */\n        get: function () {\n            return this.transform.worldTransform;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"localTransform\", {\n        /**\n         * Current transform of the object based on local factors: position, scale, other stuff.\n         *\n         * @member {PIXI.Matrix}\n         * @readonly\n         */\n        get: function () {\n            return this.transform.localTransform;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"position\", {\n        /**\n         * The coordinate of the object relative to the local coordinates of the parent.\n         *\n         * @since PixiJS 4\n         * @member {PIXI.ObservablePoint}\n         */\n        get: function () {\n            return this.transform.position;\n        },\n        set: function (value) {\n            this.transform.position.copyFrom(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scale\", {\n        /**\n         * The scale factors of this object along the local coordinate axes.\n         *\n         * The default scale is (1, 1).\n         *\n         * @since PixiJS 4\n         * @member {PIXI.ObservablePoint}\n         */\n        get: function () {\n            return this.transform.scale;\n        },\n        set: function (value) {\n            this.transform.scale.copyFrom(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"pivot\", {\n        /**\n         * The center of rotation, scaling, and skewing for this display object in its local space. The `position`\n         * is the projection of `pivot` in the parent's local space.\n         *\n         * By default, the pivot is the origin (0, 0).\n         *\n         * @since PixiJS 4\n         * @member {PIXI.ObservablePoint}\n         */\n        get: function () {\n            return this.transform.pivot;\n        },\n        set: function (value) {\n            this.transform.pivot.copyFrom(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"skew\", {\n        /**\n         * The skew factor for the object in radians.\n         *\n         * @since PixiJS 4\n         * @member {PIXI.ObservablePoint}\n         */\n        get: function () {\n            return this.transform.skew;\n        },\n        set: function (value) {\n            this.transform.skew.copyFrom(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"rotation\", {\n        /**\n         * The rotation of the object in radians.\n         * 'rotation' and 'angle' have the same effect on a display object; rotation is in radians, angle is in degrees.\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this.transform.rotation;\n        },\n        set: function (value) {\n            this.transform.rotation = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"angle\", {\n        /**\n         * The angle of the object in degrees.\n         * 'rotation' and 'angle' have the same effect on a display object; rotation is in radians, angle is in degrees.\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this.transform.rotation * math.RAD_TO_DEG;\n        },\n        set: function (value) {\n            this.transform.rotation = value * math.DEG_TO_RAD;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"zIndex\", {\n        /**\n         * The zIndex of the displayObject.\n         *\n         * If a container has the sortableChildren property set to true, children will be automatically\n         * sorted by zIndex value; a higher value will mean it will be moved towards the end of the array,\n         * and thus rendered on top of other display objects within the same container.\n         *\n         * @member {number}\n         * @see PIXI.Container#sortableChildren\n         */\n        get: function () {\n            return this._zIndex;\n        },\n        set: function (value) {\n            this._zIndex = value;\n            if (this.parent) {\n                this.parent.sortDirty = true;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"worldVisible\", {\n        /**\n         * Indicates if the object is globally visible.\n         *\n         * @member {boolean}\n         * @readonly\n         */\n        get: function () {\n            var item = this;\n            do {\n                if (!item.visible) {\n                    return false;\n                }\n                item = item.parent;\n            } while (item);\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"mask\", {\n        /**\n         * Sets a mask for the displayObject. A mask is an object that limits the visibility of an\n         * object to the shape of the mask applied to it. In PixiJS a regular mask must be a\n         * {@link PIXI.Graphics} or a {@link PIXI.Sprite} object. This allows for much faster masking in canvas as it\n         * utilities shape clipping. To remove a mask, set this property to `null`.\n         *\n         * For sprite mask both alpha and red channel are used. Black mask is the same as transparent mask.\n         *\n         * @example\n         * const graphics = new PIXI.Graphics();\n         * graphics.beginFill(0xFF3300);\n         * graphics.drawRect(50, 250, 100, 100);\n         * graphics.endFill();\n         *\n         * const sprite = new PIXI.Sprite(texture);\n         * sprite.mask = graphics;\n         *\n         * @todo At the moment, PIXI.CanvasRenderer doesn't support PIXI.Sprite as mask.\n         * @member {PIXI.Container|PIXI.MaskData|null}\n         */\n        get: function () {\n            return this._mask;\n        },\n        set: function (value) {\n            if (this._mask === value) {\n                return;\n            }\n            if (this._mask) {\n                var maskObject = (this._mask.maskObject || this._mask);\n                maskObject._maskRefCount--;\n                if (maskObject._maskRefCount === 0) {\n                    maskObject.renderable = true;\n                    maskObject.isMask = false;\n                }\n            }\n            this._mask = value;\n            if (this._mask) {\n                var maskObject = (this._mask.maskObject || this._mask);\n                if (maskObject._maskRefCount === 0) {\n                    maskObject.renderable = false;\n                    maskObject.isMask = true;\n                }\n                maskObject._maskRefCount++;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return DisplayObject;\n}(utils.EventEmitter));\n/**\n * @private\n */\nvar TemporaryDisplayObject = /** @class */ (function (_super) {\n    __extends(TemporaryDisplayObject, _super);\n    function TemporaryDisplayObject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.sortDirty = null;\n        return _this;\n    }\n    return TemporaryDisplayObject;\n}(DisplayObject));\n/**\n * DisplayObject default updateTransform, does not update children of container.\n * Will crash if there's no parent element.\n *\n * @memberof PIXI.DisplayObject#\n * @method displayObjectUpdateTransform\n */\nDisplayObject.prototype.displayObjectUpdateTransform = DisplayObject.prototype.updateTransform;\n\n/*!\n * @pixi/constants - v6.2.0\n * Compiled Mon, 01 Nov 2021 16:52:10 UTC\n *\n * @pixi/constants is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n/**\n * Different types of environments for WebGL.\n *\n * @static\n * @memberof PIXI\n * @name ENV\n * @enum {number}\n * @property {number} WEBGL_LEGACY - Used for older v1 WebGL devices. PixiJS will aim to ensure compatibility\n *  with older / less advanced devices. If you experience unexplained flickering prefer this environment.\n * @property {number} WEBGL - Version 1 of WebGL\n * @property {number} WEBGL2 - Version 2 of WebGL\n */\nvar ENV;\n(function (ENV) {\n    ENV[ENV[\"WEBGL_LEGACY\"] = 0] = \"WEBGL_LEGACY\";\n    ENV[ENV[\"WEBGL\"] = 1] = \"WEBGL\";\n    ENV[ENV[\"WEBGL2\"] = 2] = \"WEBGL2\";\n})(ENV || (ENV = {}));\n/**\n * Constant to identify the Renderer Type.\n *\n * @static\n * @memberof PIXI\n * @name RENDERER_TYPE\n * @enum {number}\n * @property {number} UNKNOWN - Unknown render type.\n * @property {number} WEBGL - WebGL render type.\n * @property {number} CANVAS - Canvas render type.\n */\nvar RENDERER_TYPE;\n(function (RENDERER_TYPE) {\n    RENDERER_TYPE[RENDERER_TYPE[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    RENDERER_TYPE[RENDERER_TYPE[\"WEBGL\"] = 1] = \"WEBGL\";\n    RENDERER_TYPE[RENDERER_TYPE[\"CANVAS\"] = 2] = \"CANVAS\";\n})(RENDERER_TYPE || (RENDERER_TYPE = {}));\n/**\n * Bitwise OR of masks that indicate the buffers to be cleared.\n *\n * @static\n * @memberof PIXI\n * @name BUFFER_BITS\n * @enum {number}\n * @property {number} COLOR - Indicates the buffers currently enabled for color writing.\n * @property {number} DEPTH - Indicates the depth buffer.\n * @property {number} STENCIL - Indicates the stencil buffer.\n */\nvar BUFFER_BITS;\n(function (BUFFER_BITS) {\n    BUFFER_BITS[BUFFER_BITS[\"COLOR\"] = 16384] = \"COLOR\";\n    BUFFER_BITS[BUFFER_BITS[\"DEPTH\"] = 256] = \"DEPTH\";\n    BUFFER_BITS[BUFFER_BITS[\"STENCIL\"] = 1024] = \"STENCIL\";\n})(BUFFER_BITS || (BUFFER_BITS = {}));\n/**\n * Various blend modes supported by PIXI.\n *\n * IMPORTANT - The WebGL renderer only supports the NORMAL, ADD, MULTIPLY and SCREEN blend modes.\n * Anything else will silently act like NORMAL.\n *\n * @memberof PIXI\n * @name BLEND_MODES\n * @enum {number}\n * @property {number} NORMAL\n * @property {number} ADD\n * @property {number} MULTIPLY\n * @property {number} SCREEN\n * @property {number} OVERLAY\n * @property {number} DARKEN\n * @property {number} LIGHTEN\n * @property {number} COLOR_DODGE\n * @property {number} COLOR_BURN\n * @property {number} HARD_LIGHT\n * @property {number} SOFT_LIGHT\n * @property {number} DIFFERENCE\n * @property {number} EXCLUSION\n * @property {number} HUE\n * @property {number} SATURATION\n * @property {number} COLOR\n * @property {number} LUMINOSITY\n * @property {number} NORMAL_NPM\n * @property {number} ADD_NPM\n * @property {number} SCREEN_NPM\n * @property {number} NONE\n * @property {number} SRC_IN\n * @property {number} SRC_OUT\n * @property {number} SRC_ATOP\n * @property {number} DST_OVER\n * @property {number} DST_IN\n * @property {number} DST_OUT\n * @property {number} DST_ATOP\n * @property {number} SUBTRACT\n * @property {number} SRC_OVER\n * @property {number} ERASE\n * @property {number} XOR\n */\nvar BLEND_MODES;\n(function (BLEND_MODES) {\n    BLEND_MODES[BLEND_MODES[\"NORMAL\"] = 0] = \"NORMAL\";\n    BLEND_MODES[BLEND_MODES[\"ADD\"] = 1] = \"ADD\";\n    BLEND_MODES[BLEND_MODES[\"MULTIPLY\"] = 2] = \"MULTIPLY\";\n    BLEND_MODES[BLEND_MODES[\"SCREEN\"] = 3] = \"SCREEN\";\n    BLEND_MODES[BLEND_MODES[\"OVERLAY\"] = 4] = \"OVERLAY\";\n    BLEND_MODES[BLEND_MODES[\"DARKEN\"] = 5] = \"DARKEN\";\n    BLEND_MODES[BLEND_MODES[\"LIGHTEN\"] = 6] = \"LIGHTEN\";\n    BLEND_MODES[BLEND_MODES[\"COLOR_DODGE\"] = 7] = \"COLOR_DODGE\";\n    BLEND_MODES[BLEND_MODES[\"COLOR_BURN\"] = 8] = \"COLOR_BURN\";\n    BLEND_MODES[BLEND_MODES[\"HARD_LIGHT\"] = 9] = \"HARD_LIGHT\";\n    BLEND_MODES[BLEND_MODES[\"SOFT_LIGHT\"] = 10] = \"SOFT_LIGHT\";\n    BLEND_MODES[BLEND_MODES[\"DIFFERENCE\"] = 11] = \"DIFFERENCE\";\n    BLEND_MODES[BLEND_MODES[\"EXCLUSION\"] = 12] = \"EXCLUSION\";\n    BLEND_MODES[BLEND_MODES[\"HUE\"] = 13] = \"HUE\";\n    BLEND_MODES[BLEND_MODES[\"SATURATION\"] = 14] = \"SATURATION\";\n    BLEND_MODES[BLEND_MODES[\"COLOR\"] = 15] = \"COLOR\";\n    BLEND_MODES[BLEND_MODES[\"LUMINOSITY\"] = 16] = \"LUMINOSITY\";\n    BLEND_MODES[BLEND_MODES[\"NORMAL_NPM\"] = 17] = \"NORMAL_NPM\";\n    BLEND_MODES[BLEND_MODES[\"ADD_NPM\"] = 18] = \"ADD_NPM\";\n    BLEND_MODES[BLEND_MODES[\"SCREEN_NPM\"] = 19] = \"SCREEN_NPM\";\n    BLEND_MODES[BLEND_MODES[\"NONE\"] = 20] = \"NONE\";\n    BLEND_MODES[BLEND_MODES[\"SRC_OVER\"] = 0] = \"SRC_OVER\";\n    BLEND_MODES[BLEND_MODES[\"SRC_IN\"] = 21] = \"SRC_IN\";\n    BLEND_MODES[BLEND_MODES[\"SRC_OUT\"] = 22] = \"SRC_OUT\";\n    BLEND_MODES[BLEND_MODES[\"SRC_ATOP\"] = 23] = \"SRC_ATOP\";\n    BLEND_MODES[BLEND_MODES[\"DST_OVER\"] = 24] = \"DST_OVER\";\n    BLEND_MODES[BLEND_MODES[\"DST_IN\"] = 25] = \"DST_IN\";\n    BLEND_MODES[BLEND_MODES[\"DST_OUT\"] = 26] = \"DST_OUT\";\n    BLEND_MODES[BLEND_MODES[\"DST_ATOP\"] = 27] = \"DST_ATOP\";\n    BLEND_MODES[BLEND_MODES[\"ERASE\"] = 26] = \"ERASE\";\n    BLEND_MODES[BLEND_MODES[\"SUBTRACT\"] = 28] = \"SUBTRACT\";\n    BLEND_MODES[BLEND_MODES[\"XOR\"] = 29] = \"XOR\";\n})(BLEND_MODES || (BLEND_MODES = {}));\n/**\n * Various webgl draw modes. These can be used to specify which GL drawMode to use\n * under certain situations and renderers.\n *\n * @memberof PIXI\n * @static\n * @name DRAW_MODES\n * @enum {number}\n * @property {number} POINTS\n * @property {number} LINES\n * @property {number} LINE_LOOP\n * @property {number} LINE_STRIP\n * @property {number} TRIANGLES\n * @property {number} TRIANGLE_STRIP\n * @property {number} TRIANGLE_FAN\n */\nvar DRAW_MODES;\n(function (DRAW_MODES) {\n    DRAW_MODES[DRAW_MODES[\"POINTS\"] = 0] = \"POINTS\";\n    DRAW_MODES[DRAW_MODES[\"LINES\"] = 1] = \"LINES\";\n    DRAW_MODES[DRAW_MODES[\"LINE_LOOP\"] = 2] = \"LINE_LOOP\";\n    DRAW_MODES[DRAW_MODES[\"LINE_STRIP\"] = 3] = \"LINE_STRIP\";\n    DRAW_MODES[DRAW_MODES[\"TRIANGLES\"] = 4] = \"TRIANGLES\";\n    DRAW_MODES[DRAW_MODES[\"TRIANGLE_STRIP\"] = 5] = \"TRIANGLE_STRIP\";\n    DRAW_MODES[DRAW_MODES[\"TRIANGLE_FAN\"] = 6] = \"TRIANGLE_FAN\";\n})(DRAW_MODES || (DRAW_MODES = {}));\n/**\n * Various GL texture/resources formats.\n *\n * @memberof PIXI\n * @static\n * @name FORMATS\n * @enum {number}\n * @property {number} RGBA=6408\n * @property {number} RGB=6407\n * @property {number} RG=33319\n * @property {number} RED=6403\n * @property {number} RGBA_INTEGER=36249\n * @property {number} RGB_INTEGER=36248\n * @property {number} RG_INTEGER=33320\n * @property {number} RED_INTEGER=36244\n * @property {number} ALPHA=6406\n * @property {number} LUMINANCE=6409\n * @property {number} LUMINANCE_ALPHA=6410\n * @property {number} DEPTH_COMPONENT=6402\n * @property {number} DEPTH_STENCIL=34041\n */\nvar FORMATS;\n(function (FORMATS) {\n    FORMATS[FORMATS[\"RGBA\"] = 6408] = \"RGBA\";\n    FORMATS[FORMATS[\"RGB\"] = 6407] = \"RGB\";\n    FORMATS[FORMATS[\"RG\"] = 33319] = \"RG\";\n    FORMATS[FORMATS[\"RED\"] = 6403] = \"RED\";\n    FORMATS[FORMATS[\"RGBA_INTEGER\"] = 36249] = \"RGBA_INTEGER\";\n    FORMATS[FORMATS[\"RGB_INTEGER\"] = 36248] = \"RGB_INTEGER\";\n    FORMATS[FORMATS[\"RG_INTEGER\"] = 33320] = \"RG_INTEGER\";\n    FORMATS[FORMATS[\"RED_INTEGER\"] = 36244] = \"RED_INTEGER\";\n    FORMATS[FORMATS[\"ALPHA\"] = 6406] = \"ALPHA\";\n    FORMATS[FORMATS[\"LUMINANCE\"] = 6409] = \"LUMINANCE\";\n    FORMATS[FORMATS[\"LUMINANCE_ALPHA\"] = 6410] = \"LUMINANCE_ALPHA\";\n    FORMATS[FORMATS[\"DEPTH_COMPONENT\"] = 6402] = \"DEPTH_COMPONENT\";\n    FORMATS[FORMATS[\"DEPTH_STENCIL\"] = 34041] = \"DEPTH_STENCIL\";\n})(FORMATS || (FORMATS = {}));\n/**\n * Various GL target types.\n *\n * @memberof PIXI\n * @static\n * @name TARGETS\n * @enum {number}\n * @property {number} TEXTURE_2D=3553\n * @property {number} TEXTURE_CUBE_MAP=34067\n * @property {number} TEXTURE_2D_ARRAY=35866\n * @property {number} TEXTURE_CUBE_MAP_POSITIVE_X=34069\n * @property {number} TEXTURE_CUBE_MAP_NEGATIVE_X=34070\n * @property {number} TEXTURE_CUBE_MAP_POSITIVE_Y=34071\n * @property {number} TEXTURE_CUBE_MAP_NEGATIVE_Y=34072\n * @property {number} TEXTURE_CUBE_MAP_POSITIVE_Z=34073\n * @property {number} TEXTURE_CUBE_MAP_NEGATIVE_Z=34074\n */\nvar TARGETS;\n(function (TARGETS) {\n    TARGETS[TARGETS[\"TEXTURE_2D\"] = 3553] = \"TEXTURE_2D\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP\"] = 34067] = \"TEXTURE_CUBE_MAP\";\n    TARGETS[TARGETS[\"TEXTURE_2D_ARRAY\"] = 35866] = \"TEXTURE_2D_ARRAY\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_POSITIVE_X\"] = 34069] = \"TEXTURE_CUBE_MAP_POSITIVE_X\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_NEGATIVE_X\"] = 34070] = \"TEXTURE_CUBE_MAP_NEGATIVE_X\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_POSITIVE_Y\"] = 34071] = \"TEXTURE_CUBE_MAP_POSITIVE_Y\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_NEGATIVE_Y\"] = 34072] = \"TEXTURE_CUBE_MAP_NEGATIVE_Y\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_POSITIVE_Z\"] = 34073] = \"TEXTURE_CUBE_MAP_POSITIVE_Z\";\n    TARGETS[TARGETS[\"TEXTURE_CUBE_MAP_NEGATIVE_Z\"] = 34074] = \"TEXTURE_CUBE_MAP_NEGATIVE_Z\";\n})(TARGETS || (TARGETS = {}));\n/**\n * Various GL data format types.\n *\n * @memberof PIXI\n * @static\n * @name TYPES\n * @enum {number}\n * @property {number} UNSIGNED_BYTE=5121\n * @property {number} UNSIGNED_SHORT=5123\n * @property {number} UNSIGNED_SHORT_5_6_5=33635\n * @property {number} UNSIGNED_SHORT_4_4_4_4=32819\n * @property {number} UNSIGNED_SHORT_5_5_5_1=32820\n * @property {number} UNSIGNED_INT=5125\n * @property {number} UNSIGNED_INT_10F_11F_11F_REV=35899\n * @property {number} UNSIGNED_INT_2_10_10_10_REV=33640\n * @property {number} UNSIGNED_INT_24_8=34042\n * @property {number} UNSIGNED_INT_5_9_9_9_REV=35902\n * @property {number} BYTE=5120\n * @property {number} SHORT=5122\n * @property {number} INT=5124\n * @property {number} FLOAT=5126\n * @property {number} FLOAT_32_UNSIGNED_INT_24_8_REV=36269\n * @property {number} HALF_FLOAT=36193\n */\nvar TYPES;\n(function (TYPES) {\n    TYPES[TYPES[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n    TYPES[TYPES[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n    TYPES[TYPES[\"UNSIGNED_SHORT_5_6_5\"] = 33635] = \"UNSIGNED_SHORT_5_6_5\";\n    TYPES[TYPES[\"UNSIGNED_SHORT_4_4_4_4\"] = 32819] = \"UNSIGNED_SHORT_4_4_4_4\";\n    TYPES[TYPES[\"UNSIGNED_SHORT_5_5_5_1\"] = 32820] = \"UNSIGNED_SHORT_5_5_5_1\";\n    TYPES[TYPES[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n    TYPES[TYPES[\"UNSIGNED_INT_10F_11F_11F_REV\"] = 35899] = \"UNSIGNED_INT_10F_11F_11F_REV\";\n    TYPES[TYPES[\"UNSIGNED_INT_2_10_10_10_REV\"] = 33640] = \"UNSIGNED_INT_2_10_10_10_REV\";\n    TYPES[TYPES[\"UNSIGNED_INT_24_8\"] = 34042] = \"UNSIGNED_INT_24_8\";\n    TYPES[TYPES[\"UNSIGNED_INT_5_9_9_9_REV\"] = 35902] = \"UNSIGNED_INT_5_9_9_9_REV\";\n    TYPES[TYPES[\"BYTE\"] = 5120] = \"BYTE\";\n    TYPES[TYPES[\"SHORT\"] = 5122] = \"SHORT\";\n    TYPES[TYPES[\"INT\"] = 5124] = \"INT\";\n    TYPES[TYPES[\"FLOAT\"] = 5126] = \"FLOAT\";\n    TYPES[TYPES[\"FLOAT_32_UNSIGNED_INT_24_8_REV\"] = 36269] = \"FLOAT_32_UNSIGNED_INT_24_8_REV\";\n    TYPES[TYPES[\"HALF_FLOAT\"] = 36193] = \"HALF_FLOAT\";\n})(TYPES || (TYPES = {}));\n/**\n * Various sampler types. Correspond to `sampler`, `isampler`, `usampler` GLSL types respectively.\n * WebGL1 works only with FLOAT.\n *\n * @memberof PIXI\n * @static\n * @name SAMPLER_TYPES\n * @enum {number}\n * @property {number} FLOAT=0\n * @property {number} INT=1\n * @property {number} UINT=2\n */\nvar SAMPLER_TYPES;\n(function (SAMPLER_TYPES) {\n    SAMPLER_TYPES[SAMPLER_TYPES[\"FLOAT\"] = 0] = \"FLOAT\";\n    SAMPLER_TYPES[SAMPLER_TYPES[\"INT\"] = 1] = \"INT\";\n    SAMPLER_TYPES[SAMPLER_TYPES[\"UINT\"] = 2] = \"UINT\";\n})(SAMPLER_TYPES || (SAMPLER_TYPES = {}));\n/**\n * The scale modes that are supported by pixi.\n *\n * The {@link PIXI.settings.SCALE_MODE} scale mode affects the default scaling mode of future operations.\n * It can be re-assigned to either LINEAR or NEAREST, depending upon suitability.\n *\n * @memberof PIXI\n * @static\n * @name SCALE_MODES\n * @enum {number}\n * @property {number} LINEAR Smooth scaling\n * @property {number} NEAREST Pixelating scaling\n */\nvar SCALE_MODES;\n(function (SCALE_MODES) {\n    SCALE_MODES[SCALE_MODES[\"NEAREST\"] = 0] = \"NEAREST\";\n    SCALE_MODES[SCALE_MODES[\"LINEAR\"] = 1] = \"LINEAR\";\n})(SCALE_MODES || (SCALE_MODES = {}));\n/**\n * The wrap modes that are supported by pixi.\n *\n * The {@link PIXI.settings.WRAP_MODE} wrap mode affects the default wrapping mode of future operations.\n * It can be re-assigned to either CLAMP or REPEAT, depending upon suitability.\n * If the texture is non power of two then clamp will be used regardless as WebGL can\n * only use REPEAT if the texture is po2.\n *\n * This property only affects WebGL.\n *\n * @name WRAP_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} CLAMP - The textures uvs are clamped\n * @property {number} REPEAT - The texture uvs tile and repeat\n * @property {number} MIRRORED_REPEAT - The texture uvs tile and repeat with mirroring\n */\nvar WRAP_MODES;\n(function (WRAP_MODES) {\n    WRAP_MODES[WRAP_MODES[\"CLAMP\"] = 33071] = \"CLAMP\";\n    WRAP_MODES[WRAP_MODES[\"REPEAT\"] = 10497] = \"REPEAT\";\n    WRAP_MODES[WRAP_MODES[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\n})(WRAP_MODES || (WRAP_MODES = {}));\n/**\n * Mipmap filtering modes that are supported by pixi.\n *\n * The {@link PIXI.settings.MIPMAP_TEXTURES} affects default texture filtering.\n * Mipmaps are generated for a baseTexture if its `mipmap` field is `ON`,\n * or its `POW2` and texture dimensions are powers of 2.\n * Due to platform restriction, `ON` option will work like `POW2` for webgl-1.\n *\n * This property only affects WebGL.\n *\n * @name MIPMAP_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} OFF - No mipmaps\n * @property {number} POW2 - Generate mipmaps if texture dimensions are pow2\n * @property {number} ON - Always generate mipmaps\n * @property {number} ON_MANUAL - Use mipmaps, but do not auto-generate them; this is used with a resource\n *   that supports buffering each level-of-detail.\n */\nvar MIPMAP_MODES;\n(function (MIPMAP_MODES) {\n    MIPMAP_MODES[MIPMAP_MODES[\"OFF\"] = 0] = \"OFF\";\n    MIPMAP_MODES[MIPMAP_MODES[\"POW2\"] = 1] = \"POW2\";\n    MIPMAP_MODES[MIPMAP_MODES[\"ON\"] = 2] = \"ON\";\n    MIPMAP_MODES[MIPMAP_MODES[\"ON_MANUAL\"] = 3] = \"ON_MANUAL\";\n})(MIPMAP_MODES || (MIPMAP_MODES = {}));\n/**\n * How to treat textures with premultiplied alpha\n *\n * @name ALPHA_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} NO_PREMULTIPLIED_ALPHA - Source is not premultiplied, leave it like that.\n *  Option for compressed and data textures that are created from typed arrays.\n * @property {number} PREMULTIPLY_ON_UPLOAD - Source is not premultiplied, premultiply on upload.\n *  Default option, used for all loaded images.\n * @property {number} PREMULTIPLIED_ALPHA - Source is already premultiplied\n *  Example: spine atlases with `_pma` suffix.\n * @property {number} NPM - Alias for NO_PREMULTIPLIED_ALPHA.\n * @property {number} UNPACK - Default option, alias for PREMULTIPLY_ON_UPLOAD.\n * @property {number} PMA - Alias for PREMULTIPLIED_ALPHA.\n */\nvar ALPHA_MODES;\n(function (ALPHA_MODES) {\n    ALPHA_MODES[ALPHA_MODES[\"NPM\"] = 0] = \"NPM\";\n    ALPHA_MODES[ALPHA_MODES[\"UNPACK\"] = 1] = \"UNPACK\";\n    ALPHA_MODES[ALPHA_MODES[\"PMA\"] = 2] = \"PMA\";\n    ALPHA_MODES[ALPHA_MODES[\"NO_PREMULTIPLIED_ALPHA\"] = 0] = \"NO_PREMULTIPLIED_ALPHA\";\n    ALPHA_MODES[ALPHA_MODES[\"PREMULTIPLY_ON_UPLOAD\"] = 1] = \"PREMULTIPLY_ON_UPLOAD\";\n    ALPHA_MODES[ALPHA_MODES[\"PREMULTIPLY_ALPHA\"] = 2] = \"PREMULTIPLY_ALPHA\";\n    ALPHA_MODES[ALPHA_MODES[\"PREMULTIPLIED_ALPHA\"] = 2] = \"PREMULTIPLIED_ALPHA\";\n})(ALPHA_MODES || (ALPHA_MODES = {}));\n/**\n * Configure whether filter textures are cleared after binding.\n *\n * Filter textures need not be cleared if the filter does not use pixel blending. {@link CLEAR_MODES.BLIT} will detect\n * this and skip clearing as an optimization.\n *\n * @name CLEAR_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} BLEND - Do not clear the filter texture. The filter's output will blend on top of the output texture.\n * @property {number} CLEAR - Always clear the filter texture.\n * @property {number} BLIT - Clear only if {@link FilterSystem.forceClear} is set or if the filter uses pixel blending.\n * @property {number} NO - Alias for BLEND, same as `false` in earlier versions\n * @property {number} YES - Alias for CLEAR, same as `true` in earlier versions\n * @property {number} AUTO - Alias for BLIT\n */\nvar CLEAR_MODES;\n(function (CLEAR_MODES) {\n    CLEAR_MODES[CLEAR_MODES[\"NO\"] = 0] = \"NO\";\n    CLEAR_MODES[CLEAR_MODES[\"YES\"] = 1] = \"YES\";\n    CLEAR_MODES[CLEAR_MODES[\"AUTO\"] = 2] = \"AUTO\";\n    CLEAR_MODES[CLEAR_MODES[\"BLEND\"] = 0] = \"BLEND\";\n    CLEAR_MODES[CLEAR_MODES[\"CLEAR\"] = 1] = \"CLEAR\";\n    CLEAR_MODES[CLEAR_MODES[\"BLIT\"] = 2] = \"BLIT\";\n})(CLEAR_MODES || (CLEAR_MODES = {}));\n/**\n * The gc modes that are supported by pixi.\n *\n * The {@link PIXI.settings.GC_MODE} Garbage Collection mode for PixiJS textures is AUTO\n * If set to GC_MODE, the renderer will occasionally check textures usage. If they are not\n * used for a specified period of time they will be removed from the GPU. They will of course\n * be uploaded again when they are required. This is a silent behind the scenes process that\n * should ensure that the GPU does not  get filled up.\n *\n * Handy for mobile devices!\n * This property only affects WebGL.\n *\n * @name GC_MODES\n * @enum {number}\n * @static\n * @memberof PIXI\n * @property {number} AUTO - Garbage collection will happen periodically automatically\n * @property {number} MANUAL - Garbage collection will need to be called manually\n */\nvar GC_MODES;\n(function (GC_MODES) {\n    GC_MODES[GC_MODES[\"AUTO\"] = 0] = \"AUTO\";\n    GC_MODES[GC_MODES[\"MANUAL\"] = 1] = \"MANUAL\";\n})(GC_MODES || (GC_MODES = {}));\n/**\n * Constants that specify float precision in shaders.\n *\n * @name PRECISION\n * @memberof PIXI\n * @constant\n * @static\n * @enum {string}\n * @property {string} LOW='lowp'\n * @property {string} MEDIUM='mediump'\n * @property {string} HIGH='highp'\n */\nvar PRECISION;\n(function (PRECISION) {\n    PRECISION[\"LOW\"] = \"lowp\";\n    PRECISION[\"MEDIUM\"] = \"mediump\";\n    PRECISION[\"HIGH\"] = \"highp\";\n})(PRECISION || (PRECISION = {}));\n/**\n * Constants for mask implementations.\n * We use `type` suffix because it leads to very different behaviours\n *\n * @name MASK_TYPES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} NONE - Mask is ignored\n * @property {number} SCISSOR - Scissor mask, rectangle on screen, cheap\n * @property {number} STENCIL - Stencil mask, 1-bit, medium, works only if renderer supports stencil\n * @property {number} SPRITE - Mask that uses SpriteMaskFilter, uses temporary RenderTexture\n */\nvar MASK_TYPES;\n(function (MASK_TYPES) {\n    MASK_TYPES[MASK_TYPES[\"NONE\"] = 0] = \"NONE\";\n    MASK_TYPES[MASK_TYPES[\"SCISSOR\"] = 1] = \"SCISSOR\";\n    MASK_TYPES[MASK_TYPES[\"STENCIL\"] = 2] = \"STENCIL\";\n    MASK_TYPES[MASK_TYPES[\"SPRITE\"] = 3] = \"SPRITE\";\n})(MASK_TYPES || (MASK_TYPES = {}));\n/**\n * Constants for multi-sampling antialiasing.\n *\n * @see PIXI.Framebuffer#multisample\n *\n * @name MSAA_QUALITY\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} NONE - No multisampling for this renderTexture\n * @property {number} LOW - Try 2 samples\n * @property {number} MEDIUM - Try 4 samples\n * @property {number} HIGH - Try 8 samples\n */\nvar MSAA_QUALITY;\n(function (MSAA_QUALITY) {\n    MSAA_QUALITY[MSAA_QUALITY[\"NONE\"] = 0] = \"NONE\";\n    MSAA_QUALITY[MSAA_QUALITY[\"LOW\"] = 2] = \"LOW\";\n    MSAA_QUALITY[MSAA_QUALITY[\"MEDIUM\"] = 4] = \"MEDIUM\";\n    MSAA_QUALITY[MSAA_QUALITY[\"HIGH\"] = 8] = \"HIGH\";\n})(MSAA_QUALITY || (MSAA_QUALITY = {}));\n/**\n * Constants for various buffer types in Pixi\n *\n * @see PIXI.BUFFER_TYPE\n *\n * @name BUFFER_TYPE\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} ELEMENT_ARRAY_BUFFER - buffer type for using as an index buffer\n * @property {number} ARRAY_BUFFER - buffer type for using attribute data\n * @property {number} UNIFORM_BUFFER - the buffer type is for uniform buffer objects\n */\nvar BUFFER_TYPE;\n(function (BUFFER_TYPE) {\n    BUFFER_TYPE[BUFFER_TYPE[\"ELEMENT_ARRAY_BUFFER\"] = 34963] = \"ELEMENT_ARRAY_BUFFER\";\n    BUFFER_TYPE[BUFFER_TYPE[\"ARRAY_BUFFER\"] = 34962] = \"ARRAY_BUFFER\";\n    // NOT YET SUPPORTED\n    BUFFER_TYPE[BUFFER_TYPE[\"UNIFORM_BUFFER\"] = 35345] = \"UNIFORM_BUFFER\";\n})(BUFFER_TYPE || (BUFFER_TYPE = {}));\n\nfunction sortChildren(a, b) {\n    if (a.zIndex === b.zIndex) {\n        return a._lastSortedIndex - b._lastSortedIndex;\n    }\n    return a.zIndex - b.zIndex;\n}\n/**\n * Container is a general-purpose display object that holds children. It also adds built-in support for advanced\n * rendering features like masking and filtering.\n *\n * It is the base class of all display objects that act as a container for other objects, including Graphics\n * and Sprite.\n *\n * ```js\n * import { BlurFilter } from '@pixi/filter-blur';\n * import { Container } from '@pixi/display';\n * import { Graphics } from '@pixi/graphics';\n * import { Sprite } from '@pixi/sprite';\n *\n * let container = new Container();\n * let sprite = Sprite.from(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\");\n *\n * sprite.width = 512;\n * sprite.height = 512;\n *\n * // Adds a sprite as a child to this container. As a result, the sprite will be rendered whenever the container\n * // is rendered.\n * container.addChild(sprite);\n *\n * // Blurs whatever is rendered by the container\n * container.filters = [new BlurFilter()];\n *\n * // Only the contents within a circle at the center should be rendered onto the screen.\n * container.mask = new Graphics()\n *  .beginFill(0xffffff)\n *  .drawCircle(sprite.width / 2, sprite.height / 2, Math.min(sprite.width, sprite.height) / 2)\n *  .endFill();\n * ```\n *\n * @class\n * @extends PIXI.DisplayObject\n * @memberof PIXI\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super.call(this) || this;\n        /**\n         * The array of children of this container.\n         *\n         * @member {PIXI.DisplayObject[]}\n         * @readonly\n         */\n        _this.children = [];\n        /**\n         * If set to true, the container will sort its children by zIndex value\n         * when updateTransform() is called, or manually if sortChildren() is called.\n         *\n         * This actually changes the order of elements in the array, so should be treated\n         * as a basic solution that is not performant compared to other solutions,\n         * such as @link https://github.com/pixijs/pixi-display\n         *\n         * Also be aware of that this may not work nicely with the addChildAt() function,\n         * as the zIndex sorting may cause the child to automatically sorted to another position.\n         *\n         * @see PIXI.settings.SORTABLE_CHILDREN\n         *\n         * @member {boolean}\n         */\n        _this.sortableChildren = settings.settings.SORTABLE_CHILDREN;\n        /**\n         * Should children be sorted by zIndex at the next updateTransform call.\n         *\n         * Will get automatically set to true if a new child is added, or if a child's zIndex changes.\n         *\n         * @member {boolean}\n         */\n        _this.sortDirty = false;\n        return _this;\n        /**\n         * Fired when a DisplayObject is added to this Container.\n         *\n         * @event PIXI.Container#childAdded\n         * @param {PIXI.DisplayObject} child - The child added to the Container.\n         * @param {PIXI.Container} container - The container that added the child.\n         * @param {number} index - The children's index of the added child.\n         */\n        /**\n         * Fired when a DisplayObject is removed from this Container.\n         *\n         * @event PIXI.DisplayObject#removedFrom\n         * @param {PIXI.DisplayObject} child - The child removed from the Container.\n         * @param {PIXI.Container} container - The container that removed removed the child.\n         * @param {number} index - The former children's index of the removed child\n         */\n    }\n    /**\n     * Overridable method that can be used by Container subclasses whenever the children array is modified\n     *\n     * @protected\n     */\n    Container.prototype.onChildrenChange = function (_length) {\n        /* empty */\n    };\n    /**\n     * Adds one or more children to the container.\n     *\n     * Multiple items can be added like so: `myContainer.addChild(thingOne, thingTwo, thingThree)`\n     *\n     * @param {...PIXI.DisplayObject} children - The DisplayObject(s) to add to the container\n     * @return {PIXI.DisplayObject} The first child that was added.\n     */\n    Container.prototype.addChild = function () {\n        var arguments$1 = arguments;\n\n        var children = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            children[_i] = arguments$1[_i];\n        }\n        // if there is only one argument we can bypass looping through the them\n        if (children.length > 1) {\n            // loop through the array and add all children\n            for (var i = 0; i < children.length; i++) {\n                // eslint-disable-next-line prefer-rest-params\n                this.addChild(children[i]);\n            }\n        }\n        else {\n            var child = children[0];\n            // if the child has a parent then lets remove it as PixiJS objects can only exist in one place\n            if (child.parent) {\n                child.parent.removeChild(child);\n            }\n            child.parent = this;\n            this.sortDirty = true;\n            // ensure child transform will be recalculated\n            child.transform._parentID = -1;\n            this.children.push(child);\n            // ensure bounds will be recalculated\n            this._boundsID++;\n            // TODO - lets either do all callbacks or all events.. not both!\n            this.onChildrenChange(this.children.length - 1);\n            this.emit('childAdded', child, this, this.children.length - 1);\n            child.emit('added', this);\n        }\n        return children[0];\n    };\n    /**\n     * Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown\n     *\n     * @param {PIXI.DisplayObject} child - The child to add\n     * @param {number} index - The index to place the child in\n     * @return {PIXI.DisplayObject} The child that was added.\n     */\n    Container.prototype.addChildAt = function (child, index) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error(child + \"addChildAt: The index \" + index + \" supplied is out of bounds \" + this.children.length);\n        }\n        if (child.parent) {\n            child.parent.removeChild(child);\n        }\n        child.parent = this;\n        this.sortDirty = true;\n        // ensure child transform will be recalculated\n        child.transform._parentID = -1;\n        this.children.splice(index, 0, child);\n        // ensure bounds will be recalculated\n        this._boundsID++;\n        // TODO - lets either do all callbacks or all events.. not both!\n        this.onChildrenChange(index);\n        child.emit('added', this);\n        this.emit('childAdded', child, this, index);\n        return child;\n    };\n    /**\n     * Swaps the position of 2 Display Objects within this container.\n     *\n     * @param {PIXI.DisplayObject} child - First display object to swap\n     * @param {PIXI.DisplayObject} child2 - Second display object to swap\n     */\n    Container.prototype.swapChildren = function (child, child2) {\n        if (child === child2) {\n            return;\n        }\n        var index1 = this.getChildIndex(child);\n        var index2 = this.getChildIndex(child2);\n        this.children[index1] = child2;\n        this.children[index2] = child;\n        this.onChildrenChange(index1 < index2 ? index1 : index2);\n    };\n    /**\n     * Returns the index position of a child DisplayObject instance\n     *\n     * @param {PIXI.DisplayObject} child - The DisplayObject instance to identify\n     * @return {number} The index position of the child display object to identify\n     */\n    Container.prototype.getChildIndex = function (child) {\n        var index = this.children.indexOf(child);\n        if (index === -1) {\n            throw new Error('The supplied DisplayObject must be a child of the caller');\n        }\n        return index;\n    };\n    /**\n     * Changes the position of an existing child in the display object container\n     *\n     * @param {PIXI.DisplayObject} child - The child DisplayObject instance for which you want to change the index number\n     * @param {number} index - The resulting index number for the child display object\n     */\n    Container.prototype.setChildIndex = function (child, index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error(\"The index \" + index + \" supplied is out of bounds \" + this.children.length);\n        }\n        var currentIndex = this.getChildIndex(child);\n        utils.removeItems(this.children, currentIndex, 1); // remove from old position\n        this.children.splice(index, 0, child); // add at new position\n        this.onChildrenChange(index);\n    };\n    /**\n     * Returns the child at the specified index\n     *\n     * @param {number} index - The index to get the child at\n     * @return {PIXI.DisplayObject} The child at the given index, if any.\n     */\n    Container.prototype.getChildAt = function (index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error(\"getChildAt: Index (\" + index + \") does not exist.\");\n        }\n        return this.children[index];\n    };\n    /**\n     * Removes one or more children from the container.\n     *\n     * @param {...PIXI.DisplayObject} children - The DisplayObject(s) to remove\n     * @return {PIXI.DisplayObject} The first child that was removed.\n     */\n    Container.prototype.removeChild = function () {\n        var arguments$1 = arguments;\n\n        var children = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            children[_i] = arguments$1[_i];\n        }\n        // if there is only one argument we can bypass looping through the them\n        if (children.length > 1) {\n            // loop through the arguments property and remove all children\n            for (var i = 0; i < children.length; i++) {\n                this.removeChild(children[i]);\n            }\n        }\n        else {\n            var child = children[0];\n            var index = this.children.indexOf(child);\n            if (index === -1)\n                { return null; }\n            child.parent = null;\n            // ensure child transform will be recalculated\n            child.transform._parentID = -1;\n            utils.removeItems(this.children, index, 1);\n            // ensure bounds will be recalculated\n            this._boundsID++;\n            // TODO - lets either do all callbacks or all events.. not both!\n            this.onChildrenChange(index);\n            child.emit('removed', this);\n            this.emit('childRemoved', child, this, index);\n        }\n        return children[0];\n    };\n    /**\n     * Removes a child from the specified index position.\n     *\n     * @param {number} index - The index to get the child from\n     * @return {PIXI.DisplayObject} The child that was removed.\n     */\n    Container.prototype.removeChildAt = function (index) {\n        var child = this.getChildAt(index);\n        // ensure child transform will be recalculated..\n        child.parent = null;\n        child.transform._parentID = -1;\n        utils.removeItems(this.children, index, 1);\n        // ensure bounds will be recalculated\n        this._boundsID++;\n        // TODO - lets either do all callbacks or all events.. not both!\n        this.onChildrenChange(index);\n        child.emit('removed', this);\n        this.emit('childRemoved', child, this, index);\n        return child;\n    };\n    /**\n     * Removes all children from this container that are within the begin and end indexes.\n     *\n     * @param {number} [beginIndex=0] - The beginning position.\n     * @param {number} [endIndex=this.children.length] - The ending position. Default value is size of the container.\n     * @returns {PIXI.DisplayObject[]} List of removed children\n     */\n    Container.prototype.removeChildren = function (beginIndex, endIndex) {\n        if (beginIndex === void 0) { beginIndex = 0; }\n        if (endIndex === void 0) { endIndex = this.children.length; }\n        var begin = beginIndex;\n        var end = endIndex;\n        var range = end - begin;\n        var removed;\n        if (range > 0 && range <= end) {\n            removed = this.children.splice(begin, range);\n            for (var i = 0; i < removed.length; ++i) {\n                removed[i].parent = null;\n                if (removed[i].transform) {\n                    removed[i].transform._parentID = -1;\n                }\n            }\n            this._boundsID++;\n            this.onChildrenChange(beginIndex);\n            for (var i = 0; i < removed.length; ++i) {\n                removed[i].emit('removed', this);\n                this.emit('childRemoved', removed[i], this, i);\n            }\n            return removed;\n        }\n        else if (range === 0 && this.children.length === 0) {\n            return [];\n        }\n        throw new RangeError('removeChildren: numeric values are outside the acceptable range.');\n    };\n    /**\n     * Sorts children by zIndex. Previous order is maintained for 2 children with the same zIndex.\n     */\n    Container.prototype.sortChildren = function () {\n        var sortRequired = false;\n        for (var i = 0, j = this.children.length; i < j; ++i) {\n            var child = this.children[i];\n            child._lastSortedIndex = i;\n            if (!sortRequired && child.zIndex !== 0) {\n                sortRequired = true;\n            }\n        }\n        if (sortRequired && this.children.length > 1) {\n            this.children.sort(sortChildren);\n        }\n        this.sortDirty = false;\n    };\n    /**\n     * Updates the transform on all children of this container for rendering\n     */\n    Container.prototype.updateTransform = function () {\n        if (this.sortableChildren && this.sortDirty) {\n            this.sortChildren();\n        }\n        this._boundsID++;\n        this.transform.updateTransform(this.parent.transform);\n        // TODO: check render flags, how to process stuff here\n        this.worldAlpha = this.alpha * this.parent.worldAlpha;\n        for (var i = 0, j = this.children.length; i < j; ++i) {\n            var child = this.children[i];\n            if (child.visible) {\n                child.updateTransform();\n            }\n        }\n    };\n    /**\n     * Recalculates the bounds of the container.\n     *\n     * This implementation will automatically fit the children's bounds into the calculation. Each child's bounds\n     * is limited to its mask's bounds or filterArea, if any is applied.\n     */\n    Container.prototype.calculateBounds = function () {\n        this._bounds.clear();\n        this._calculateBounds();\n        for (var i = 0; i < this.children.length; i++) {\n            var child = this.children[i];\n            if (!child.visible || !child.renderable) {\n                continue;\n            }\n            child.calculateBounds();\n            // TODO: filter+mask, need to mask both somehow\n            if (child._mask) {\n                var maskObject = (child._mask.maskObject || child._mask);\n                maskObject.calculateBounds();\n                this._bounds.addBoundsMask(child._bounds, maskObject._bounds);\n            }\n            else if (child.filterArea) {\n                this._bounds.addBoundsArea(child._bounds, child.filterArea);\n            }\n            else {\n                this._bounds.addBounds(child._bounds);\n            }\n        }\n        this._bounds.updateID = this._boundsID;\n    };\n    /**\n     * Retrieves the local bounds of the displayObject as a rectangle object.\n     *\n     * Calling `getLocalBounds` may invalidate the `_bounds` of the whole subtree below. If using it inside a render()\n     * call, it is advised to call `getBounds()` immediately after to recalculate the world bounds of the subtree.\n     *\n     * @param {PIXI.Rectangle} [rect] - Optional rectangle to store the result of the bounds calculation.\n     * @param {boolean} [skipChildrenUpdate=false] - Setting to `true` will stop re-calculation of children transforms,\n     *  it was default behaviour of pixi 4.0-5.2 and caused many problems to users.\n     * @return {PIXI.Rectangle} The rectangular bounding area.\n     */\n    Container.prototype.getLocalBounds = function (rect, skipChildrenUpdate) {\n        if (skipChildrenUpdate === void 0) { skipChildrenUpdate = false; }\n        var result = _super.prototype.getLocalBounds.call(this, rect);\n        if (!skipChildrenUpdate) {\n            for (var i = 0, j = this.children.length; i < j; ++i) {\n                var child = this.children[i];\n                if (child.visible) {\n                    child.updateTransform();\n                }\n            }\n        }\n        return result;\n    };\n    /**\n     * Recalculates the content bounds of this object. This should be overriden to\n     * calculate the bounds of this specific object (not including children).\n     *\n     * @protected\n     */\n    Container.prototype._calculateBounds = function () {\n        // FILL IN//\n    };\n    /**\n     * Renders the object using the WebGL renderer.\n     *\n     * The [_render]{@link PIXI.Container#_render} method is be overriden for rendering the contents of the\n     * container itself. This `render` method will invoke it, and also invoke the `render` methods of all\n     * children afterward.\n     *\n     * If `renderable` or `visible` is false or if `worldAlpha` is not positive, this implementation will entirely\n     * skip rendering. See {@link PIXI.DisplayObject} for choosing between `renderable` or `visible`. Generally,\n     * setting alpha to zero is not recommended for purely skipping rendering.\n     *\n     * When your scene becomes large (especially when it is larger than can be viewed in a single screen), it is\n     * advised to employ **culling** to automatically skip rendering objects outside of the current screen. The\n     * [@pixi-essentials/cull]{@link https://www.npmjs.com/package/@pixi-essentials/cull} and\n     * [pixi-cull]{@link https://www.npmjs.com/package/pixi-cull} packages do this out of the box.\n     *\n     * The [renderAdvanced]{@link PIXI.Container#renderAdvanced} method is internally used when when masking or\n     * filtering is applied on a container. This does, however, break batching and can affect performance when\n     * masking and filtering is applied extensively throughout the scene graph.\n     *\n     * @param {PIXI.Renderer} renderer - The renderer\n     */\n    Container.prototype.render = function (renderer) {\n        // if the object is not visible or the alpha is 0 then no need to render this element\n        if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n            return;\n        }\n        // do a quick check to see if this element has a mask or a filter.\n        if (this._mask || (this.filters && this.filters.length)) {\n            this.renderAdvanced(renderer);\n        }\n        else {\n            this._render(renderer);\n            // simple render children!\n            for (var i = 0, j = this.children.length; i < j; ++i) {\n                this.children[i].render(renderer);\n            }\n        }\n    };\n    /**\n     * Render the object using the WebGL renderer and advanced features.\n     *\n     * @protected\n     * @param {PIXI.Renderer} renderer - The renderer\n     */\n    Container.prototype.renderAdvanced = function (renderer) {\n        var filters = this.filters;\n        var mask = this._mask;\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (filters) {\n            if (!this._enabledFilters) {\n                this._enabledFilters = [];\n            }\n            this._enabledFilters.length = 0;\n            for (var i = 0; i < filters.length; i++) {\n                if (filters[i].enabled) {\n                    this._enabledFilters.push(filters[i]);\n                }\n            }\n        }\n        var flush = (filters && this._enabledFilters && this._enabledFilters.length)\n            || (mask && (!mask.isMaskData\n                || (mask.enabled && (mask.autoDetect || mask.type !== MASK_TYPES.NONE))));\n        if (flush) {\n            renderer.batch.flush();\n        }\n        if (filters && this._enabledFilters && this._enabledFilters.length) {\n            renderer.filter.push(this, this._enabledFilters);\n        }\n        if (mask) {\n            renderer.mask.push(this, this._mask);\n        }\n        // add this object to the batch, only rendered if it has a texture.\n        this._render(renderer);\n        // now loop through the children and make sure they get rendered\n        for (var i = 0, j = this.children.length; i < j; i++) {\n            this.children[i].render(renderer);\n        }\n        if (flush) {\n            renderer.batch.flush();\n        }\n        if (mask) {\n            renderer.mask.pop(this);\n        }\n        if (filters && this._enabledFilters && this._enabledFilters.length) {\n            renderer.filter.pop();\n        }\n    };\n    /**\n     * To be overridden by the subclasses.\n     *\n     * @protected\n     * @param {PIXI.Renderer} renderer - The renderer\n     */\n    Container.prototype._render = function (_renderer) {\n        // this is where content itself gets rendered...\n    };\n    /**\n     * Removes all internal references and listeners as well as removes children from the display list.\n     * Do not use a Container after calling `destroy`.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the texture of the child sprite\n     * @param {boolean} [options.baseTexture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the base texture of the child sprite\n     */\n    Container.prototype.destroy = function (options) {\n        _super.prototype.destroy.call(this);\n        this.sortDirty = false;\n        var destroyChildren = typeof options === 'boolean' ? options : options && options.children;\n        var oldChildren = this.removeChildren(0, this.children.length);\n        if (destroyChildren) {\n            for (var i = 0; i < oldChildren.length; ++i) {\n                oldChildren[i].destroy(options);\n            }\n        }\n    };\n    Object.defineProperty(Container.prototype, \"width\", {\n        /**\n         * The width of the Container, setting this will actually modify the scale to achieve the value set\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this.scale.x * this.getLocalBounds().width;\n        },\n        set: function (value) {\n            var width = this.getLocalBounds().width;\n            if (width !== 0) {\n                this.scale.x = value / width;\n            }\n            else {\n                this.scale.x = 1;\n            }\n            this._width = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Container.prototype, \"height\", {\n        /**\n         * The height of the Container, setting this will actually modify the scale to achieve the value set\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this.scale.y * this.getLocalBounds().height;\n        },\n        set: function (value) {\n            var height = this.getLocalBounds().height;\n            if (height !== 0) {\n                this.scale.y = value / height;\n            }\n            else {\n                this.scale.y = 1;\n            }\n            this._height = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Container;\n}(DisplayObject));\n/**\n * Container default updateTransform, does update children of container.\n * Will crash if there's no parent element.\n *\n * @memberof PIXI.Container#\n * @method containerUpdateTransform\n */\nContainer.prototype.containerUpdateTransform = Container.prototype.updateTransform;\n\nexports.Bounds = Bounds;\nexports.Container = Container;\nexports.DisplayObject = DisplayObject;\nexports.TemporaryDisplayObject = TemporaryDisplayObject;\n//# sourceMappingURL=display.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","sortChildren","a","zIndex","_lastSortedIndex","defineProperty","value","settings","math","utils","SORTABLE_CHILDREN","Bounds","minY","minX","Infinity","maxY","maxX","rect","updateID","isEmpty","Bounds.prototype.isEmpty","clear","Bounds.prototype.clear","getRectangle","Bounds.prototype.getRectangle","Rectangle","EMPTY","x","y","width","height","addPoint","Bounds.prototype.addPoint","point","Math","min","max","addPointMatrix","Bounds.prototype.addPointMatrix","matrix","c","tx","ty","addQuad","Bounds.prototype.addQuad","vertices","addFrame","Bounds.prototype.addFrame","transform","x0","y0","x1","y1","addFrameMatrix","worldTransform","Bounds.prototype.addFrameMatrix","addVertexData","Bounds.prototype.addVertexData","vertexData","beginOffset","endOffset","i","addVertices","Bounds.prototype.addVertices","addVerticesMatrix","Bounds.prototype.addVerticesMatrix","padX","padY","rawX","rawY","addBounds","Bounds.prototype.addBounds","bounds","addBoundsMask","Bounds.prototype.addBoundsMask","mask","_minX","_minY","_maxX","_maxY","addBoundsMatrix","Bounds.prototype.addBoundsMatrix","addBoundsArea","Bounds.prototype.addBoundsArea","area","pad","Bounds.prototype.pad","paddingX","paddingY","addFramePad","Bounds.prototype.addFramePad","setPrototypeOf","__proto__","Array","p","hasOwnProperty","DisplayObject","_super","_this","call","tempDisplayObjectParent","Transform","alpha","visible","renderable","parent","worldAlpha","_zIndex","filterArea","filters","_enabledFilters","_bounds","_localBounds","_boundsID","_boundsRect","_localBoundsRect","_mask","_maskRefCount","_destroyed","isSprite","isMask","mixin","DisplayObject.mixin","source","keys","length","propertyName","getOwnPropertyDescriptor","get","enumerable","configurable","_recursivePostUpdateTransform","DisplayObject.prototype._recursivePostUpdateTransform","updateTransform","_tempDisplayObjectParent","DisplayObject.prototype.updateTransform","getBounds","DisplayObject.prototype.getBounds","skipUpdate","calculateBounds","getLocalBounds","DisplayObject.prototype.getLocalBounds","transformRef","parentRef","worldBounds","worldBoundsID","toGlobal","DisplayObject.prototype.toGlobal","position","displayObjectUpdateTransform","apply","toLocal","DisplayObject.prototype.toLocal","from","applyInverse","setParent","DisplayObject.prototype.setParent","container","addChild","Error","setTransform","DisplayObject.prototype.setTransform","scaleX","scaleY","rotation","skewX","skewY","pivotX","pivotY","scale","skew","pivot","destroy","DisplayObject.prototype.destroy","_options","removeChild","emit","removeAllListeners","hitArea","interactiveChildren","interactive","TemporaryDisplayObject","enableTempParent","DisplayObject.prototype.enableTempParent","myParent","disableTempParent","DisplayObject.prototype.disableTempParent","cacheParent","set","localTransform","copyFrom","RAD_TO_DEG","DEG_TO_RAD","sortDirty","item","maskObject","EventEmitter","arguments","ENV","RENDERER_TYPE","BUFFER_BITS","BLEND_MODES","DRAW_MODES","FORMATS","TARGETS","TYPES","SAMPLER_TYPES","SCALE_MODES","WRAP_MODES","MIPMAP_MODES","ALPHA_MODES","CLEAR_MODES","GC_MODES","PRECISION","MASK_TYPES","MSAA_QUALITY","BUFFER_TYPE","Container","children","sortableChildren","onChildrenChange","Container.prototype.onChildrenChange","_length","Container.prototype.addChild","arguments$1","_i","child","_parentID","push","addChildAt","Container.prototype.addChildAt","index","splice","swapChildren","Container.prototype.swapChildren","child2","index1","getChildIndex","index2","Container.prototype.getChildIndex","indexOf","setChildIndex","Container.prototype.setChildIndex","currentIndex","removeItems","getChildAt","Container.prototype.getChildAt","Container.prototype.removeChild","removeChildAt","Container.prototype.removeChildAt","removeChildren","Container.prototype.removeChildren","beginIndex","endIndex","begin","range","end","removed","RangeError","Container.prototype.sortChildren","sortRequired","j","sort","Container.prototype.updateTransform","Container.prototype.calculateBounds","_calculateBounds","Container.prototype.getLocalBounds","skipChildrenUpdate","result","Container.prototype._calculateBounds","render","Container.prototype.render","renderer","renderAdvanced","_render","Container.prototype.renderAdvanced","enabled","flush","isMaskData","autoDetect","type","NONE","batch","filter","pop","Container.prototype._render","_renderer","Container.prototype.destroy","options","destroyChildren","oldChildren","_width","_height","containerUpdateTransform"]
}
