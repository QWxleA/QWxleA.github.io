{
"version":3,
"file":"module$node_modules$chrono_node$dist$locales$en$constants.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/chrono-node/dist/locales/en/constants.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$locales$en$constants\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseTimeUnits = exports.TIME_UNITS_PATTERN = exports.parseYear = exports.YEAR_PATTERN = exports.parseOrdinalNumberPattern = exports.ORDINAL_NUMBER_PATTERN = exports.parseNumberPattern = exports.NUMBER_PATTERN = exports.TIME_UNIT_DICTIONARY = exports.ORDINAL_WORD_DICTIONARY = exports.INTEGER_WORD_DICTIONARY = exports.MONTH_DICTIONARY = exports.FULL_MONTH_NAME_DICTIONARY = exports.WEEKDAY_DICTIONARY = void 0;\nconst pattern_1 = require(\"../../utils/pattern\");\nconst years_1 = require(\"../../calculation/years\");\nexports.WEEKDAY_DICTIONARY = {\n    sunday: 0,\n    sun: 0,\n    \"sun.\": 0,\n    monday: 1,\n    mon: 1,\n    \"mon.\": 1,\n    tuesday: 2,\n    tue: 2,\n    \"tue.\": 2,\n    wednesday: 3,\n    wed: 3,\n    \"wed.\": 3,\n    thursday: 4,\n    thurs: 4,\n    \"thurs.\": 4,\n    thur: 4,\n    \"thur.\": 4,\n    thu: 4,\n    \"thu.\": 4,\n    friday: 5,\n    fri: 5,\n    \"fri.\": 5,\n    saturday: 6,\n    sat: 6,\n    \"sat.\": 6,\n};\nexports.FULL_MONTH_NAME_DICTIONARY = {\n    january: 1,\n    february: 2,\n    march: 3,\n    april: 4,\n    may: 5,\n    june: 6,\n    july: 7,\n    august: 8,\n    september: 9,\n    october: 10,\n    november: 11,\n    december: 12,\n};\nexports.MONTH_DICTIONARY = Object.assign(Object.assign({}, exports.FULL_MONTH_NAME_DICTIONARY), { jan: 1, \"jan.\": 1, feb: 2, \"feb.\": 2, mar: 3, \"mar.\": 3, apr: 4, \"apr.\": 4, jun: 6, \"jun.\": 6, jul: 7, \"jul.\": 7, aug: 8, \"aug.\": 8, sep: 9, \"sep.\": 9, sept: 9, \"sept.\": 9, oct: 10, \"oct.\": 10, nov: 11, \"nov.\": 11, dec: 12, \"dec.\": 12 });\nexports.INTEGER_WORD_DICTIONARY = {\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n    ten: 10,\n    eleven: 11,\n    twelve: 12,\n};\nexports.ORDINAL_WORD_DICTIONARY = {\n    first: 1,\n    second: 2,\n    third: 3,\n    fourth: 4,\n    fifth: 5,\n    sixth: 6,\n    seventh: 7,\n    eighth: 8,\n    ninth: 9,\n    tenth: 10,\n    eleventh: 11,\n    twelfth: 12,\n    thirteenth: 13,\n    fourteenth: 14,\n    fifteenth: 15,\n    sixteenth: 16,\n    seventeenth: 17,\n    eighteenth: 18,\n    nineteenth: 19,\n    twentieth: 20,\n    \"twenty first\": 21,\n    \"twenty-first\": 21,\n    \"twenty second\": 22,\n    \"twenty-second\": 22,\n    \"twenty third\": 23,\n    \"twenty-third\": 23,\n    \"twenty fourth\": 24,\n    \"twenty-fourth\": 24,\n    \"twenty fifth\": 25,\n    \"twenty-fifth\": 25,\n    \"twenty sixth\": 26,\n    \"twenty-sixth\": 26,\n    \"twenty seventh\": 27,\n    \"twenty-seventh\": 27,\n    \"twenty eighth\": 28,\n    \"twenty-eighth\": 28,\n    \"twenty ninth\": 29,\n    \"twenty-ninth\": 29,\n    \"thirtieth\": 30,\n    \"thirty first\": 31,\n    \"thirty-first\": 31,\n};\nexports.TIME_UNIT_DICTIONARY = {\n    sec: \"second\",\n    second: \"second\",\n    seconds: \"second\",\n    min: \"minute\",\n    mins: \"minute\",\n    minute: \"minute\",\n    minutes: \"minute\",\n    h: \"hour\",\n    hr: \"hour\",\n    hrs: \"hour\",\n    hour: \"hour\",\n    hours: \"hour\",\n    day: \"d\",\n    days: \"d\",\n    week: \"week\",\n    weeks: \"week\",\n    month: \"month\",\n    months: \"month\",\n    y: \"year\",\n    yr: \"year\",\n    year: \"year\",\n    years: \"year\",\n};\nexports.NUMBER_PATTERN = `(?:${pattern_1.matchAnyPattern(exports.INTEGER_WORD_DICTIONARY)}|[0-9]+|[0-9]+\\\\.[0-9]+|half(?:\\\\s*an?)?|an?(?:\\\\s*few)?|few|several|a?\\\\s*couple\\\\s*(?:of)?)`;\nfunction parseNumberPattern(match) {\n    const num = match.toLowerCase();\n    if (exports.INTEGER_WORD_DICTIONARY[num] !== undefined) {\n        return exports.INTEGER_WORD_DICTIONARY[num];\n    }\n    else if (num === \"a\" || num === \"an\") {\n        return 1;\n    }\n    else if (num.match(/few/)) {\n        return 3;\n    }\n    else if (num.match(/half/)) {\n        return 0.5;\n    }\n    else if (num.match(/couple/)) {\n        return 2;\n    }\n    else if (num.match(/several/)) {\n        return 7;\n    }\n    return parseFloat(num);\n}\nexports.parseNumberPattern = parseNumberPattern;\nexports.ORDINAL_NUMBER_PATTERN = `(?:${pattern_1.matchAnyPattern(exports.ORDINAL_WORD_DICTIONARY)}|[0-9]{1,2}(?:st|nd|rd|th)?)`;\nfunction parseOrdinalNumberPattern(match) {\n    let num = match.toLowerCase();\n    if (exports.ORDINAL_WORD_DICTIONARY[num] !== undefined) {\n        return exports.ORDINAL_WORD_DICTIONARY[num];\n    }\n    num = num.replace(/(?:st|nd|rd|th)$/i, \"\");\n    return parseInt(num);\n}\nexports.parseOrdinalNumberPattern = parseOrdinalNumberPattern;\nexports.YEAR_PATTERN = `(?:[1-9][0-9]{0,3}\\\\s*(?:BE|AD|BC)|[1-2][0-9]{3}|[5-9][0-9])`;\nfunction parseYear(match) {\n    if (/BE/i.test(match)) {\n        match = match.replace(/BE/i, \"\");\n        return parseInt(match) - 543;\n    }\n    if (/BC/i.test(match)) {\n        match = match.replace(/BC/i, \"\");\n        return -parseInt(match);\n    }\n    if (/AD/i.test(match)) {\n        match = match.replace(/AD/i, \"\");\n        return parseInt(match);\n    }\n    const rawYearNumber = parseInt(match);\n    return years_1.findMostLikelyADYear(rawYearNumber);\n}\nexports.parseYear = parseYear;\nconst SINGLE_TIME_UNIT_PATTERN = `(${exports.NUMBER_PATTERN})\\\\s{0,5}(${pattern_1.matchAnyPattern(exports.TIME_UNIT_DICTIONARY)})\\\\s{0,5}`;\nconst SINGLE_TIME_UNIT_REGEX = new RegExp(SINGLE_TIME_UNIT_PATTERN, \"i\");\nexports.TIME_UNITS_PATTERN = pattern_1.repeatedTimeunitPattern(`(?:(?:about|around)\\\\s*)?`, SINGLE_TIME_UNIT_PATTERN);\nfunction parseTimeUnits(timeunitText) {\n    const fragments = {};\n    let remainingText = timeunitText;\n    let match = SINGLE_TIME_UNIT_REGEX.exec(remainingText);\n    while (match) {\n        collectDateTimeFragment(fragments, match);\n        remainingText = remainingText.substring(match[0].length);\n        match = SINGLE_TIME_UNIT_REGEX.exec(remainingText);\n    }\n    return fragments;\n}\nexports.parseTimeUnits = parseTimeUnits;\nfunction collectDateTimeFragment(fragments, match) {\n    const num = parseNumberPattern(match[1]);\n    const unit = exports.TIME_UNIT_DICTIONARY[match[2].toLowerCase()];\n    fragments[unit] = num;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","parseNumberPattern","match","num","toLowerCase","undefined","INTEGER_WORD_DICTIONARY","parseFloat","Object","defineProperty","value","parseTimeUnits","TIME_UNITS_PATTERN","parseYear","YEAR_PATTERN","parseOrdinalNumberPattern","ORDINAL_NUMBER_PATTERN","NUMBER_PATTERN","TIME_UNIT_DICTIONARY","ORDINAL_WORD_DICTIONARY","MONTH_DICTIONARY","FULL_MONTH_NAME_DICTIONARY","WEEKDAY_DICTIONARY","pattern_1","years_1","sunday","sun","monday","mon","tuesday","tue","wednesday","wed","thursday","thurs","thur","thu","friday","fri","saturday","sat","january","february","march","april","may","june","july","august","september","october","november","december","assign","jan","feb","mar","apr","jun","jul","aug","sep","sept","oct","nov","dec","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","first","second","third","fourth","fifth","sixth","seventh","eighth","ninth","tenth","eleventh","twelfth","thirteenth","fourteenth","fifteenth","sixteenth","seventeenth","eighteenth","nineteenth","twentieth","sec","seconds","min","mins","minute","minutes","h","hr","hrs","hour","hours","day","days","week","weeks","month","months","y","yr","year","years","matchAnyPattern","replace","parseInt","test","rawYearNumber","findMostLikelyADYear","SINGLE_TIME_UNIT_PATTERN","SINGLE_TIME_UNIT_REGEX","RegExp","repeatedTimeunitPattern","timeunitText","fragments","exec","remainingText","unit","substring","length"]
}
