{"version":3,"sources":["frontend/handler/ui.cljs"],"mappings":"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","names":["frontend.handler.ui/get-css-var-value","var-name","js/getComputedStyle","js/document","frontend.handler.ui/get-right-sidebar-width","or__4253__auto__","js/document.getElementById","frontend.handler.ui/persist-right-sidebar-width!","frontend.storage/set","frontend.handler.ui/restore-right-sidebar-width!","temp__5720__auto__","width","frontend.storage/get","frontend.handler.ui/close-left-sidebar!","elem","goog.dom/getElement","frontend.handler.ui/toggle-right-sidebar!","cljs.core/deref","frontend.state/state","frontend.state/toggle-sidebar-open?!","frontend.handler.ui/persist-right-sidebar-state!","sidebar-open?","data","frontend.handler.ui/restore-right-sidebar-state!","data'","map__77331","cljs.core/--destructure-map","cljs.core.get","open?","collapsed","blocks","frontend.state/set-state!","frontend.handler.ui/toggle-contents!","current-repo","frontend.state/get-current-repo","id","frontend.state/sidebar-block-exists?","frontend.state/sidebar-remove-block!","frontend.state/sidebar-add-block!","frontend.handler.ui/toggle-help!","frontend.handler.ui/toggle-settings-modal!","frontend.state/toggle-settings!","var_args","G__77353","frontend.handler.ui/re-render-root!","js/Error","p__77358","map__77359","frontend.handler.ui.re_render_root_BANG_","clear-all-query-state?","component","frontend.state/get-root-component","frontend.db/clear-query-state!","frontend.db/clear-query-state-without-refs-and-embeds!","rum.core/request-render","seq__77360","cljs.core/seq","chunk__77361","count__77362","i__77363","cljs.core/chunked-seq?","c__4679__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","frontend.state/get-custom-query-components","frontend.handler.ui/re-render-file!","frontend.state/get-file-component","cljs.core._EQ_","frontend.state/get-current-route","frontend.handler.ui/highlight-element!","fragment","and__4251__auto__","cljs.core.subs","frontend.util/uuid-string?","elements","cljs.core.array_seq","js/document.getElementsByClassName","frontend.util/scroll-to-element","frontend.handler.ui.goog$module$goog$object.get","frontend.state.exit_editing_and_set_selected_blocks_BANG_","element","dommy.core.add_class_BANG_","js/setTimeout","dommy.core.remove_class_BANG_","frontend.handler.ui/add-style-if-exists!","style","frontend.state/get-custom-css-link","frontend.db.model/get-custom-css","frontend.util/add-style!","frontend.handler.ui/*js-execed","cljs.core.atom","frontend.handler.ui/exec-js-if-exists-&-allowed!","t","frontend.mobile.util/is-native-platform?","href","frontend.state/get-custom-js-link","frontend.config.get_custom_js_path","k","execed","cljs.core.swap_BANG_","cljs.core/conj","execed?","cljs.core/contains?","ask-allow","r","js/confirm","js/Date.now","allowed!","should-ask?","cljs.core.not_EQ_","clojure.string/starts-with?","frontend.loader.load","js/console.log","p1__77366#","frontend.util.p_handle","frontend.fs.read_file","frontend.util/electron?","frontend.config/get-repo-dir","scripts","clojure.string/trim","clojure.string/blank?","e77393","js/eval","e","js/console.error","frontend.handler.ui/toggle-wide-mode!","cljs.core/not","frontend.state/get-wide-mode?","frontend.state/toggle-wide-mode!","frontend.handler.ui/auto-complete-prev","state","current-idx","matched","frontend.util/stop","cljs.core/dec","cljs.core/reset!","modal","height","scroll-top","frontend.handler.ui/auto-complete-next","total","cljs.core/inc","frontend.handler.ui/auto-complete-complete","vec__77398","cljs.core.nth","map__77401","on-chosen","on-enter","G__77402","G__77403","frontend.handler.ui/auto-complete-shift-complete","vec__77404","map__77407","on-shift-chosen","G__77410","G__77411","fexpr__77409","frontend.handler.ui/auto-complete-open-link","vec__77412","map__77415","on-chosen-open-link","frontend.state/editing?","G__77417","G__77418","frontend.handler.ui/*internal-model","rum.core/cursor","frontend.handler.ui/non-edit-input?","js/document.activeElement","frontend.util/input?","frontend.handler.ui/input-or-select?","frontend.util/select?","frontend.handler.ui/inc-date","date","n","cljs_time.core.plus","cljs_time.core.days","frontend.handler.ui/inc-week","cljs_time.core.weeks","frontend.handler.ui/shortcut-complete","map__77422","on-change","deadline-or-schedule?","cljs.core/last","G__77423","G__77424","frontend.handler.ui/shortcut-prev-day","_state","frontend.handler.ui/shortcut-next-day","frontend.handler.ui/shortcut-prev-week","frontend.handler.ui/shortcut-next-week","frontend.handler.ui/toggle-cards!","frontend.state/close-modal!","frontend.state/pub-event!","G__77426","frontend.handler.ui/open-new-window!","_e","frontend.handler.ui.open_new_window_BANG_","repo","electron.ipc.ipc"],"sourcesContent":["(ns frontend.handler.ui\n  (:require [cljs-time.core :refer [plus days weeks]]\n            [dommy.core :as dom]\n            [frontend.util :as util]\n            [frontend.db :as db]\n            [frontend.db.model :as db-model]\n            [frontend.config :as config]\n            [frontend.state :as state]\n            [frontend.storage :as storage]\n            [frontend.fs :as fs]\n            [frontend.loader :refer [load]]\n            [goog.dom :as gdom]\n            [goog.object :as gobj]\n            [clojure.string :as string]\n            [rum.core :as rum]\n            [frontend.mobile.util :as mobile]\n            [electron.ipc :as ipc]))\n\n(defn- get-css-var-value\n  [var-name]\n  (.getPropertyValue (js/getComputedStyle (.-documentElement js/document)) var-name))\n\n;; sidebars\n(defn- get-right-sidebar-width\n  []\n  (or (.. (js/document.getElementById \"right-sidebar\") -style -width)\n      (get-css-var-value \"--right-sidebar-width\")))\n\n(defn persist-right-sidebar-width!\n  []\n  (storage/set \"ls-right-sidebar-width\" (get-right-sidebar-width)))\n\n(defn restore-right-sidebar-width!\n  []\n  (when-let [width (storage/get \"ls-right-sidebar-width\")]\n    (.setProperty (.-style (js/document.getElementById \"right-sidebar\")) \"width\" width)))\n\n(defn close-left-sidebar!\n  []\n  (when-let [elem (gdom/getElement \"close-left-bar\")]\n    (.click elem)))\n\n(defn toggle-right-sidebar!\n  []\n  (when-not (:ui/sidebar-open? @state/state) (restore-right-sidebar-width!))\n  (state/toggle-sidebar-open?!))\n\n(defn persist-right-sidebar-state!\n  []\n  (let [sidebar-open? (:ui/sidebar-open? @state/state)\n        data (if sidebar-open? {:blocks (:sidebar/blocks @state/state)\n                                :collapsed (:ui/sidebar-collapsed-blocks @state/state)\n                                :open? true} {:open? false})]\n    (storage/set \"ls-right-sidebar-state\" data)))\n\n(defn restore-right-sidebar-state!\n  []\n  (when-let [data' (storage/get \"ls-right-sidebar-state\")]\n    (let [{:keys [open? collapsed blocks]} data']\n      (when open?\n        (state/set-state! :ui/sidebar-open? open?)\n        (state/set-state! :sidebar/blocks blocks)\n        (state/set-state! :ui/sidebar-collapsed-blocks collapsed)\n        (restore-right-sidebar-width!)))))\n\n(defn toggle-contents!\n  []\n  (when-let [current-repo (state/get-current-repo)]\n    (let [id \"contents\"]\n      (if (state/sidebar-block-exists? id)\n        (state/sidebar-remove-block! id)\n        (state/sidebar-add-block! current-repo id :contents)))))\n\n(defn toggle-help!\n  []\n  (when-let [current-repo (state/get-current-repo)]\n    (let [id \"help\"]\n      (if (state/sidebar-block-exists? id)\n        (state/sidebar-remove-block! id)\n        (state/sidebar-add-block! current-repo id :help)))))\n\n(defn toggle-settings-modal!\n  []\n  (when-not (:srs/mode? @state/state)\n    (state/toggle-settings!)))\n\n;; FIXME: re-render all embedded blocks since they will not be re-rendered automatically\n\n\n(defn re-render-root!\n  ([]\n   (re-render-root! {}))\n  ([{:keys [clear-all-query-state?]\n     :or {clear-all-query-state? false}}]\n   (when-let [component (state/get-root-component)]\n     (if clear-all-query-state?\n       (db/clear-query-state!)\n       (db/clear-query-state-without-refs-and-embeds!))\n     (rum/request-render component)\n     (doseq [component (state/get-custom-query-components)]\n       (rum/request-render component)))))\n\n(defn re-render-file!\n  []\n  (when-let [component (state/get-file-component)]\n    (when (= :file (state/get-current-route))\n      (rum/request-render component))))\n\n(defn highlight-element!\n  [fragment]\n  (let [id (and\n            (> (count fragment) 36)\n            (subs fragment (- (count fragment) 36)))]\n    (if (and id (util/uuid-string? id))\n      (let [elements (array-seq (js/document.getElementsByClassName id))]\n        (when (first elements)\n          (util/scroll-to-element (gobj/get (first elements) \"id\")))\n        (state/exit-editing-and-set-selected-blocks! elements))\n      (when-let [element (gdom/getElement fragment)]\n        (util/scroll-to-element fragment)\n        (dom/add-class! element \"block-highlight\")\n        (js/setTimeout #(dom/remove-class! element \"block-highlight\")\n                       4000)))))\n\n(defn add-style-if-exists!\n  []\n  (when-let [style (or\n                    (state/get-custom-css-link)\n                    (db-model/get-custom-css)\n                    ;; (state/get-custom-css-link)\n)]\n    (util/add-style! style)))\n\n(def *js-execed (atom #{}))\n\n(defn exec-js-if-exists-&-allowed!\n  [t]\n  (when-not (mobile/is-native-platform?)\n    (when-let [href (or\n                     (state/get-custom-js-link)\n                     (config/get-custom-js-path))]\n      (let [k (str \"ls-js-allowed-\" href)\n            execed #(swap! *js-execed conj href)\n            execed? (contains? @*js-execed href)\n            ask-allow #(let [r (js/confirm (t :plugin/custom-js-alert))]\n                         (if r\n                           (storage/set k (js/Date.now))\n                           (storage/set k false))\n                         r)\n            allowed! (storage/get k)\n            should-ask? (or (nil? allowed!)\n                            (> (- (js/Date.now) allowed!) 604800000))]\n        (when (and (not execed?)\n                   (not= false allowed!))\n          (if (string/starts-with? href \"http\")\n            (when (or (not should-ask?)\n                      (ask-allow))\n              (load href #(do (js/console.log \"[custom js]\" href) (execed))))\n            (util/p-handle\n             (fs/read-file (if (util/electron?) \"\" (config/get-repo-dir (state/get-current-repo))) href)\n             #(when-let [scripts (and % (string/trim %))]\n                (when-not (string/blank? scripts)\n                  (when (or (not should-ask?) (ask-allow))\n                    (try\n                      (js/eval scripts)\n                      (execed)\n                      (catch js/Error e\n                        (js/console.error \"[custom js]\" e)))))))))))))\n\n(defn toggle-wide-mode!\n  []\n  (storage/set :ui/wide-mode (not (state/get-wide-mode?)))\n  (state/toggle-wide-mode!))\n\n;; auto-complete\n(defn auto-complete-prev\n  [state e]\n  (let [current-idx (get state :frontend.ui/current-idx)\n        matched (first (:rum/args state))]\n    (util/stop e)\n    (cond\n      (>= @current-idx 1)\n      (swap! current-idx dec)\n      (= @current-idx 0)\n      (reset! current-idx (dec (count matched)))\n      :else nil)\n    (when-let [element (gdom/getElement (str \"ac-\" @current-idx))]\n      (let [modal (gobj/get (gdom/getElement \"ui__ac\") \"parentElement\")\n            height (or (gobj/get modal \"offsetHeight\") 300)\n            scroll-top (- (gobj/get element \"offsetTop\") (/ height 2))]\n        (set! (.-scrollTop modal) scroll-top)))))\n\n(defn auto-complete-next\n  [state e]\n  (let [current-idx (get state :frontend.ui/current-idx)\n        matched (first (:rum/args state))]\n    (util/stop e)\n    (let [total (count matched)]\n      (if (>= @current-idx (dec total))\n        (reset! current-idx 0)\n        (swap! current-idx inc)))\n    (when-let [element (gdom/getElement (str \"ac-\" @current-idx))]\n      (let [modal (gobj/get (gdom/getElement \"ui__ac\") \"parentElement\")\n            height (or (gobj/get modal \"offsetHeight\") 300)\n            scroll-top (- (gobj/get element \"offsetTop\") (/ height 2))]\n        (set! (.-scrollTop modal) scroll-top)))))\n\n(defn auto-complete-complete\n  [state e]\n  (let [[matched {:keys [on-chosen on-enter]}] (:rum/args state)\n        current-idx (get state :frontend.ui/current-idx)]\n    (util/stop e)\n    (if (and (seq matched)\n             (> (count matched)\n                @current-idx))\n      (on-chosen (nth matched @current-idx) false)\n      (and on-enter (on-enter state)))))\n\n(defn auto-complete-shift-complete\n  [state e]\n  (let [[matched {:keys [on-chosen on-shift-chosen on-enter]}] (:rum/args state)\n        current-idx (get state :frontend.ui/current-idx)]\n    (util/stop e)\n    (if (and (seq matched)\n             (> (count matched)\n                @current-idx))\n      ((or on-shift-chosen on-chosen) (nth matched @current-idx) false)\n      (and on-enter (on-enter state)))))\n\n(defn auto-complete-open-link\n  [state e]\n  (let [[matched {:keys [on-chosen-open-link]}] (:rum/args state)]\n    (when (and on-chosen-open-link (not (state/editing?)))\n      (let [current-idx (get state :frontend.ui/current-idx)]\n        (util/stop e)\n        (when (and (seq matched)\n                   (> (count matched)\n                      @current-idx))\n          (on-chosen-open-link (nth matched @current-idx) false))))))\n\n;; date-picker\n;; TODO: find a better way\n(def *internal-model (rum/cursor state/state :date-picker/date))\n\n(defn- non-edit-input?\n  []\n  (when-let [elem js/document.activeElement]\n    (and (util/input? elem)\n         (when-let [id (gobj/get elem \"id\")]\n           (not (string/starts-with? id \"edit-block-\"))))))\n\n(defn- input-or-select?\n  []\n  (when-let [elem js/document.activeElement]\n    (or (non-edit-input?)\n        (util/select? elem))))\n\n(defn- inc-date [date n] (plus date (days n)))\n\n(defn- inc-week [date n] (plus date (weeks n)))\n\n(defn shortcut-complete\n  [state e]\n  (let [{:keys [on-change deadline-or-schedule?]} (last (:rum/args state))]\n    (when (and on-change\n               (not (input-or-select?)))\n      (when-not deadline-or-schedule?\n        (on-change e @*internal-model)))))\n\n(defn shortcut-prev-day\n  [_state e]\n  (when-not (input-or-select?)\n    (util/stop e)\n    (swap! *internal-model inc-date -1)))\n\n(defn shortcut-next-day\n  [_state e]\n  (when-not (input-or-select?)\n    (util/stop e)\n    (swap! *internal-model inc-date 1)))\n\n(defn shortcut-prev-week\n  [_state e]\n  (when-not (input-or-select?)\n    (util/stop e)\n    (swap! *internal-model inc-week -1)))\n\n(defn shortcut-next-week\n  [_state e]\n  (when-not (input-or-select?)\n    (util/stop e)\n    (swap! *internal-model inc-week 1)))\n\n(defn toggle-cards!\n  []\n  (if (:modal/show? @state/state)\n    (state/close-modal!)\n    (state/pub-event! [:modal/show-cards])))\n\n(defn open-new-window!\n  \"Open a new Electron window.\n   No db cache persisting ensured. Should be handled by the caller.\"\n  ([_e]\n   (open-new-window! _e nil))\n  ([_e repo]\n   ;; TODO: find out a better way to open a new window with a different repo path. Using local storage for now\n   ;; TODO: also write local storage with the current repo state, to make behavior consistent\n   ;; then we can remove the `openNewWindowOfGraph` ipcMain call\n   (when (string? repo) (storage/set :git/current-repo repo))\n   (ipc/ipc \"openNewWindow\")))\n"]}