{
"version":3,
"file":"module$node_modules$codemirror$mode$nginx$nginx.js",
"lineCount":8,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAI3G,SAAQ,CAACC,GAAD,CAAM,CACS,QAAtB,EAAI,MAAOD,QAAX,EAAmD,QAAnD,EAAkC,MAAOD,OAAzC,CACEE,GAAA,CAAIH,OAAA,CAAQ,+CAAR,CAAJ,CADF,CAE0B,UAArB,EAAI,MAAOI,OAAX,EAAmCA,MAAOC,CAAAA,GAA1C,CACHD,MAAA,CAAO,CAAC,sBAAD,CAAP,CAAiCD,GAAjC,CADG,CAGHA,GAAA,CAAIG,UAAJ,CANW,CAAd,CAAD,CAOG,QAAQ,CAACA,UAAD,CAAa,CAGxBA,UAAWC,CAAAA,UAAX,CAAsB,OAAtB,CAA+B,QAAQ,CAACC,MAAD,CAAS,CAE9CC,QAASA,MAAK,CAACC,GAAD,CAAM,CAAA,IACdC,IAAM,EAAIF,IAAAA,CAAQC,GAAIE,CAAAA,KAAJ,CAAU,GAAV,CACtB,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBJ,GAAMK,CAAAA,MAA1B,CAAkC,EAAED,CAApC,CAAuCF,GAAA,CAAIF,GAAA,CAAMI,CAAN,CAAJ,CAAA,CAAgB,CAAA,CACvD,OAAOF,IAHW,CAoBpBI,QAASA,IAAG,CAACC,KAAD;AAAQC,EAAR,CAAY,CAACC,IAAA,CAAOD,EAAI,OAAOD,MAAnB,CAExBG,QAASA,UAAS,CAACC,MAAD,CAASC,KAAT,CAAgB,CAGhCD,MAAOE,CAAAA,QAAP,CAAgB,SAAhB,CAEA,KAAIC,IAAMH,MAAOI,CAAAA,OAAP,EAGV,IAAIC,QAASC,CAAAA,oBAAT,CAA8BH,GAA9B,CAAJ,CACE,MAAO,SAEJ,IAAII,cAAeD,CAAAA,oBAAf,CAAoCH,GAApC,CAAJ,CACH,MAAO,YAEJ,IAAIK,kBAAmBF,CAAAA,oBAAnB,CAAwCH,GAAxC,CAAJ,CACH,MAAO,UAILM,IAAAA,CAAKT,MAAOU,CAAAA,IAAP,EACT,IAAU,GAAV,EAAID,GAAJ,CAA6C,MAA7BT,OAAOE,CAAAA,QAAP,CAAgB,UAAhB,CAAoC,CAAAP,GAAA,CAAI,MAAJ,CAAYK,MAAOI,CAAAA,OAAP,EAAZ,CAC/C,IAAU,GAAV,EAAIK,GAAJ,EAAiBT,MAAOW,CAAAA,GAAP,CAAW,GAAX,CAAjB,CAEH,MADAV,MAAMW,CAAAA,QACC,CADUC,aACV,CAAAA,aAAA,CAAcb,MAAd,CAAsBC,KAAtB,CAEJ,IAAU,MAAV,EAAIQ,GAAJ,EAAiBT,MAAOW,CAAAA,GAAP,CAAW,GAAX,CAAjB,CAEH,MADAV,MAAMW,CAAAA,QACC;AADUE,gBACV,CAAAA,gBAAA,CAAiBd,MAAjB,CAAyBC,KAAzB,CAEJ,IAAU,MAAV,EAAIQ,GAAJ,CAAed,GAAA,CAAI,IAAJ,CAAU,SAAV,CAAf,KACA,CAAA,GAAW,GAAX,EAAKc,GAAL,EAAwB,GAAxB,EAAkBA,GAAlB,EAAgC,CAAAT,MAAOW,CAAAA,GAAP,CAAW,MAAX,CAAhC,CACA,CAAA,GAAU,GAAV,EAAIF,GAAJ,EAAwB,GAAxB,EAAkBA,GAAlB,CAEH,MADAR,MAAMW,CAAAA,QACC,CADUG,WAAA,CAAYN,GAAZ,CACV,CAAAR,KAAMW,CAAAA,QAAN,CAAeZ,MAAf,CAAuBC,KAAvB,CAEJ,IAAU,GAAV,EAAIQ,GAAJ,CAEH,MADAT,OAAOgB,CAAAA,SAAP,EACO,CAAArB,GAAA,CAAI,SAAJ,CAAe,SAAf,CAEJ,IAAU,GAAV,EAAIc,GAAJ,CAEH,MADAT,OAAOiB,CAAAA,KAAP,CAAa,SAAb,CACO,CAAAtB,GAAA,CAAI,SAAJ,CAAe,WAAf,CAEJ,IAAI,IAAKuB,CAAAA,IAAL,CAAUT,GAAV,CAAJ,CAEH,MADAT,OAAOE,CAAAA,QAAP,CAAgB,QAAhB,CACO,CAAAP,GAAA,CAAI,QAAJ,CAAc,MAAd,CAEJ,IAAI,WAAYuB,CAAAA,IAAZ,CAAiBT,GAAjB,CAAJ,CACH,MAAOd,IAAA,CAAI,IAAJ,CAAU,WAAV,CAEJ,IAAI,YAAauB,CAAAA,IAAb,CAAkBT,GAAlB,CAAJ,CACH,MAAOd,IAAA,CAAI,IAAJ;AAAUc,GAAV,CAGPT,OAAOE,CAAAA,QAAP,CAAgB,UAAhB,CACA,OAAOP,IAAA,CAAI,UAAJ,CAAgB,UAAhB,CAxBJ,CADiD,MAAOA,IAAA,CAAI,IAAJ,CAAU,SAAV,CAAxD,CA9B2B,CA2DlCkB,QAASA,cAAa,CAACb,MAAD,CAASC,KAAT,CAAgB,CAEpC,IAFoC,IAChCkB,SAAW,CAAA,CADqB,CACdV,EACtB,CAA+B,IAA/B,GAAQA,EAAR,CAAaT,MAAOU,CAAAA,IAAP,EAAb,EAAA,CAAqC,CACnC,GAAIS,QAAJ,EAAsB,GAAtB,EAAgBV,EAAhB,CAA2B,CACzBR,KAAMW,CAAAA,QAAN,CAAiBb,SACjB,MAFyB,CAI3BoB,QAAA,CAAkB,GAAlB,EAAYV,EALuB,CAOrC,MAAOd,IAAA,CAAI,SAAJ,CAAe,SAAf,CAT6B,CAYtCmB,QAASA,iBAAgB,CAACd,MAAD,CAASC,KAAT,CAAgB,CAEvC,IAFuC,IACnCmB,OAAS,CAD0B,CACvBX,EAChB,CAA+B,IAA/B,GAAQA,EAAR,CAAaT,MAAOU,CAAAA,IAAP,EAAb,EAAA,CAAqC,CACnC,GAAc,CAAd,EAAIU,MAAJ,EAAyB,MAAzB,EAAmBX,EAAnB,CAA8B,CAC5BR,KAAMW,CAAAA,QAAN,CAAiBb,SACjB,MAF4B,CAI9BqB,MAAA,CAAgB,GAAP,EAACX,EAAD,CAAcW,MAAd,CAAuB,CAAvB,CAA2B,CALD,CAOrC,MAAOzB,IAAA,CAAI,SAAJ,CAAe,SAAf,CATgC,CAYzCoB,QAASA,YAAW,CAACM,KAAD,CAAQ,CAC1B,MAAO,SAAQ,CAACrB,MAAD;AAASC,KAAT,CAAgB,CAE7B,IAF6B,IACzBqB,QAAU,CAAA,CADe,CACRb,EACrB,CAA+B,IAA/B,GAAQA,EAAR,CAAaT,MAAOU,CAAAA,IAAP,EAAb,IACMD,EADN,EACYY,KADZ,EACsBC,OADtB,EAAA,CAGEA,OAAA,CAAU,CAACA,OAAX,EAA4B,IAA5B,EAAsBb,EAEnBa,QAAL,GAAcrB,KAAMW,CAAAA,QAApB,CAA+Bb,SAA/B,CACA,OAAOJ,IAAA,CAAI,QAAJ,CAAc,QAAd,CARsB,CADL,CAnG5B,IAAIU,SAAWhB,KAAA,CACa,sgKADb,CAAf;AAKIkB,eAAiBlB,KAAA,CACK,qFADL,CALrB,CASImB,mBAAqBnB,KAAA,CACK,kGADL,CATzB,CAaIkC,WAAanC,MAAOmC,CAAAA,UAbxB,CAaoCzB,IAmGpC,OAAO,CACL0B,WAAYA,QAAQ,CAACC,IAAD,CAAO,CACzB,MAAO,CAACb,SAAUb,SAAX,CACC2B,WAAYD,IAAZC,EAAoB,CADrB,CAECC,MAAO,EAFR,CADkB,CADtB,CAOLC,MAAOA,QAAQ,CAAC5B,MAAD,CAASC,KAAT,CAAgB,CAC7B,GAAID,MAAO6B,CAAAA,QAAP,EAAJ,CAAuB,MAAO,KAC9B/B,KAAA,CAAO,IACHF,OAAAA,CAAQK,KAAMW,CAAAA,QAAN,CAAeZ,MAAf,CAAuBC,KAAvB,CAEZ,KAAI6B,QAAU7B,KAAM0B,CAAAA,KAAN,CAAY1B,KAAM0B,CAAAA,KAAMjC,CAAAA,MAAxB;AAA+B,CAA/B,CACF,OAAZ,EAAII,IAAJ,EAAiC,MAAjC,EAAsBgC,OAAtB,CAAyClC,MAAzC,CAAiD,MAAjD,CACkB,UADlB,EACSA,MADT,GAEiB,MAAf,EAAIkC,OAAJ,CAAuBlC,MAAvB,CAA+B,QAA/B,CACUkC,OADV,EACgC,SADhC,EACqBA,OADrB,GAC2ClC,MAD3C,CACmD,KADnD,CAFF,CAMe,OAAf,EAAIkC,OAAJ,EAAyB,WAAYZ,CAAAA,IAAZ,CAAiBpB,IAAjB,CAAzB,EACEG,KAAM0B,CAAAA,KAAMI,CAAAA,GAAZ,EACU,IAAZ,EAAIjC,IAAJ,CACiB,QAAf,EAAIgC,OAAJ,CAAyB7B,KAAM0B,CAAAA,KAAN,CAAY1B,KAAM0B,CAAAA,KAAMjC,CAAAA,MAAxB,CAA+B,CAA/B,CAAzB,CAA6D,SAA7D,CACKO,KAAM0B,CAAAA,KAAMK,CAAAA,IAAZ,CAAiB,GAAjB,CAFP,CAIiB,GAAZ,EAAIlC,IAAJ,CAAiBG,KAAM0B,CAAAA,KAAMI,CAAAA,GAAZ,EAAjB,CACY,QAAZ,EAAIjC,IAAJ,CAAsBG,KAAM0B,CAAAA,KAAMK,CAAAA,IAAZ,CAAiB,QAAjB,CAAtB,CACe,GADf,EACIF,OADJ,EAC8B,SAD9B,EACsBhC,IADtB,EACyCG,KAAM0B,CAAAA,KAAMK,CAAAA,IAAZ,CAAiB,MAAjB,CAC9C,OAAOpC,OArBsB,CAP1B,CA+BLqC,OAAQA,QAAQ,CAAChC,KAAD,CAAQiC,SAAR,CAAmB,CACjC,IAAIC,EAAIlC,KAAM0B,CAAAA,KAAMjC,CAAAA,MAChB,MAAMwB,CAAAA,IAAN,CAAWgB,SAAX,CAAJ;CACEC,CADF,EAC4C,MAArC,EAAAlC,KAAM0B,CAAAA,KAAN,CAAY1B,KAAM0B,CAAAA,KAAMjC,CAAAA,MAAxB,CAA+B,CAA/B,CAAA,CAA8C,CAA9C,CAAkD,CADzD,CAEA,OAAOO,MAAMyB,CAAAA,UAAb,CAA0BS,CAA1B,CAA8BZ,UAJG,CA/B9B,CAsCLa,cAAe,GAtCV,CAxHuC,CAAhD,CAkKAlD,WAAWmD,CAAAA,UAAX,CAAsB,mBAAtB,CAA2C,OAA3C,CArKwB,CAPxB,CAJ4G;",
"sources":["node_modules/codemirror/mode/nginx/nginx.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$nginx$nginx\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"nginx\", function(config) {\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  var keywords = words(\n    /* ngxDirectiveControl */ \"break return rewrite set\" +\n    /* ngxDirective */ \" accept_mutex accept_mutex_delay access_log add_after_body add_before_body add_header addition_types aio alias allow ancient_browser ancient_browser_value auth_basic auth_basic_user_file auth_http auth_http_header auth_http_timeout autoindex autoindex_exact_size autoindex_localtime charset charset_types client_body_buffer_size client_body_in_file_only client_body_in_single_buffer client_body_temp_path client_body_timeout client_header_buffer_size client_header_timeout client_max_body_size connection_pool_size create_full_put_path daemon dav_access dav_methods debug_connection debug_points default_type degradation degrade deny devpoll_changes devpoll_events directio directio_alignment empty_gif env epoll_events error_log eventport_events expires fastcgi_bind fastcgi_buffer_size fastcgi_buffers fastcgi_busy_buffers_size fastcgi_cache fastcgi_cache_key fastcgi_cache_methods fastcgi_cache_min_uses fastcgi_cache_path fastcgi_cache_use_stale fastcgi_cache_valid fastcgi_catch_stderr fastcgi_connect_timeout fastcgi_hide_header fastcgi_ignore_client_abort fastcgi_ignore_headers fastcgi_index fastcgi_intercept_errors fastcgi_max_temp_file_size fastcgi_next_upstream fastcgi_param fastcgi_pass_header fastcgi_pass_request_body fastcgi_pass_request_headers fastcgi_read_timeout fastcgi_send_lowat fastcgi_send_timeout fastcgi_split_path_info fastcgi_store fastcgi_store_access fastcgi_temp_file_write_size fastcgi_temp_path fastcgi_upstream_fail_timeout fastcgi_upstream_max_fails flv geoip_city geoip_country google_perftools_profiles gzip gzip_buffers gzip_comp_level gzip_disable gzip_hash gzip_http_version gzip_min_length gzip_no_buffer gzip_proxied gzip_static gzip_types gzip_vary gzip_window if_modified_since ignore_invalid_headers image_filter image_filter_buffer image_filter_jpeg_quality image_filter_transparency imap_auth imap_capabilities imap_client_buffer index ip_hash keepalive_requests keepalive_timeout kqueue_changes kqueue_events large_client_header_buffers limit_conn limit_conn_log_level limit_rate limit_rate_after limit_req limit_req_log_level limit_req_zone limit_zone lingering_time lingering_timeout lock_file log_format log_not_found log_subrequest map_hash_bucket_size map_hash_max_size master_process memcached_bind memcached_buffer_size memcached_connect_timeout memcached_next_upstream memcached_read_timeout memcached_send_timeout memcached_upstream_fail_timeout memcached_upstream_max_fails merge_slashes min_delete_depth modern_browser modern_browser_value msie_padding msie_refresh multi_accept open_file_cache open_file_cache_errors open_file_cache_events open_file_cache_min_uses open_file_cache_valid open_log_file_cache output_buffers override_charset perl perl_modules perl_require perl_set pid pop3_auth pop3_capabilities port_in_redirect postpone_gzipping postpone_output protocol proxy proxy_bind proxy_buffer proxy_buffer_size proxy_buffering proxy_buffers proxy_busy_buffers_size proxy_cache proxy_cache_key proxy_cache_methods proxy_cache_min_uses proxy_cache_path proxy_cache_use_stale proxy_cache_valid proxy_connect_timeout proxy_headers_hash_bucket_size proxy_headers_hash_max_size proxy_hide_header proxy_ignore_client_abort proxy_ignore_headers proxy_intercept_errors proxy_max_temp_file_size proxy_method proxy_next_upstream proxy_pass_error_message proxy_pass_header proxy_pass_request_body proxy_pass_request_headers proxy_read_timeout proxy_redirect proxy_send_lowat proxy_send_timeout proxy_set_body proxy_set_header proxy_ssl_session_reuse proxy_store proxy_store_access proxy_temp_file_write_size proxy_temp_path proxy_timeout proxy_upstream_fail_timeout proxy_upstream_max_fails random_index read_ahead real_ip_header recursive_error_pages request_pool_size reset_timedout_connection resolver resolver_timeout rewrite_log rtsig_overflow_events rtsig_overflow_test rtsig_overflow_threshold rtsig_signo satisfy secure_link_secret send_lowat send_timeout sendfile sendfile_max_chunk server_name_in_redirect server_names_hash_bucket_size server_names_hash_max_size server_tokens set_real_ip_from smtp_auth smtp_capabilities smtp_client_buffer smtp_greeting_delay so_keepalive source_charset ssi ssi_ignore_recycled_buffers ssi_min_file_chunk ssi_silent_errors ssi_types ssi_value_length ssl ssl_certificate ssl_certificate_key ssl_ciphers ssl_client_certificate ssl_crl ssl_dhparam ssl_engine ssl_prefer_server_ciphers ssl_protocols ssl_session_cache ssl_session_timeout ssl_verify_client ssl_verify_depth starttls stub_status sub_filter sub_filter_once sub_filter_types tcp_nodelay tcp_nopush thread_stack_size timeout timer_resolution types_hash_bucket_size types_hash_max_size underscores_in_headers uninitialized_variable_warn use user userid userid_domain userid_expires userid_mark userid_name userid_p3p userid_path userid_service valid_referers variables_hash_bucket_size variables_hash_max_size worker_connections worker_cpu_affinity worker_priority worker_processes worker_rlimit_core worker_rlimit_nofile worker_rlimit_sigpending worker_threads working_directory xclient xml_entities xslt_stylesheet xslt_typesdrew@li229-23\"\n    );\n\n  var keywords_block = words(\n    /* ngxDirectiveBlock */ \"http mail events server types location upstream charset_map limit_except if geo map\"\n    );\n\n  var keywords_important = words(\n    /* ngxDirectiveImportant */ \"include root server server_name listen internal proxy_pass memcached_pass fastcgi_pass try_files\"\n    );\n\n  var indentUnit = config.indentUnit, type;\n  function ret(style, tp) {type = tp; return style;}\n\n  function tokenBase(stream, state) {\n\n\n    stream.eatWhile(/[\\w\\$_]/);\n\n    var cur = stream.current();\n\n\n    if (keywords.propertyIsEnumerable(cur)) {\n      return \"keyword\";\n    }\n    else if (keywords_block.propertyIsEnumerable(cur)) {\n      return \"variable-2\";\n    }\n    else if (keywords_important.propertyIsEnumerable(cur)) {\n      return \"string-2\";\n    }\n    /**/\n\n    var ch = stream.next();\n    if (ch == \"@\") {stream.eatWhile(/[\\w\\\\\\-]/); return ret(\"meta\", stream.current());}\n    else if (ch == \"/\" && stream.eat(\"*\")) {\n      state.tokenize = tokenCComment;\n      return tokenCComment(stream, state);\n    }\n    else if (ch == \"<\" && stream.eat(\"!\")) {\n      state.tokenize = tokenSGMLComment;\n      return tokenSGMLComment(stream, state);\n    }\n    else if (ch == \"=\") ret(null, \"compare\");\n    else if ((ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) return ret(null, \"compare\");\n    else if (ch == \"\\\"\" || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    else if (ch == \"#\") {\n      stream.skipToEnd();\n      return ret(\"comment\", \"comment\");\n    }\n    else if (ch == \"!\") {\n      stream.match(/^\\s*\\w*/);\n      return ret(\"keyword\", \"important\");\n    }\n    else if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w.%]/);\n      return ret(\"number\", \"unit\");\n    }\n    else if (/[,.+>*\\/]/.test(ch)) {\n      return ret(null, \"select-op\");\n    }\n    else if (/[;{}:\\[\\]]/.test(ch)) {\n      return ret(null, ch);\n    }\n    else {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"variable\", \"variable\");\n    }\n  }\n\n  function tokenCComment(stream, state) {\n    var maybeEnd = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (maybeEnd && ch == \"/\") {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenSGMLComment(stream, state) {\n    var dashes = 0, ch;\n    while ((ch = stream.next()) != null) {\n      if (dashes >= 2 && ch == \">\") {\n        state.tokenize = tokenBase;\n        break;\n      }\n      dashes = (ch == \"-\") ? dashes + 1 : 0;\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped)\n          break;\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      if (!escaped) state.tokenize = tokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  return {\n    startState: function(base) {\n      return {tokenize: tokenBase,\n              baseIndent: base || 0,\n              stack: []};\n    },\n\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n\n      var context = state.stack[state.stack.length-1];\n      if (type == \"hash\" && context == \"rule\") style = \"atom\";\n      else if (style == \"variable\") {\n        if (context == \"rule\") style = \"number\";\n        else if (!context || context == \"@media{\") style = \"tag\";\n      }\n\n      if (context == \"rule\" && /^[\\{\\};]$/.test(type))\n        state.stack.pop();\n      if (type == \"{\") {\n        if (context == \"@media\") state.stack[state.stack.length-1] = \"@media{\";\n        else state.stack.push(\"{\");\n      }\n      else if (type == \"}\") state.stack.pop();\n      else if (type == \"@media\") state.stack.push(\"@media\");\n      else if (context == \"{\" && type != \"comment\") state.stack.push(\"rule\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var n = state.stack.length;\n      if (/^\\}/.test(textAfter))\n        n -= state.stack[state.stack.length-1] == \"rule\" ? 2 : 1;\n      return state.baseIndent + n * indentUnit;\n    },\n\n    electricChars: \"}\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-nginx-conf\", \"nginx\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","config","words","str","obj","split","i","length","ret","style","tp","type","tokenBase","stream","state","eatWhile","cur","current","keywords","propertyIsEnumerable","keywords_block","keywords_important","ch","next","eat","tokenize","tokenCComment","tokenSGMLComment","tokenString","skipToEnd","match","test","maybeEnd","dashes","quote","escaped","indentUnit","startState","base","baseIndent","stack","token","eatSpace","context","pop","push","indent","textAfter","n","electricChars","defineMIME"]
}
