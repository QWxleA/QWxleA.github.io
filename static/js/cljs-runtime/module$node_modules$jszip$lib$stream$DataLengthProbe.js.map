{
"version":3,
"file":"module$node_modules$jszip$lib$stream$DataLengthProbe.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAWjHC,QAASA,gBAAe,CAACC,QAAD,CAAW,CAC/BC,aAAcC,CAAAA,IAAd,CAAmB,IAAnB,CAAyB,sBAAzB,CAAkDF,QAAlD,CACA,KAAKA,CAAAA,QAAL,CAAgBA,QAChB,KAAKG,CAAAA,cAAL,CAAoBH,QAApB,CAA8B,CAA9B,CAH+B,CAR/BI,MAAAA,CAAQR,OAAA,CAAQ,qCAAR,CACZ,KAAIK,cAAgBL,OAAA,CAAQ,oDAAR,CAYpBQ,OAAMC,CAAAA,QAAN,CAAeN,eAAf,CAAgCE,aAAhC,CAKAF,gBAAgBO,CAAAA,SAAUC,CAAAA,YAA1B,CAAyCC,QAAS,CAACC,KAAD,CAAQ,CACnDA,KAAH,GAEI,IAAKC,CAAAA,UAAL,CAAgB,IAAKV,CAAAA,QAArB,CAFJ;CACiB,IAAKU,CAAAA,UAAL,CAAgB,IAAKV,CAAAA,QAArB,CADjB,EACmD,CADnD,EAE8CS,KAAME,CAAAA,IAAKC,CAAAA,MAFzD,CAIAX,cAAcK,CAAAA,SAAUC,CAAAA,YAAaL,CAAAA,IAArC,CAA0C,IAA1C,CAAgDO,KAAhD,CALsD,CAO1DZ,OAAOC,CAAAA,OAAP,CAAiBC,eA5BgG;",
"sources":["node_modules/jszip/lib/stream/DataLengthProbe.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jszip$lib$stream$DataLengthProbe\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('../utils');\nvar GenericWorker = require('./GenericWorker');\n\n/**\n * A worker which calculate the total length of the data flowing through.\n * @constructor\n * @param {String} propName the name used to expose the length\n */\nfunction DataLengthProbe(propName) {\n    GenericWorker.call(this, \"DataLengthProbe for \" + propName);\n    this.propName = propName;\n    this.withStreamInfo(propName, 0);\n}\nutils.inherits(DataLengthProbe, GenericWorker);\n\n/**\n * @see GenericWorker.processChunk\n */\nDataLengthProbe.prototype.processChunk = function (chunk) {\n    if(chunk) {\n        var length = this.streamInfo[this.propName] || 0;\n        this.streamInfo[this.propName] = length + chunk.data.length;\n    }\n    GenericWorker.prototype.processChunk.call(this, chunk);\n};\nmodule.exports = DataLengthProbe;\n\n\n};"],
"names":["shadow$provide","global","require","module","exports","DataLengthProbe","propName","GenericWorker","call","withStreamInfo","utils","inherits","prototype","processChunk","DataLengthProbe.prototype.processChunk","chunk","streamInfo","data","length"]
}
