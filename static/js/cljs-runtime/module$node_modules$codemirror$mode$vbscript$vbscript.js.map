{
"version":3,
"file":"module$node_modules$codemirror$mode$vbscript$vbscript.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/codemirror/mode/vbscript/vbscript.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$vbscript$vbscript\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*\nFor extra ASP classic objects, initialize CodeMirror instance with this option:\n    isASP: true\n\nE.G.:\n    var editor = CodeMirror.fromTextArea(document.getElementById(\"code\"), {\n        lineNumbers: true,\n        isASP: true\n      });\n*/\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"vbscript\", function(conf, parserConf) {\n    var ERRORCLASS = 'error';\n\n    function wordRegexp(words) {\n        return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n    }\n\n    var singleOperators = new RegExp(\"^[\\\\+\\\\-\\\\*/&\\\\\\\\\\\\^<>=]\");\n    var doubleOperators = new RegExp(\"^((<>)|(<=)|(>=))\");\n    var singleDelimiters = new RegExp('^[\\\\.,]');\n    var brakets = new RegExp('^[\\\\(\\\\)]');\n    var identifiers = new RegExp(\"^[A-Za-z][_A-Za-z0-9]*\");\n\n    var openingKeywords = ['class','sub','select','while','if','function', 'property', 'with', 'for'];\n    var middleKeywords = ['else','elseif','case'];\n    var endKeywords = ['next','loop','wend'];\n\n    var wordOperators = wordRegexp(['and', 'or', 'not', 'xor', 'is', 'mod', 'eqv', 'imp']);\n    var commonkeywords = ['dim', 'redim', 'then',  'until', 'randomize',\n                          'byval','byref','new','property', 'exit', 'in',\n                          'const','private', 'public',\n                          'get','set','let', 'stop', 'on error resume next', 'on error goto 0', 'option explicit', 'call', 'me'];\n\n    //This list was from: http://msdn.microsoft.com/en-us/library/f8tbc79x(v=vs.84).aspx\n    var atomWords = ['true', 'false', 'nothing', 'empty', 'null'];\n    //This list was from: http://msdn.microsoft.com/en-us/library/3ca8tfek(v=vs.84).aspx\n    var builtinFuncsWords = ['abs', 'array', 'asc', 'atn', 'cbool', 'cbyte', 'ccur', 'cdate', 'cdbl', 'chr', 'cint', 'clng', 'cos', 'csng', 'cstr', 'date', 'dateadd', 'datediff', 'datepart',\n                        'dateserial', 'datevalue', 'day', 'escape', 'eval', 'execute', 'exp', 'filter', 'formatcurrency', 'formatdatetime', 'formatnumber', 'formatpercent', 'getlocale', 'getobject',\n                        'getref', 'hex', 'hour', 'inputbox', 'instr', 'instrrev', 'int', 'fix', 'isarray', 'isdate', 'isempty', 'isnull', 'isnumeric', 'isobject', 'join', 'lbound', 'lcase', 'left',\n                        'len', 'loadpicture', 'log', 'ltrim', 'rtrim', 'trim', 'maths', 'mid', 'minute', 'month', 'monthname', 'msgbox', 'now', 'oct', 'replace', 'rgb', 'right', 'rnd', 'round',\n                        'scriptengine', 'scriptenginebuildversion', 'scriptenginemajorversion', 'scriptengineminorversion', 'second', 'setlocale', 'sgn', 'sin', 'space', 'split', 'sqr', 'strcomp',\n                        'string', 'strreverse', 'tan', 'time', 'timer', 'timeserial', 'timevalue', 'typename', 'ubound', 'ucase', 'unescape', 'vartype', 'weekday', 'weekdayname', 'year'];\n\n    //This list was from: http://msdn.microsoft.com/en-us/library/ydz4cfk3(v=vs.84).aspx\n    var builtinConsts = ['vbBlack', 'vbRed', 'vbGreen', 'vbYellow', 'vbBlue', 'vbMagenta', 'vbCyan', 'vbWhite', 'vbBinaryCompare', 'vbTextCompare',\n                         'vbSunday', 'vbMonday', 'vbTuesday', 'vbWednesday', 'vbThursday', 'vbFriday', 'vbSaturday', 'vbUseSystemDayOfWeek', 'vbFirstJan1', 'vbFirstFourDays', 'vbFirstFullWeek',\n                         'vbGeneralDate', 'vbLongDate', 'vbShortDate', 'vbLongTime', 'vbShortTime', 'vbObjectError',\n                         'vbOKOnly', 'vbOKCancel', 'vbAbortRetryIgnore', 'vbYesNoCancel', 'vbYesNo', 'vbRetryCancel', 'vbCritical', 'vbQuestion', 'vbExclamation', 'vbInformation', 'vbDefaultButton1', 'vbDefaultButton2',\n                         'vbDefaultButton3', 'vbDefaultButton4', 'vbApplicationModal', 'vbSystemModal', 'vbOK', 'vbCancel', 'vbAbort', 'vbRetry', 'vbIgnore', 'vbYes', 'vbNo',\n                         'vbCr', 'VbCrLf', 'vbFormFeed', 'vbLf', 'vbNewLine', 'vbNullChar', 'vbNullString', 'vbTab', 'vbVerticalTab', 'vbUseDefault', 'vbTrue', 'vbFalse',\n                         'vbEmpty', 'vbNull', 'vbInteger', 'vbLong', 'vbSingle', 'vbDouble', 'vbCurrency', 'vbDate', 'vbString', 'vbObject', 'vbError', 'vbBoolean', 'vbVariant', 'vbDataObject', 'vbDecimal', 'vbByte', 'vbArray'];\n    //This list was from: http://msdn.microsoft.com/en-us/library/hkc375ea(v=vs.84).aspx\n    var builtinObjsWords = ['WScript', 'err', 'debug', 'RegExp'];\n    var knownProperties = ['description', 'firstindex', 'global', 'helpcontext', 'helpfile', 'ignorecase', 'length', 'number', 'pattern', 'source', 'value', 'count'];\n    var knownMethods = ['clear', 'execute', 'raise', 'replace', 'test', 'write', 'writeline', 'close', 'open', 'state', 'eof', 'update', 'addnew', 'end', 'createobject', 'quit'];\n\n    var aspBuiltinObjsWords = ['server', 'response', 'request', 'session', 'application'];\n    var aspKnownProperties = ['buffer', 'cachecontrol', 'charset', 'contenttype', 'expires', 'expiresabsolute', 'isclientconnected', 'pics', 'status', //response\n                              'clientcertificate', 'cookies', 'form', 'querystring', 'servervariables', 'totalbytes', //request\n                              'contents', 'staticobjects', //application\n                              'codepage', 'lcid', 'sessionid', 'timeout', //session\n                              'scripttimeout']; //server\n    var aspKnownMethods = ['addheader', 'appendtolog', 'binarywrite', 'end', 'flush', 'redirect', //response\n                           'binaryread', //request\n                           'remove', 'removeall', 'lock', 'unlock', //application\n                           'abandon', //session\n                           'getlasterror', 'htmlencode', 'mappath', 'transfer', 'urlencode']; //server\n\n    var knownWords = knownMethods.concat(knownProperties);\n\n    builtinObjsWords = builtinObjsWords.concat(builtinConsts);\n\n    if (conf.isASP){\n        builtinObjsWords = builtinObjsWords.concat(aspBuiltinObjsWords);\n        knownWords = knownWords.concat(aspKnownMethods, aspKnownProperties);\n    };\n\n    var keywords = wordRegexp(commonkeywords);\n    var atoms = wordRegexp(atomWords);\n    var builtinFuncs = wordRegexp(builtinFuncsWords);\n    var builtinObjs = wordRegexp(builtinObjsWords);\n    var known = wordRegexp(knownWords);\n    var stringPrefixes = '\"';\n\n    var opening = wordRegexp(openingKeywords);\n    var middle = wordRegexp(middleKeywords);\n    var closing = wordRegexp(endKeywords);\n    var doubleClosing = wordRegexp(['end']);\n    var doOpening = wordRegexp(['do']);\n    var noIndentWords = wordRegexp(['on error resume next', 'exit']);\n    var comment = wordRegexp(['rem']);\n\n\n    function indent(_stream, state) {\n      state.currentIndent++;\n    }\n\n    function dedent(_stream, state) {\n      state.currentIndent--;\n    }\n    // tokenizers\n    function tokenBase(stream, state) {\n        if (stream.eatSpace()) {\n            return 'space';\n            //return null;\n        }\n\n        var ch = stream.peek();\n\n        // Handle Comments\n        if (ch === \"'\") {\n            stream.skipToEnd();\n            return 'comment';\n        }\n        if (stream.match(comment)){\n            stream.skipToEnd();\n            return 'comment';\n        }\n\n\n        // Handle Number Literals\n        if (stream.match(/^((&H)|(&O))?[0-9\\.]/i, false) && !stream.match(/^((&H)|(&O))?[0-9\\.]+[a-z_]/i, false)) {\n            var floatLiteral = false;\n            // Floats\n            if (stream.match(/^\\d*\\.\\d+/i)) { floatLiteral = true; }\n            else if (stream.match(/^\\d+\\.\\d*/)) { floatLiteral = true; }\n            else if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n\n            if (floatLiteral) {\n                // Float literals may be \"imaginary\"\n                stream.eat(/J/i);\n                return 'number';\n            }\n            // Integers\n            var intLiteral = false;\n            // Hex\n            if (stream.match(/^&H[0-9a-f]+/i)) { intLiteral = true; }\n            // Octal\n            else if (stream.match(/^&O[0-7]+/i)) { intLiteral = true; }\n            // Decimal\n            else if (stream.match(/^[1-9]\\d*F?/)) {\n                // Decimal literals may be \"imaginary\"\n                stream.eat(/J/i);\n                // TODO - Can you have imaginary longs?\n                intLiteral = true;\n            }\n            // Zero by itself with no other piece of number.\n            else if (stream.match(/^0(?![\\dx])/i)) { intLiteral = true; }\n            if (intLiteral) {\n                // Integer literals may be \"long\"\n                stream.eat(/L/i);\n                return 'number';\n            }\n        }\n\n        // Handle Strings\n        if (stream.match(stringPrefixes)) {\n            state.tokenize = tokenStringFactory(stream.current());\n            return state.tokenize(stream, state);\n        }\n\n        // Handle operators and Delimiters\n        if (stream.match(doubleOperators)\n            || stream.match(singleOperators)\n            || stream.match(wordOperators)) {\n            return 'operator';\n        }\n        if (stream.match(singleDelimiters)) {\n            return null;\n        }\n\n        if (stream.match(brakets)) {\n            return \"bracket\";\n        }\n\n        if (stream.match(noIndentWords)) {\n            state.doInCurrentLine = true;\n\n            return 'keyword';\n        }\n\n        if (stream.match(doOpening)) {\n            indent(stream,state);\n            state.doInCurrentLine = true;\n\n            return 'keyword';\n        }\n        if (stream.match(opening)) {\n            if (! state.doInCurrentLine)\n              indent(stream,state);\n            else\n              state.doInCurrentLine = false;\n\n            return 'keyword';\n        }\n        if (stream.match(middle)) {\n            return 'keyword';\n        }\n\n\n        if (stream.match(doubleClosing)) {\n            dedent(stream,state);\n            dedent(stream,state);\n\n            return 'keyword';\n        }\n        if (stream.match(closing)) {\n            if (! state.doInCurrentLine)\n              dedent(stream,state);\n            else\n              state.doInCurrentLine = false;\n\n            return 'keyword';\n        }\n\n        if (stream.match(keywords)) {\n            return 'keyword';\n        }\n\n        if (stream.match(atoms)) {\n            return 'atom';\n        }\n\n        if (stream.match(known)) {\n            return 'variable-2';\n        }\n\n        if (stream.match(builtinFuncs)) {\n            return 'builtin';\n        }\n\n        if (stream.match(builtinObjs)){\n            return 'variable-2';\n        }\n\n        if (stream.match(identifiers)) {\n            return 'variable';\n        }\n\n        // Handle non-detected items\n        stream.next();\n        return ERRORCLASS;\n    }\n\n    function tokenStringFactory(delimiter) {\n        var singleline = delimiter.length == 1;\n        var OUTCLASS = 'string';\n\n        return function(stream, state) {\n            while (!stream.eol()) {\n                stream.eatWhile(/[^'\"]/);\n                if (stream.match(delimiter)) {\n                    state.tokenize = tokenBase;\n                    return OUTCLASS;\n                } else {\n                    stream.eat(/['\"]/);\n                }\n            }\n            if (singleline) {\n                if (parserConf.singleLineStringErrors) {\n                    return ERRORCLASS;\n                } else {\n                    state.tokenize = tokenBase;\n                }\n            }\n            return OUTCLASS;\n        };\n    }\n\n\n    function tokenLexer(stream, state) {\n        var style = state.tokenize(stream, state);\n        var current = stream.current();\n\n        // Handle '.' connected identifiers\n        if (current === '.') {\n            style = state.tokenize(stream, state);\n\n            current = stream.current();\n            if (style && (style.substr(0, 8) === 'variable' || style==='builtin' || style==='keyword')){//|| knownWords.indexOf(current.substring(1)) > -1) {\n                if (style === 'builtin' || style === 'keyword') style='variable';\n                if (knownWords.indexOf(current.substr(1)) > -1) style='variable-2';\n\n                return style;\n            } else {\n                return ERRORCLASS;\n            }\n        }\n\n        return style;\n    }\n\n    var external = {\n        electricChars:\"dDpPtTfFeE \",\n        startState: function() {\n            return {\n              tokenize: tokenBase,\n              lastToken: null,\n              currentIndent: 0,\n              nextLineIndent: 0,\n              doInCurrentLine: false,\n              ignoreKeyword: false\n\n\n          };\n        },\n\n        token: function(stream, state) {\n            if (stream.sol()) {\n              state.currentIndent += state.nextLineIndent;\n              state.nextLineIndent = 0;\n              state.doInCurrentLine = 0;\n            }\n            var style = tokenLexer(stream, state);\n\n            state.lastToken = {style:style, content: stream.current()};\n\n            if (style==='space') style=null;\n\n            return style;\n        },\n\n        indent: function(state, textAfter) {\n            var trueText = textAfter.replace(/^\\s+|\\s+$/g, '') ;\n            if (trueText.match(closing) || trueText.match(doubleClosing) || trueText.match(middle)) return conf.indentUnit*(state.currentIndent-1);\n            if(state.currentIndent < 0) return 0;\n            return state.currentIndent * conf.indentUnit;\n        }\n\n    };\n    return external;\n});\n\nCodeMirror.defineMIME(\"text/vbscript\", \"vbscript\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","conf","parserConf","wordRegexp","words","RegExp","join","tokenBase","stream","state","eatSpace","peek","ch","match","comment","skipToEnd","floatLiteral","eat","intLiteral","stringPrefixes","tokenize","tokenStringFactory","current","doubleOperators","singleOperators","wordOperators","singleDelimiters","brakets","noIndentWords","doInCurrentLine","doOpening","currentIndent","opening","middle","doubleClosing","closing","keywords","atoms","known","builtinFuncs","builtinObjs","identifiers","next","ERRORCLASS","delimiter","singleline","length","eol","eatWhile","OUTCLASS","singleLineStringErrors","builtinObjsWords","aspBuiltinObjsWords","aspKnownProperties","aspKnownMethods","knownWords","knownMethods","concat","knownProperties","builtinConsts","isASP","commonkeywords","atomWords","builtinFuncsWords","openingKeywords","middleKeywords","endKeywords","external","electricChars","startState","lastToken","nextLineIndent","ignoreKeyword","token","sol","style","substr","indexOf","content","indent","textAfter","trueText","replace","indentUnit","defineMIME"]
}
