{
"version":3,
"file":"module$node_modules$codemirror$mode$tiddlywiki$tiddlywiki.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/codemirror/mode/tiddlywiki/tiddlywiki.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$tiddlywiki$tiddlywiki\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/***\n    |''Name''|tiddlywiki.js|\n    |''Description''|Enables TiddlyWikiy syntax highlighting using CodeMirror|\n    |''Author''|PMario|\n    |''Version''|0.1.7|\n    |''Status''|''stable''|\n    |''Source''|[[GitHub|https://github.com/pmario/CodeMirror2/blob/tw-syntax/mode/tiddlywiki]]|\n    |''Documentation''|https://codemirror.tiddlyspace.com/|\n    |''License''|[[MIT License|http://www.opensource.org/licenses/mit-license.php]]|\n    |''CoreVersion''|2.5.0|\n    |''Requires''|codemirror.js|\n    |''Keywords''|syntax highlighting color code mirror codemirror|\n    ! Info\n    CoreVersion parameter is needed for TiddlyWiki only!\n***/\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"tiddlywiki\", function () {\n  // Tokenizer\n  var textwords = {};\n\n  var keywords = {\n    \"allTags\": true, \"closeAll\": true, \"list\": true,\n    \"newJournal\": true, \"newTiddler\": true,\n    \"permaview\": true, \"saveChanges\": true,\n    \"search\": true, \"slider\": true, \"tabs\": true,\n    \"tag\": true, \"tagging\": true, \"tags\": true,\n    \"tiddler\": true, \"timeline\": true,\n    \"today\": true, \"version\": true, \"option\": true,\n    \"with\": true, \"filter\": true\n  };\n\n  var isSpaceName = /[\\w_\\-]/i,\n      reHR = /^\\-\\-\\-\\-+$/,                                 // <hr>\n      reWikiCommentStart = /^\\/\\*\\*\\*$/,            // /***\n      reWikiCommentStop = /^\\*\\*\\*\\/$/,             // ***/\n      reBlockQuote = /^<<<$/,\n\n      reJsCodeStart = /^\\/\\/\\{\\{\\{$/,                       // //{{{ js block start\n      reJsCodeStop = /^\\/\\/\\}\\}\\}$/,                        // //}}} js stop\n      reXmlCodeStart = /^\u003c!--\\{\\{\\{--\u003e$/,           // xml block start\n      reXmlCodeStop = /^\u003c!--\\}\\}\\}--\u003e$/,            // xml stop\n\n      reCodeBlockStart = /^\\{\\{\\{$/,                        // {{{ TW text div block start\n      reCodeBlockStop = /^\\}\\}\\}$/,                 // }}} TW text stop\n\n      reUntilCodeStop = /.*?\\}\\}\\}/;\n\n  function chain(stream, state, f) {\n    state.tokenize = f;\n    return f(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    var sol = stream.sol(), ch = stream.peek();\n\n    state.block = false;        // indicates the start of a code block.\n\n    // check start of  blocks\n    if (sol && /[<\\/\\*{}\\-]/.test(ch)) {\n      if (stream.match(reCodeBlockStart)) {\n        state.block = true;\n        return chain(stream, state, twTokenCode);\n      }\n      if (stream.match(reBlockQuote))\n        return 'quote';\n      if (stream.match(reWikiCommentStart) || stream.match(reWikiCommentStop))\n        return 'comment';\n      if (stream.match(reJsCodeStart) || stream.match(reJsCodeStop) || stream.match(reXmlCodeStart) || stream.match(reXmlCodeStop))\n        return 'comment';\n      if (stream.match(reHR))\n        return 'hr';\n    }\n\n    stream.next();\n    if (sol && /[\\/\\*!#;:>|]/.test(ch)) {\n      if (ch == \"!\") { // tw header\n        stream.skipToEnd();\n        return \"header\";\n      }\n      if (ch == \"*\") { // tw list\n        stream.eatWhile('*');\n        return \"comment\";\n      }\n      if (ch == \"#\") { // tw numbered list\n        stream.eatWhile('#');\n        return \"comment\";\n      }\n      if (ch == \";\") { // definition list, term\n        stream.eatWhile(';');\n        return \"comment\";\n      }\n      if (ch == \":\") { // definition list, description\n        stream.eatWhile(':');\n        return \"comment\";\n      }\n      if (ch == \">\") { // single line quote\n        stream.eatWhile(\">\");\n        return \"quote\";\n      }\n      if (ch == '|')\n        return 'header';\n    }\n\n    if (ch == '{' && stream.match(/\\{\\{/))\n      return chain(stream, state, twTokenCode);\n\n    // rudimentary html:// file:// link matching. TW knows much more ...\n    if (/[hf]/i.test(ch) &&\n        /[ti]/i.test(stream.peek()) &&\n        stream.match(/\\b(ttps?|tp|ile):\\/\\/[\\-A-Z0-9+&@#\\/%?=~_|$!:,.;]*[A-Z0-9+&@#\\/%=~_|$]/i))\n      return \"link\";\n\n    // just a little string indicator, don't want to have the whole string covered\n    if (ch == '\"')\n      return 'string';\n\n    if (ch == '~')    // _no_ CamelCase indicator should be bold\n      return 'brace';\n\n    if (/[\\[\\]]/.test(ch) && stream.match(ch)) // check for [[..]]\n      return 'brace';\n\n    if (ch == \"@\") {    // check for space link. TODO fix @@...@@ highlighting\n      stream.eatWhile(isSpaceName);\n      return \"link\";\n    }\n\n    if (/\\d/.test(ch)) {        // numbers\n      stream.eatWhile(/\\d/);\n      return \"number\";\n    }\n\n    if (ch == \"/\") { // tw invisible comment\n      if (stream.eat(\"%\")) {\n        return chain(stream, state, twTokenComment);\n      } else if (stream.eat(\"/\")) { //\n        return chain(stream, state, twTokenEm);\n      }\n    }\n\n    if (ch == \"_\" && stream.eat(\"_\")) // tw underline\n        return chain(stream, state, twTokenUnderline);\n\n    // strikethrough and mdash handling\n    if (ch == \"-\" && stream.eat(\"-\")) {\n      // if strikethrough looks ugly, change CSS.\n      if (stream.peek() != ' ')\n        return chain(stream, state, twTokenStrike);\n      // mdash\n      if (stream.peek() == ' ')\n        return 'brace';\n    }\n\n    if (ch == \"'\" && stream.eat(\"'\")) // tw bold\n      return chain(stream, state, twTokenStrong);\n\n    if (ch == \"<\" && stream.eat(\"<\")) // tw macro\n      return chain(stream, state, twTokenMacro);\n\n    // core macro handling\n    stream.eatWhile(/[\\w\\$_]/);\n    return textwords.propertyIsEnumerable(stream.current()) ? \"keyword\" : null\n  }\n\n  // tw invisible comment\n  function twTokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"%\");\n    }\n    return \"comment\";\n  }\n\n  // tw strong / bold\n  function twTokenStrong(stream, state) {\n    var maybeEnd = false,\n    ch;\n    while (ch = stream.next()) {\n      if (ch == \"'\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"'\");\n    }\n    return \"strong\";\n  }\n\n  // tw code\n  function twTokenCode(stream, state) {\n    var sb = state.block;\n\n    if (sb && stream.current()) {\n      return \"comment\";\n    }\n\n    if (!sb && stream.match(reUntilCodeStop)) {\n      state.tokenize = tokenBase;\n      return \"comment\";\n    }\n\n    if (sb && stream.sol() && stream.match(reCodeBlockStop)) {\n      state.tokenize = tokenBase;\n      return \"comment\";\n    }\n\n    stream.next();\n    return \"comment\";\n  }\n\n  // tw em / italic\n  function twTokenEm(stream, state) {\n    var maybeEnd = false,\n    ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"/\");\n    }\n    return \"em\";\n  }\n\n  // tw underlined text\n  function twTokenUnderline(stream, state) {\n    var maybeEnd = false,\n    ch;\n    while (ch = stream.next()) {\n      if (ch == \"_\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"_\");\n    }\n    return \"underlined\";\n  }\n\n  // tw strike through text looks ugly\n  // change CSS if needed\n  function twTokenStrike(stream, state) {\n    var maybeEnd = false, ch;\n\n    while (ch = stream.next()) {\n      if (ch == \"-\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"-\");\n    }\n    return \"strikethrough\";\n  }\n\n  // macro\n  function twTokenMacro(stream, state) {\n    if (stream.current() == '<<') {\n      return 'macro';\n    }\n\n    var ch = stream.next();\n    if (!ch) {\n      state.tokenize = tokenBase;\n      return null;\n    }\n    if (ch == \">\") {\n      if (stream.peek() == '>') {\n        stream.next();\n        state.tokenize = tokenBase;\n        return \"macro\";\n      }\n    }\n\n    stream.eatWhile(/[\\w\\$_]/);\n    return keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : null\n  }\n\n  // Interface\n  return {\n    startState: function () {\n      return {tokenize: tokenBase};\n    },\n\n    token: function (stream, state) {\n      if (stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      return style;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-tiddlywiki\", \"tiddlywiki\");\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","chain","stream","state","f","tokenize","tokenBase","sol","ch","peek","block","test","match","reCodeBlockStart","twTokenCode","reBlockQuote","reWikiCommentStart","reWikiCommentStop","reJsCodeStart","reJsCodeStop","reXmlCodeStart","reXmlCodeStop","reHR","next","skipToEnd","eatWhile","isSpaceName","eat","twTokenComment","twTokenEm","twTokenUnderline","twTokenStrike","twTokenStrong","twTokenMacro","textwords","propertyIsEnumerable","current","maybeEnd","sb","reUntilCodeStop","reCodeBlockStop","keywords","startState","token","eatSpace","style","defineMIME"]
}
