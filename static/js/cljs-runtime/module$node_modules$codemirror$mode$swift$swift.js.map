{
"version":3,
"file":"module$node_modules$codemirror$mode$swift$swift.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/codemirror/mode/swift/swift.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$swift$swift\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Swift mode created by Michael Kaminsky https://github.com/mkaminsky11\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd)\n    define([\"../../lib/codemirror\"], mod)\n  else\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n\n  function wordSet(words) {\n    var set = {}\n    for (var i = 0; i < words.length; i++) set[words[i]] = true\n    return set\n  }\n\n  var keywords = wordSet([\"_\",\"var\",\"let\",\"class\",\"enum\",\"extension\",\"import\",\"protocol\",\"struct\",\"func\",\"typealias\",\"associatedtype\",\n                          \"open\",\"public\",\"internal\",\"fileprivate\",\"private\",\"deinit\",\"init\",\"new\",\"override\",\"self\",\"subscript\",\"super\",\n                          \"convenience\",\"dynamic\",\"final\",\"indirect\",\"lazy\",\"required\",\"static\",\"unowned\",\"unowned(safe)\",\"unowned(unsafe)\",\"weak\",\"as\",\"is\",\n                          \"break\",\"case\",\"continue\",\"default\",\"else\",\"fallthrough\",\"for\",\"guard\",\"if\",\"in\",\"repeat\",\"switch\",\"where\",\"while\",\n                          \"defer\",\"return\",\"inout\",\"mutating\",\"nonmutating\",\"catch\",\"do\",\"rethrows\",\"throw\",\"throws\",\"try\",\"didSet\",\"get\",\"set\",\"willSet\",\n                          \"assignment\",\"associativity\",\"infix\",\"left\",\"none\",\"operator\",\"postfix\",\"precedence\",\"precedencegroup\",\"prefix\",\"right\",\n                          \"Any\",\"AnyObject\",\"Type\",\"dynamicType\",\"Self\",\"Protocol\",\"__COLUMN__\",\"__FILE__\",\"__FUNCTION__\",\"__LINE__\"])\n  var definingKeywords = wordSet([\"var\",\"let\",\"class\",\"enum\",\"extension\",\"import\",\"protocol\",\"struct\",\"func\",\"typealias\",\"associatedtype\",\"for\"])\n  var atoms = wordSet([\"true\",\"false\",\"nil\",\"self\",\"super\",\"_\"])\n  var types = wordSet([\"Array\",\"Bool\",\"Character\",\"Dictionary\",\"Double\",\"Float\",\"Int\",\"Int8\",\"Int16\",\"Int32\",\"Int64\",\"Never\",\"Optional\",\"Set\",\"String\",\n                       \"UInt8\",\"UInt16\",\"UInt32\",\"UInt64\",\"Void\"])\n  var operators = \"+-/*%=|&<>~^?!\"\n  var punc = \":;,.(){}[]\"\n  var binary = /^\\-?0b[01][01_]*/\n  var octal = /^\\-?0o[0-7][0-7_]*/\n  var hexadecimal = /^\\-?0x[\\dA-Fa-f][\\dA-Fa-f_]*(?:(?:\\.[\\dA-Fa-f][\\dA-Fa-f_]*)?[Pp]\\-?\\d[\\d_]*)?/\n  var decimal = /^\\-?\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee]\\-?\\d[\\d_]*)?/\n  var identifier = /^\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1/\n  var property = /^\\.(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/\n  var instruction = /^\\#[A-Za-z]+/\n  var attribute = /^@(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/\n  //var regexp = /^\\/(?!\\s)(?:\\/\\/)?(?:\\\\.|[^\\/])+\\//\n\n  function tokenBase(stream, state, prev) {\n    if (stream.sol()) state.indented = stream.indentation()\n    if (stream.eatSpace()) return null\n\n    var ch = stream.peek()\n    if (ch == \"/\") {\n      if (stream.match(\"//\")) {\n        stream.skipToEnd()\n        return \"comment\"\n      }\n      if (stream.match(\"/*\")) {\n        state.tokenize.push(tokenComment)\n        return tokenComment(stream, state)\n      }\n    }\n    if (stream.match(instruction)) return \"builtin\"\n    if (stream.match(attribute)) return \"attribute\"\n    if (stream.match(binary)) return \"number\"\n    if (stream.match(octal)) return \"number\"\n    if (stream.match(hexadecimal)) return \"number\"\n    if (stream.match(decimal)) return \"number\"\n    if (stream.match(property)) return \"property\"\n    if (operators.indexOf(ch) > -1) {\n      stream.next()\n      return \"operator\"\n    }\n    if (punc.indexOf(ch) > -1) {\n      stream.next()\n      stream.match(\"..\")\n      return \"punctuation\"\n    }\n    var stringMatch\n    if (stringMatch = stream.match(/(\"\"\"|\"|')/)) {\n      var tokenize = tokenString.bind(null, stringMatch[0])\n      state.tokenize.push(tokenize)\n      return tokenize(stream, state)\n    }\n\n    if (stream.match(identifier)) {\n      var ident = stream.current()\n      if (types.hasOwnProperty(ident)) return \"variable-2\"\n      if (atoms.hasOwnProperty(ident)) return \"atom\"\n      if (keywords.hasOwnProperty(ident)) {\n        if (definingKeywords.hasOwnProperty(ident))\n          state.prev = \"define\"\n        return \"keyword\"\n      }\n      if (prev == \"define\") return \"def\"\n      return \"variable\"\n    }\n\n    stream.next()\n    return null\n  }\n\n  function tokenUntilClosingParen() {\n    var depth = 0\n    return function(stream, state, prev) {\n      var inner = tokenBase(stream, state, prev)\n      if (inner == \"punctuation\") {\n        if (stream.current() == \"(\") ++depth\n        else if (stream.current() == \")\") {\n          if (depth == 0) {\n            stream.backUp(1)\n            state.tokenize.pop()\n            return state.tokenize[state.tokenize.length - 1](stream, state)\n          }\n          else --depth\n        }\n      }\n      return inner\n    }\n  }\n\n  function tokenString(openQuote, stream, state) {\n    var singleLine = openQuote.length == 1\n    var ch, escaped = false\n    while (ch = stream.peek()) {\n      if (escaped) {\n        stream.next()\n        if (ch == \"(\") {\n          state.tokenize.push(tokenUntilClosingParen())\n          return \"string\"\n        }\n        escaped = false\n      } else if (stream.match(openQuote)) {\n        state.tokenize.pop()\n        return \"string\"\n      } else {\n        stream.next()\n        escaped = ch == \"\\\\\"\n      }\n    }\n    if (singleLine) {\n      state.tokenize.pop()\n    }\n    return \"string\"\n  }\n\n  function tokenComment(stream, state) {\n    var ch\n    while (true) {\n      stream.match(/^[^/*]+/, true)\n      ch = stream.next()\n      if (!ch) break\n      if (ch === \"/\" && stream.eat(\"*\")) {\n        state.tokenize.push(tokenComment)\n      } else if (ch === \"*\" && stream.eat(\"/\")) {\n        state.tokenize.pop()\n      }\n    }\n    return \"comment\"\n  }\n\n  function Context(prev, align, indented) {\n    this.prev = prev\n    this.align = align\n    this.indented = indented\n  }\n\n  function pushContext(state, stream) {\n    var align = stream.match(/^\\s*($|\\/[\\/\\*])/, false) ? null : stream.column() + 1\n    state.context = new Context(state.context, align, state.indented)\n  }\n\n  function popContext(state) {\n    if (state.context) {\n      state.indented = state.context.indented\n      state.context = state.context.prev\n    }\n  }\n\n  CodeMirror.defineMode(\"swift\", function(config) {\n    return {\n      startState: function() {\n        return {\n          prev: null,\n          context: null,\n          indented: 0,\n          tokenize: []\n        }\n      },\n\n      token: function(stream, state) {\n        var prev = state.prev\n        state.prev = null\n        var tokenize = state.tokenize[state.tokenize.length - 1] || tokenBase\n        var style = tokenize(stream, state, prev)\n        if (!style || style == \"comment\") state.prev = prev\n        else if (!state.prev) state.prev = style\n\n        if (style == \"punctuation\") {\n          var bracket = /[\\(\\[\\{]|([\\]\\)\\}])/.exec(stream.current())\n          if (bracket) (bracket[1] ? popContext : pushContext)(state, stream)\n        }\n\n        return style\n      },\n\n      indent: function(state, textAfter) {\n        var cx = state.context\n        if (!cx) return 0\n        var closing = /^[\\]\\}\\)]/.test(textAfter)\n        if (cx.align != null) return cx.align - (closing ? 1 : 0)\n        return cx.indented + (closing ? 0 : config.indentUnit)\n      },\n\n      electricInput: /^\\s*[\\)\\}\\]]$/,\n\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      fold: \"brace\",\n      closeBrackets: \"()[]{}''\\\"\\\"``\"\n    }\n  })\n\n  CodeMirror.defineMIME(\"text/x-swift\",\"swift\")\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","wordSet","words","set","i","length","tokenBase","stream","state","prev","sol","indented","indentation","eatSpace","ch","peek","match","skipToEnd","tokenize","push","tokenComment","instruction","attribute","binary","octal","hexadecimal","decimal","property","operators","indexOf","next","punc","stringMatch","tokenString","bind","identifier","ident","current","types","hasOwnProperty","atoms","keywords","definingKeywords","tokenUntilClosingParen","depth","inner","backUp","pop","openQuote","singleLine","escaped","eat","Context","align","pushContext","column","context","popContext","defineMode","config","startState","token","style","bracket","exec","indent","textAfter","cx","closing","test","indentUnit","electricInput","lineComment","blockCommentStart","blockCommentEnd","fold","closeBrackets","defineMIME"]
}
