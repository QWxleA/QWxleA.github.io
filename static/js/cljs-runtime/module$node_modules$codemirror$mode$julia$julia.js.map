{
"version":3,
"file":"module$node_modules$codemirror$mode$julia$julia.js",
"lineCount":16,
"mappings":"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",
"sources":["node_modules/codemirror/mode/julia/julia.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$julia$julia\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"julia\", function(config, parserConf) {\n  function wordRegexp(words, end) {\n    if (typeof end === \"undefined\") { end = \"\\\\b\"; }\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\" + end);\n  }\n\n  var octChar = \"\\\\\\\\[0-7]{1,3}\";\n  var hexChar = \"\\\\\\\\x[A-Fa-f0-9]{1,2}\";\n  var sChar = \"\\\\\\\\[abefnrtv0%?'\\\"\\\\\\\\]\";\n  var uChar = \"([^\\\\u0027\\\\u005C\\\\uD800-\\\\uDFFF]|[\\\\uD800-\\\\uDFFF][\\\\uDC00-\\\\uDFFF])\";\n\n  var operators = parserConf.operators || wordRegexp([\n        \"[<>]:\", \"[<>=]=\", \"<<=?\", \">>>?=?\", \"=>\", \"->\", \"\\\\/\\\\/\",\n        \"[\\\\\\\\%*+\\\\-<>!=\\\\/^|&\\\\u00F7\\\\u22BB]=?\", \"\\\\?\", \"\\\\$\", \"~\", \":\",\n        \"\\\\u00D7\", \"\\\\u2208\", \"\\\\u2209\", \"\\\\u220B\", \"\\\\u220C\", \"\\\\u2218\",\n        \"\\\\u221A\", \"\\\\u221B\", \"\\\\u2229\", \"\\\\u222A\", \"\\\\u2260\", \"\\\\u2264\",\n        \"\\\\u2265\", \"\\\\u2286\", \"\\\\u2288\", \"\\\\u228A\", \"\\\\u22C5\",\n        \"\\\\b(in|isa)\\\\b(?!\\.?\\\\()\"], \"\");\n  var delimiters = parserConf.delimiters || /^[;,()[\\]{}]/;\n  var identifiers = parserConf.identifiers ||\n        /^[_A-Za-z\\u00A1-\\u2217\\u2219-\\uFFFF][\\w\\u00A1-\\u2217\\u2219-\\uFFFF]*!*/;\n\n  var chars = wordRegexp([octChar, hexChar, sChar, uChar], \"'\");\n\n  var openersList = [\"begin\", \"function\", \"type\", \"struct\", \"immutable\", \"let\",\n        \"macro\", \"for\", \"while\", \"quote\", \"if\", \"else\", \"elseif\", \"try\",\n        \"finally\", \"catch\", \"do\"];\n\n  var closersList = [\"end\", \"else\", \"elseif\", \"catch\", \"finally\"];\n\n  var keywordsList = [\"if\", \"else\", \"elseif\", \"while\", \"for\", \"begin\", \"let\",\n        \"end\", \"do\", \"try\", \"catch\", \"finally\", \"return\", \"break\", \"continue\",\n        \"global\", \"local\", \"const\", \"export\", \"import\", \"importall\", \"using\",\n        \"function\", \"where\", \"macro\", \"module\", \"baremodule\", \"struct\", \"type\",\n        \"mutable\", \"immutable\", \"quote\", \"typealias\", \"abstract\", \"primitive\",\n        \"bitstype\"];\n\n  var builtinsList = [\"true\", \"false\", \"nothing\", \"NaN\", \"Inf\"];\n\n  CodeMirror.registerHelper(\"hintWords\", \"julia\", keywordsList.concat(builtinsList));\n\n  var openers = wordRegexp(openersList);\n  var closers = wordRegexp(closersList);\n  var keywords = wordRegexp(keywordsList);\n  var builtins = wordRegexp(builtinsList);\n\n  var macro = /^@[_A-Za-z][\\w]*/;\n  var symbol = /^:[_A-Za-z\\u00A1-\\uFFFF][\\w\\u00A1-\\uFFFF]*!*/;\n  var stringPrefixes = /^(`|([_A-Za-z\\u00A1-\\uFFFF]*\"(\"\")?))/;\n\n  function inArray(state) {\n    return (state.nestedArrays > 0);\n  }\n\n  function inGenerator(state) {\n    return (state.nestedGenerators > 0);\n  }\n\n  function currentScope(state, n) {\n    if (typeof(n) === \"undefined\") { n = 0; }\n    if (state.scopes.length <= n) {\n      return null;\n    }\n    return state.scopes[state.scopes.length - (n + 1)];\n  }\n\n  // tokenizers\n  function tokenBase(stream, state) {\n    // Handle multiline comments\n    if (stream.match(/^#=/, false)) {\n      state.tokenize = tokenComment;\n      return state.tokenize(stream, state);\n    }\n\n    // Handle scope changes\n    var leavingExpr = state.leavingExpr;\n    if (stream.sol()) {\n      leavingExpr = false;\n    }\n    state.leavingExpr = false;\n\n    if (leavingExpr) {\n      if (stream.match(/^'+/)) {\n        return \"operator\";\n      }\n    }\n\n    if (stream.match(/\\.{4,}/)) {\n      return \"error\";\n    } else if (stream.match(/\\.{1,3}/)) {\n      return \"operator\";\n    }\n\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    var ch = stream.peek();\n\n    // Handle single line comments\n    if (ch === '#') {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    if (ch === '[') {\n      state.scopes.push('[');\n      state.nestedArrays++;\n    }\n\n    if (ch === '(') {\n      state.scopes.push('(');\n      state.nestedGenerators++;\n    }\n\n    if (inArray(state) && ch === ']') {\n      while (state.scopes.length && currentScope(state) !== \"[\") { state.scopes.pop(); }\n      state.scopes.pop();\n      state.nestedArrays--;\n      state.leavingExpr = true;\n    }\n\n    if (inGenerator(state) && ch === ')') {\n      while (state.scopes.length && currentScope(state) !== \"(\") { state.scopes.pop(); }\n      state.scopes.pop();\n      state.nestedGenerators--;\n      state.leavingExpr = true;\n    }\n\n    if (inArray(state)) {\n      if (state.lastToken == \"end\" && stream.match(/^:/)) {\n        return \"operator\";\n      }\n      if (stream.match(/^end/)) {\n        return \"number\";\n      }\n    }\n\n    var match;\n    if (match = stream.match(openers, false)) {\n      state.scopes.push(match[0]);\n    }\n\n    if (stream.match(closers, false)) {\n      state.scopes.pop();\n    }\n\n    // Handle type annotations\n    if (stream.match(/^::(?![:\\$])/)) {\n      state.tokenize = tokenAnnotation;\n      return state.tokenize(stream, state);\n    }\n\n    // Handle symbols\n    if (!leavingExpr && stream.match(symbol) ||\n        stream.match(/:([<>]:|<<=?|>>>?=?|->|\\/\\/|\\.{2,3}|[\\.\\\\%*+\\-<>!\\/^|&]=?|[~\\?\\$])/)) {\n      return \"builtin\";\n    }\n\n    // Handle parametric types\n    //if (stream.match(/^{[^}]*}(?=\\()/)) {\n    //  return \"builtin\";\n    //}\n\n    // Handle operators and Delimiters\n    if (stream.match(operators)) {\n      return \"operator\";\n    }\n\n    // Handle Number Literals\n    if (stream.match(/^\\.?\\d/, false)) {\n      var imMatcher = RegExp(/^im\\b/);\n      var numberLiteral = false;\n      if (stream.match(/^0x\\.[0-9a-f_]+p[\\+\\-]?[_\\d]+/i)) { numberLiteral = true; }\n      // Integers\n      if (stream.match(/^0x[0-9a-f_]+/i)) { numberLiteral = true; } // Hex\n      if (stream.match(/^0b[01_]+/i)) { numberLiteral = true; } // Binary\n      if (stream.match(/^0o[0-7_]+/i)) { numberLiteral = true; } // Octal\n      // Floats\n      if (stream.match(/^(?:(?:\\d[_\\d]*)?\\.(?!\\.)(?:\\d[_\\d]*)?|\\d[_\\d]*\\.(?!\\.)(?:\\d[_\\d]*))?([Eef][\\+\\-]?[_\\d]+)?/i)) { numberLiteral = true; }\n      if (stream.match(/^\\d[_\\d]*(e[\\+\\-]?\\d+)?/i)) { numberLiteral = true; } // Decimal\n      if (numberLiteral) {\n          // Integer literals may be \"long\"\n          stream.match(imMatcher);\n          state.leavingExpr = true;\n          return \"number\";\n      }\n    }\n\n    // Handle Chars\n    if (stream.match(/^'/)) {\n      state.tokenize = tokenChar;\n      return state.tokenize(stream, state);\n    }\n\n    // Handle Strings\n    if (stream.match(stringPrefixes)) {\n      state.tokenize = tokenStringFactory(stream.current());\n      return state.tokenize(stream, state);\n    }\n\n    if (stream.match(macro)) {\n      return \"meta\";\n    }\n\n    if (stream.match(delimiters)) {\n      return null;\n    }\n\n    if (stream.match(keywords)) {\n      return \"keyword\";\n    }\n\n    if (stream.match(builtins)) {\n      return \"builtin\";\n    }\n\n    var isDefinition = state.isDefinition || state.lastToken == \"function\" ||\n                       state.lastToken == \"macro\" || state.lastToken == \"type\" ||\n                       state.lastToken == \"struct\" || state.lastToken == \"immutable\";\n\n    if (stream.match(identifiers)) {\n      if (isDefinition) {\n        if (stream.peek() === '.') {\n          state.isDefinition = true;\n          return \"variable\";\n        }\n        state.isDefinition = false;\n        return \"def\";\n      }\n      if (stream.match(/^({[^}]*})*\\(/, false)) {\n        state.tokenize = tokenCallOrDef;\n        return state.tokenize(stream, state);\n      }\n      state.leavingExpr = true;\n      return \"variable\";\n    }\n\n    // Handle non-detected items\n    stream.next();\n    return \"error\";\n  }\n\n  function tokenCallOrDef(stream, state) {\n    var match = stream.match(/^(\\(\\s*)/);\n    if (match) {\n      if (state.firstParenPos < 0)\n        state.firstParenPos = state.scopes.length;\n      state.scopes.push('(');\n      state.charsAdvanced += match[1].length;\n    }\n    if (currentScope(state) == '(' && stream.match(/^\\)/)) {\n      state.scopes.pop();\n      state.charsAdvanced += 1;\n      if (state.scopes.length <= state.firstParenPos) {\n        var isDefinition = stream.match(/^(\\s*where\\s+[^\\s=]+)*\\s*?=(?!=)/, false);\n        stream.backUp(state.charsAdvanced);\n        state.firstParenPos = -1;\n        state.charsAdvanced = 0;\n        state.tokenize = tokenBase;\n        if (isDefinition)\n          return \"def\";\n        return \"builtin\";\n      }\n    }\n    // Unfortunately javascript does not support multiline strings, so we have\n    // to undo anything done upto here if a function call or definition splits\n    // over two or more lines.\n    if (stream.match(/^$/g, false)) {\n      stream.backUp(state.charsAdvanced);\n      while (state.scopes.length > state.firstParenPos)\n        state.scopes.pop();\n      state.firstParenPos = -1;\n      state.charsAdvanced = 0;\n      state.tokenize = tokenBase;\n      return \"builtin\";\n    }\n    state.charsAdvanced += stream.match(/^([^()]*)/)[1].length;\n    return state.tokenize(stream, state);\n  }\n\n  function tokenAnnotation(stream, state) {\n    stream.match(/.*?(?=,|;|{|}|\\(|\\)|=|$|\\s)/);\n    if (stream.match(/^{/)) {\n      state.nestedParameters++;\n    } else if (stream.match(/^}/) && state.nestedParameters > 0) {\n      state.nestedParameters--;\n    }\n    if (state.nestedParameters > 0) {\n      stream.match(/.*?(?={|})/) || stream.next();\n    } else if (state.nestedParameters == 0) {\n      state.tokenize = tokenBase;\n    }\n    return \"builtin\";\n  }\n\n  function tokenComment(stream, state) {\n    if (stream.match(/^#=/)) {\n      state.nestedComments++;\n    }\n    if (!stream.match(/.*?(?=(#=|=#))/)) {\n      stream.skipToEnd();\n    }\n    if (stream.match(/^=#/)) {\n      state.nestedComments--;\n      if (state.nestedComments == 0)\n        state.tokenize = tokenBase;\n    }\n    return \"comment\";\n  }\n\n  function tokenChar(stream, state) {\n    var isChar = false, match;\n    if (stream.match(chars)) {\n      isChar = true;\n    } else if (match = stream.match(/\\\\u([a-f0-9]{1,4})(?=')/i)) {\n      var value = parseInt(match[1], 16);\n      if (value <= 55295 || value >= 57344) { // (U+0,U+D7FF), (U+E000,U+FFFF)\n        isChar = true;\n        stream.next();\n      }\n    } else if (match = stream.match(/\\\\U([A-Fa-f0-9]{5,8})(?=')/)) {\n      var value = parseInt(match[1], 16);\n      if (value <= 1114111) { // U+10FFFF\n        isChar = true;\n        stream.next();\n      }\n    }\n    if (isChar) {\n      state.leavingExpr = true;\n      state.tokenize = tokenBase;\n      return \"string\";\n    }\n    if (!stream.match(/^[^']+(?=')/)) { stream.skipToEnd(); }\n    if (stream.match(/^'/)) { state.tokenize = tokenBase; }\n    return \"error\";\n  }\n\n  function tokenStringFactory(delimiter) {\n    if (delimiter.substr(-3) === '\"\"\"') {\n      delimiter = '\"\"\"';\n    } else if (delimiter.substr(-1) === '\"') {\n      delimiter = '\"';\n    }\n    function tokenString(stream, state) {\n      if (stream.eat('\\\\')) {\n        stream.next();\n      } else if (stream.match(delimiter)) {\n        state.tokenize = tokenBase;\n        state.leavingExpr = true;\n        return \"string\";\n      } else {\n        stream.eat(/[`\"]/);\n      }\n      stream.eatWhile(/[^\\\\`\"]/);\n      return \"string\";\n    }\n    return tokenString;\n  }\n\n  var external = {\n    startState: function() {\n      return {\n        tokenize: tokenBase,\n        scopes: [],\n        lastToken: null,\n        leavingExpr: false,\n        isDefinition: false,\n        nestedArrays: 0,\n        nestedComments: 0,\n        nestedGenerators: 0,\n        nestedParameters: 0,\n        charsAdvanced: 0,\n        firstParenPos: -1\n      };\n    },\n\n    token: function(stream, state) {\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      if (current && style) {\n        state.lastToken = current;\n      }\n\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var delta = 0;\n      if ( textAfter === ']' || textAfter === ')' || /^end\\b/.test(textAfter) ||\n           /^else/.test(textAfter) || /^catch\\b/.test(textAfter) || /^elseif\\b/.test(textAfter) ||\n           /^finally/.test(textAfter) ) {\n        delta = -1;\n      }\n      return (state.scopes.length + delta) * config.indentUnit;\n    },\n\n    electricInput: /\\b(end|else|catch|finally)\\b/,\n    blockCommentStart: \"#=\",\n    blockCommentEnd: \"=#\",\n    lineComment: \"#\",\n    closeBrackets: \"()[]{}\\\"\\\"\",\n    fold: \"indent\"\n  };\n  return external;\n});\n\n\nCodeMirror.defineMIME(\"text/x-julia\", \"julia\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","config","parserConf","wordRegexp","words","end","RegExp","join","currentScope","state","n","scopes","length","tokenBase","stream","match","tokenize","tokenComment","leavingExpr","sol","eatSpace","ch","peek","skipToEnd","push","nestedArrays","nestedGenerators","pop","lastToken","openers","closers","tokenAnnotation","symbol","operators","imMatcher","numberLiteral","tokenChar","stringPrefixes","tokenStringFactory","current","macro","delimiters","keywords","builtins","isDefinition","identifiers","tokenCallOrDef","next","firstParenPos","charsAdvanced","backUp","nestedParameters","nestedComments","isChar","chars","value","parseInt","delimiter","substr","tokenString","eat","eatWhile","octChar","hexChar","sChar","uChar","keywordsList","builtinsList","registerHelper","concat","openersList","closersList","external","startState","token","style","indent","textAfter","delta","test","indentUnit","electricInput","blockCommentStart","blockCommentEnd","lineComment","closeBrackets","fold","defineMIME"]
}
