shadow$provide.module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeUnitCasualRelativeFormatParser=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});const constants_1=require("module$node_modules$chrono_node$dist$locales$en$constants"),results_1=require("module$node_modules$chrono_node$dist$results");global=require("module$node_modules$chrono_node$dist$common$parsers$AbstractParserWithWordBoundary");const timeunits_1=require("module$node_modules$chrono_node$dist$utils$timeunits");
class ENTimeUnitCasualRelativeFormatParser extends global.AbstractParserWithWordBoundaryChecking{innerPattern(){return new RegExp(`(this|last|past|next|\\+|-)\\s*(${constants_1.TIME_UNITS_PATTERN})(?=\\W|$)`,"i")}innerExtract(context,match){const prefix=match[1].toLowerCase();match=constants_1.parseTimeUnits(match[2]);switch(prefix){case "last":case "past":case "-":match=timeunits_1.reverseTimeUnits(match)}return results_1.ParsingComponents.createRelativeFromRefDate(context.refDate,match)}}exports.default=
ENTimeUnitCasualRelativeFormatParser}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeUnitCasualRelativeFormatParser.js.map
