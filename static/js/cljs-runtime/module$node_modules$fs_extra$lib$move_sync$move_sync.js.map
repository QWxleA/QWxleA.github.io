{
"version":3,
"file":"module$node_modules$fs_extra$lib$move_sync$move_sync.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGjH,MAAMC,GAAKH,OAAA,CAAQ,6CAAR,CAAX,CACMI,KAAOJ,OAAA,CAAQ,2CAAR,CADb,CAEMK,SAAWL,OAAA,CAAQ,kDAAR,CAAwBK,CAAAA,QAFzC,CAGMC,WAAaN,OAAA,CAAQ,+CAAR,CAAqBM,CAAAA,UAHxC,CAIMC,WAAaP,OAAA,CAAQ,+CAAR,CAAqBO,CAAAA,UAJxC,CAKMC,KAAOR,OAAA,CAAQ,4CAAR,CAuCbC;MAAOC,CAAAA,OAAP,CArCAO,QAAkB,CAACC,GAAD,CAAMC,IAAN,CAAYC,IAAZ,CAAkB,CAClCA,IAAA,CAAOA,IAAP,EAAe,EACTC,KAAAA,CAAYD,IAAKC,CAAAA,SAAjBA,EAA8BD,IAAKE,CAAAA,OAAnCD,EAA8C,CAAA,CAEpD,OAAM,CAAEE,OAAF,CAAA,CAAcP,IAAKQ,CAAAA,cAAL,CAAoBN,GAApB,CAAyBC,IAAzB,CAA+B,MAA/B,CACpBH,KAAKS,CAAAA,oBAAL,CAA0BP,GAA1B,CAA+BK,OAA/B,CAAwCJ,IAAxC,CAA8C,MAA9C,CACAJ,WAAA,CAAWH,IAAKc,CAAAA,OAAL,CAAaP,IAAb,CAAX,CAKA,IAJ2BE,IAI3B,CACEP,UAAA,CALmBK,IAKnB,CADF,KAIA,IAAIR,EAAGgB,CAAAA,UAAH,CARiBR,IAQjB,CAAJ,CAAyB,KAAUS,MAAJ,CAAU,sBAAV,CAAN,CAIY,CAAA,CAAA,CACrC,GAAI,CACFjB,EAAGkB,CAAAA,UAAH,CAdcX,GAcd,CAdmBC,IAcnB,CADE,CAEF,MAAOW,GAAP,CAAY,CACZ,GAAiB,OAAjB,GAAIA,GAAIC,CAAAA,IAAR,CAA0B,KAAMD,IAAN,CAU5BjB,QAAA,CA1BgBK,GA0BhB,CA1BqBC,IA0BrB,CAJaC,CACXC,UAvByBA,IAsBdD,CAEXY,aAAc,CAAA,CAFHZ,CAIb,CATE,IAAA,CAUKN,UAAA,CA3BSI,GA2BT,CAVL,OAAA,CAFY,CAHuB,GAAA,CAAA,IAAA,EAAA,CAZrC,MAAO,IAP2B,CAV6E;",
"sources":["node_modules/fs-extra/lib/move-sync/move-sync.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fs_extra$lib$move_sync$move_sync\"] = function(global,require,module,exports) {\n'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst copySync = require('../copy-sync').copySync\nconst removeSync = require('../remove').removeSync\nconst mkdirpSync = require('../mkdirs').mkdirpSync\nconst stat = require('../util/stat')\n\nfunction moveSync (src, dest, opts) {\n  opts = opts || {}\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  const { srcStat } = stat.checkPathsSync(src, dest, 'move')\n  stat.checkParentPathsSync(src, srcStat, dest, 'move')\n  mkdirpSync(path.dirname(dest))\n  return doRename(src, dest, overwrite)\n}\n\nfunction doRename (src, dest, overwrite) {\n  if (overwrite) {\n    removeSync(dest)\n    return rename(src, dest, overwrite)\n  }\n  if (fs.existsSync(dest)) throw new Error('dest already exists.')\n  return rename(src, dest, overwrite)\n}\n\nfunction rename (src, dest, overwrite) {\n  try {\n    fs.renameSync(src, dest)\n  } catch (err) {\n    if (err.code !== 'EXDEV') throw err\n    return moveAcrossDevice(src, dest, overwrite)\n  }\n}\n\nfunction moveAcrossDevice (src, dest, overwrite) {\n  const opts = {\n    overwrite,\n    errorOnExist: true\n  }\n  copySync(src, dest, opts)\n  return removeSync(src)\n}\n\nmodule.exports = moveSync\n\n};"],
"names":["shadow$provide","global","require","module","exports","fs","path","copySync","removeSync","mkdirpSync","stat","moveSync","src","dest","opts","overwrite","clobber","srcStat","checkPathsSync","checkParentPathsSync","dirname","existsSync","Error","renameSync","err","code","errorOnExist"]
}
