shadow$provide.module$node_modules$chrono_node$dist$common$refiners$ForwardDateRefiner=function(global,require,module,exports){global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});const dayjs_1=global(require("module$node_modules$dayjs$dayjs_min"));class ForwardDateRefiner{refine(context,results){if(!context.option.forwardDate)return results;results.forEach(function(result){let refMoment=dayjs_1.default(context.refDate);
if(result.start.isOnlyDayMonthComponent()&&refMoment.isAfter(result.start.dayjs()))for(let i=0;3>i&&refMoment.isAfter(result.start.dayjs());i++)result.start.imply("year",result.start.get("year")+1),context.debug(()=>{console.log(`Forward yearly adjusted for ${result} (${result.start})`)}),result.end&&!result.end.isCertain("year")&&(result.end.imply("year",result.end.get("year")+1),context.debug(()=>{console.log(`Forward yearly adjusted for ${result} (${result.end})`)}));result.start.isOnlyWeekdayComponent()&&
refMoment.isAfter(result.start.dayjs())&&(refMoment=refMoment.day()>result.start.get("weekday")?refMoment.day(result.start.get("weekday")+7):refMoment.day(result.start.get("weekday")),result.start.imply("day",refMoment.date()),result.start.imply("month",refMoment.month()+1),result.start.imply("year",refMoment.year()),context.debug(()=>{console.log(`Forward weekly adjusted for ${result} (${result.start})`)}),result.end&&result.end.isOnlyWeekdayComponent()&&(refMoment=refMoment.day()>result.end.get("weekday")?
refMoment.day(result.end.get("weekday")+7):refMoment.day(result.end.get("weekday")),result.end.imply("day",refMoment.date()),result.end.imply("month",refMoment.month()+1),result.end.imply("year",refMoment.year()),context.debug(()=>{console.log(`Forward weekly adjusted for ${result} (${result.end})`)})))});return results}}exports.default=ForwardDateRefiner}
//# sourceMappingURL=module$node_modules$chrono_node$dist$common$refiners$ForwardDateRefiner.js.map
