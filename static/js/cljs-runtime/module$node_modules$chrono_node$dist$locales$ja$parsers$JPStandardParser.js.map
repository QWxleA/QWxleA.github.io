{
"version":3,
"file":"module$node_modules$chrono_node$dist$locales$ja$parsers$JPStandardParser.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,wEAAA,CAA6F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEjIC,MAAAA,CAAmB,IAAnBA,EAA2B,IAAKA,CAAAA,eAAhCA,EAAoD,QAAS,CAACC,GAAD,CAAM,CACnE,MAAQA,IAAD,EAAQA,GAAIC,CAAAA,UAAZ,CAA0BD,GAA1B,CAAgC,CAAE,UAAWA,GAAb,CAD4B,CAGvEE,OAAOC,CAAAA,cAAP,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAAEM,MAAO,CAAA,CAAT,CAA7C,CACA,OAAMC,YAAcT,OAAA,CAAQ,2DAAR,CAApB,CACMU,QAAUV,OAAA,CAAQ,wDAAR,CADhB,CAEMW,QAAUR,MAAA,CAAgBH,OAAA,CAAQ,qCAAR,CAAhB,CAFhB;AAGMY,QAAU,yFAOhB,MAAMC,iBAAN,CACIC,OAAO,EAAG,CACN,MAAOF,QADD,CAGVG,OAAO,CAACC,OAAD,CAAUC,KAAV,CAAiB,CACpB,MAAMC,MAAQC,QAAA,CAASV,WAAYW,CAAAA,SAAZ,CAAsBH,KAAA,CAPjCI,CAOiC,CAAtB,CAAT,CAAd,CACMC,IAAMH,QAAA,CAASV,WAAYW,CAAAA,SAAZ,CAAsBH,KAAA,CAPjCM,CAOiC,CAAtB,CAAT,CADZ,CAEMC,WAAaR,OAAQS,CAAAA,uBAAR,CAAgC,CAC1CH,GAD0C,CAExCJ,KAFwC,CAAhC,CAInB,IAAID,KAAA,CAjBeS,CAiBf,CAAJ,EAAiCT,KAAA,CAjBdS,CAiBc,CAA0BT,CAAAA,KAA1B,CAAgC,OAAhC,CAAjC,CAA2E,CACvE,MAAMU,OAAShB,OAAQiB,CAAAA,OAAR,CAAgBZ,OAAQa,CAAAA,OAAxB,CACfL,WAAWM,CAAAA,MAAX,CAAkB,MAAlB,CAA0BH,MAAOI,CAAAA,IAAP,EAA1B,CAFuE,CAIvEd,KAAA,CApBee,CAoBf,CAAJ,EACUC,OAWN,CAXoBhB,KAAA,CAnBNiB,CAmBM,CAWpB,CAVIH,OAUJ,CAV0B,GAAf,EAAAE,OAAA,CAAqB,CAArB,CAAyBd,QAAA,CAASV,WAAYW,CAAAA,SAAZ,CAAsBa,OAAtB,CAAT,CAUpC;AATwB,IAAxB,EAAIhB,KAAA,CAtBEkB,CAsBF,CAAJ,CACIJ,OADJ,EACY,IADZ,CAG6B,IAAxB,EAAId,KAAA,CAzBHkB,CAyBG,CAAJ,CACDJ,OADC,EACO,IADP,CAGwB,IAHxB,EAGId,KAAA,CA5BHkB,CA4BG,CAHJ,GAIDJ,OAJC,EAIO,IAJP,CAML,CAAAP,UAAWM,CAAAA,MAAX,CAAkB,MAAlB,CAA0BC,OAA1B,CAZJ,GAeUA,KACN,CADarB,OAAQ0B,CAAAA,oBAAR,CAA6BpB,OAAQa,CAAAA,OAArC,CAA8CP,GAA9C,CAAmDJ,KAAnD,CACb,CAAAM,UAAWa,CAAAA,KAAX,CAAiB,MAAjB,CAAyBN,KAAzB,CAhBJ,CAkBA,OAAOP,WA7Ba,CAJ5B,CAoCAtB,OAAQ0B,CAAAA,OAAR,CAAkBf,gBApDmH;",
"sources":["node_modules/chrono-node/dist/locales/ja/parsers/JPStandardParser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$locales$ja$parsers$JPStandardParser\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst years_1 = require(\"../../../calculation/years\");\nconst dayjs_1 = __importDefault(require(\"dayjs\"));\nconst PATTERN = /(?:(?:([\u540c\u4eca\u672c])|((\u662d\u548c|\u5e73\u6210|\u4ee4\u548c)?([0-9\uff10-\uff19]{1,4}|\u5143)))\u5e74\\s*)?([0-9\uff10-\uff19]{1,2})\u6708\\s*([0-9\uff10-\uff19]{1,2})\u65e5/i;\nconst SPECIAL_YEAR_GROUP = 1;\nconst TYPICAL_YEAR_GROUP = 2;\nconst ERA_GROUP = 3;\nconst YEAR_NUMBER_GROUP = 4;\nconst MONTH_GROUP = 5;\nconst DAY_GROUP = 6;\nclass JPStandardParser {\n    pattern() {\n        return PATTERN;\n    }\n    extract(context, match) {\n        const month = parseInt(constants_1.toHankaku(match[MONTH_GROUP]));\n        const day = parseInt(constants_1.toHankaku(match[DAY_GROUP]));\n        const components = context.createParsingComponents({\n            day: day,\n            month: month,\n        });\n        if (match[SPECIAL_YEAR_GROUP] && match[SPECIAL_YEAR_GROUP].match(\"\u540c|\u4eca|\u672c\")) {\n            const moment = dayjs_1.default(context.refDate);\n            components.assign(\"year\", moment.year());\n        }\n        if (match[TYPICAL_YEAR_GROUP]) {\n            const yearNumText = match[YEAR_NUMBER_GROUP];\n            let year = yearNumText == \"\u5143\" ? 1 : parseInt(constants_1.toHankaku(yearNumText));\n            if (match[ERA_GROUP] == \"\u4ee4\u548c\") {\n                year += 2018;\n            }\n            else if (match[ERA_GROUP] == \"\u5e73\u6210\") {\n                year += 1988;\n            }\n            else if (match[ERA_GROUP] == \"\u662d\u548c\") {\n                year += 1925;\n            }\n            components.assign(\"year\", year);\n        }\n        else {\n            const year = years_1.findYearClosestToRef(context.refDate, day, month);\n            components.imply(\"year\", year);\n        }\n        return components;\n    }\n}\nexports.default = JPStandardParser;\n\n};"],
"names":["shadow$provide","global","require","module","exports","__importDefault","mod","__esModule","Object","defineProperty","value","constants_1","years_1","dayjs_1","PATTERN","JPStandardParser","pattern","extract","context","match","month","parseInt","toHankaku","MONTH_GROUP","day","DAY_GROUP","components","createParsingComponents","SPECIAL_YEAR_GROUP","moment","default","refDate","assign","year","TYPICAL_YEAR_GROUP","yearNumText","YEAR_NUMBER_GROUP","ERA_GROUP","findYearClosestToRef","imply"]
}
