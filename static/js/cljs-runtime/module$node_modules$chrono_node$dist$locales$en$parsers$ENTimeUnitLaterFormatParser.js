shadow$provide.module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeUnitLaterFormatParser=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});const constants_1=require("module$node_modules$chrono_node$dist$locales$en$constants"),results_1=require("module$node_modules$chrono_node$dist$results");global=require("module$node_modules$chrono_node$dist$common$parsers$AbstractParserWithWordBoundary");const PATTERN=new RegExp("("+constants_1.TIME_UNITS_PATTERN+
")(later|after|from now|henceforth|forward|out)(?\x3d(?:\\W|$))","i"),STRICT_PATTERN=new RegExp("("+constants_1.TIME_UNITS_PATTERN+")(later|from now)(?\x3d(?:\\W|$))","i");class ENTimeUnitLaterFormatParser extends global.AbstractParserWithWordBoundaryChecking{constructor(strictMode){super();this.strictMode=strictMode}innerPattern(){return this.strictMode?STRICT_PATTERN:PATTERN}innerExtract(context,match){match=constants_1.parseTimeUnits(match[1]);return results_1.ParsingComponents.createRelativeFromRefDate(context.refDate,
match)}}exports.default=ENTimeUnitLaterFormatParser}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeUnitLaterFormatParser.js.map
