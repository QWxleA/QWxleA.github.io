{
"version":3,
"file":"module$node_modules$codemirror$mode$vhdl$vhdl.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/codemirror/mode/vhdl/vhdl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$vhdl$vhdl\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Originally written by Alf Nielsen, re-written by Michael Zhou\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction words(str) {\n  var obj = {}, words = str.split(\",\");\n  for (var i = 0; i < words.length; ++i) {\n    var allCaps = words[i].toUpperCase();\n    var firstCap = words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    obj[words[i]] = true;\n    obj[allCaps] = true;\n    obj[firstCap] = true;\n  }\n  return obj;\n}\n\nfunction metaHook(stream) {\n  stream.eatWhile(/[\\w\\$_]/);\n  return \"meta\";\n}\n\nCodeMirror.defineMode(\"vhdl\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      atoms = parserConfig.atoms || words(\"null\"),\n      hooks = parserConfig.hooks || {\"`\": metaHook, \"$\": metaHook},\n      multiLineStrings = parserConfig.multiLineStrings;\n\n  var keywords = words(\"abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\" +\n      \"body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\" +\n      \"end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\" +\n      \"function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\" +\n      \"literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\" +\n      \"postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\" +\n      \"sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\");\n\n  var blockKeywords = words(\"architecture,entity,begin,case,port,else,elsif,end,for,function,if\");\n\n  var isOperatorChar = /[&|~><!\\)\\(*#%@+\\/=?\\:;}{,\\.\\^\\-\\[\\]]/;\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"') {\n      state.tokenize = tokenString2(ch);\n      return state.tokenize(stream, state);\n    }\n    if (ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (/[\\d']/.test(ch)) {\n      stream.eatWhile(/[\\w\\.']/);\n      return \"number\";\n    }\n    if (ch == \"-\") {\n      if (stream.eat(\"-\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur.toLowerCase())) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"keyword\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"--\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = tokenBase;\n      return \"string\";\n    };\n  }\n  function tokenString2(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"--\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = tokenBase;\n      return \"string-2\";\n    };\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    return state.context = new Context(state.indented, col, type, null, state.context);\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (ctx.type == \"}\" || ctx.type == \"top\" || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n        pushContext(state, stream.column(), \"statement\");\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), ctx = state.context, closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : indentUnit);\n      else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-vhdl\", \"vhdl\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","words","str","obj","split","i","length","allCaps","toUpperCase","firstCap","charAt","slice","metaHook","stream","eatWhile","defineMode","config","parserConfig","tokenBase","state","ch","next","hooks","result","tokenize","tokenString2","tokenString","test","curPunc","eat","skipToEnd","isOperatorChar","cur","current","keywords","propertyIsEnumerable","toLowerCase","blockKeywords","atoms","quote","escaped","end","multiLineStrings","Context","indented","column","type","align","prev","pushContext","col","context","popContext","t","indentUnit","startState","basecolumn","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","firstChar","closing","electricChars","defineMIME"]
}
