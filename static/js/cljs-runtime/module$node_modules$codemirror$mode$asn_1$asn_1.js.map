{
"version":3,
"file":"module$node_modules$codemirror$mode$asn_1$asn_1.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/codemirror/mode/asn.1/asn.1.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$asn_1$asn_1\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"asn.1\", function(config, parserConfig) {\n    var indentUnit = config.indentUnit,\n        keywords = parserConfig.keywords || {},\n        cmipVerbs = parserConfig.cmipVerbs || {},\n        compareTypes = parserConfig.compareTypes || {},\n        status = parserConfig.status || {},\n        tags = parserConfig.tags || {},\n        storage = parserConfig.storage || {},\n        modifier = parserConfig.modifier || {},\n        accessTypes = parserConfig.accessTypes|| {},\n        multiLineStrings = parserConfig.multiLineStrings,\n        indentStatements = parserConfig.indentStatements !== false;\n    var isOperatorChar = /[\\|\\^]/;\n    var curPunc;\n\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n      if (ch == '\"' || ch == \"'\") {\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n      if (/[\\[\\]\\(\\){}:=,;]/.test(ch)) {\n        curPunc = ch;\n        return \"punctuation\";\n      }\n      if (ch == \"-\"){\n        if (stream.eat(\"-\")) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n      if (/\\d/.test(ch)) {\n        stream.eatWhile(/[\\w\\.]/);\n        return \"number\";\n      }\n      if (isOperatorChar.test(ch)) {\n        stream.eatWhile(isOperatorChar);\n        return \"operator\";\n      }\n\n      stream.eatWhile(/[\\w\\-]/);\n      var cur = stream.current();\n      if (keywords.propertyIsEnumerable(cur)) return \"keyword\";\n      if (cmipVerbs.propertyIsEnumerable(cur)) return \"variable cmipVerbs\";\n      if (compareTypes.propertyIsEnumerable(cur)) return \"atom compareTypes\";\n      if (status.propertyIsEnumerable(cur)) return \"comment status\";\n      if (tags.propertyIsEnumerable(cur)) return \"variable-3 tags\";\n      if (storage.propertyIsEnumerable(cur)) return \"builtin storage\";\n      if (modifier.propertyIsEnumerable(cur)) return \"string-2 modifier\";\n      if (accessTypes.propertyIsEnumerable(cur)) return \"atom accessTypes\";\n\n      return \"variable\";\n    }\n\n    function tokenString(quote) {\n      return function(stream, state) {\n        var escaped = false, next, end = false;\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped){\n            var afterNext = stream.peek();\n            //look if the character if the quote is like the B in '10100010'B\n            if (afterNext){\n              afterNext = afterNext.toLowerCase();\n              if(afterNext == \"b\" || afterNext == \"h\" || afterNext == \"o\")\n                stream.next();\n            }\n            end = true; break;\n          }\n          escaped = !escaped && next == \"\\\\\";\n        }\n        if (end || !(escaped || multiLineStrings))\n          state.tokenize = null;\n        return \"string\";\n      };\n    }\n\n    function Context(indented, column, type, align, prev) {\n      this.indented = indented;\n      this.column = column;\n      this.type = type;\n      this.align = align;\n      this.prev = prev;\n    }\n    function pushContext(state, col, type) {\n      var indent = state.indented;\n      if (state.context && state.context.type == \"statement\")\n        indent = state.context.indented;\n      return state.context = new Context(indent, col, type, null, state.context);\n    }\n    function popContext(state) {\n      var t = state.context.type;\n      if (t == \")\" || t == \"]\" || t == \"}\")\n        state.indented = state.context.indented;\n      return state.context = state.context.prev;\n    }\n\n    //Interface\n    return {\n      startState: function(basecolumn) {\n        return {\n          tokenize: null,\n          context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n          indented: 0,\n          startOfLine: true\n        };\n      },\n\n      token: function(stream, state) {\n        var ctx = state.context;\n        if (stream.sol()) {\n          if (ctx.align == null) ctx.align = false;\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n        if (stream.eatSpace()) return null;\n        curPunc = null;\n        var style = (state.tokenize || tokenBase)(stream, state);\n        if (style == \"comment\") return style;\n        if (ctx.align == null) ctx.align = true;\n\n        if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\")\n            && ctx.type == \"statement\"){\n          popContext(state);\n        }\n        else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n        else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n        else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n        else if (curPunc == \"}\") {\n          while (ctx.type == \"statement\") ctx = popContext(state);\n          if (ctx.type == \"}\") ctx = popContext(state);\n          while (ctx.type == \"statement\") ctx = popContext(state);\n        }\n        else if (curPunc == ctx.type) popContext(state);\n        else if (indentStatements && (((ctx.type == \"}\" || ctx.type == \"top\")\n            && curPunc != ';') || (ctx.type == \"statement\"\n            && curPunc == \"newstatement\")))\n          pushContext(state, stream.column(), \"statement\");\n\n        state.startOfLine = false;\n        return style;\n      },\n\n      electricChars: \"{}\",\n      lineComment: \"--\",\n      fold: \"brace\"\n    };\n  });\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  CodeMirror.defineMIME(\"text/x-ttcn-asn\", {\n    name: \"asn.1\",\n    keywords: words(\"DEFINITIONS OBJECTS IF DERIVED INFORMATION ACTION\" +\n    \" REPLY ANY NAMED CHARACTERIZED BEHAVIOUR REGISTERED\" +\n    \" WITH AS IDENTIFIED CONSTRAINED BY PRESENT BEGIN\" +\n    \" IMPORTS FROM UNITS SYNTAX MIN-ACCESS MAX-ACCESS\" +\n    \" MINACCESS MAXACCESS REVISION STATUS DESCRIPTION\" +\n    \" SEQUENCE SET COMPONENTS OF CHOICE DistinguishedName\" +\n    \" ENUMERATED SIZE MODULE END INDEX AUGMENTS EXTENSIBILITY\" +\n    \" IMPLIED EXPORTS\"),\n    cmipVerbs: words(\"ACTIONS ADD GET NOTIFICATIONS REPLACE REMOVE\"),\n    compareTypes: words(\"OPTIONAL DEFAULT MANAGED MODULE-TYPE MODULE_IDENTITY\" +\n    \" MODULE-COMPLIANCE OBJECT-TYPE OBJECT-IDENTITY\" +\n    \" OBJECT-COMPLIANCE MODE CONFIRMED CONDITIONAL\" +\n    \" SUBORDINATE SUPERIOR CLASS TRUE FALSE NULL\" +\n    \" TEXTUAL-CONVENTION\"),\n    status: words(\"current deprecated mandatory obsolete\"),\n    tags: words(\"APPLICATION AUTOMATIC EXPLICIT IMPLICIT PRIVATE TAGS\" +\n    \" UNIVERSAL\"),\n    storage: words(\"BOOLEAN INTEGER OBJECT IDENTIFIER BIT OCTET STRING\" +\n    \" UTCTime InterfaceIndex IANAifType CMIP-Attribute\" +\n    \" REAL PACKAGE PACKAGES IpAddress PhysAddress\" +\n    \" NetworkAddress BITS BMPString TimeStamp TimeTicks\" +\n    \" TruthValue RowStatus DisplayString GeneralString\" +\n    \" GraphicString IA5String NumericString\" +\n    \" PrintableString SnmpAdminAtring TeletexString\" +\n    \" UTF8String VideotexString VisibleString StringStore\" +\n    \" ISO646String T61String UniversalString Unsigned32\" +\n    \" Integer32 Gauge Gauge32 Counter Counter32 Counter64\"),\n    modifier: words(\"ATTRIBUTE ATTRIBUTES MANDATORY-GROUP MANDATORY-GROUPS\" +\n    \" GROUP GROUPS ELEMENTS EQUALITY ORDERING SUBSTRINGS\" +\n    \" DEFINED\"),\n    accessTypes: words(\"not-accessible accessible-for-notify read-only\" +\n    \" read-create read-write\"),\n    multiLineStrings: true\n  });\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","words","str","obj","split","i","length","defineMode","config","parserConfig","tokenBase","stream","state","ch","next","tokenize","tokenString","test","curPunc","eat","skipToEnd","eatWhile","isOperatorChar","cur","current","keywords","propertyIsEnumerable","cmipVerbs","compareTypes","status","tags","storage","modifier","accessTypes","quote","escaped","end","afterNext","peek","toLowerCase","multiLineStrings","Context","indented","column","type","align","prev","pushContext","col","indent","context","popContext","t","indentUnit","indentStatements","startState","basecolumn","startOfLine","token","ctx","sol","indentation","eatSpace","style","electricChars","lineComment","fold","defineMIME","name"]
}
