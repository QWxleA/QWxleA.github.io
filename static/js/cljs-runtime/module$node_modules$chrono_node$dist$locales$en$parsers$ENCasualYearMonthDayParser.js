shadow$provide.module$node_modules$chrono_node$dist$locales$en$parsers$ENCasualYearMonthDayParser=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});const constants_1=require("module$node_modules$chrono_node$dist$locales$en$constants");global=require("module$node_modules$chrono_node$dist$utils$pattern");require=require("module$node_modules$chrono_node$dist$common$parsers$AbstractParserWithWordBoundary");const PATTERN=new RegExp("([0-9]{4})[\\.\\/\\s]"+`(?:(${global.matchAnyPattern(constants_1.MONTH_DICTIONARY)})|([0-9]{1,2}))[\\.\\/\\s]`+
"([0-9]{1,2})(?\x3d\\W|$)","i");class ENCasualYearMonthDayParser extends require.AbstractParserWithWordBoundaryChecking{innerPattern(){return PATTERN}innerExtract(context,match){context=match[3]?parseInt(match[3]):constants_1.MONTH_DICTIONARY[match[2].toLowerCase()];if(1>context||12<context)return null;const year=parseInt(match[1]);return{day:parseInt(match[4]),month:context,year}}}exports.default=ENCasualYearMonthDayParser}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$en$parsers$ENCasualYearMonthDayParser.js.map
