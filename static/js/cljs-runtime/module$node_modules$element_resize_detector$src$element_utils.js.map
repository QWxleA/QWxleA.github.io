{
"version":3,
"file":"module$node_modules$element_resize_detector$src$element_utils.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1HD,MAAOC,CAAAA,OAAP,CAAiBC,QAAQ,CAACC,OAAD,CAAU,CAC/B,IAAIC,SAAWD,OAAQE,CAAAA,YAAaD,CAAAA,QA0CpC,OAAO,CACHE,aAnCJA,QAAqB,CAACC,OAAD,CAAU,CAE3B,OADIC,OACJ,CADYJ,QAAA,CAASG,OAAT,CACZ,GAAgB,CAAC,CAACC,OAAMF,CAAAA,YAFG,CAkCxB,CAEHG,iBA1BJA,QAAyB,CAACF,OAAD,CAAU,CAC/BH,QAAA,CAASG,OAAT,CAAkBD,CAAAA,YAAlB,CAAiC,CAAA,CADF,CAwB5B,CAGHI,OAjBJA,QAAe,CAACH,OAAD,CAAU,CACrB,MAAO,CAAC,CAACH,QAAA,CAASG,OAAT,CAAkBI,CAAAA,IADN,CAclB,CAIHC,SARJA,QAAiB,CAACL,OAAD,CAAUI,IAAV,CAAgB,CAC7BP,QAAA,CAASG,OAAT,CAAkBI,CAAAA,IAAlB,CAAyB,CAAC,CAACA,IADE,CAI1B,CA3CwB,CAHuF;",
"sources":["node_modules/element-resize-detector/src/element-utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$element_resize_detector$src$element_utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nmodule.exports = function(options) {\n    var getState = options.stateHandler.getState;\n\n    /**\n     * Tells if the element has been made detectable and ready to be listened for resize events.\n     * @public\n     * @param {element} The element to check.\n     * @returns {boolean} True or false depending on if the element is detectable or not.\n     */\n    function isDetectable(element) {\n        var state = getState(element);\n        return state && !!state.isDetectable;\n    }\n\n    /**\n     * Marks the element that it has been made detectable and ready to be listened for resize events.\n     * @public\n     * @param {element} The element to mark.\n     */\n    function markAsDetectable(element) {\n        getState(element).isDetectable = true;\n    }\n\n    /**\n     * Tells if the element is busy or not.\n     * @public\n     * @param {element} The element to check.\n     * @returns {boolean} True or false depending on if the element is busy or not.\n     */\n    function isBusy(element) {\n        return !!getState(element).busy;\n    }\n\n    /**\n     * Marks the object is busy and should not be made detectable.\n     * @public\n     * @param {element} element The element to mark.\n     * @param {boolean} busy If the element is busy or not.\n     */\n    function markBusy(element, busy) {\n        getState(element).busy = !!busy;\n    }\n\n    return {\n        isDetectable: isDetectable,\n        markAsDetectable: markAsDetectable,\n        isBusy: isBusy,\n        markBusy: markBusy\n    };\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","options","getState","stateHandler","isDetectable","element","state","markAsDetectable","isBusy","busy","markBusy"]
}
