{
"version":3,
"file":"module$node_modules$codemirror$mode$rpm$rpm.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/codemirror/mode/rpm/rpm.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$rpm$rpm\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"rpm-changes\", function() {\n  var headerSeperator = /^-+$/;\n  var headerLine = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)  ?\\d{1,2} \\d{2}:\\d{2}(:\\d{2})? [A-Z]{3,4} \\d{4} - /;\n  var simpleEmail = /^[\\w+.-]+@[\\w.-]+/;\n\n  return {\n    token: function(stream) {\n      if (stream.sol()) {\n        if (stream.match(headerSeperator)) { return 'tag'; }\n        if (stream.match(headerLine)) { return 'tag'; }\n      }\n      if (stream.match(simpleEmail)) { return 'string'; }\n      stream.next();\n      return null;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-rpm-changes\", \"rpm-changes\");\n\n// Quick and dirty spec file highlighting\n\nCodeMirror.defineMode(\"rpm-spec\", function() {\n  var arch = /^(i386|i586|i686|x86_64|ppc64le|ppc64|ppc|ia64|s390x|s390|sparc64|sparcv9|sparc|noarch|alphaev6|alpha|hppa|mipsel)/;\n\n  var preamble = /^[a-zA-Z0-9()]+:/;\n  var section = /^%(debug_package|package|description|prep|build|install|files|clean|changelog|preinstall|preun|postinstall|postun|pretrans|posttrans|pre|post|triggerin|triggerun|verifyscript|check|triggerpostun|triggerprein|trigger)/;\n  var control_flow_complex = /^%(ifnarch|ifarch|if)/; // rpm control flow macros\n  var control_flow_simple = /^%(else|endif)/; // rpm control flow macros\n  var operators = /^(\\!|\\?|\\<\\=|\\<|\\>\\=|\\>|\\=\\=|\\&\\&|\\|\\|)/; // operators in control flow macros\n\n  return {\n    startState: function () {\n        return {\n          controlFlow: false,\n          macroParameters: false,\n          section: false\n        };\n    },\n    token: function (stream, state) {\n      var ch = stream.peek();\n      if (ch == \"#\") { stream.skipToEnd(); return \"comment\"; }\n\n      if (stream.sol()) {\n        if (stream.match(preamble)) { return \"header\"; }\n        if (stream.match(section)) { return \"atom\"; }\n      }\n\n      if (stream.match(/^\\$\\w+/)) { return \"def\"; } // Variables like '$RPM_BUILD_ROOT'\n      if (stream.match(/^\\$\\{\\w+\\}/)) { return \"def\"; } // Variables like '${RPM_BUILD_ROOT}'\n\n      if (stream.match(control_flow_simple)) { return \"keyword\"; }\n      if (stream.match(control_flow_complex)) {\n        state.controlFlow = true;\n        return \"keyword\";\n      }\n      if (state.controlFlow) {\n        if (stream.match(operators)) { return \"operator\"; }\n        if (stream.match(/^(\\d+)/)) { return \"number\"; }\n        if (stream.eol()) { state.controlFlow = false; }\n      }\n\n      if (stream.match(arch)) {\n        if (stream.eol()) { state.controlFlow = false; }\n        return \"number\";\n      }\n\n      // Macros like '%make_install' or '%attr(0775,root,root)'\n      if (stream.match(/^%[\\w]+/)) {\n        if (stream.match(/^\\(/)) { state.macroParameters = true; }\n        return \"keyword\";\n      }\n      if (state.macroParameters) {\n        if (stream.match(/^\\d+/)) { return \"number\";}\n        if (stream.match(/^\\)/)) {\n          state.macroParameters = false;\n          return \"keyword\";\n        }\n      }\n\n      // Macros like '%{defined fedora}'\n      if (stream.match(/^%\\{\\??[\\w \\-\\:\\!]+\\}/)) {\n        if (stream.eol()) { state.controlFlow = false; }\n        return \"def\";\n      }\n\n      //TODO: Include bash script sub-parser (CodeMirror supports that)\n      stream.next();\n      return null;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-rpm-spec\", \"rpm-spec\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","headerSeperator","headerLine","simpleEmail","token","stream","sol","match","next","defineMIME","arch","preamble","section","control_flow_complex","control_flow_simple","operators","startState","controlFlow","macroParameters","state","peek","ch","skipToEnd","eol"]
}
