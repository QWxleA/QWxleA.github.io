{
"version":3,
"file":"module$node_modules$codemirror$mode$ttcn$ttcn.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/codemirror/mode/ttcn/ttcn.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$ttcn$ttcn\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"ttcn\", function(config, parserConfig) {\n    var indentUnit = config.indentUnit,\n        keywords = parserConfig.keywords || {},\n        builtin = parserConfig.builtin || {},\n        timerOps = parserConfig.timerOps || {},\n        portOps  = parserConfig.portOps || {},\n        configOps = parserConfig.configOps || {},\n        verdictOps = parserConfig.verdictOps || {},\n        sutOps = parserConfig.sutOps || {},\n        functionOps = parserConfig.functionOps || {},\n\n        verdictConsts = parserConfig.verdictConsts || {},\n        booleanConsts = parserConfig.booleanConsts || {},\n        otherConsts   = parserConfig.otherConsts || {},\n\n        types = parserConfig.types || {},\n        visibilityModifiers = parserConfig.visibilityModifiers || {},\n        templateMatch = parserConfig.templateMatch || {},\n        multiLineStrings = parserConfig.multiLineStrings,\n        indentStatements = parserConfig.indentStatements !== false;\n    var isOperatorChar = /[+\\-*&@=<>!\\/]/;\n    var curPunc;\n\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n\n      if (ch == '\"' || ch == \"'\") {\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n      if (/[\\[\\]{}\\(\\),;\\\\:\\?\\.]/.test(ch)) {\n        curPunc = ch;\n        return \"punctuation\";\n      }\n      if (ch == \"#\"){\n        stream.skipToEnd();\n        return \"atom preprocessor\";\n      }\n      if (ch == \"%\"){\n        stream.eatWhile(/\\b/);\n        return \"atom ttcn3Macros\";\n      }\n      if (/\\d/.test(ch)) {\n        stream.eatWhile(/[\\w\\.]/);\n        return \"number\";\n      }\n      if (ch == \"/\") {\n        if (stream.eat(\"*\")) {\n          state.tokenize = tokenComment;\n          return tokenComment(stream, state);\n        }\n        if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n      if (isOperatorChar.test(ch)) {\n        if(ch == \"@\"){\n          if(stream.match(\"try\") || stream.match(\"catch\")\n              || stream.match(\"lazy\")){\n            return \"keyword\";\n          }\n        }\n        stream.eatWhile(isOperatorChar);\n        return \"operator\";\n      }\n      stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n      var cur = stream.current();\n\n      if (keywords.propertyIsEnumerable(cur)) return \"keyword\";\n      if (builtin.propertyIsEnumerable(cur)) return \"builtin\";\n\n      if (timerOps.propertyIsEnumerable(cur)) return \"def timerOps\";\n      if (configOps.propertyIsEnumerable(cur)) return \"def configOps\";\n      if (verdictOps.propertyIsEnumerable(cur)) return \"def verdictOps\";\n      if (portOps.propertyIsEnumerable(cur)) return \"def portOps\";\n      if (sutOps.propertyIsEnumerable(cur)) return \"def sutOps\";\n      if (functionOps.propertyIsEnumerable(cur)) return \"def functionOps\";\n\n      if (verdictConsts.propertyIsEnumerable(cur)) return \"string verdictConsts\";\n      if (booleanConsts.propertyIsEnumerable(cur)) return \"string booleanConsts\";\n      if (otherConsts.propertyIsEnumerable(cur)) return \"string otherConsts\";\n\n      if (types.propertyIsEnumerable(cur)) return \"builtin types\";\n      if (visibilityModifiers.propertyIsEnumerable(cur))\n        return \"builtin visibilityModifiers\";\n      if (templateMatch.propertyIsEnumerable(cur)) return \"atom templateMatch\";\n\n      return \"variable\";\n    }\n\n    function tokenString(quote) {\n      return function(stream, state) {\n        var escaped = false, next, end = false;\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped){\n            var afterQuote = stream.peek();\n            //look if the character after the quote is like the B in '10100010'B\n            if (afterQuote){\n              afterQuote = afterQuote.toLowerCase();\n              if(afterQuote == \"b\" || afterQuote == \"h\" || afterQuote == \"o\")\n                stream.next();\n            }\n            end = true; break;\n          }\n          escaped = !escaped && next == \"\\\\\";\n        }\n        if (end || !(escaped || multiLineStrings))\n          state.tokenize = null;\n        return \"string\";\n      };\n    }\n\n    function tokenComment(stream, state) {\n      var maybeEnd = false, ch;\n      while (ch = stream.next()) {\n        if (ch == \"/\" && maybeEnd) {\n          state.tokenize = null;\n          break;\n        }\n        maybeEnd = (ch == \"*\");\n      }\n      return \"comment\";\n    }\n\n    function Context(indented, column, type, align, prev) {\n      this.indented = indented;\n      this.column = column;\n      this.type = type;\n      this.align = align;\n      this.prev = prev;\n    }\n\n    function pushContext(state, col, type) {\n      var indent = state.indented;\n      if (state.context && state.context.type == \"statement\")\n        indent = state.context.indented;\n      return state.context = new Context(indent, col, type, null, state.context);\n    }\n\n    function popContext(state) {\n      var t = state.context.type;\n      if (t == \")\" || t == \"]\" || t == \"}\")\n        state.indented = state.context.indented;\n      return state.context = state.context.prev;\n    }\n\n    //Interface\n    return {\n      startState: function(basecolumn) {\n        return {\n          tokenize: null,\n          context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n          indented: 0,\n          startOfLine: true\n        };\n      },\n\n      token: function(stream, state) {\n        var ctx = state.context;\n        if (stream.sol()) {\n          if (ctx.align == null) ctx.align = false;\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n        if (stream.eatSpace()) return null;\n        curPunc = null;\n        var style = (state.tokenize || tokenBase)(stream, state);\n        if (style == \"comment\") return style;\n        if (ctx.align == null) ctx.align = true;\n\n        if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\")\n            && ctx.type == \"statement\"){\n          popContext(state);\n        }\n        else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n        else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n        else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n        else if (curPunc == \"}\") {\n          while (ctx.type == \"statement\") ctx = popContext(state);\n          if (ctx.type == \"}\") ctx = popContext(state);\n          while (ctx.type == \"statement\") ctx = popContext(state);\n        }\n        else if (curPunc == ctx.type) popContext(state);\n        else if (indentStatements &&\n            (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != ';') ||\n            (ctx.type == \"statement\" && curPunc == \"newstatement\")))\n          pushContext(state, stream.column(), \"statement\");\n\n        state.startOfLine = false;\n\n        return style;\n      },\n\n      electricChars: \"{}\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      lineComment: \"//\",\n      fold: \"brace\"\n    };\n  });\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  function def(mimes, mode) {\n    if (typeof mimes == \"string\") mimes = [mimes];\n    var words = [];\n    function add(obj) {\n      if (obj) for (var prop in obj) if (obj.hasOwnProperty(prop))\n        words.push(prop);\n    }\n\n    add(mode.keywords);\n    add(mode.builtin);\n    add(mode.timerOps);\n    add(mode.portOps);\n\n    if (words.length) {\n      mode.helperType = mimes[0];\n      CodeMirror.registerHelper(\"hintWords\", mimes[0], words);\n    }\n\n    for (var i = 0; i < mimes.length; ++i)\n      CodeMirror.defineMIME(mimes[i], mode);\n  }\n\n  def([\"text/x-ttcn\", \"text/x-ttcn3\", \"text/x-ttcnpp\"], {\n    name: \"ttcn\",\n    keywords: words(\"activate address alive all alt altstep and and4b any\" +\n    \" break case component const continue control deactivate\" +\n    \" display do else encode enumerated except exception\" +\n    \" execute extends extension external for from function\" +\n    \" goto group if import in infinity inout interleave\" +\n    \" label language length log match message mixed mod\" +\n    \" modifies module modulepar mtc noblock not not4b nowait\" +\n    \" of on optional or or4b out override param pattern port\" +\n    \" procedure record recursive rem repeat return runs select\" +\n    \" self sender set signature system template testcase to\" +\n    \" type union value valueof var variant while with xor xor4b\"),\n    builtin: words(\"bit2hex bit2int bit2oct bit2str char2int char2oct encvalue\" +\n    \" decomp decvalue float2int float2str hex2bit hex2int\" +\n    \" hex2oct hex2str int2bit int2char int2float int2hex\" +\n    \" int2oct int2str int2unichar isbound ischosen ispresent\" +\n    \" isvalue lengthof log2str oct2bit oct2char oct2hex oct2int\" +\n    \" oct2str regexp replace rnd sizeof str2bit str2float\" +\n    \" str2hex str2int str2oct substr unichar2int unichar2char\" +\n    \" enum2int\"),\n    types: words(\"anytype bitstring boolean char charstring default float\" +\n    \" hexstring integer objid octetstring universal verdicttype timer\"),\n    timerOps: words(\"read running start stop timeout\"),\n    portOps: words(\"call catch check clear getcall getreply halt raise receive\" +\n    \" reply send trigger\"),\n    configOps: words(\"create connect disconnect done kill killed map unmap\"),\n    verdictOps: words(\"getverdict setverdict\"),\n    sutOps: words(\"action\"),\n    functionOps: words(\"apply derefers refers\"),\n\n    verdictConsts: words(\"error fail inconc none pass\"),\n    booleanConsts: words(\"true false\"),\n    otherConsts: words(\"null NULL omit\"),\n\n    visibilityModifiers: words(\"private public friend\"),\n    templateMatch: words(\"complement ifpresent subset superset permutation\"),\n    multiLineStrings: true\n  });\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","words","str","obj","split","i","length","defineMode","config","parserConfig","tokenBase","stream","state","ch","next","tokenize","tokenString","test","curPunc","skipToEnd","eatWhile","eat","tokenComment","isOperatorChar","match","cur","current","keywords","propertyIsEnumerable","builtin","timerOps","configOps","verdictOps","portOps","sutOps","functionOps","verdictConsts","booleanConsts","otherConsts","types","visibilityModifiers","templateMatch","quote","escaped","end","afterQuote","peek","toLowerCase","multiLineStrings","maybeEnd","Context","indented","column","type","align","prev","pushContext","col","indent","context","popContext","t","indentUnit","indentStatements","startState","basecolumn","startOfLine","token","ctx","sol","indentation","eatSpace","style","electricChars","blockCommentStart","blockCommentEnd","lineComment","fold","def","mimes","mode","add","prop","hasOwnProperty","push","helperType","registerHelper","defineMIME","name"]
}
