{
"version":3,
"file":"module$node_modules$fs_extra$lib$empty$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA6BzGC,QAASA,aAAa,CAACC,GAAD,CAAM,CAC1B,IAAIC,KACJ,IAAI,CACFA,KAAA,CAAQC,EAAGC,CAAAA,WAAH,CAAeH,GAAf,CADN,CAEF,KAAM,CACN,MAAOI,MAAMC,CAAAA,UAAN,CAAiBL,GAAjB,CADD,CAIRC,KAAMK,CAAAA,OAAN,CAAcC,IAAA,EAAQ,CACpBA,IAAA,CAAOC,IAAKC,CAAAA,IAAL,CAAUT,GAAV,CAAeO,IAAf,CACPG,OAAOC,CAAAA,UAAP,CAAkBJ,IAAlB,CAFoB,CAAtB,CAR0B,CA1BtBK,MAAAA,CAAIhB,OAAA,CAAQ,wCAAR,CAAwBiB,CAAAA,YAClC,OAAMX,GAAKN,OAAA,CAAQ,6CAAR,CAAX,CACMY,KAAOZ,OAAA,CAAQ,2CAAR,CADb,CAEMQ,MAAQR,OAAA,CAAQ,+CAAR,CAFd;AAGMc,OAASd,OAAA,CAAQ,+CAAR,CAETkB,QAAAA,CAAWF,MAAA,CAAEE,QAAkB,CAACd,GAAD,CAAMe,QAAN,CAAgB,CACnDA,QAAA,CAAWA,QAAX,EAAuB,QAAS,EAAG,EACnCb,GAAGc,CAAAA,OAAH,CAAWhB,GAAX,CAAgB,CAACiB,YAAD,CAAMhB,KAAN,CAAA,EAAgB,CAO9BiB,QAASA,WAAW,EAAG,CACrB,MAAMX,KAAON,KAAMkB,CAAAA,GAAN,EACb,IAAI,CAACZ,IAAL,CAAW,MAAOQ,SAAA,EAClBL,OAAOA,CAAAA,MAAP,CAAcH,IAAd,CAAoBU,GAAA,EAAO,CACzB,GAAIA,GAAJ,CAAS,MAAOF,SAAA,CAASE,GAAT,CAChBC,WAAA,EAFyB,CAA3B,CAHqB,CANvB,GAAID,YAAJ,CAAS,MAAOb,MAAMgB,CAAAA,MAAN,CAAapB,GAAb,CAAkBe,QAAlB,CAEhBd,MAAA,CAAQA,KAAMoB,CAAAA,GAAN,CAAUd,IAAA,EAAQC,IAAKC,CAAAA,IAAL,CAAUT,GAAV,CAAeO,IAAf,CAAlB,CAERW,WAAA,EAL8B,CAAhC,CAFmD,CAApC,CAkCjBrB,OAAOC,CAAAA,OAAP,CAAiB,CACfC,YADe,CAEfuB,aAAcvB,YAFC,CAGfe,SAAAA,OAHe,CAIfS,SAAUT,OAJK,CA3CwF;",
"sources":["node_modules/fs-extra/lib/empty/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fs_extra$lib$empty$index\"] = function(global,require,module,exports) {\n'use strict'\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst remove = require('../remove')\n\nconst emptyDir = u(function emptyDir (dir, callback) {\n  callback = callback || function () {}\n  fs.readdir(dir, (err, items) => {\n    if (err) return mkdir.mkdirs(dir, callback)\n\n    items = items.map(item => path.join(dir, item))\n\n    deleteItem()\n\n    function deleteItem () {\n      const item = items.pop()\n      if (!item) return callback()\n      remove.remove(item, err => {\n        if (err) return callback(err)\n        deleteItem()\n      })\n    }\n  })\n})\n\nfunction emptyDirSync (dir) {\n  let items\n  try {\n    items = fs.readdirSync(dir)\n  } catch {\n    return mkdir.mkdirsSync(dir)\n  }\n\n  items.forEach(item => {\n    item = path.join(dir, item)\n    remove.removeSync(item)\n  })\n}\n\nmodule.exports = {\n  emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir,\n  emptydir: emptyDir\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","emptyDirSync","dir","items","fs","readdirSync","mkdir","mkdirsSync","forEach","item","path","join","remove","removeSync","u","fromCallback","emptyDir","callback","readdir","err","deleteItem","pop","mkdirs","map","emptydirSync","emptydir"]
}
