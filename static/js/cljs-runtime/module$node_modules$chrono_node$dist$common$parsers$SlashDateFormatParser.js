shadow$provide.module$node_modules$chrono_node$dist$common$parsers$SlashDateFormatParser=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});const years_1=require("module$node_modules$chrono_node$dist$calculation$years"),PATTERN=RegExp("([^\\d]|^)([0-3]{0,1}[0-9]{1})[\\/\\.\\-]([0-3]{0,1}[0-9]{1})(?:[\\/\\.\\-]([0-9]{4}|[0-9]{2}))?(\\W|$)","i");class SlashDateFormatParser{constructor(littleEndian){this.groupNumberMonth=littleEndian?3:2;this.groupNumberDay=
littleEndian?2:3}pattern(){return PATTERN}extract(context,match){if("/"==match[1]||"/"==match[5])match.index+=match[0].length;else{var index=match.index+match[1].length,text=match[0].substr(match[1].length,match[0].length-match[1].length-match[5].length);if(!(text.match(/^\d\.\d$/)||text.match(/^\d\.\d{1,2}\.\d{1,2}\s*$/)||!match[4]&&0>match[0].indexOf("/"))){index=context.createParsingResult(index,text);text=parseInt(match[this.groupNumberMonth]);var day=parseInt(match[this.groupNumberDay]);if((1>
text||12<text)&&12<text)if(1<=day&&12>=day&&31>=text)[day,text]=[text,day];else return null;if(1>day||31<day)return null;index.start.assign("day",day);index.start.assign("month",text);match[4]?(context=parseInt(match[4]),context=years_1.findMostLikelyADYear(context),index.start.assign("year",context)):(context=years_1.findYearClosestToRef(context.refDate,day,text),index.start.imply("year",context));return index}}}}exports.default=SlashDateFormatParser}
//# sourceMappingURL=module$node_modules$chrono_node$dist$common$parsers$SlashDateFormatParser.js.map
