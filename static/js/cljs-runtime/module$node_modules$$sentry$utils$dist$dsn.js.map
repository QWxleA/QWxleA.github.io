{
"version":3,
"file":"module$node_modules$$sentry$utils$dist$dsn.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@sentry/utils/dist/dsn.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$utils$dist$dsn\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar env_1 = require(\"./env\");\nvar error_1 = require(\"./error\");\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\nfunction isValidProtocol(protocol) {\n    return protocol === 'http' || protocol === 'https';\n}\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword) {\n    if (withPassword === void 0) { withPassword = false; }\n    var host = dsn.host, path = dsn.path, pass = dsn.pass, port = dsn.port, projectId = dsn.projectId, protocol = dsn.protocol, publicKey = dsn.publicKey;\n    return (protocol + \"://\" + publicKey + (withPassword && pass ? \":\" + pass : '') +\n        (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId));\n}\nexports.dsnToString = dsnToString;\nfunction dsnFromString(str) {\n    var match = DSN_REGEX.exec(str);\n    if (!match) {\n        throw new error_1.SentryError(\"Invalid Sentry Dsn: \" + str);\n    }\n    var _a = tslib_1.__read(match.slice(1), 6), protocol = _a[0], publicKey = _a[1], _b = _a[2], pass = _b === void 0 ? '' : _b, host = _a[3], _c = _a[4], port = _c === void 0 ? '' : _c, lastPath = _a[5];\n    var path = '';\n    var projectId = lastPath;\n    var split = projectId.split('/');\n    if (split.length > 1) {\n        path = split.slice(0, -1).join('/');\n        projectId = split.pop();\n    }\n    if (projectId) {\n        var projectMatch = projectId.match(/^\\d+/);\n        if (projectMatch) {\n            projectId = projectMatch[0];\n        }\n    }\n    return dsnFromComponents({ host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, publicKey: publicKey });\n}\nfunction dsnFromComponents(components) {\n    // TODO this is for backwards compatibility, and can be removed in a future version\n    if ('user' in components && !('publicKey' in components)) {\n        components.publicKey = components.user;\n    }\n    return {\n        user: components.publicKey || '',\n        protocol: components.protocol,\n        publicKey: components.publicKey || '',\n        pass: components.pass || '',\n        host: components.host,\n        port: components.port || '',\n        path: components.path || '',\n        projectId: components.projectId,\n    };\n}\nfunction validateDsn(dsn) {\n    if (!env_1.isDebugBuild()) {\n        return;\n    }\n    var port = dsn.port, projectId = dsn.projectId, protocol = dsn.protocol;\n    var requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n    requiredComponents.forEach(function (component) {\n        if (!dsn[component]) {\n            throw new error_1.SentryError(\"Invalid Sentry Dsn: \" + component + \" missing\");\n        }\n    });\n    if (!projectId.match(/^\\d+$/)) {\n        throw new error_1.SentryError(\"Invalid Sentry Dsn: Invalid projectId \" + projectId);\n    }\n    if (!isValidProtocol(protocol)) {\n        throw new error_1.SentryError(\"Invalid Sentry Dsn: Invalid protocol \" + protocol);\n    }\n    if (port && isNaN(parseInt(port, 10))) {\n        throw new error_1.SentryError(\"Invalid Sentry Dsn: Invalid port \" + port);\n    }\n    return true;\n}\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nfunction makeDsn(from) {\n    var components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n    validateDsn(components);\n    return components;\n}\nexports.makeDsn = makeDsn;\n//# sourceMappingURL=dsn.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","dsnFromComponents","components","publicKey","user","protocol","pass","host","port","path","projectId","validateDsn","dsn","env_1","isDebugBuild","requiredComponents","forEach","component","error_1","SentryError","match","isNaN","parseInt","Object","defineProperty","value","tslib_1","DSN_REGEX","dsnToString","withPassword","makeDsn","from","exec","str","_a","__read","slice","_b","_c","lastPath","split","length","join","pop","projectMatch"]
}
