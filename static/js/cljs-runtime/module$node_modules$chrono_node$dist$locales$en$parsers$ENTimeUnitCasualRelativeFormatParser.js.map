{
"version":3,
"file":"module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeUnitCasualRelativeFormatParser.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,4FAAA,CAAiH,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEzJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,OAAMC,YAAcN,OAAA,CAAQ,2DAAR,CAApB,CACMO,UAAYP,OAAA,CAAQ,8CAAR,CACZQ,OAAAA,CAAmCR,OAAA,CAAQ,oFAAR,CACzC,OAAMS,YAAcT,OAAA,CAAQ,sDAAR,CACpB;KAAMU,qCAAN,QAAmDF,OAAiCG,CAAAA,sCAApF,CACIC,YAAY,EAAG,CACX,MAAO,KAAIC,MAAJ,CAAY,mCAAkCP,WAAYQ,CAAAA,kBAA9C,YAAZ,CAA0F,GAA1F,CADI,CAGfC,YAAY,CAACC,OAAD,CAAUC,KAAV,CAAiB,CACzB,MAAMC,OAASD,KAAA,CAAM,CAAN,CAASE,CAAAA,WAAT,EACXC,MAAAA,CAAYd,WAAYe,CAAAA,cAAZ,CAA2BJ,KAAA,CAAM,CAAN,CAA3B,CAChB,QAAQC,MAAR,EACI,KAAK,MAAL,CACA,KAAK,MAAL,CACA,KAAK,GAAL,CACIE,KAAA,CAAYX,WAAYa,CAAAA,gBAAZ,CAA6BF,KAA7B,CAJpB,CAOA,MAAOb,UAAUgB,CAAAA,iBAAkBC,CAAAA,yBAA5B,CAAsDR,OAAQS,CAAAA,OAA9D,CAAuEL,KAAvE,CAVkB,CAJjC,CAiBAlB,OAAQwB,CAAAA,OAAR;AAAkBhB,oCAxBuI;",
"sources":["node_modules/chrono-node/dist/locales/en/parsers/ENTimeUnitCasualRelativeFormatParser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeUnitCasualRelativeFormatParser\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst results_1 = require(\"../../../results\");\nconst AbstractParserWithWordBoundary_1 = require(\"../../../common/parsers/AbstractParserWithWordBoundary\");\nconst timeunits_1 = require(\"../../../utils/timeunits\");\nclass ENTimeUnitCasualRelativeFormatParser extends AbstractParserWithWordBoundary_1.AbstractParserWithWordBoundaryChecking {\n    innerPattern() {\n        return new RegExp(`(this|last|past|next|\\\\+|-)\\\\s*(${constants_1.TIME_UNITS_PATTERN})(?=\\\\W|$)`, \"i\");\n    }\n    innerExtract(context, match) {\n        const prefix = match[1].toLowerCase();\n        let timeUnits = constants_1.parseTimeUnits(match[2]);\n        switch (prefix) {\n            case \"last\":\n            case \"past\":\n            case \"-\":\n                timeUnits = timeunits_1.reverseTimeUnits(timeUnits);\n                break;\n        }\n        return results_1.ParsingComponents.createRelativeFromRefDate(context.refDate, timeUnits);\n    }\n}\nexports.default = ENTimeUnitCasualRelativeFormatParser;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","constants_1","results_1","AbstractParserWithWordBoundary_1","timeunits_1","ENTimeUnitCasualRelativeFormatParser","AbstractParserWithWordBoundaryChecking","innerPattern","RegExp","TIME_UNITS_PATTERN","innerExtract","context","match","prefix","toLowerCase","timeUnits","parseTimeUnits","reverseTimeUnits","ParsingComponents","createRelativeFromRefDate","refDate","default"]
}
