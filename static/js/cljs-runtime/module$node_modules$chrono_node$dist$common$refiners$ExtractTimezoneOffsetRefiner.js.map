{
"version":3,
"file":"module$node_modules$chrono_node$dist$common$refiners$ExtractTimezoneOffsetRefiner.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,iFAAA,CAAsG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE9IC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,OAAMC,wBAA8BC,MAAJ,CAAW,0DAAX,CAAuE,GAAvE,CAIhC,MAAMC,6BAAN,CACIC,MAAM,CAACC,OAAD,CAAUC,OAAV,CAAmB,CACrBA,OAAQC,CAAAA,OAAR,CAAgB,QAAS,CAACC,MAAD,CAAS,CAC9B,GAAI,CAAAA,MAAOC,CAAAA,KAAMC,CAAAA,SAAb,CAAuB,gBAAvB,CAAJ,CAAA,CAGA,IAAMC,OAASN,OAAQO,CAAAA,IAAKC,CAAAA,SAAb,CAAuBL,MAAOM,CAAAA,KAA9B,CAAsCN,MAAOI,CAAAA,IAAKG,CAAAA,MAAlD,CAAf,CACMC;AAAQf,uBAAwBgB,CAAAA,IAAxB,CAA6BN,MAA7B,CACd,IAAKK,KAAL,CAAA,CAGAX,OAAQa,CAAAA,KAAR,CAAc,EAAA,EAAM,CAChBC,OAAQC,CAAAA,GAAR,CAAY,yBAAyBJ,KAAA,CAAM,CAAN,CAAzB,YAA6CR,MAA7C,EAAZ,CADgB,CAApB,CAGMa,OAAAA,CAAaC,QAAA,CAASN,KAAA,CAhBEO,CAgBF,CAAT,CACnB,KAAMC,aAAeF,QAAA,CAASN,KAAA,CAhBES,CAgBF,CAAT,EAAuD,GAAvD,CACjBC,OAAAA,CAA8B,EAA9BA,CAAiBL,MAAjBK,CAAmCF,YACG,IAA1C,GAAIR,KAAA,CApBmBW,CAoBnB,CAAJ,GACID,MADJ,CACqB,CAACA,MADtB,CAGkB,KAAlB,EAAIlB,MAAOoB,CAAAA,GAAX,EACIpB,MAAOoB,CAAAA,GAAIC,CAAAA,MAAX,CAAkB,gBAAlB,CAAoCH,MAApC,CAEJlB,OAAOC,CAAAA,KAAMoB,CAAAA,MAAb,CAAoB,gBAApB,CAAsCH,MAAtC,CACAlB,OAAOI,CAAAA,IAAP,EAAeI,KAAA,CAAM,CAAN,CAhBf,CALA,CAD8B,CAAlC,CAwBA,OAAOV,QAzBc,CAD7B,CA6BAT,OAAQiC,CAAAA,OAAR,CAAkB3B,4BApC4H;",
"sources":["node_modules/chrono-node/dist/common/refiners/ExtractTimezoneOffsetRefiner.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$common$refiners$ExtractTimezoneOffsetRefiner\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TIMEZONE_OFFSET_PATTERN = new RegExp(\"^\\\\s*(?:(?:GMT|UTC)\\\\s?)?([+-])(\\\\d{1,2})(?::?(\\\\d{2}))?\", \"i\");\nconst TIMEZONE_OFFSET_SIGN_GROUP = 1;\nconst TIMEZONE_OFFSET_HOUR_OFFSET_GROUP = 2;\nconst TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP = 3;\nclass ExtractTimezoneOffsetRefiner {\n    refine(context, results) {\n        results.forEach(function (result) {\n            if (result.start.isCertain(\"timezoneOffset\")) {\n                return;\n            }\n            const suffix = context.text.substring(result.index + result.text.length);\n            const match = TIMEZONE_OFFSET_PATTERN.exec(suffix);\n            if (!match) {\n                return;\n            }\n            context.debug(() => {\n                console.log(`Extracting timezone: '${match[0]}' into : ${result}`);\n            });\n            const hourOffset = parseInt(match[TIMEZONE_OFFSET_HOUR_OFFSET_GROUP]);\n            const minuteOffset = parseInt(match[TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP] || \"0\");\n            let timezoneOffset = hourOffset * 60 + minuteOffset;\n            if (match[TIMEZONE_OFFSET_SIGN_GROUP] === \"-\") {\n                timezoneOffset = -timezoneOffset;\n            }\n            if (result.end != null) {\n                result.end.assign(\"timezoneOffset\", timezoneOffset);\n            }\n            result.start.assign(\"timezoneOffset\", timezoneOffset);\n            result.text += match[0];\n        });\n        return results;\n    }\n}\nexports.default = ExtractTimezoneOffsetRefiner;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","TIMEZONE_OFFSET_PATTERN","RegExp","ExtractTimezoneOffsetRefiner","refine","context","results","forEach","result","start","isCertain","suffix","text","substring","index","length","match","exec","debug","console","log","hourOffset","parseInt","TIMEZONE_OFFSET_HOUR_OFFSET_GROUP","minuteOffset","TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP","timezoneOffset","TIMEZONE_OFFSET_SIGN_GROUP","end","assign","default"]
}
