shadow$provide.module$node_modules$chrono_node$dist$locales$pt$parsers$PTWeekdayParser=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});const constants_1=require("module$node_modules$chrono_node$dist$locales$pt$constants");global=require("module$node_modules$chrono_node$dist$utils$pattern");module=require("module$node_modules$chrono_node$dist$common$parsers$AbstractParserWithWordBoundary");const weeks_1=require("module$node_modules$chrono_node$dist$calculation$weeks"),
PATTERN=new RegExp("(?:(?:\\,|\\(|\\（)\\s*)?(?:(este|esta|passado|pr[oó]ximo)\\s*)?"+`(${global.matchAnyPattern(constants_1.WEEKDAY_DICTIONARY)})`+"(?:\\s*(?:\\,|\\)|\\）))?(?:\\s*(este|esta|passado|pr[óo]ximo)\\s*semana)?(?\x3d\\W|\\d|$)","i");class PTWeekdayParser extends module.AbstractParserWithWordBoundaryChecking{innerPattern(){return PATTERN}innerExtract(context,match){var dayOfWeek=match[2].toLowerCase();dayOfWeek=constants_1.WEEKDAY_DICTIONARY[dayOfWeek];if(void 0===dayOfWeek)return null;
var postfix=match[3];match=(match[1]||postfix||"").toLowerCase();postfix=null;"passado"==match?postfix="this":"próximo"==match||"proximo"==match?postfix="next":"este"==match&&(postfix="this");match=weeks_1.toDayJSWeekday(context.refDate,dayOfWeek,postfix);return context.createParsingComponents().assign("weekday",dayOfWeek).imply("day",match.date()).imply("month",match.month()+1).imply("year",match.year())}}exports.default=PTWeekdayParser}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$pt$parsers$PTWeekdayParser.js.map
