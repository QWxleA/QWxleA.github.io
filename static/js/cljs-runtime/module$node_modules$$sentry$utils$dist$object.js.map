{
"version":3,
"file":"module$node_modules$$sentry$utils$dist$object.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/@sentry/utils/dist/object.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$utils$dist$object\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar browser_1 = require(\"./browser\");\nvar is_1 = require(\"./is\");\nvar memo_1 = require(\"./memo\");\nvar stacktrace_1 = require(\"./stacktrace\");\nvar string_1 = require(\"./string\");\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n    if (!(name in source)) {\n        return;\n    }\n    var original = source[name];\n    var wrapped = replacementFactory(original);\n    // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n    // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n    if (typeof wrapped === 'function') {\n        try {\n            markFunctionWrapped(wrapped, original);\n        }\n        catch (_Oo) {\n            // This can throw if multiple fill happens on a global object like XMLHttpRequest\n            // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n        }\n    }\n    source[name] = wrapped;\n}\nexports.fill = fill;\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n    Object.defineProperty(obj, name, {\n        // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n        value: value,\n        writable: true,\n        configurable: true,\n    });\n}\nexports.addNonEnumerableProperty = addNonEnumerableProperty;\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n    var proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\nexports.markFunctionWrapped = markFunctionWrapped;\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n    return func.__sentry_original__;\n}\nexports.getOriginalFunction = getOriginalFunction;\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n    return Object.keys(object)\n        .map(function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]); })\n        .join('&');\n}\nexports.urlEncode = urlEncode;\n/**\n * Transforms any object into an object literal with all its attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n */\nfunction getWalkSource(value) {\n    if (is_1.isError(value)) {\n        var error = value;\n        var err = {\n            message: error.message,\n            name: error.name,\n            stack: error.stack,\n        };\n        for (var i in error) {\n            if (Object.prototype.hasOwnProperty.call(error, i)) {\n                err[i] = error[i];\n            }\n        }\n        return err;\n    }\n    if (is_1.isEvent(value)) {\n        var event_1 = value;\n        var source = {};\n        // Accessing event attributes can throw (see https://github.com/getsentry/sentry-javascript/issues/768 and\n        // https://github.com/getsentry/sentry-javascript/issues/838), but accessing `type` hasn't been wrapped in a\n        // try-catch in at least two years and no one's complained, so that's likely not an issue anymore\n        source.type = event_1.type;\n        try {\n            source.target = is_1.isElement(event_1.target)\n                ? browser_1.htmlTreeAsString(event_1.target)\n                : Object.prototype.toString.call(event_1.target);\n        }\n        catch (_oO) {\n            source.target = '<unknown>';\n        }\n        try {\n            source.currentTarget = is_1.isElement(event_1.currentTarget)\n                ? browser_1.htmlTreeAsString(event_1.currentTarget)\n                : Object.prototype.toString.call(event_1.currentTarget);\n        }\n        catch (_oO) {\n            source.currentTarget = '<unknown>';\n        }\n        if (typeof CustomEvent !== 'undefined' && is_1.isInstanceOf(value, CustomEvent)) {\n            source.detail = event_1.detail;\n        }\n        for (var attr in event_1) {\n            if (Object.prototype.hasOwnProperty.call(event_1, attr)) {\n                source[attr] = event_1[attr];\n            }\n        }\n        return source;\n    }\n    return value;\n}\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    // eslint-disable-next-line no-bitwise\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n    return utf8Length(JSON.stringify(value));\n}\n/** JSDoc */\nfunction normalizeToSize(object, \n// Default Node.js REPL depth\ndepth, \n// 100kB, as 200kB is max payload size, so half sounds reasonable\nmaxSize) {\n    if (depth === void 0) { depth = 3; }\n    if (maxSize === void 0) { maxSize = 100 * 1024; }\n    var serialized = normalize(object, depth);\n    if (jsonSize(serialized) > maxSize) {\n        return normalizeToSize(object, depth - 1, maxSize);\n    }\n    return serialized;\n}\nexports.normalizeToSize = normalizeToSize;\n/**\n * Transform any non-primitive, BigInt, or Symbol-type value into a string. Acts as a no-op on strings, numbers,\n * booleans, null, and undefined.\n *\n * @param value The value to stringify\n * @returns For non-primitive, BigInt, and Symbol-type values, a string denoting the value's type, type and value, or\n *  type and `description` property, respectively. For non-BigInt, non-Symbol primitives, returns the original value,\n *  unchanged.\n */\nfunction serializeValue(value) {\n    // Node.js REPL notation\n    if (typeof value === 'string') {\n        return value;\n    }\n    var type = Object.prototype.toString.call(value);\n    if (type === '[object Object]') {\n        return '[Object]';\n    }\n    if (type === '[object Array]') {\n        return '[Array]';\n    }\n    // `makeSerializable` provides a string representation of certain non-serializable values. For all others, it's a\n    // pass-through.\n    var serializable = makeSerializable(value);\n    return is_1.isPrimitive(serializable) ? serializable : type;\n}\n/**\n * makeSerializable()\n *\n * Takes unserializable input and make it serializer-friendly.\n *\n * Handles globals, functions, `undefined`, `NaN`, and other non-serializable values.\n */\nfunction makeSerializable(value, key) {\n    if (key === 'domain' && value && typeof value === 'object' && value._events) {\n        return '[Domain]';\n    }\n    if (key === 'domainEmitter') {\n        return '[DomainEmitter]';\n    }\n    if (typeof global !== 'undefined' && value === global) {\n        return '[Global]';\n    }\n    // It's safe to use `window` and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n        return '[Window]';\n    }\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n        return '[Document]';\n    }\n    // React's SyntheticEvent thingy\n    if (is_1.isSyntheticEvent(value)) {\n        return '[SyntheticEvent]';\n    }\n    if (typeof value === 'number' && value !== value) {\n        return '[NaN]';\n    }\n    if (value === void 0) {\n        return '[undefined]';\n    }\n    if (typeof value === 'function') {\n        return \"[Function: \" + stacktrace_1.getFunctionName(value) + \"]\";\n    }\n    // symbols and bigints are considered primitives by TS, but aren't natively JSON-serilaizable\n    if (typeof value === 'symbol') {\n        return \"[\" + String(value) + \"]\";\n    }\n    if (typeof value === 'bigint') {\n        return \"[BigInt: \" + String(value) + \"]\";\n    }\n    return value;\n}\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction walk(key, value, depth, memo) {\n    if (depth === void 0) { depth = +Infinity; }\n    if (memo === void 0) { memo = memo_1.memoBuilder(); }\n    var _a = tslib_1.__read(memo, 2), memoize = _a[0], unmemoize = _a[1];\n    // If we reach the maximum depth, serialize whatever is left\n    if (depth === 0) {\n        return serializeValue(value);\n    }\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n    // If value implements `toJSON` method, call it and return early\n    if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n        return value.toJSON();\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    // `makeSerializable` provides a string representation of certain non-serializable values. For all others, it's a\n    // pass-through. If what comes back is a primitive (either because it's been stringified or because it was primitive\n    // all along), we're done.\n    var serializable = makeSerializable(value, key);\n    if (is_1.isPrimitive(serializable)) {\n        return serializable;\n    }\n    // Create source that we will use for the next iteration. It will either be an objectified error object (`Error` type\n    // with extracted key:value pairs) or the input itself.\n    var source = getWalkSource(value);\n    // Create an accumulator that will act as a parent for all future itterations of that branch\n    var acc = Array.isArray(value) ? [] : {};\n    // If we already walked that branch, bail out, as it's circular reference\n    if (memoize(value)) {\n        return '[Circular ~]';\n    }\n    // Walk all keys of the source\n    for (var innerKey in source) {\n        // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n        if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n            continue;\n        }\n        // Recursively walk through all the child nodes\n        var innerValue = source[innerKey];\n        acc[innerKey] = walk(innerKey, innerValue, depth - 1, memo);\n    }\n    // Once walked through all the branches, remove the parent from memo storage\n    unmemoize(value);\n    // Return accumulated values\n    return acc;\n}\nexports.walk = walk;\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction normalize(input, depth) {\n    try {\n        // since we're at the outermost level, there is no key\n        return walk('', input, depth);\n    }\n    catch (_oO) {\n        return '**non-serializable**';\n    }\n}\nexports.normalize = normalize;\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction extractExceptionKeysForMessage(exception, maxLength) {\n    if (maxLength === void 0) { maxLength = 40; }\n    var keys = Object.keys(getWalkSource(exception));\n    keys.sort();\n    if (!keys.length) {\n        return '[object has no keys]';\n    }\n    if (keys[0].length >= maxLength) {\n        return string_1.truncate(keys[0], maxLength);\n    }\n    for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n        var serialized = keys.slice(0, includedKeys).join(', ');\n        if (serialized.length > maxLength) {\n            continue;\n        }\n        if (includedKeys === keys.length) {\n            return serialized;\n        }\n        return string_1.truncate(serialized, maxLength);\n    }\n    return '';\n}\nexports.extractExceptionKeysForMessage = extractExceptionKeysForMessage;\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n */\nfunction dropUndefinedKeys(val) {\n    var e_1, _a;\n    if (is_1.isPlainObject(val)) {\n        var obj = val;\n        var rv = {};\n        try {\n            for (var _b = tslib_1.__values(Object.keys(obj)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                if (typeof obj[key] !== 'undefined') {\n                    rv[key] = dropUndefinedKeys(obj[key]);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return rv;\n    }\n    if (Array.isArray(val)) {\n        return val.map(dropUndefinedKeys);\n    }\n    return val;\n}\nexports.dropUndefinedKeys = dropUndefinedKeys;\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n    var objectified;\n    switch (true) {\n        case wat === undefined || wat === null:\n            objectified = new String(wat);\n            break;\n        // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n        // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n        // an object in order to wrap it.\n        case typeof wat === 'symbol' || typeof wat === 'bigint':\n            objectified = Object(wat);\n            break;\n        // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n        case is_1.isPrimitive(wat):\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            objectified = new wat.constructor(wat);\n            break;\n        // by process of elimination, at this point we know that `wat` must already be an object\n        default:\n            objectified = wat;\n            break;\n    }\n    return objectified;\n}\nexports.objectify = objectify;\n//# sourceMappingURL=object.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","addNonEnumerableProperty","obj","name","value","Object","defineProperty","writable","configurable","markFunctionWrapped","wrapped","original","prototype","getWalkSource","is_1","isError","err","message","stack","i","hasOwnProperty","call","isEvent","source","type","target","isElement","browser_1","htmlTreeAsString","toString","_oO","currentTarget","CustomEvent","isInstanceOf","detail","attr","normalizeToSize","object","depth","maxSize","serialized","normalize","encodeURI","JSON","stringify","split","length","serializeValue","serializable","makeSerializable","isPrimitive","key","_events","window","document","isSyntheticEvent","stacktrace_1","getFunctionName","String","walk","memo","Infinity","memo_1","memoBuilder","_a","tslib_1","__read","memoize","unmemoize","undefined","toJSON","acc","Array","isArray","innerKey","innerValue","input","dropUndefinedKeys","val","isPlainObject","rv","_b","__values","keys","_c","next","done","e_1_1","e_1","error","return","map","string_1","fill","replacementFactory","_Oo","getOriginalFunction","func","__sentry_original__","urlEncode","encodeURIComponent","join","extractExceptionKeysForMessage","exception","maxLength","sort","truncate","includedKeys","slice","objectify","wat","objectified","constructor"]
}
