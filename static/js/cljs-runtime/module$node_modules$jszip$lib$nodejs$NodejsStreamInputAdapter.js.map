{
"version":3,
"file":"module$node_modules$jszip$lib$nodejs$NodejsStreamInputAdapter.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAY1HC,QAASA,yBAAwB,CAACC,QAAD,CAAWC,MAAX,CAAmB,CAChDC,aAAcC,CAAAA,IAAd,CAAmB,IAAnB,CAAyB,kCAAzB,CAA8DH,QAA9D,CACA,KAAKI,CAAAA,cAAL,CAAsB,CAAA,CACtB,KAAKC,CAAAA,WAAL,CAAiBJ,MAAjB,CAHgD,CAThDK,MAAAA,CAAQV,OAAA,CAAQ,qCAAR,CACZ,KAAIM,cAAgBN,OAAA,CAAQ,oDAAR,CAcpBU,OAAMC,CAAAA,QAAN,CAAeR,wBAAf,CAAyCG,aAAzC,CAOAH,yBAAyBS,CAAAA,SAAUH,CAAAA,WAAnC;AAAiDI,QAAS,CAACR,MAAD,CAAS,CAC/D,IAAIS,KAAO,IACX,KAAKC,CAAAA,OAAL,CAAeV,MACfA,OAAOW,CAAAA,KAAP,EACAX,OACCY,CAAAA,EADD,CACI,MADJ,CACY,QAAS,CAACC,KAAD,CAAQ,CACzBJ,IAAKK,CAAAA,IAAL,CAAU,CACNC,KAAMF,KADA,CAENG,KAAO,CACHC,QAAU,CADP,CAFD,CAAV,CADyB,CAD7B,CASCL,CAAAA,EATD,CASI,OATJ,CASa,QAAS,CAACM,CAAD,CAAI,CACnBT,IAAKU,CAAAA,QAAR,CACI,IAAKC,CAAAA,cADT,CAC0BF,CAD1B,CAGIT,IAAKY,CAAAA,KAAL,CAAWH,CAAX,CAJkB,CAT1B,CAgBCN,CAAAA,EAhBD,CAgBI,KAhBJ,CAgBW,QAAS,EAAG,CAChBH,IAAKU,CAAAA,QAAR,CACIV,IAAKN,CAAAA,cADT,CAC0B,CAAA,CAD1B,CAGIM,IAAKa,CAAAA,GAAL,EAJe,CAhBvB,CAJ+D,CA4BnExB,yBAAyBS,CAAAA,SAAUI,CAAAA,KAAnC,CAA2CY,QAAS,EAAG,CACnD,GAAG,CAACtB,aAAcM,CAAAA,SAAUI,CAAAA,KAAMT,CAAAA,IAA9B,CAAmC,IAAnC,CAAJ,CACI,MAAO,CAAA,CAEX,KAAKQ,CAAAA,OAAQC,CAAAA,KAAb,EACA,OAAO,CAAA,CAL4C,CAOvDb,yBAAyBS,CAAAA,SAAUiB,CAAAA,MAAnC,CAA4CC,QAAS,EAAG,CACpD,GAAG,CAACxB,aAAcM,CAAAA,SAAUiB,CAAAA,MAAOtB,CAAAA,IAA/B,CAAoC,IAApC,CAAJ,CACI,MAAO,CAAA,CAGR;IAAKC,CAAAA,cAAR,CACI,IAAKmB,CAAAA,GAAL,EADJ,CAGI,IAAKZ,CAAAA,OAAQc,CAAAA,MAAb,EAGJ,OAAO,CAAA,CAX6C,CAcxD5B,OAAOC,CAAAA,OAAP,CAAiBC,wBA1EyG;",
"sources":["node_modules/jszip/lib/nodejs/NodejsStreamInputAdapter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jszip$lib$nodejs$NodejsStreamInputAdapter\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar utils = require('../utils');\nvar GenericWorker = require('../stream/GenericWorker');\n\n/**\n * A worker that use a nodejs stream as source.\n * @constructor\n * @param {String} filename the name of the file entry for this stream.\n * @param {Readable} stream the nodejs stream.\n */\nfunction NodejsStreamInputAdapter(filename, stream) {\n    GenericWorker.call(this, \"Nodejs stream input adapter for \" + filename);\n    this._upstreamEnded = false;\n    this._bindStream(stream);\n}\n\nutils.inherits(NodejsStreamInputAdapter, GenericWorker);\n\n/**\n * Prepare the stream and bind the callbacks on it.\n * Do this ASAP on node 0.10 ! A lazy binding doesn't always work.\n * @param {Stream} stream the nodejs stream to use.\n */\nNodejsStreamInputAdapter.prototype._bindStream = function (stream) {\n    var self = this;\n    this._stream = stream;\n    stream.pause();\n    stream\n    .on(\"data\", function (chunk) {\n        self.push({\n            data: chunk,\n            meta : {\n                percent : 0\n            }\n        });\n    })\n    .on(\"error\", function (e) {\n        if(self.isPaused) {\n            this.generatedError = e;\n        } else {\n            self.error(e);\n        }\n    })\n    .on(\"end\", function () {\n        if(self.isPaused) {\n            self._upstreamEnded = true;\n        } else {\n            self.end();\n        }\n    });\n};\nNodejsStreamInputAdapter.prototype.pause = function () {\n    if(!GenericWorker.prototype.pause.call(this)) {\n        return false;\n    }\n    this._stream.pause();\n    return true;\n};\nNodejsStreamInputAdapter.prototype.resume = function () {\n    if(!GenericWorker.prototype.resume.call(this)) {\n        return false;\n    }\n\n    if(this._upstreamEnded) {\n        this.end();\n    } else {\n        this._stream.resume();\n    }\n\n    return true;\n};\n\nmodule.exports = NodejsStreamInputAdapter;\n\n};"],
"names":["shadow$provide","global","require","module","exports","NodejsStreamInputAdapter","filename","stream","GenericWorker","call","_upstreamEnded","_bindStream","utils","inherits","prototype","NodejsStreamInputAdapter.prototype._bindStream","self","_stream","pause","on","chunk","push","data","meta","percent","e","isPaused","generatedError","error","end","NodejsStreamInputAdapter.prototype.pause","resume","NodejsStreamInputAdapter.prototype.resume"]
}
