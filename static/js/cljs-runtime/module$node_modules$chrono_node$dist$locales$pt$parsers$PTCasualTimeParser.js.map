{
"version":3,
"file":"module$node_modules$chrono_node$dist$locales$pt$parsers$PTCasualTimeParser.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,0EAAA,CAA+F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEnIC,MAAAA,CAAmB,IAAnBA,EAA2B,IAAKA,CAAAA,eAAhCA,EAAoD,QAAS,CAACC,GAAD,CAAM,CACnE,MAAQA,IAAD,EAAQA,GAAIC,CAAAA,UAAZ,CAA0BD,GAA1B,CAAgC,CAAE,UAAWA,GAAb,CAD4B,CAGvEE,OAAOC,CAAAA,cAAP,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAAEM,MAAO,CAAA,CAAT,CAA7C,CACA,OAAMC,QAAUT,OAAA,CAAQ,4CAAR,CACVU,OAAAA,CAAmCV,OAAA,CAAQ,oFAAR,CACzC,OAAMW,QAAUX,OAAA,CAAQ,kDAAR,CAAhB;AACMY,QAAUT,MAAA,CAAgBH,OAAA,CAAQ,qCAAR,CAAhB,CAChB,MAAMa,mBAAN,QAAiCH,OAAiCI,CAAAA,sCAAlE,CACIC,YAAY,EAAG,CACX,MAAO,oEADI,CAGfC,YAAY,CAACC,OAAD,CAAUC,KAAV,CAAiB,CACzB,MAAMC,WAAaP,OAAQQ,CAAAA,OAAR,CAAgBH,OAAQI,CAAAA,OAAxB,CACbC,QAAAA,CAAYL,OAAQM,CAAAA,uBAAR,EAClB,QAAQL,KAAA,CAAM,CAAN,CAASM,CAAAA,WAAT,EAAR,EACI,KAAK,OAAL,CACIF,OAAUG,CAAAA,KAAV,CAAgB,UAAhB,CAA4BhB,OAAQiB,CAAAA,QAASC,CAAAA,EAA7C,CACAL,QAAUG,CAAAA,KAAV,CAAgB,MAAhB,CAAwB,EAAxB,CACA,MACJ,MAAK,OAAL,CACIH,OAAUG,CAAAA,KAAV,CAAgB,UAAhB;AAA4BhB,OAAQiB,CAAAA,QAASC,CAAAA,EAA7C,CACAL,QAAUG,CAAAA,KAAV,CAAgB,MAAhB,CAAwB,EAAxB,CACA,MACJ,MAAK,OAAL,CACA,KAAK,OAAL,CACIH,OAAUG,CAAAA,KAAV,CAAgB,UAAhB,CAA4BhB,OAAQiB,CAAAA,QAASE,CAAAA,EAA7C,CACAN,QAAUG,CAAAA,KAAV,CAAgB,MAAhB,CAAwB,CAAxB,CACA,MACJ,MAAK,YAAL,CACId,OAAQkB,CAAAA,gBAAR,CAAyBP,OAAzB,CAAoCH,UAApC,CACAG,QAAUG,CAAAA,KAAV,CAAgB,MAAhB,CAAwB,CAAxB,CACAH,QAAUG,CAAAA,KAAV,CAAgB,QAAhB,CAA0B,CAA1B,CACAH,QAAUG,CAAAA,KAAV,CAAgB,QAAhB,CAA0B,CAA1B,CACA,MACJ,MAAK,UAAL,CACIH,OAAUG,CAAAA,KAAV,CAAgB,UAAhB,CAA4BhB,OAAQiB,CAAAA,QAASE,CAAAA,EAA7C,CACA,CAAAN,OAAUG,CAAAA,KAAV,CAAgB,MAAhB,CAAwB,EAAxB,CAtBR,CAyBA,MAAOH,QA5BkB,CAJjC,CAmCApB,OAAQkB,CAAAA,OAAR,CAAkBP,kBA7CqH;",
"sources":["node_modules/chrono-node/dist/locales/pt/parsers/PTCasualTimeParser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$locales$pt$parsers$PTCasualTimeParser\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst index_1 = require(\"../../../index\");\nconst AbstractParserWithWordBoundary_1 = require(\"../../../common/parsers/AbstractParserWithWordBoundary\");\nconst dayjs_1 = require(\"../../../utils/dayjs\");\nconst dayjs_2 = __importDefault(require(\"dayjs\"));\nclass PTCasualTimeParser extends AbstractParserWithWordBoundary_1.AbstractParserWithWordBoundaryChecking {\n    innerPattern() {\n        return /(?:esta\\s*)?(manha|manh\u00e3|tarde|meia-noite|meio-dia|noite)(?=\\W|$)/i;\n    }\n    innerExtract(context, match) {\n        const targetDate = dayjs_2.default(context.refDate);\n        const component = context.createParsingComponents();\n        switch (match[1].toLowerCase()) {\n            case \"tarde\":\n                component.imply(\"meridiem\", index_1.Meridiem.PM);\n                component.imply(\"hour\", 15);\n                break;\n            case \"noite\":\n                component.imply(\"meridiem\", index_1.Meridiem.PM);\n                component.imply(\"hour\", 22);\n                break;\n            case \"manha\":\n            case \"manh\u00e3\":\n                component.imply(\"meridiem\", index_1.Meridiem.AM);\n                component.imply(\"hour\", 6);\n                break;\n            case \"meia-noite\":\n                dayjs_1.assignTheNextDay(component, targetDate);\n                component.imply(\"hour\", 0);\n                component.imply(\"minute\", 0);\n                component.imply(\"second\", 0);\n                break;\n            case \"meio-dia\":\n                component.imply(\"meridiem\", index_1.Meridiem.AM);\n                component.imply(\"hour\", 12);\n                break;\n        }\n        return component;\n    }\n}\nexports.default = PTCasualTimeParser;\n\n};"],
"names":["shadow$provide","global","require","module","exports","__importDefault","mod","__esModule","Object","defineProperty","value","index_1","AbstractParserWithWordBoundary_1","dayjs_1","dayjs_2","PTCasualTimeParser","AbstractParserWithWordBoundaryChecking","innerPattern","innerExtract","context","match","targetDate","default","refDate","component","createParsingComponents","toLowerCase","imply","Meridiem","PM","AM","assignTheNextDay"]
}
