{
"version":3,
"file":"module$node_modules$chrono_node$dist$locales$fr$parsers$FRTimeUnitRelativeFormatParser.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,sFAAA,CAA2G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEnJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,OAAMC,YAAcN,OAAA,CAAQ,2DAAR,CAApB,CACMO,UAAYP,OAAA,CAAQ,8CAAR,CACZQ,OAAAA,CAAmCR,OAAA,CAAQ,oFAAR,CACzC,OAAMS,YAAcT,OAAA,CAAQ,sDAAR,CAApB;AACMU,UAAYV,OAAA,CAAQ,oDAAR,CAClB,MAAMW,0BAAN,QAAwCH,OAAiCI,CAAAA,sCAAzE,CACIC,WAAW,EAAG,CACV,KAAA,EADU,CAGdC,YAAY,EAAG,CACX,MAAO,KAAIC,MAAJ,CAAY,4BAAZ,CACF,IAAGT,WAAYU,CAAAA,cAAf,IADE,CAEF,mFAFE,CAGF,QAAON,SAAUO,CAAAA,eAAV,CAA0BX,WAAYY,CAAAA,oBAAtC,CAAP,GAHE,CAIF,mFAJE;AAIkF,GAJlF,CADI,CAOfC,YAAY,CAACC,OAAD,CAAUC,KAAV,CAAiB,CACzB,MAAMC,IAAMD,KAAA,CAAM,CAAN,CAAA,CAAWf,WAAYiB,CAAAA,kBAAZ,CAA+BF,KAAA,CAAM,CAAN,CAA/B,CAAX,CAAsD,CAAlE,CACMG,KAAOlB,WAAYY,CAAAA,oBAAZ,CAAiCG,KAAA,CAAM,CAAN,CAASI,CAAAA,WAAT,EAAjC,CACb,KAAIC,UAAY,EAChBA,UAAA,CAAUF,IAAV,CAAA,CAAkBF,GACdK,MAAAA,CAAWN,KAAA,CAAM,CAAN,CAAXM,EAAuBN,KAAA,CAAM,CAAN,CAAvBM,EAAmC,EAEvC,IADAA,KACA,CADWA,KAASF,CAAAA,WAAT,EACX,CAAA,CAGA,GAAI,gBAAiBG,CAAAA,IAAjB,CAAsBD,KAAtB,CAAJ,EAAuC,cAAeC,CAAAA,IAAf,CAAoBD,KAApB,CAAvC,EAAwE,mBAAoBC,CAAAA,IAApB,CAAyBD,KAAzB,CAAxE,CACID,SAAA,CAAYjB,WAAYoB,CAAAA,gBAAZ,CAA6BH,SAA7B,CAEhB,OAAOnB,UAAUuB,CAAAA,iBAAkBC,CAAAA,yBAA5B,CAAsDX,OAAQY,CAAAA,OAA9D,CAAuEN,SAAvE,CANP,CAPyB,CAXjC,CA2BAxB,OAAQ+B,CAAAA,OAAR;AAAkBtB,yBAnCiI;",
"sources":["node_modules/chrono-node/dist/locales/fr/parsers/FRTimeUnitRelativeFormatParser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$locales$fr$parsers$FRTimeUnitRelativeFormatParser\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst results_1 = require(\"../../../results\");\nconst AbstractParserWithWordBoundary_1 = require(\"../../../common/parsers/AbstractParserWithWordBoundary\");\nconst timeunits_1 = require(\"../../../utils/timeunits\");\nconst pattern_1 = require(\"../../../utils/pattern\");\nclass FRTimeUnitAgoFormatParser extends AbstractParserWithWordBoundary_1.AbstractParserWithWordBoundaryChecking {\n    constructor() {\n        super();\n    }\n    innerPattern() {\n        return new RegExp(`(?:les?|la|l'|du|des?)\\\\s*` +\n            `(${constants_1.NUMBER_PATTERN})?` +\n            `(?:\\\\s*(prochaine?s?|derni[e\u00e8]re?s?|pass[\u00e9e]e?s?|pr[\u00e9e]c[\u00e9e]dents?|suivante?s?))?` +\n            `\\\\s*(${pattern_1.matchAnyPattern(constants_1.TIME_UNIT_DICTIONARY)})` +\n            `(?:\\\\s*(prochaine?s?|derni[e\u00e8]re?s?|pass[\u00e9e]e?s?|pr[\u00e9e]c[\u00e9e]dents?|suivante?s?))?`, \"i\");\n    }\n    innerExtract(context, match) {\n        const num = match[1] ? constants_1.parseNumberPattern(match[1]) : 1;\n        const unit = constants_1.TIME_UNIT_DICTIONARY[match[3].toLowerCase()];\n        let timeUnits = {};\n        timeUnits[unit] = num;\n        let modifier = match[2] || match[4] || \"\";\n        modifier = modifier.toLowerCase();\n        if (!modifier) {\n            return;\n        }\n        if (/derni[e\u00e8]re?s?/.test(modifier) || /pass[\u00e9e]e?s?/.test(modifier) || /pr[\u00e9e]c[\u00e9e]dents?/.test(modifier)) {\n            timeUnits = timeunits_1.reverseTimeUnits(timeUnits);\n        }\n        return results_1.ParsingComponents.createRelativeFromRefDate(context.refDate, timeUnits);\n    }\n}\nexports.default = FRTimeUnitAgoFormatParser;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","constants_1","results_1","AbstractParserWithWordBoundary_1","timeunits_1","pattern_1","FRTimeUnitAgoFormatParser","AbstractParserWithWordBoundaryChecking","constructor","innerPattern","RegExp","NUMBER_PATTERN","matchAnyPattern","TIME_UNIT_DICTIONARY","innerExtract","context","match","num","parseNumberPattern","unit","toLowerCase","timeUnits","modifier","test","reverseTimeUnits","ParsingComponents","createRelativeFromRefDate","refDate","default"]
}
