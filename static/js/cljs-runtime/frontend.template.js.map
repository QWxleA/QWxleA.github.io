{"version":3,"sources":["frontend/template.cljs"],"mappings":";AAOA,mCAAA,nCAAOA;AAAP,AAAA,kDAAA,yJAAA,iKAAA,+JAAA,wCAAA,zfAEW,0DAAA,1DAACC,qHAAqB,AAACC,wCACnB,0DAAA,1DAACD,qHAAqB,AAACE,2CACxB,0DAAA,1DAACF,qHAAqB,AAACG,sCAC3B,AAACC,gDACO,0DAAA,1DAACJ,qHACY,iBAAAK,mBAAI,AAACC;AAAL,AAAA,oBAAAD;AAAAA;;AACI,OAACJ;;;;AAIpC,mDAAA,nDAAMM,8GACHC;AADH,AAEE,sCAAA,/BAACC,uBAAeD,wBACA,WAAAE;AAAA,AAAA,IAAAC,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAAME;YAAN,AAAAD,4CAAAD,WAAA,IAAA,nEAAQG;AAAR,AACE,IAAMA,YAAM,AAACC,oBAAYD;AAAzB,AACE,GACC,AAACE,4BAAcF;AADhB;;AAAA,oBAGC,AAACG,4CAAI,AAAClB,mCAAgB,AAACmB,0BAAkBJ;AACzC,OAACG,4CAAI,AAAClB,mCAAgB,AAACmB,0BAAkBJ;;AAJ1C,AAMC,IAAAK,qBAAa,AAACE,wBAAeP;AAA7B,AAAA,oBAAAK;AAAA,UAAAA,NAASC;AAAT,AACE,IAAME,OAAK,AAACC,oCAAsBH;AAAlC,AACE,iEAAA,1DAACpB,qHAAqB,AAACwB,yDAAkBF;;AAC3CR","names":["frontend.template/variable-rules","frontend.util.format","frontend.date/today","frontend.date/yesterday","frontend.date/tomorrow","frontend.date/get-current-time","or__4253__auto__","frontend.state/get-current-page","frontend.template/resolve-dynamic-template!","content","clojure.string/replace","p__86831","vec__86833","cljs.core.nth","_","match","clojure.string/trim","clojure.string/blank?","cljs.core.get","clojure.string/lower-case","temp__5718__auto__","nld","frontend.date/nld-parse","date","cljs-time.coerce/to-local-date-time","frontend.date.journal_name"],"sourcesContent":["(ns frontend.template\n  (:require [cljs-time.coerce :as tc]\n            [clojure.string :as string]\n            [frontend.date :as date]\n            [frontend.state :as state]\n            [frontend.util :as util]))\n\n(defn- variable-rules\n  []\n  {\"today\" (util/format \"[[%s]]\" (date/today))\n   \"yesterday\" (util/format \"[[%s]]\" (date/yesterday))\n   \"tomorrow\" (util/format \"[[%s]]\" (date/tomorrow))\n   \"time\" (date/get-current-time)\n   \"current page\" (util/format \"[[%s]]\"\n                               (or (state/get-current-page)\n                                   (date/today)))})\n\n;; TODO: programmable\n;; context information, date, current page\n(defn resolve-dynamic-template!\n  [content]\n  (string/replace content #\"<%([^%].*?)%>\"\n                  (fn [[_ match]]\n                    (let [match (string/trim match)]\n                      (cond\n                       (string/blank? match)\n                       \"\"\n                       (get (variable-rules) (string/lower-case match))\n                       (get (variable-rules) (string/lower-case match))\n                       :else\n                       (if-let [nld (date/nld-parse match)]\n                         (let [date (tc/to-local-date-time nld)]\n                           (util/format \"[[%s]]\" (date/journal-name date)))\n                         match))))))\n"]}