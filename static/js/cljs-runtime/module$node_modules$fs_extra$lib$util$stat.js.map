{
"version":3,
"file":"module$node_modules$fs_extra$lib$util$stat.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/fs-extra/lib/util/stat.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fs_extra$lib$util$stat\"] = function(global,require,module,exports) {\n'use strict'\n\nconst fs = require('../fs')\nconst path = require('path')\nconst util = require('util')\nconst atLeastNode = require('at-least-node')\n\nconst nodeSupportsBigInt = atLeastNode('10.5.0')\nconst stat = (file) => nodeSupportsBigInt ? fs.stat(file, { bigint: true }) : fs.stat(file)\nconst statSync = (file) => nodeSupportsBigInt ? fs.statSync(file, { bigint: true }) : fs.statSync(file)\n\nfunction getStats (src, dest) {\n  return Promise.all([\n    stat(src),\n    stat(dest).catch(err => {\n      if (err.code === 'ENOENT') return null\n      throw err\n    })\n  ]).then(([srcStat, destStat]) => ({ srcStat, destStat }))\n}\n\nfunction getStatsSync (src, dest) {\n  let destStat\n  const srcStat = statSync(src)\n  try {\n    destStat = statSync(dest)\n  } catch (err) {\n    if (err.code === 'ENOENT') return { srcStat, destStat: null }\n    throw err\n  }\n  return { srcStat, destStat }\n}\n\nfunction checkPaths (src, dest, funcName, cb) {\n  util.callbackify(getStats)(src, dest, (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n    if (destStat && areIdentical(srcStat, destStat)) {\n      return cb(new Error('Source and destination must not be the same.'))\n    }\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return cb(null, { srcStat, destStat })\n  })\n}\n\nfunction checkPathsSync (src, dest, funcName) {\n  const { srcStat, destStat } = getStatsSync(src, dest)\n  if (destStat && areIdentical(srcStat, destStat)) {\n    throw new Error('Source and destination must not be the same.')\n  }\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return { srcStat, destStat }\n}\n\n// recursively check if dest parent is a subdirectory of src.\n// It works for all file types including symlinks since it\n// checks the src and dest inodes. It starts from the deepest\n// parent and stops once it reaches the src parent or the root path.\nfunction checkParentPaths (src, srcStat, dest, funcName, cb) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return cb()\n  const callback = (err, destStat) => {\n    if (err) {\n      if (err.code === 'ENOENT') return cb()\n      return cb(err)\n    }\n    if (areIdentical(srcStat, destStat)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return checkParentPaths(src, srcStat, destParent, funcName, cb)\n  }\n  if (nodeSupportsBigInt) fs.stat(destParent, { bigint: true }, callback)\n  else fs.stat(destParent, callback)\n}\n\nfunction checkParentPathsSync (src, srcStat, dest, funcName) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return\n  let destStat\n  try {\n    destStat = statSync(destParent)\n  } catch (err) {\n    if (err.code === 'ENOENT') return\n    throw err\n  }\n  if (areIdentical(srcStat, destStat)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return checkParentPathsSync(src, srcStat, destParent, funcName)\n}\n\nfunction areIdentical (srcStat, destStat) {\n  if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n    if (nodeSupportsBigInt || destStat.ino < Number.MAX_SAFE_INTEGER) {\n      // definitive answer\n      return true\n    }\n    // Use additional heuristics if we can't use 'bigint'.\n    // Different 'ino' could be represented the same if they are >= Number.MAX_SAFE_INTEGER\n    // See issue 657\n    if (destStat.size === srcStat.size &&\n        destStat.mode === srcStat.mode &&\n        destStat.nlink === srcStat.nlink &&\n        destStat.atimeMs === srcStat.atimeMs &&\n        destStat.mtimeMs === srcStat.mtimeMs &&\n        destStat.ctimeMs === srcStat.ctimeMs &&\n        destStat.birthtimeMs === srcStat.birthtimeMs) {\n      // heuristic answer\n      return true\n    }\n  }\n  return false\n}\n\n// return true if dest is a subdir of src, otherwise false.\n// It only checks the path strings.\nfunction isSrcSubdir (src, dest) {\n  const srcArr = path.resolve(src).split(path.sep).filter(i => i)\n  const destArr = path.resolve(dest).split(path.sep).filter(i => i)\n  return srcArr.reduce((acc, cur, i) => acc && destArr[i] === cur, true)\n}\n\nfunction errMsg (src, dest, funcName) {\n  return `Cannot ${funcName} '${src}' to a subdirectory of itself, '${dest}'.`\n}\n\nmodule.exports = {\n  checkPaths,\n  checkPathsSync,\n  checkParentPaths,\n  checkParentPathsSync,\n  isSrcSubdir\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","getStats","src","dest","Promise","all","stat","catch","err","code","then","srcStat","destStat","checkParentPaths","funcName","cb","srcParent","path","resolve","dirname","destParent","parse","root","callback","areIdentical","Error","errMsg","nodeSupportsBigInt","fs","bigint","checkParentPathsSync","statSync","ino","dev","Number","MAX_SAFE_INTEGER","size","mode","nlink","atimeMs","mtimeMs","ctimeMs","birthtimeMs","isSrcSubdir","srcArr","split","sep","filter","i","destArr","reduce","acc","cur","util","atLeastNode","file","checkPaths","callbackify","stats","isDirectory","checkPathsSync"]
}
