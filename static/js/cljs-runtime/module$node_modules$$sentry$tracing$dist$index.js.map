{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$index.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC3GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACIC,OAAAA,CAAkBN,OAAA,CAAQ,wDAAR,CACtBE,QAAQK,CAAAA,mBAAR,CAA8BD,MAAgBC,CAAAA,mBAC1CC,OAAAA,CAAeR,OAAA,CAAQ,6DAAR,CACnBE,QAAQM,CAAAA,YAAR,CAAuBA,MAiBnBC,OAAAA,CAAYT,OAAA,CAAQ,wDAAR,CAChBE,QAAQQ,CAAAA,cAAR,CAAyBD,MAAUC,CAAAA,cAC/BC;MAAAA,CAASX,OAAA,CAAQ,+CAAR,CACbE,QAAQU,CAAAA,IAAR,CAAeD,MAAOC,CAAAA,IACtBV,QAAQW,CAAAA,sBAAR,CAAiCF,MAAOE,CAAAA,sBAEpCC,OAAAA,CAAed,OAAA,CAAQ,qDAAR,CACnBE,QAAQa,CAAAA,UAAR,CAAqBD,MAAaC,CAAAA,UAC9BC,OAAAA,CAAgBhB,OAAA,CAAQ,sDAAR,CACpBE,QAAQe,CAAAA,WAAR,CAAsBD,MAAcC,CAAAA,WAChCC,OAAAA,CAAYlB,OAAA,CAAQ,wDAAR,CAEhBE,QAAQiB,CAAAA,8BAAR,CAAyCD,MAAUE,CAAAA,0BACnDlB;OAAQmB,CAAAA,oCAAR,CAA+CH,MAAUG,CAAAA,oCACrDC,OAAAA,CAAoBtB,OAAA,CAAQ,0DAAR,CACxBE,QAAQqB,CAAAA,eAAR,CAA0BD,MAAkBC,CAAAA,eACxCC,OAAAA,CAAkBxB,OAAA,CAAQ,wDAAR,CACtBE,QAAQuB,CAAAA,oBAAR,CAA+BD,MAAgBC,CAAAA,oBAE/CnB,OAAgBC,CAAAA,mBAAhB,EACImB,QAAAA,CAAU1B,OAAA,CAAQ,gDAAR,CACdE,QAAQyB,CAAAA,sBAAR,CAAiCD,OAAQC,CAAAA,sBACzCzB,QAAQ0B,CAAAA,oBAAR;AAA+BF,OAAQE,CAAAA,oBACvC1B,QAAQ2B,CAAAA,iBAAR,CAA4BH,OAAQG,CAAAA,iBACpC3B,QAAQ4B,CAAAA,wBAAR,CAAmCJ,OAAQI,CAAAA,wBAC3C5B,QAAQ6B,CAAAA,kBAAR,CAA6BL,OAAQK,CAAAA,kBA/CsE;",
"sources":["node_modules/@sentry/tracing/dist/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$index\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hubextensions_1 = require(\"./hubextensions\");\nexports.addExtensionMethods = hubextensions_1.addExtensionMethods;\nvar Integrations = require(\"./integrations\");\nexports.Integrations = Integrations;\n// This is already exported as part of `Integrations` above (and for the moment will remain so for\n// backwards compatibility), but that interferes with treeshaking, so we also export it separately\n// here.\n//\n// Previously we expected users to import tracing integrations like\n//\n// import { Integrations } from '@sentry/tracing';\n// const instance = new Integrations.BrowserTracing();\n//\n// This makes the integrations unable to be treeshaken though. To address this, we now have\n// this individual export. We now expect users to consume BrowserTracing like so:\n//\n// import { BrowserTracing } from '@sentry/tracing';\n// const instance = new BrowserTracing();\n//\n// For an example of of the new usage of BrowserTracing, see @sentry/nextjs index.client.ts\nvar browser_1 = require(\"./browser\");\nexports.BrowserTracing = browser_1.BrowserTracing;\nvar span_1 = require(\"./span\");\nexports.Span = span_1.Span;\nexports.spanStatusfromHttpCode = span_1.spanStatusfromHttpCode;\n// eslint-disable-next-line deprecation/deprecation\nvar spanstatus_1 = require(\"./spanstatus\");\nexports.SpanStatus = spanstatus_1.SpanStatus;\nvar transaction_1 = require(\"./transaction\");\nexports.Transaction = transaction_1.Transaction;\nvar browser_2 = require(\"./browser\");\n// TODO deprecate old name in v7\nexports.registerRequestInstrumentation = browser_2.instrumentOutgoingRequests;\nexports.defaultRequestInstrumentationOptions = browser_2.defaultRequestInstrumentationOptions;\nvar idletransaction_1 = require(\"./idletransaction\");\nexports.IdleTransaction = idletransaction_1.IdleTransaction;\nvar hubextensions_2 = require(\"./hubextensions\");\nexports.startIdleTransaction = hubextensions_2.startIdleTransaction;\n// We are patching the global object with our hub extension methods\nhubextensions_1.addExtensionMethods();\nvar utils_1 = require(\"./utils\");\nexports.extractTraceparentData = utils_1.extractTraceparentData;\nexports.getActiveTransaction = utils_1.getActiveTransaction;\nexports.hasTracingEnabled = utils_1.hasTracingEnabled;\nexports.stripUrlQueryAndFragment = utils_1.stripUrlQueryAndFragment;\nexports.TRACEPARENT_REGEXP = utils_1.TRACEPARENT_REGEXP;\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","hubextensions_1","addExtensionMethods","Integrations","browser_1","BrowserTracing","span_1","Span","spanStatusfromHttpCode","spanstatus_1","SpanStatus","transaction_1","Transaction","browser_2","registerRequestInstrumentation","instrumentOutgoingRequests","defaultRequestInstrumentationOptions","idletransaction_1","IdleTransaction","hubextensions_2","startIdleTransaction","utils_1","extractTraceparentData","getActiveTransaction","hasTracingEnabled","stripUrlQueryAndFragment","TRACEPARENT_REGEXP"]
}
