{
"version":3,
"file":"module$node_modules$codemirror$mode$stylus$stylus.js",
"lineCount":38,
"mappings":"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",
"sources":["node_modules/codemirror/mode/stylus/stylus.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$stylus$stylus\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Stylus mode created by Dmitry Kiselyov http://git.io/AaRB\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"stylus\", function(config) {\n    var indentUnit = config.indentUnit,\n        indentUnitString = '',\n        tagKeywords = keySet(tagKeywords_),\n        tagVariablesRegexp = /^(a|b|i|s|col|em)$/i,\n        propertyKeywords = keySet(propertyKeywords_),\n        nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_),\n        valueKeywords = keySet(valueKeywords_),\n        colorKeywords = keySet(colorKeywords_),\n        documentTypes = keySet(documentTypes_),\n        documentTypesRegexp = wordRegexp(documentTypes_),\n        mediaFeatures = keySet(mediaFeatures_),\n        mediaTypes = keySet(mediaTypes_),\n        fontProperties = keySet(fontProperties_),\n        operatorsRegexp = /^\\s*([.]{2,3}|&&|\\|\\||\\*\\*|[?!=:]?=|[-+*\\/%<>]=?|\\?:|\\~)/,\n        wordOperatorKeywordsRegexp = wordRegexp(wordOperatorKeywords_),\n        blockKeywords = keySet(blockKeywords_),\n        vendorPrefixesRegexp = new RegExp(/^\\-(moz|ms|o|webkit)-/i),\n        commonAtoms = keySet(commonAtoms_),\n        firstWordMatch = \"\",\n        states = {},\n        ch,\n        style,\n        type,\n        override;\n\n    while (indentUnitString.length < indentUnit) indentUnitString += ' ';\n\n    /**\n     * Tokenizers\n     */\n    function tokenBase(stream, state) {\n      firstWordMatch = stream.string.match(/(^[\\w-]+\\s*=\\s*$)|(^\\s*[\\w-]+\\s*=\\s*[\\w-])|(^\\s*(\\.|#|@|\\$|\\&|\\[|\\d|\\+|::?|\\{|\\>|~|\\/)?\\s*[\\w-]*([a-z0-9-]|\\*|\\/\\*)(\\(|,)?)/);\n      state.context.line.firstWord = firstWordMatch ? firstWordMatch[0].replace(/^\\s*/, \"\") : \"\";\n      state.context.line.indent = stream.indentation();\n      ch = stream.peek();\n\n      // Line comment\n      if (stream.match(\"//\")) {\n        stream.skipToEnd();\n        return [\"comment\", \"comment\"];\n      }\n      // Block comment\n      if (stream.match(\"/*\")) {\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      }\n      // String\n      if (ch == \"\\\"\" || ch == \"'\") {\n        stream.next();\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n      // Def\n      if (ch == \"@\") {\n        stream.next();\n        stream.eatWhile(/[\\w\\\\-]/);\n        return [\"def\", stream.current()];\n      }\n      // ID selector or Hex color\n      if (ch == \"#\") {\n        stream.next();\n        // Hex color\n        if (stream.match(/^[0-9a-f]{3}([0-9a-f]([0-9a-f]{2}){0,2})?\\b(?!-)/i)) {\n          return [\"atom\", \"atom\"];\n        }\n        // ID selector\n        if (stream.match(/^[a-z][\\w-]*/i)) {\n          return [\"builtin\", \"hash\"];\n        }\n      }\n      // Vendor prefixes\n      if (stream.match(vendorPrefixesRegexp)) {\n        return [\"meta\", \"vendor-prefixes\"];\n      }\n      // Numbers\n      if (stream.match(/^-?[0-9]?\\.?[0-9]/)) {\n        stream.eatWhile(/[a-z%]/i);\n        return [\"number\", \"unit\"];\n      }\n      // !important|optional\n      if (ch == \"!\") {\n        stream.next();\n        return [stream.match(/^(important|optional)/i) ? \"keyword\": \"operator\", \"important\"];\n      }\n      // Class\n      if (ch == \".\" && stream.match(/^\\.[a-z][\\w-]*/i)) {\n        return [\"qualifier\", \"qualifier\"];\n      }\n      // url url-prefix domain regexp\n      if (stream.match(documentTypesRegexp)) {\n        if (stream.peek() == \"(\") state.tokenize = tokenParenthesized;\n        return [\"property\", \"word\"];\n      }\n      // Mixins / Functions\n      if (stream.match(/^[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\"keyword\", \"mixin\"];\n      }\n      // Block mixins\n      if (stream.match(/^(\\+|-)[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\"keyword\", \"block-mixin\"];\n      }\n      // Parent Reference BEM naming\n      if (stream.string.match(/^\\s*&/) && stream.match(/^[-_]+[a-z][\\w-]*/)) {\n        return [\"qualifier\", \"qualifier\"];\n      }\n      // / Root Reference & Parent Reference\n      if (stream.match(/^(\\/|&)(-|_|:|\\.|#|[a-z])/)) {\n        stream.backUp(1);\n        return [\"variable-3\", \"reference\"];\n      }\n      if (stream.match(/^&{1}\\s*$/)) {\n        return [\"variable-3\", \"reference\"];\n      }\n      // Word operator\n      if (stream.match(wordOperatorKeywordsRegexp)) {\n        return [\"operator\", \"operator\"];\n      }\n      // Word\n      if (stream.match(/^\\$?[-_]*[a-z0-9]+[\\w-]*/i)) {\n        // Variable\n        if (stream.match(/^(\\.|\\[)[\\w-\\'\\\"\\]]+/i, false)) {\n          if (!wordIsTag(stream.current())) {\n            stream.match(/\\./);\n            return [\"variable-2\", \"variable-name\"];\n          }\n        }\n        return [\"variable-2\", \"word\"];\n      }\n      // Operators\n      if (stream.match(operatorsRegexp)) {\n        return [\"operator\", stream.current()];\n      }\n      // Delimiters\n      if (/[:;,{}\\[\\]\\(\\)]/.test(ch)) {\n        stream.next();\n        return [null, ch];\n      }\n      // Non-detected items\n      stream.next();\n      return [null, null];\n    }\n\n    /**\n     * Token comment\n     */\n    function tokenCComment(stream, state) {\n      var maybeEnd = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (maybeEnd && ch == \"/\") {\n          state.tokenize = null;\n          break;\n        }\n        maybeEnd = (ch == \"*\");\n      }\n      return [\"comment\", \"comment\"];\n    }\n\n    /**\n     * Token string\n     */\n    function tokenString(quote) {\n      return function(stream, state) {\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && !escaped) {\n            if (quote == \")\") stream.backUp(1);\n            break;\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n        return [\"string\", \"string\"];\n      };\n    }\n\n    /**\n     * Token parenthesized\n     */\n    function tokenParenthesized(stream, state) {\n      stream.next(); // Must be \"(\"\n      if (!stream.match(/\\s*[\\\"\\')]/, false))\n        state.tokenize = tokenString(\")\");\n      else\n        state.tokenize = null;\n      return [null, \"(\"];\n    }\n\n    /**\n     * Context management\n     */\n    function Context(type, indent, prev, line) {\n      this.type = type;\n      this.indent = indent;\n      this.prev = prev;\n      this.line = line || {firstWord: \"\", indent: 0};\n    }\n\n    function pushContext(state, stream, type, indent) {\n      indent = indent >= 0 ? indent : indentUnit;\n      state.context = new Context(type, stream.indentation() + indent, state.context);\n      return type;\n    }\n\n    function popContext(state, currentIndent) {\n      var contextIndent = state.context.indent - indentUnit;\n      currentIndent = currentIndent || false;\n      state.context = state.context.prev;\n      if (currentIndent) state.context.indent = contextIndent;\n      return state.context.type;\n    }\n\n    function pass(type, stream, state) {\n      return states[state.context.type](type, stream, state);\n    }\n\n    function popAndPass(type, stream, state, n) {\n      for (var i = n || 1; i > 0; i--)\n        state.context = state.context.prev;\n      return pass(type, stream, state);\n    }\n\n\n    /**\n     * Parser\n     */\n    function wordIsTag(word) {\n      return word.toLowerCase() in tagKeywords;\n    }\n\n    function wordIsProperty(word) {\n      word = word.toLowerCase();\n      return word in propertyKeywords || word in fontProperties;\n    }\n\n    function wordIsBlock(word) {\n      return word.toLowerCase() in blockKeywords;\n    }\n\n    function wordIsVendorPrefix(word) {\n      return word.toLowerCase().match(vendorPrefixesRegexp);\n    }\n\n    function wordAsValue(word) {\n      var wordLC = word.toLowerCase();\n      var override = \"variable-2\";\n      if (wordIsTag(word)) override = \"tag\";\n      else if (wordIsBlock(word)) override = \"block-keyword\";\n      else if (wordIsProperty(word)) override = \"property\";\n      else if (wordLC in valueKeywords || wordLC in commonAtoms) override = \"atom\";\n      else if (wordLC == \"return\" || wordLC in colorKeywords) override = \"keyword\";\n\n      // Font family\n      else if (word.match(/^[A-Z]/)) override = \"string\";\n      return override;\n    }\n\n    function typeIsBlock(type, stream) {\n      return ((endOfLine(stream) && (type == \"{\" || type == \"]\" || type == \"hash\" || type == \"qualifier\")) || type == \"block-mixin\");\n    }\n\n    function typeIsInterpolation(type, stream) {\n      return type == \"{\" && stream.match(/^\\s*\\$?[\\w-]+/i, false);\n    }\n\n    function typeIsPseudo(type, stream) {\n      return type == \":\" && stream.match(/^[a-z-]+/, false);\n    }\n\n    function startOfLine(stream) {\n      return stream.sol() || stream.string.match(new RegExp(\"^\\\\s*\" + escapeRegExp(stream.current())));\n    }\n\n    function endOfLine(stream) {\n      return stream.eol() || stream.match(/^\\s*$/, false);\n    }\n\n    function firstWordOfLine(line) {\n      var re = /^\\s*[-_]*[a-z0-9]+[\\w-]*/i;\n      var result = typeof line == \"string\" ? line.match(re) : line.string.match(re);\n      return result ? result[0].replace(/^\\s*/, \"\") : \"\";\n    }\n\n\n    /**\n     * Block\n     */\n    states.block = function(type, stream, state) {\n      if ((type == \"comment\" && startOfLine(stream)) ||\n          (type == \",\" && endOfLine(stream)) ||\n          type == \"mixin\") {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      if (typeIsInterpolation(type, stream)) {\n        return pushContext(state, stream, \"interpolation\");\n      }\n      if (endOfLine(stream) && type == \"]\") {\n        if (!/^\\s*(\\.|#|:|\\[|\\*|&)/.test(stream.string) && !wordIsTag(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n      }\n      if (typeIsBlock(type, stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"}\" && endOfLine(stream)) {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      if (type == \"variable-name\") {\n        if (stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/) || wordIsBlock(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"variableName\");\n        }\n        else {\n          return pushContext(state, stream, \"variableName\", 0);\n        }\n      }\n      if (type == \"=\") {\n        if (!endOfLine(stream) && !wordIsBlock(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"*\") {\n        if (endOfLine(stream) || stream.match(/\\s*(,|\\.|#|\\[|:|{)/,false)) {\n          override = \"tag\";\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      if (typeIsPseudo(type, stream)) {\n        return pushContext(state, stream, \"pseudo\");\n      }\n      if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n        return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n      }\n      if (/@(-(moz|ms|o|webkit)-)?keyframes$/.test(type)) {\n        return pushContext(state, stream, \"keyframes\");\n      }\n      if (/@extends?/.test(type)) {\n        return pushContext(state, stream, \"extend\", 0);\n      }\n      if (type && type.charAt(0) == \"@\") {\n\n        // Property Lookup\n        if (stream.indentation() > 0 && wordIsProperty(stream.current().slice(1))) {\n          override = \"variable-2\";\n          return \"block\";\n        }\n        if (/(@import|@require|@charset)/.test(type)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"reference\" && endOfLine(stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"(\") {\n        return pushContext(state, stream, \"parens\");\n      }\n\n      if (type == \"vendor-prefixes\") {\n        return pushContext(state, stream, \"vendorPrefixes\");\n      }\n      if (type == \"word\") {\n        var word = stream.current();\n        override = wordAsValue(word);\n\n        if (override == \"property\") {\n          if (startOfLine(stream)) {\n            return pushContext(state, stream, \"block\", 0);\n          } else {\n            override = \"atom\";\n            return \"block\";\n          }\n        }\n\n        if (override == \"tag\") {\n\n          // tag is a css value\n          if (/embed|menu|pre|progress|sub|table/.test(word)) {\n            if (wordIsProperty(firstWordOfLine(stream))) {\n              override = \"atom\";\n              return \"block\";\n            }\n          }\n\n          // tag is an attribute\n          if (stream.string.match(new RegExp(\"\\\\[\\\\s*\" + word + \"|\" + word +\"\\\\s*\\\\]\"))) {\n            override = \"atom\";\n            return \"block\";\n          }\n\n          // tag is a variable\n          if (tagVariablesRegexp.test(word)) {\n            if ((startOfLine(stream) && stream.string.match(/=/)) ||\n                (!startOfLine(stream) &&\n                 !stream.string.match(/^(\\s*\\.|#|\\&|\\[|\\/|>|\\*)/) &&\n                 !wordIsTag(firstWordOfLine(stream)))) {\n              override = \"variable-2\";\n              if (wordIsBlock(firstWordOfLine(stream)))  return \"block\";\n              return pushContext(state, stream, \"block\", 0);\n            }\n          }\n\n          if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        }\n        if (override == \"block-keyword\") {\n          override = \"keyword\";\n\n          // Postfix conditionals\n          if (stream.current(/(if|unless)/) && !startOfLine(stream)) {\n            return \"block\";\n          }\n          return pushContext(state, stream, \"block\");\n        }\n        if (word == \"return\") return pushContext(state, stream, \"block\", 0);\n\n        // Placeholder selector\n        if (override == \"variable-2\" && stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/)) {\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Parens\n     */\n    states.parens = function(type, stream, state) {\n      if (type == \"(\") return pushContext(state, stream, \"parens\");\n      if (type == \")\") {\n        if (state.context.prev.type == \"parens\") {\n          return popContext(state);\n        }\n        if ((stream.string.match(/^[a-z][\\w-]*\\(/i) && endOfLine(stream)) ||\n            wordIsBlock(firstWordOfLine(stream)) ||\n            /(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(firstWordOfLine(stream)) ||\n            (!stream.string.match(/^-?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) &&\n             wordIsTag(firstWordOfLine(stream)))) {\n          return pushContext(state, stream, \"block\");\n        }\n        if (stream.string.match(/^[\\$-]?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) ||\n            stream.string.match(/^\\s*(\\(|\\)|[0-9])/) ||\n            stream.string.match(/^\\s+[a-z][\\w-]*\\(/i) ||\n            stream.string.match(/^\\s+[\\$-]?[a-z]/i)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        else return pushContext(state, stream, \"block\", 0);\n      }\n      if (type && type.charAt(0) == \"@\" && wordIsProperty(stream.current().slice(1))) {\n        override = \"variable-2\";\n      }\n      if (type == \"word\") {\n        var word = stream.current();\n        override = wordAsValue(word);\n        if (override == \"tag\" && tagVariablesRegexp.test(word)) {\n          override = \"variable-2\";\n        }\n        if (override == \"property\" || word == \"to\") override = \"atom\";\n      }\n      if (type == \"variable-name\") {\n        return pushContext(state, stream, \"variableName\");\n      }\n      if (typeIsPseudo(type, stream)) {\n        return pushContext(state, stream, \"pseudo\");\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Vendor prefixes\n     */\n    states.vendorPrefixes = function(type, stream, state) {\n      if (type == \"word\") {\n        override = \"property\";\n        return pushContext(state, stream, \"block\", 0);\n      }\n      return popContext(state);\n    };\n\n\n    /**\n     * Pseudo\n     */\n    states.pseudo = function(type, stream, state) {\n      if (!wordIsProperty(firstWordOfLine(stream.string))) {\n        stream.match(/^[a-z-]+/);\n        override = \"variable-3\";\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        return popContext(state);\n      }\n      return popAndPass(type, stream, state);\n    };\n\n\n    /**\n     * atBlock\n     */\n    states.atBlock = function(type, stream, state) {\n      if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n      if (typeIsBlock(type, stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (typeIsInterpolation(type, stream)) {\n        return pushContext(state, stream, \"interpolation\");\n      }\n      if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        if (/^(only|not|and|or)$/.test(word))\n          override = \"keyword\";\n        else if (documentTypes.hasOwnProperty(word))\n          override = \"tag\";\n        else if (mediaTypes.hasOwnProperty(word))\n          override = \"attribute\";\n        else if (mediaFeatures.hasOwnProperty(word))\n          override = \"property\";\n        else if (nonStandardPropertyKeywords.hasOwnProperty(word))\n          override = \"string-2\";\n        else override = wordAsValue(stream.current());\n        if (override == \"tag\" && endOfLine(stream)) {\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      if (type == \"operator\" && /^(not|and|or)$/.test(stream.current())) {\n        override = \"keyword\";\n      }\n      return state.context.type;\n    };\n\n    states.atBlock_parens = function(type, stream, state) {\n      if (type == \"{\" || type == \"}\") return state.context.type;\n      if (type == \")\") {\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        else return pushContext(state, stream, \"atBlock\");\n      }\n      if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        override = wordAsValue(word);\n        if (/^(max|min)/.test(word)) override = \"property\";\n        if (override == \"tag\") {\n          tagVariablesRegexp.test(word) ? override = \"variable-2\" : override = \"atom\";\n        }\n        return state.context.type;\n      }\n      return states.atBlock(type, stream, state);\n    };\n\n\n    /**\n     * Keyframes\n     */\n    states.keyframes = function(type, stream, state) {\n      if (stream.indentation() == \"0\" && ((type == \"}\" && startOfLine(stream)) || type == \"]\" || type == \"hash\"\n                                          || type == \"qualifier\" || wordIsTag(stream.current()))) {\n        return popAndPass(type, stream, state);\n      }\n      if (type == \"{\") return pushContext(state, stream, \"keyframes\");\n      if (type == \"}\") {\n        if (startOfLine(stream)) return popContext(state, true);\n        else return pushContext(state, stream, \"keyframes\");\n      }\n      if (type == \"unit\" && /^[0-9]+\\%$/.test(stream.current())) {\n        return pushContext(state, stream, \"keyframes\");\n      }\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        if (override == \"block-keyword\") {\n          override = \"keyword\";\n          return pushContext(state, stream, \"keyframes\");\n        }\n      }\n      if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n        return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n      }\n      if (type == \"mixin\") {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Interpolation\n     */\n    states.interpolation = function(type, stream, state) {\n      if (type == \"{\") popContext(state) && pushContext(state, stream, \"block\");\n      if (type == \"}\") {\n        if (stream.string.match(/^\\s*(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/i) ||\n            (stream.string.match(/^\\s*[a-z]/i) && wordIsTag(firstWordOfLine(stream)))) {\n          return pushContext(state, stream, \"block\");\n        }\n        if (!stream.string.match(/^(\\{|\\s*\\&)/) ||\n            stream.match(/\\s*[\\w-]/,false)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"variable-name\") {\n        return pushContext(state, stream, \"variableName\", 0);\n      }\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        if (override == \"tag\") override = \"atom\";\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Extend/s\n     */\n    states.extend = function(type, stream, state) {\n      if (type == \"[\" || type == \"=\") return \"extend\";\n      if (type == \"]\") return popContext(state);\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        return \"extend\";\n      }\n      return popContext(state);\n    };\n\n\n    /**\n     * Variable name\n     */\n    states.variableName = function(type, stream, state) {\n      if (type == \"string\" || type == \"[\" || type == \"]\" || stream.current().match(/^(\\.|\\$)/)) {\n        if (stream.current().match(/^\\.[\\w-]+/i)) override = \"variable-2\";\n        return \"variableName\";\n      }\n      return popAndPass(type, stream, state);\n    };\n\n\n    return {\n      startState: function(base) {\n        return {\n          tokenize: null,\n          state: \"block\",\n          context: new Context(\"block\", base || 0, null)\n        };\n      },\n      token: function(stream, state) {\n        if (!state.tokenize && stream.eatSpace()) return null;\n        style = (state.tokenize || tokenBase)(stream, state);\n        if (style && typeof style == \"object\") {\n          type = style[1];\n          style = style[0];\n        }\n        override = style;\n        state.state = states[state.state](type, stream, state);\n        return override;\n      },\n      indent: function(state, textAfter, line) {\n\n        var cx = state.context,\n            ch = textAfter && textAfter.charAt(0),\n            indent = cx.indent,\n            lineFirstWord = firstWordOfLine(textAfter),\n            lineIndent = line.match(/^\\s*/)[0].replace(/\\t/g, indentUnitString).length,\n            prevLineFirstWord = state.context.prev ? state.context.prev.line.firstWord : \"\",\n            prevLineIndent = state.context.prev ? state.context.prev.line.indent : lineIndent;\n\n        if (cx.prev &&\n            (ch == \"}\" && (cx.type == \"block\" || cx.type == \"atBlock\" || cx.type == \"keyframes\") ||\n             ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\n             ch == \"{\" && (cx.type == \"at\"))) {\n          indent = cx.indent - indentUnit;\n        } else if (!(/(\\})/.test(ch))) {\n          if (/@|\\$|\\d/.test(ch) ||\n              /^\\{/.test(textAfter) ||\n/^\\s*\\/(\\/|\\*)/.test(textAfter) ||\n              /^\\s*\\/\\*/.test(prevLineFirstWord) ||\n              /^\\s*[\\w-\\.\\[\\]\\'\\\"]+\\s*(\\?|:|\\+)?=/i.test(textAfter) ||\n/^(\\+|-)?[a-z][\\w-]*\\(/i.test(textAfter) ||\n/^return/.test(textAfter) ||\n              wordIsBlock(lineFirstWord)) {\n            indent = lineIndent;\n          } else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(ch) || wordIsTag(lineFirstWord)) {\n            if (/\\,\\s*$/.test(prevLineFirstWord)) {\n              indent = prevLineIndent;\n            } else if (/^\\s+/.test(line) && (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(prevLineFirstWord) || wordIsTag(prevLineFirstWord))) {\n              indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + indentUnit;\n            } else {\n              indent = lineIndent;\n            }\n          } else if (!/,\\s*$/.test(line) && (wordIsVendorPrefix(lineFirstWord) || wordIsProperty(lineFirstWord))) {\n            if (wordIsBlock(prevLineFirstWord)) {\n              indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + indentUnit;\n            } else if (/^\\{/.test(prevLineFirstWord)) {\n              indent = lineIndent <= prevLineIndent ? lineIndent : prevLineIndent + indentUnit;\n            } else if (wordIsVendorPrefix(prevLineFirstWord) || wordIsProperty(prevLineFirstWord)) {\n              indent = lineIndent >= prevLineIndent ? prevLineIndent : lineIndent;\n            } else if (/^(\\.|#|:|\\[|\\*|&|@|\\+|\\-|>|~|\\/)/.test(prevLineFirstWord) ||\n                      /=\\s*$/.test(prevLineFirstWord) ||\n                      wordIsTag(prevLineFirstWord) ||\n                      /^\\$[\\w-\\.\\[\\]\\'\\\"]/.test(prevLineFirstWord)) {\n              indent = prevLineIndent + indentUnit;\n            } else {\n              indent = lineIndent;\n            }\n          }\n        }\n        return indent;\n      },\n      electricChars: \"}\",\n      lineComment: \"//\",\n      fold: \"indent\"\n    };\n  });\n\n  // developer.mozilla.org/en-US/docs/Web/HTML/Element\n  var tagKeywords_ = [\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\", \"b\", \"base\",\"bdi\", \"bdo\",\"bgsound\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\", \"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"div\", \"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\", \"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\", \"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\", \"mark\",\"marquee\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"nobr\",\"noframes\", \"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"pre\", \"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\", \"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"track\", \"u\",\"ul\",\"var\",\"video\"];\n\n  // github.com/codemirror/CodeMirror/blob/master/mode/css/css.js\n  var documentTypes_ = [\"domain\", \"regexp\", \"url\", \"url-prefix\"];\n  var mediaTypes_ = [\"all\",\"aural\",\"braille\",\"handheld\",\"print\",\"projection\",\"screen\",\"tty\",\"tv\",\"embossed\"];\n  var mediaFeatures_ = [\"width\",\"min-width\",\"max-width\",\"height\",\"min-height\",\"max-height\",\"device-width\",\"min-device-width\",\"max-device-width\",\"device-height\",\"min-device-height\",\"max-device-height\",\"aspect-ratio\",\"min-aspect-ratio\",\"max-aspect-ratio\",\"device-aspect-ratio\",\"min-device-aspect-ratio\",\"max-device-aspect-ratio\",\"color\",\"min-color\",\"max-color\",\"color-index\",\"min-color-index\",\"max-color-index\",\"monochrome\",\"min-monochrome\",\"max-monochrome\",\"resolution\",\"min-resolution\",\"max-resolution\",\"scan\",\"grid\"];\n  var propertyKeywords_ = [\"align-content\",\"align-items\",\"align-self\",\"alignment-adjust\",\"alignment-baseline\",\"anchor-point\",\"animation\",\"animation-delay\",\"animation-direction\",\"animation-duration\",\"animation-fill-mode\",\"animation-iteration-count\",\"animation-name\",\"animation-play-state\",\"animation-timing-function\",\"appearance\",\"azimuth\",\"backface-visibility\",\"background\",\"background-attachment\",\"background-clip\",\"background-color\",\"background-image\",\"background-origin\",\"background-position\",\"background-repeat\",\"background-size\",\"baseline-shift\",\"binding\",\"bleed\",\"bookmark-label\",\"bookmark-level\",\"bookmark-state\",\"bookmark-target\",\"border\",\"border-bottom\",\"border-bottom-color\",\"border-bottom-left-radius\",\"border-bottom-right-radius\",\"border-bottom-style\",\"border-bottom-width\",\"border-collapse\",\"border-color\",\"border-image\",\"border-image-outset\",\"border-image-repeat\",\"border-image-slice\",\"border-image-source\",\"border-image-width\",\"border-left\",\"border-left-color\",\"border-left-style\",\"border-left-width\",\"border-radius\",\"border-right\",\"border-right-color\",\"border-right-style\",\"border-right-width\",\"border-spacing\",\"border-style\",\"border-top\",\"border-top-color\",\"border-top-left-radius\",\"border-top-right-radius\",\"border-top-style\",\"border-top-width\",\"border-width\",\"bottom\",\"box-decoration-break\",\"box-shadow\",\"box-sizing\",\"break-after\",\"break-before\",\"break-inside\",\"caption-side\",\"clear\",\"clip\",\"color\",\"color-profile\",\"column-count\",\"column-fill\",\"column-gap\",\"column-rule\",\"column-rule-color\",\"column-rule-style\",\"column-rule-width\",\"column-span\",\"column-width\",\"columns\",\"content\",\"counter-increment\",\"counter-reset\",\"crop\",\"cue\",\"cue-after\",\"cue-before\",\"cursor\",\"direction\",\"display\",\"dominant-baseline\",\"drop-initial-after-adjust\",\"drop-initial-after-align\",\"drop-initial-before-adjust\",\"drop-initial-before-align\",\"drop-initial-size\",\"drop-initial-value\",\"elevation\",\"empty-cells\",\"fit\",\"fit-position\",\"flex\",\"flex-basis\",\"flex-direction\",\"flex-flow\",\"flex-grow\",\"flex-shrink\",\"flex-wrap\",\"float\",\"float-offset\",\"flow-from\",\"flow-into\",\"font\",\"font-feature-settings\",\"font-family\",\"font-kerning\",\"font-language-override\",\"font-size\",\"font-size-adjust\",\"font-stretch\",\"font-style\",\"font-synthesis\",\"font-variant\",\"font-variant-alternates\",\"font-variant-caps\",\"font-variant-east-asian\",\"font-variant-ligatures\",\"font-variant-numeric\",\"font-variant-position\",\"font-weight\",\"grid\",\"grid-area\",\"grid-auto-columns\",\"grid-auto-flow\",\"grid-auto-position\",\"grid-auto-rows\",\"grid-column\",\"grid-column-end\",\"grid-column-start\",\"grid-row\",\"grid-row-end\",\"grid-row-start\",\"grid-template\",\"grid-template-areas\",\"grid-template-columns\",\"grid-template-rows\",\"hanging-punctuation\",\"height\",\"hyphens\",\"icon\",\"image-orientation\",\"image-rendering\",\"image-resolution\",\"inline-box-align\",\"justify-content\",\"left\",\"letter-spacing\",\"line-break\",\"line-height\",\"line-stacking\",\"line-stacking-ruby\",\"line-stacking-shift\",\"line-stacking-strategy\",\"list-style\",\"list-style-image\",\"list-style-position\",\"list-style-type\",\"margin\",\"margin-bottom\",\"margin-left\",\"margin-right\",\"margin-top\",\"marker-offset\",\"marks\",\"marquee-direction\",\"marquee-loop\",\"marquee-play-count\",\"marquee-speed\",\"marquee-style\",\"max-height\",\"max-width\",\"min-height\",\"min-width\",\"move-to\",\"nav-down\",\"nav-index\",\"nav-left\",\"nav-right\",\"nav-up\",\"object-fit\",\"object-position\",\"opacity\",\"order\",\"orphans\",\"outline\",\"outline-color\",\"outline-offset\",\"outline-style\",\"outline-width\",\"overflow\",\"overflow-style\",\"overflow-wrap\",\"overflow-x\",\"overflow-y\",\"padding\",\"padding-bottom\",\"padding-left\",\"padding-right\",\"padding-top\",\"page\",\"page-break-after\",\"page-break-before\",\"page-break-inside\",\"page-policy\",\"pause\",\"pause-after\",\"pause-before\",\"perspective\",\"perspective-origin\",\"pitch\",\"pitch-range\",\"play-during\",\"position\",\"presentation-level\",\"punctuation-trim\",\"quotes\",\"region-break-after\",\"region-break-before\",\"region-break-inside\",\"region-fragment\",\"rendering-intent\",\"resize\",\"rest\",\"rest-after\",\"rest-before\",\"richness\",\"right\",\"rotation\",\"rotation-point\",\"ruby-align\",\"ruby-overhang\",\"ruby-position\",\"ruby-span\",\"shape-image-threshold\",\"shape-inside\",\"shape-margin\",\"shape-outside\",\"size\",\"speak\",\"speak-as\",\"speak-header\",\"speak-numeral\",\"speak-punctuation\",\"speech-rate\",\"stress\",\"string-set\",\"tab-size\",\"table-layout\",\"target\",\"target-name\",\"target-new\",\"target-position\",\"text-align\",\"text-align-last\",\"text-decoration\",\"text-decoration-color\",\"text-decoration-line\",\"text-decoration-skip\",\"text-decoration-style\",\"text-emphasis\",\"text-emphasis-color\",\"text-emphasis-position\",\"text-emphasis-style\",\"text-height\",\"text-indent\",\"text-justify\",\"text-outline\",\"text-overflow\",\"text-shadow\",\"text-size-adjust\",\"text-space-collapse\",\"text-transform\",\"text-underline-position\",\"text-wrap\",\"top\",\"transform\",\"transform-origin\",\"transform-style\",\"transition\",\"transition-delay\",\"transition-duration\",\"transition-property\",\"transition-timing-function\",\"unicode-bidi\",\"vertical-align\",\"visibility\",\"voice-balance\",\"voice-duration\",\"voice-family\",\"voice-pitch\",\"voice-range\",\"voice-rate\",\"voice-stress\",\"voice-volume\",\"volume\",\"white-space\",\"widows\",\"width\",\"will-change\",\"word-break\",\"word-spacing\",\"word-wrap\",\"z-index\",\"clip-path\",\"clip-rule\",\"mask\",\"enable-background\",\"filter\",\"flood-color\",\"flood-opacity\",\"lighting-color\",\"stop-color\",\"stop-opacity\",\"pointer-events\",\"color-interpolation\",\"color-interpolation-filters\",\"color-rendering\",\"fill\",\"fill-opacity\",\"fill-rule\",\"image-rendering\",\"marker\",\"marker-end\",\"marker-mid\",\"marker-start\",\"shape-rendering\",\"stroke\",\"stroke-dasharray\",\"stroke-dashoffset\",\"stroke-linecap\",\"stroke-linejoin\",\"stroke-miterlimit\",\"stroke-opacity\",\"stroke-width\",\"text-rendering\",\"baseline-shift\",\"dominant-baseline\",\"glyph-orientation-horizontal\",\"glyph-orientation-vertical\",\"text-anchor\",\"writing-mode\",\"font-smoothing\",\"osx-font-smoothing\"];\n  var nonStandardPropertyKeywords_ = [\"scrollbar-arrow-color\",\"scrollbar-base-color\",\"scrollbar-dark-shadow-color\",\"scrollbar-face-color\",\"scrollbar-highlight-color\",\"scrollbar-shadow-color\",\"scrollbar-3d-light-color\",\"scrollbar-track-color\",\"shape-inside\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"zoom\"];\n  var fontProperties_ = [\"font-family\",\"src\",\"unicode-range\",\"font-variant\",\"font-feature-settings\",\"font-stretch\",\"font-weight\",\"font-style\"];\n  var colorKeywords_ = [\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"grey\",\"green\",\"greenyellow\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\"];\n  var valueKeywords_ = [\"above\",\"absolute\",\"activeborder\",\"additive\",\"activecaption\",\"afar\",\"after-white-space\",\"ahead\",\"alias\",\"all\",\"all-scroll\",\"alphabetic\",\"alternate\",\"always\",\"amharic\",\"amharic-abegede\",\"antialiased\",\"appworkspace\",\"arabic-indic\",\"armenian\",\"asterisks\",\"attr\",\"auto\",\"avoid\",\"avoid-column\",\"avoid-page\",\"avoid-region\",\"background\",\"backwards\",\"baseline\",\"below\",\"bidi-override\",\"binary\",\"bengali\",\"blink\",\"block\",\"block-axis\",\"bold\",\"bolder\",\"border\",\"border-box\",\"both\",\"bottom\",\"break\",\"break-all\",\"break-word\",\"bullets\",\"button\",\"button-bevel\",\"buttonface\",\"buttonhighlight\",\"buttonshadow\",\"buttontext\",\"calc\",\"cambodian\",\"capitalize\",\"caps-lock-indicator\",\"caption\",\"captiontext\",\"caret\",\"cell\",\"center\",\"checkbox\",\"circle\",\"cjk-decimal\",\"cjk-earthly-branch\",\"cjk-heavenly-stem\",\"cjk-ideographic\",\"clear\",\"clip\",\"close-quote\",\"col-resize\",\"collapse\",\"column\",\"compact\",\"condensed\",\"contain\",\"content\",\"contents\",\"content-box\",\"context-menu\",\"continuous\",\"copy\",\"counter\",\"counters\",\"cover\",\"crop\",\"cross\",\"crosshair\",\"currentcolor\",\"cursive\",\"cyclic\",\"dashed\",\"decimal\",\"decimal-leading-zero\",\"default\",\"default-button\",\"destination-atop\",\"destination-in\",\"destination-out\",\"destination-over\",\"devanagari\",\"disc\",\"discard\",\"disclosure-closed\",\"disclosure-open\",\"document\",\"dot-dash\",\"dot-dot-dash\",\"dotted\",\"double\",\"down\",\"e-resize\",\"ease\",\"ease-in\",\"ease-in-out\",\"ease-out\",\"element\",\"ellipse\",\"ellipsis\",\"embed\",\"end\",\"ethiopic\",\"ethiopic-abegede\",\"ethiopic-abegede-am-et\",\"ethiopic-abegede-gez\",\"ethiopic-abegede-ti-er\",\"ethiopic-abegede-ti-et\",\"ethiopic-halehame-aa-er\",\"ethiopic-halehame-aa-et\",\"ethiopic-halehame-am-et\",\"ethiopic-halehame-gez\",\"ethiopic-halehame-om-et\",\"ethiopic-halehame-sid-et\",\"ethiopic-halehame-so-et\",\"ethiopic-halehame-ti-er\",\"ethiopic-halehame-ti-et\",\"ethiopic-halehame-tig\",\"ethiopic-numeric\",\"ew-resize\",\"expanded\",\"extends\",\"extra-condensed\",\"extra-expanded\",\"fantasy\",\"fast\",\"fill\",\"fixed\",\"flat\",\"flex\",\"footnotes\",\"forwards\",\"from\",\"geometricPrecision\",\"georgian\",\"graytext\",\"groove\",\"gujarati\",\"gurmukhi\",\"hand\",\"hangul\",\"hangul-consonant\",\"hebrew\",\"help\",\"hidden\",\"hide\",\"higher\",\"highlight\",\"highlighttext\",\"hiragana\",\"hiragana-iroha\",\"horizontal\",\"hsl\",\"hsla\",\"icon\",\"ignore\",\"inactiveborder\",\"inactivecaption\",\"inactivecaptiontext\",\"infinite\",\"infobackground\",\"infotext\",\"inherit\",\"initial\",\"inline\",\"inline-axis\",\"inline-block\",\"inline-flex\",\"inline-table\",\"inset\",\"inside\",\"intrinsic\",\"invert\",\"italic\",\"japanese-formal\",\"japanese-informal\",\"justify\",\"kannada\",\"katakana\",\"katakana-iroha\",\"keep-all\",\"khmer\",\"korean-hangul-formal\",\"korean-hanja-formal\",\"korean-hanja-informal\",\"landscape\",\"lao\",\"large\",\"larger\",\"left\",\"level\",\"lighter\",\"line-through\",\"linear\",\"linear-gradient\",\"lines\",\"list-item\",\"listbox\",\"listitem\",\"local\",\"logical\",\"loud\",\"lower\",\"lower-alpha\",\"lower-armenian\",\"lower-greek\",\"lower-hexadecimal\",\"lower-latin\",\"lower-norwegian\",\"lower-roman\",\"lowercase\",\"ltr\",\"malayalam\",\"match\",\"matrix\",\"matrix3d\",\"media-controls-background\",\"media-current-time-display\",\"media-fullscreen-button\",\"media-mute-button\",\"media-play-button\",\"media-return-to-realtime-button\",\"media-rewind-button\",\"media-seek-back-button\",\"media-seek-forward-button\",\"media-slider\",\"media-sliderthumb\",\"media-time-remaining-display\",\"media-volume-slider\",\"media-volume-slider-container\",\"media-volume-sliderthumb\",\"medium\",\"menu\",\"menulist\",\"menulist-button\",\"menulist-text\",\"menulist-textfield\",\"menutext\",\"message-box\",\"middle\",\"min-intrinsic\",\"mix\",\"mongolian\",\"monospace\",\"move\",\"multiple\",\"myanmar\",\"n-resize\",\"narrower\",\"ne-resize\",\"nesw-resize\",\"no-close-quote\",\"no-drop\",\"no-open-quote\",\"no-repeat\",\"none\",\"normal\",\"not-allowed\",\"nowrap\",\"ns-resize\",\"numbers\",\"numeric\",\"nw-resize\",\"nwse-resize\",\"oblique\",\"octal\",\"open-quote\",\"optimizeLegibility\",\"optimizeSpeed\",\"oriya\",\"oromo\",\"outset\",\"outside\",\"outside-shape\",\"overlay\",\"overline\",\"padding\",\"padding-box\",\"painted\",\"page\",\"paused\",\"persian\",\"perspective\",\"plus-darker\",\"plus-lighter\",\"pointer\",\"polygon\",\"portrait\",\"pre\",\"pre-line\",\"pre-wrap\",\"preserve-3d\",\"progress\",\"push-button\",\"radial-gradient\",\"radio\",\"read-only\",\"read-write\",\"read-write-plaintext-only\",\"rectangle\",\"region\",\"relative\",\"repeat\",\"repeating-linear-gradient\",\"repeating-radial-gradient\",\"repeat-x\",\"repeat-y\",\"reset\",\"reverse\",\"rgb\",\"rgba\",\"ridge\",\"right\",\"rotate\",\"rotate3d\",\"rotateX\",\"rotateY\",\"rotateZ\",\"round\",\"row-resize\",\"rtl\",\"run-in\",\"running\",\"s-resize\",\"sans-serif\",\"scale\",\"scale3d\",\"scaleX\",\"scaleY\",\"scaleZ\",\"scroll\",\"scrollbar\",\"scroll-position\",\"se-resize\",\"searchfield\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"semi-condensed\",\"semi-expanded\",\"separate\",\"serif\",\"show\",\"sidama\",\"simp-chinese-formal\",\"simp-chinese-informal\",\"single\",\"skew\",\"skewX\",\"skewY\",\"skip-white-space\",\"slide\",\"slider-horizontal\",\"slider-vertical\",\"sliderthumb-horizontal\",\"sliderthumb-vertical\",\"slow\",\"small\",\"small-caps\",\"small-caption\",\"smaller\",\"solid\",\"somali\",\"source-atop\",\"source-in\",\"source-out\",\"source-over\",\"space\",\"spell-out\",\"square\",\"square-button\",\"start\",\"static\",\"status-bar\",\"stretch\",\"stroke\",\"sub\",\"subpixel-antialiased\",\"super\",\"sw-resize\",\"symbolic\",\"symbols\",\"table\",\"table-caption\",\"table-cell\",\"table-column\",\"table-column-group\",\"table-footer-group\",\"table-header-group\",\"table-row\",\"table-row-group\",\"tamil\",\"telugu\",\"text\",\"text-bottom\",\"text-top\",\"textarea\",\"textfield\",\"thai\",\"thick\",\"thin\",\"threeddarkshadow\",\"threedface\",\"threedhighlight\",\"threedlightshadow\",\"threedshadow\",\"tibetan\",\"tigre\",\"tigrinya-er\",\"tigrinya-er-abegede\",\"tigrinya-et\",\"tigrinya-et-abegede\",\"to\",\"top\",\"trad-chinese-formal\",\"trad-chinese-informal\",\"translate\",\"translate3d\",\"translateX\",\"translateY\",\"translateZ\",\"transparent\",\"ultra-condensed\",\"ultra-expanded\",\"underline\",\"up\",\"upper-alpha\",\"upper-armenian\",\"upper-greek\",\"upper-hexadecimal\",\"upper-latin\",\"upper-norwegian\",\"upper-roman\",\"uppercase\",\"urdu\",\"url\",\"var\",\"vertical\",\"vertical-text\",\"visible\",\"visibleFill\",\"visiblePainted\",\"visibleStroke\",\"visual\",\"w-resize\",\"wait\",\"wave\",\"wider\",\"window\",\"windowframe\",\"windowtext\",\"words\",\"x-large\",\"x-small\",\"xor\",\"xx-large\",\"xx-small\",\"bicubic\",\"optimizespeed\",\"grayscale\",\"row\",\"row-reverse\",\"wrap\",\"wrap-reverse\",\"column-reverse\",\"flex-start\",\"flex-end\",\"space-between\",\"space-around\", \"unset\"];\n\n  var wordOperatorKeywords_ = [\"in\",\"and\",\"or\",\"not\",\"is not\",\"is a\",\"is\",\"isnt\",\"defined\",\"if unless\"],\n      blockKeywords_ = [\"for\",\"if\",\"else\",\"unless\", \"from\", \"to\"],\n      commonAtoms_ = [\"null\",\"true\",\"false\",\"href\",\"title\",\"type\",\"not-allowed\",\"readonly\",\"disabled\"],\n      commonDef_ = [\"@font-face\", \"@keyframes\", \"@media\", \"@viewport\", \"@page\", \"@host\", \"@supports\", \"@block\", \"@css\"];\n\n  var hintWords = tagKeywords_.concat(documentTypes_,mediaTypes_,mediaFeatures_,\n                                      propertyKeywords_,nonStandardPropertyKeywords_,\n                                      colorKeywords_,valueKeywords_,fontProperties_,\n                                      wordOperatorKeywords_,blockKeywords_,\n                                      commonAtoms_,commonDef_);\n\n  function wordRegexp(words) {\n    words = words.sort(function(a,b){return b > a;});\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  function keySet(array) {\n    var keys = {};\n    for (var i = 0; i < array.length; ++i) keys[array[i]] = true;\n    return keys;\n  }\n\n  function escapeRegExp(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n  }\n\n  CodeMirror.registerHelper(\"hintWords\", \"stylus\", hintWords);\n  CodeMirror.defineMIME(\"text/x-styl\", \"stylus\");\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","wordRegexp","words","sort","a","b","RegExp","join","keySet","array","keys","i","length","defineMode","config","tokenBase","stream","state","firstWordMatch","string","match","context","line","firstWord","replace","indent","indentation","ch","peek","skipToEnd","tokenize","tokenCComment","next","tokenString","eatWhile","current","vendorPrefixesRegexp","documentTypesRegexp","tokenParenthesized","backUp","wordOperatorKeywordsRegexp","wordIsTag","operatorsRegexp","test","maybeEnd","quote","escaped","Context","type","prev","pushContext","indentUnit","popContext","currentIndent","contextIndent","popAndPass","n","states","word","toLowerCase","tagKeywords","wordIsProperty","propertyKeywords","fontProperties","wordIsBlock","blockKeywords","wordAsValue","wordLC","override","valueKeywords","commonAtoms","colorKeywords","typeIsBlock","endOfLine","startOfLine","sol","text","eol","firstWordOfLine","re","result","indentUnitString","tagKeywords_","tagVariablesRegexp","propertyKeywords_","nonStandardPropertyKeywords","nonStandardPropertyKeywords_","valueKeywords_","colorKeywords_","documentTypes","documentTypes_","mediaFeatures","mediaFeatures_","mediaTypes","mediaTypes_","fontProperties_","wordOperatorKeywords_","blockKeywords_","commonAtoms_","style","block","states.block","charAt","slice","parens","states.parens","vendorPrefixes","states.vendorPrefixes","pseudo","states.pseudo","atBlock","states.atBlock","hasOwnProperty","atBlock_parens","states.atBlock_parens","keyframes","states.keyframes","interpolation","states.interpolation","extend","states.extend","variableName","states.variableName","startState","base","token","eatSpace","textAfter","cx","lineFirstWord","lineIndent","prevLineFirstWord","prevLineIndent","electricChars","lineComment","fold","hintWords","concat","commonDef_","registerHelper","defineMIME"]
}
