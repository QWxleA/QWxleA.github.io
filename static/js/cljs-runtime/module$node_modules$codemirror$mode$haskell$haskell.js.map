{
"version":3,
"file":"module$node_modules$codemirror$mode$haskell$haskell.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/codemirror/mode/haskell/haskell.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$haskell$haskell\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"haskell\", function(_config, modeConfig) {\n\n  function switchState(source, setState, f) {\n    setState(f);\n    return f(source, setState);\n  }\n\n  // These should all be Unicode extended, as per the Haskell 2010 report\n  var smallRE = /[a-z_]/;\n  var largeRE = /[A-Z]/;\n  var digitRE = /\\d/;\n  var hexitRE = /[0-9A-Fa-f]/;\n  var octitRE = /[0-7]/;\n  var idRE = /[a-z_A-Z0-9'\\xa1-\\uffff]/;\n  var symbolRE = /[-!#$%&*+.\\/<=>?@\\\\^|~:]/;\n  var specialRE = /[(),;[\\]`{}]/;\n  var whiteCharRE = /[ \\t\\v\\f]/; // newlines are handled in tokenizer\n\n  function normal(source, setState) {\n    if (source.eatWhile(whiteCharRE)) {\n      return null;\n    }\n\n    var ch = source.next();\n    if (specialRE.test(ch)) {\n      if (ch == '{' && source.eat('-')) {\n        var t = \"comment\";\n        if (source.eat('#')) {\n          t = \"meta\";\n        }\n        return switchState(source, setState, ncomment(t, 1));\n      }\n      return null;\n    }\n\n    if (ch == '\\'') {\n      if (source.eat('\\\\')) {\n        source.next();  // should handle other escapes here\n      }\n      else {\n        source.next();\n      }\n      if (source.eat('\\'')) {\n        return \"string\";\n      }\n      return \"string error\";\n    }\n\n    if (ch == '\"') {\n      return switchState(source, setState, stringLiteral);\n    }\n\n    if (largeRE.test(ch)) {\n      source.eatWhile(idRE);\n      if (source.eat('.')) {\n        return \"qualifier\";\n      }\n      return \"variable-2\";\n    }\n\n    if (smallRE.test(ch)) {\n      source.eatWhile(idRE);\n      return \"variable\";\n    }\n\n    if (digitRE.test(ch)) {\n      if (ch == '0') {\n        if (source.eat(/[xX]/)) {\n          source.eatWhile(hexitRE); // should require at least 1\n          return \"integer\";\n        }\n        if (source.eat(/[oO]/)) {\n          source.eatWhile(octitRE); // should require at least 1\n          return \"number\";\n        }\n      }\n      source.eatWhile(digitRE);\n      var t = \"number\";\n      if (source.match(/^\\.\\d+/)) {\n        t = \"number\";\n      }\n      if (source.eat(/[eE]/)) {\n        t = \"number\";\n        source.eat(/[-+]/);\n        source.eatWhile(digitRE); // should require at least 1\n      }\n      return t;\n    }\n\n    if (ch == \".\" && source.eat(\".\"))\n      return \"keyword\";\n\n    if (symbolRE.test(ch)) {\n      if (ch == '-' && source.eat(/-/)) {\n        source.eatWhile(/-/);\n        if (!source.eat(symbolRE)) {\n          source.skipToEnd();\n          return \"comment\";\n        }\n      }\n      var t = \"variable\";\n      if (ch == ':') {\n        t = \"variable-2\";\n      }\n      source.eatWhile(symbolRE);\n      return t;\n    }\n\n    return \"error\";\n  }\n\n  function ncomment(type, nest) {\n    if (nest == 0) {\n      return normal;\n    }\n    return function(source, setState) {\n      var currNest = nest;\n      while (!source.eol()) {\n        var ch = source.next();\n        if (ch == '{' && source.eat('-')) {\n          ++currNest;\n        }\n        else if (ch == '-' && source.eat('}')) {\n          --currNest;\n          if (currNest == 0) {\n            setState(normal);\n            return type;\n          }\n        }\n      }\n      setState(ncomment(type, currNest));\n      return type;\n    };\n  }\n\n  function stringLiteral(source, setState) {\n    while (!source.eol()) {\n      var ch = source.next();\n      if (ch == '\"') {\n        setState(normal);\n        return \"string\";\n      }\n      if (ch == '\\\\') {\n        if (source.eol() || source.eat(whiteCharRE)) {\n          setState(stringGap);\n          return \"string\";\n        }\n        if (source.eat('&')) {\n        }\n        else {\n          source.next(); // should handle other escapes here\n        }\n      }\n    }\n    setState(normal);\n    return \"string error\";\n  }\n\n  function stringGap(source, setState) {\n    if (source.eat('\\\\')) {\n      return switchState(source, setState, stringLiteral);\n    }\n    source.next();\n    setState(normal);\n    return \"error\";\n  }\n\n\n  var wellKnownWords = (function() {\n    var wkw = {};\n    function setType(t) {\n      return function () {\n        for (var i = 0; i < arguments.length; i++)\n          wkw[arguments[i]] = t;\n      };\n    }\n\n    setType(\"keyword\")(\n      \"case\", \"class\", \"data\", \"default\", \"deriving\", \"do\", \"else\", \"foreign\",\n      \"if\", \"import\", \"in\", \"infix\", \"infixl\", \"infixr\", \"instance\", \"let\",\n      \"module\", \"newtype\", \"of\", \"then\", \"type\", \"where\", \"_\");\n\n    setType(\"keyword\")(\n      \"\\.\\.\", \":\", \"::\", \"=\", \"\\\\\", \"<-\", \"->\", \"@\", \"~\", \"=>\");\n\n    setType(\"builtin\")(\n      \"!!\", \"$!\", \"$\", \"&&\", \"+\", \"++\", \"-\", \".\", \"/\", \"/=\", \"<\", \"<*\", \"<=\",\n      \"<$>\", \"<*>\", \"=<<\", \"==\", \">\", \">=\", \">>\", \">>=\", \"^\", \"^^\", \"||\", \"*\",\n      \"*>\", \"**\");\n\n    setType(\"builtin\")(\n      \"Applicative\", \"Bool\", \"Bounded\", \"Char\", \"Double\", \"EQ\", \"Either\", \"Enum\",\n      \"Eq\", \"False\", \"FilePath\", \"Float\", \"Floating\", \"Fractional\", \"Functor\",\n      \"GT\", \"IO\", \"IOError\", \"Int\", \"Integer\", \"Integral\", \"Just\", \"LT\", \"Left\",\n      \"Maybe\", \"Monad\", \"Nothing\", \"Num\", \"Ord\", \"Ordering\", \"Rational\", \"Read\",\n      \"ReadS\", \"Real\", \"RealFloat\", \"RealFrac\", \"Right\", \"Show\", \"ShowS\",\n      \"String\", \"True\");\n\n    setType(\"builtin\")(\n      \"abs\", \"acos\", \"acosh\", \"all\", \"and\", \"any\", \"appendFile\", \"asTypeOf\",\n      \"asin\", \"asinh\", \"atan\", \"atan2\", \"atanh\", \"break\", \"catch\", \"ceiling\",\n      \"compare\", \"concat\", \"concatMap\", \"const\", \"cos\", \"cosh\", \"curry\",\n      \"cycle\", \"decodeFloat\", \"div\", \"divMod\", \"drop\", \"dropWhile\", \"either\",\n      \"elem\", \"encodeFloat\", \"enumFrom\", \"enumFromThen\", \"enumFromThenTo\",\n      \"enumFromTo\", \"error\", \"even\", \"exp\", \"exponent\", \"fail\", \"filter\",\n      \"flip\", \"floatDigits\", \"floatRadix\", \"floatRange\", \"floor\", \"fmap\",\n      \"foldl\", \"foldl1\", \"foldr\", \"foldr1\", \"fromEnum\", \"fromInteger\",\n      \"fromIntegral\", \"fromRational\", \"fst\", \"gcd\", \"getChar\", \"getContents\",\n      \"getLine\", \"head\", \"id\", \"init\", \"interact\", \"ioError\", \"isDenormalized\",\n      \"isIEEE\", \"isInfinite\", \"isNaN\", \"isNegativeZero\", \"iterate\", \"last\",\n      \"lcm\", \"length\", \"lex\", \"lines\", \"log\", \"logBase\", \"lookup\", \"map\",\n      \"mapM\", \"mapM_\", \"max\", \"maxBound\", \"maximum\", \"maybe\", \"min\", \"minBound\",\n      \"minimum\", \"mod\", \"negate\", \"not\", \"notElem\", \"null\", \"odd\", \"or\",\n      \"otherwise\", \"pi\", \"pred\", \"print\", \"product\", \"properFraction\", \"pure\",\n      \"putChar\", \"putStr\", \"putStrLn\", \"quot\", \"quotRem\", \"read\", \"readFile\",\n      \"readIO\", \"readList\", \"readLn\", \"readParen\", \"reads\", \"readsPrec\",\n      \"realToFrac\", \"recip\", \"rem\", \"repeat\", \"replicate\", \"return\", \"reverse\",\n      \"round\", \"scaleFloat\", \"scanl\", \"scanl1\", \"scanr\", \"scanr1\", \"seq\",\n      \"sequence\", \"sequence_\", \"show\", \"showChar\", \"showList\", \"showParen\",\n      \"showString\", \"shows\", \"showsPrec\", \"significand\", \"signum\", \"sin\",\n      \"sinh\", \"snd\", \"span\", \"splitAt\", \"sqrt\", \"subtract\", \"succ\", \"sum\",\n      \"tail\", \"take\", \"takeWhile\", \"tan\", \"tanh\", \"toEnum\", \"toInteger\",\n      \"toRational\", \"truncate\", \"uncurry\", \"undefined\", \"unlines\", \"until\",\n      \"unwords\", \"unzip\", \"unzip3\", \"userError\", \"words\", \"writeFile\", \"zip\",\n      \"zip3\", \"zipWith\", \"zipWith3\");\n\n    var override = modeConfig.overrideKeywords;\n    if (override) for (var word in override) if (override.hasOwnProperty(word))\n      wkw[word] = override[word];\n\n    return wkw;\n  })();\n\n\n\n  return {\n    startState: function ()  { return { f: normal }; },\n    copyState:  function (s) { return { f: s.f }; },\n\n    token: function(stream, state) {\n      var t = state.f(stream, function(s) { state.f = s; });\n      var w = stream.current();\n      return wellKnownWords.hasOwnProperty(w) ? wellKnownWords[w] : t;\n    },\n\n    blockCommentStart: \"{-\",\n    blockCommentEnd: \"-}\",\n    lineComment: \"--\"\n  };\n\n});\n\nCodeMirror.defineMIME(\"text/x-haskell\", \"haskell\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","_config","modeConfig","switchState","source","setState","f","normal","eatWhile","whiteCharRE","ch","next","specialRE","test","eat","t","ncomment","stringLiteral","largeRE","idRE","smallRE","digitRE","hexitRE","octitRE","match","symbolRE","skipToEnd","type","nest","currNest","eol","stringGap","wellKnownWords","setType","i","arguments","length","wkw","override","overrideKeywords","word","hasOwnProperty","startState","copyState","s","token","stream","state","w","current","blockCommentStart","blockCommentEnd","lineComment","defineMIME"]
}
