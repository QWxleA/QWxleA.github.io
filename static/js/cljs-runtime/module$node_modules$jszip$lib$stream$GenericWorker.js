shadow$provide.module$node_modules$jszip$lib$stream$GenericWorker=function(global,require,module,exports){function GenericWorker(name){this.name=name||"default";this.streamInfo={};this.generatedError=null;this.extraStreamInfo={};this.isPaused=!0;this.isLocked=this.isFinished=!1;this._listeners={data:[],end:[],error:[]};this.previous=null}GenericWorker.prototype={push:function(chunk){this.emit("data",chunk)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),
this.isFinished=!0}catch(e){this.emit("error",e)}return!0},error:function(e){if(this.isFinished)return!1;this.isPaused?this.generatedError=e:(this.isFinished=!0,this.emit("error",e),this.previous&&this.previous.error(e),this.cleanUp());return!0},on:function(name,listener){this._listeners[name].push(listener);return this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null;this._listeners=[]},emit:function(name,arg){if(this._listeners[name])for(var i=0;i<this._listeners[name].length;i++)this._listeners[name][i].call(this,
arg)},pipe:function(next){return next.registerPrevious(this)},registerPrevious:function(previous){if(this.isLocked)throw Error("The stream '"+this+"' has already been used.");this.streamInfo=previous.streamInfo;this.mergeStreamInfo();this.previous=previous;var self=this;previous.on("data",function(chunk){self.processChunk(chunk)});previous.on("end",function(){self.end()});previous.on("error",function(e){self.error(e)});return this},pause:function(){if(this.isPaused||this.isFinished)return!1;this.isPaused=
!0;this.previous&&this.previous.pause();return!0},resume:function(){if(!this.isPaused||this.isFinished)return!1;var withError=this.isPaused=!1;this.generatedError&&(this.error(this.generatedError),withError=!0);this.previous&&this.previous.resume();return!withError},flush:function(){},processChunk:function(chunk){this.push(chunk)},withStreamInfo:function(key,value){this.extraStreamInfo[key]=value;this.mergeStreamInfo();return this},mergeStreamInfo:function(){for(var key in this.extraStreamInfo)this.extraStreamInfo.hasOwnProperty(key)&&
(this.streamInfo[key]=this.extraStreamInfo[key])},lock:function(){if(this.isLocked)throw Error("The stream '"+this+"' has already been used.");this.isLocked=!0;this.previous&&this.previous.lock()},toString:function(){var me="Worker "+this.name;return this.previous?this.previous+" -\x3e "+me:me}};module.exports=GenericWorker}
//# sourceMappingURL=module$node_modules$jszip$lib$stream$GenericWorker.js.map
