shadow$provide.module$node_modules$codemirror$mode$python$python=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)})(function(CodeMirror){function wordRegexp(words){return new RegExp("^(("+words.join(")|(")+"))\\b")}function top(state){return state.scopes[state.scopes.length-1]}var wordOperators=
wordRegexp(["and","or","not","is"]),commonKeywords="as assert break class continue def del elif else except finally for from global if import lambda pass raise return try while with yield in".split(" "),commonBuiltins="abs all any bin bool bytearray callable chr classmethod compile complex delattr dict dir divmod enumerate eval filter float format frozenset getattr globals hasattr hash help hex id input int isinstance issubclass iter len list locals map max memoryview min next object oct open ord pow property range repr reversed round set setattr slice sorted staticmethod str sum super tuple type vars zip __import__ NotImplemented Ellipsis __debug__".split(" ");
CodeMirror.registerHelper("hintWords","python",commonKeywords.concat(commonBuiltins));CodeMirror.defineMode("python",function(conf,parserConf){function tokenBase(stream,state){var sol=stream.sol()&&"\\"!=state.lastToken;sol&&(state.indent=stream.indentation());if(sol&&"py"==top(state).type){sol=top(state).offset;if(stream.eatSpace()){var lineOffset=stream.indentation();lineOffset>sol?pushPyScope(state):lineOffset<sol&&dedent(stream,state)&&"#"!=stream.peek()&&(state.errorToken=!0);return null}lineOffset=
tokenBaseInner(stream,state);0<sol&&dedent(stream,state)&&(lineOffset+=" error");return lineOffset}return tokenBaseInner(stream,state)}function tokenBaseInner(stream,state,inFormat){if(stream.eatSpace())return null;if(!inFormat&&stream.match(/^#.*/))return"comment";if(stream.match(/^[0-9\.]/,!1)){var floatLiteral=!1;stream.match(/^[\d_]*\.\d+(e[\+\-]?\d+)?/i)&&(floatLiteral=!0);stream.match(/^[\d_]+\.\d*/)&&(floatLiteral=!0);stream.match(/^\.\d+/)&&(floatLiteral=!0);if(floatLiteral)return stream.eat(/J/i),
"number";floatLiteral=!1;stream.match(/^0x[0-9a-f_]+/i)&&(floatLiteral=!0);stream.match(/^0b[01_]+/i)&&(floatLiteral=!0);stream.match(/^0o[0-7_]+/i)&&(floatLiteral=!0);stream.match(/^[1-9][\d_]*(e[\+\-]?[\d_]+)?/)&&(stream.eat(/J/i),floatLiteral=!0);stream.match(/^0(?![\dx])/i)&&(floatLiteral=!0);if(floatLiteral)return stream.eat(/L/i),"number"}if(stream.match(stringPrefixes))return-1===stream.current().toLowerCase().indexOf("f")?state.tokenize=tokenStringFactory(stream.current(),state.tokenize):
state.tokenize=formatStringFactory(stream.current(),state.tokenize),state.tokenize(stream,state);for(floatLiteral=0;floatLiteral<operators.length;floatLiteral++)if(stream.match(operators[floatLiteral]))return"operator";if(stream.match(delimiters))return"punctuation";if("."==state.lastToken&&stream.match(identifiers))return"property";if(stream.match(keywords)||stream.match(wordOperators))return"keyword";if(stream.match(builtins))return"builtin";if(stream.match(/^(self|cls)\b/))return"variable-2";if(stream.match(identifiers))return"def"==
state.lastToken||"class"==state.lastToken?"def":"variable";stream.next();return inFormat?null:"error"}function formatStringFactory(delimiter,tokenOuter){function tokenNestedExpr(depth){return function(stream,state){var inner=tokenBaseInner(stream,state,!0);"punctuation"==inner&&("{"==stream.current()?state.tokenize=tokenNestedExpr(depth+1):"}"==stream.current()&&(state.tokenize=1<depth?tokenNestedExpr(depth-1):tokenString));return inner}}function tokenString(stream,state){for(;!stream.eol();)if(stream.eatWhile(/[^'"\{\}\\]/),
stream.eat("\\")){if(stream.next(),singleline&&stream.eol())return"string"}else{if(stream.match(delimiter))return state.tokenize=tokenOuter,"string";if(stream.match("{{"))return"string";if(stream.match("{",!1))return state.tokenize=tokenNestedExpr(0),stream.current()?"string":state.tokenize(stream,state);if(stream.match("}}"))return"string";if(stream.match("}"))return"error";stream.eat(/['"]/)}if(singleline){if(parserConf.singleLineStringErrors)return"error";state.tokenize=tokenOuter}return"string"}
for(;0<="rubf".indexOf(delimiter.charAt(0).toLowerCase());)delimiter=delimiter.substr(1);var singleline=1==delimiter.length;tokenString.isString=!0;return tokenString}function tokenStringFactory(delimiter,tokenOuter){function tokenString(stream,state){for(;!stream.eol();)if(stream.eatWhile(/[^'"\\]/),stream.eat("\\")){if(stream.next(),singleline&&stream.eol())return"string"}else{if(stream.match(delimiter))return state.tokenize=tokenOuter,"string";stream.eat(/['"]/)}if(singleline){if(parserConf.singleLineStringErrors)return"error";
state.tokenize=tokenOuter}return"string"}for(;0<="rubf".indexOf(delimiter.charAt(0).toLowerCase());)delimiter=delimiter.substr(1);var singleline=1==delimiter.length;tokenString.isString=!0;return tokenString}function pushPyScope(state){for(;"py"!=top(state).type;)state.scopes.pop();state.scopes.push({offset:top(state).offset+conf.indentUnit,type:"py",align:null})}function dedent(stream,state){for(stream=stream.indentation();1<state.scopes.length&&top(state).offset>stream;){if("py"!=top(state).type)return!0;
state.scopes.pop()}return top(state).offset!=stream}for(var delimiters=parserConf.delimiters||parserConf.singleDelimiters||/^[\(\)\[\]\{\}@,:`=;\.\\]/,operators=[parserConf.singleOperators,parserConf.doubleOperators,parserConf.doubleDelimiters,parserConf.tripleDelimiters,parserConf.operators||/^([-+*/%\/&|^]=?|[<>=]+|\/\/=?|\*\*=?|!=|[~!@]|\.\.\.)/],i=0;i<operators.length;i++)operators[i]||operators.splice(i--,1);var hangingIndent=parserConf.hangingIndent||conf.indentUnit;i=commonKeywords;var myBuiltins=
commonBuiltins;void 0!=parserConf.extra_keywords&&(i=i.concat(parserConf.extra_keywords));void 0!=parserConf.extra_builtins&&(myBuiltins=myBuiltins.concat(parserConf.extra_builtins));var py3=!(parserConf.version&&3>Number(parserConf.version));if(py3){var identifiers=parserConf.identifiers||/^[_A-Za-z\u00A1-\uFFFF][_A-Za-z0-9\u00A1-\uFFFF]*/;i=i.concat("nonlocal False True None async await".split(" "));myBuiltins=myBuiltins.concat(["ascii","bytes","exec","print"]);var stringPrefixes=RegExp("^(([rbuf]|(br)|(fr))?('{3}|\"{3}|['\"]))",
"i")}else identifiers=parserConf.identifiers||/^[_A-Za-z][_A-Za-z0-9]*/,i=i.concat(["exec","print"]),myBuiltins=myBuiltins.concat("apply basestring buffer cmp coerce execfile file intern long raw_input reduce reload unichr unicode xrange False True None".split(" ")),stringPrefixes=RegExp("^(([rubf]|(ur)|(br))?('{3}|\"{3}|['\"]))","i");var keywords=wordRegexp(i),builtins=wordRegexp(myBuiltins);return{startState:function(basecolumn){return{tokenize:tokenBase,scopes:[{offset:basecolumn||0,type:"py",
align:null}],indent:basecolumn||0,lastToken:null,lambda:!1,dedent:0}},token:function(stream,state){var addErr=state.errorToken;addErr&&(state.errorToken=!1);a:{stream.sol()&&(state.beginningOfLine=!0);var style=state.tokenize(stream,state);var current=stream.current();if(state.beginningOfLine&&"@"==current)style=stream.match(identifiers,!1)?"meta":py3?"operator":"error";else{/\S/.test(current)&&(state.beginningOfLine=!1);"variable"!=style&&"builtin"!=style||"meta"!=state.lastToken||(style="meta");
if("pass"==current||"return"==current)state.dedent+=1;"lambda"==current&&(state.lambda=!0);":"!=current||state.lambda||"py"!=top(state).type||pushPyScope(state);if(1==current.length&&!/string|comment/.test(style)){var delimiter_index="[({".indexOf(current);if(-1!=delimiter_index){delimiter_index="])}".slice(delimiter_index,delimiter_index+1);var align=stream.match(/^([\s\[\{\(]|#.*)*$/,!1)?null:stream.column()+1;state.scopes.push({offset:state.indent+hangingIndent,type:delimiter_index,align})}delimiter_index=
"])}".indexOf(current);if(-1!=delimiter_index)if(top(state).type==current)state.indent=state.scopes.pop().offset-hangingIndent;else{style="error";break a}}0<state.dedent&&stream.eol()&&"py"==top(state).type&&(1<state.scopes.length&&state.scopes.pop(),--state.dedent)}}style&&"comment"!=style&&(state.lastToken="keyword"==style||"punctuation"==style?stream.current():style);"punctuation"==style&&(style=null);stream.eol()&&state.lambda&&(state.lambda=!1);return addErr?style+" error":style},indent:function(state,
textAfter){if(state.tokenize!=tokenBase)return state.tokenize.isString?CodeMirror.Pass:0;state=top(state);textAfter=state.type==textAfter.charAt(0);return null!=state.align?state.align-(textAfter?1:0):state.offset-(textAfter?hangingIndent:0)},electricInput:/^\s*[\}\]\)]$/,closeBrackets:{triples:"'\""},lineComment:"#",fold:"indent"}});CodeMirror.defineMIME("text/x-python","python");CodeMirror.defineMIME("text/x-cython",{name:"python",extra_keywords:"by cdef cimport cpdef ctypedef enum except extern gil include nogil property public readonly struct union DEF IF ELIF ELSE".split(" ")})})}
//# sourceMappingURL=module$node_modules$codemirror$mode$python$python.js.map
