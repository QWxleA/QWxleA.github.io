shadow$provide.module$node_modules$chrono_node$dist$configurations=function(global,require,module,exports){global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});exports.includeCommonConfiguration=void 0;const ExtractTimezoneAbbrRefiner_1=global(require("module$node_modules$chrono_node$dist$common$refiners$ExtractTimezoneAbbrRefiner")),ExtractTimezoneOffsetRefiner_1=global(require("module$node_modules$chrono_node$dist$common$refiners$ExtractTimezoneOffsetRefiner")),
OverlapRemovalRefiner_1=global(require("module$node_modules$chrono_node$dist$common$refiners$OverlapRemovalRefiner")),ForwardDateRefiner_1=global(require("module$node_modules$chrono_node$dist$common$refiners$ForwardDateRefiner")),UnlikelyFormatFilter_1=global(require("module$node_modules$chrono_node$dist$common$refiners$UnlikelyFormatFilter")),ISOFormatParser_1=global(require("module$node_modules$chrono_node$dist$common$parsers$ISOFormatParser")),MergeWeekdayComponentRefiner_1=global(require("module$node_modules$chrono_node$dist$common$refiners$MergeWeekdayComponentRefiner"));
exports.includeCommonConfiguration=function(configuration,strictMode=!1){configuration.parsers.unshift(new ISOFormatParser_1.default);configuration.refiners.unshift(new MergeWeekdayComponentRefiner_1.default);configuration.refiners.unshift(new ExtractTimezoneAbbrRefiner_1.default);configuration.refiners.unshift(new ExtractTimezoneOffsetRefiner_1.default);configuration.refiners.unshift(new OverlapRemovalRefiner_1.default);configuration.refiners.push(new ForwardDateRefiner_1.default);configuration.refiners.push(new UnlikelyFormatFilter_1.default(strictMode));
return configuration}}
//# sourceMappingURL=module$node_modules$chrono_node$dist$configurations.js.map
