{"version":3,"sources":["frontend/mobile/util.cljs"],"mappings":";;;AAKA,gCAAA,hCAAMA;AAAN,AACE,OAAcC;;AAEhB,iDAAA,jDAAMC;AAAN,AACE,OAAmBD;;AAErB,yCAAA,zCAAME;AAAN,AACE,IAAAC,oBAAK,AAACF;AAAN,AAAA,oBAAAE;AACK,oFAAA,7EAACC,6CAAE,AAACL;;AADTI;;;AAGF,6CAAA,7CAAME;AAAN,AACE,IAAAF,oBAAK,AAACF;AAAN,AAAA,oBAAAE;AACK,oFAAA,7EAACC,6CAAE,AAACL;;AADTI;;;AAGF,wCAAA,xCAAMG,wFAAkBC;AAAxB,AACE,OAAiBP,4EAAUO;;AAE7B,GAAA,QAAAC,qCAAAC,4CAAAC,iDAAAC;AAAA;AAAA,AAAA,AAASC,qCAAc,kEAAA,lEAACC;;AACxB,oBAAM,AAACX;AAAP,AACE,GAAA,QAAAM,qCAAAC,4CAAAC,iDAAAI;AAAA;AAAA,AAAA,AAASC,6CAAsB,kEAAA,lEAACF;;;AAChC,GAAA,QAAAL,qCAAAC,4CAAAC,iDAAAM;AAAA;AAAA,AAAA,AAASC,0CAAmB,kEAAA,lEAACJ;;;AAC7B,GAAA,QAAAL,qCAAAC,4CAAAC,iDAAAQ;AAAA;AAAA,AAAA,AAASC,iCAAU,kEAAA,lEAACN;;;AAHtB;AAMA,oBAAM,AAACZ;AAAP,AACE,GAAA,QAAAO,qCAAAC,4CAAAC,iDAAAU;AAAA;AAAA,AAAA,AAASC,kCAAW,kEAAA,lEAACR;;;AADvB;AAGA,wCAAA,xCAAMS,wFAAkBC;AAAxB,AACE,IAAMC,YAAU,UAAA,oBAAA,eAAI,4DAAA,5DAACC,mDAAaF,lEACdG,pBACAC,VACAC;AAHpB,AAIE,OAAYb,qDACA,qBAAA,2CAAA,hEAACc,uHAAgBL;;AAEjC,mCAAA,nCAAMM;AAAN,AACE,OAAOC;;AAET,AAAKC,oCACH,6CAAA,wCAAA,kEAAA,8DAAA,kEAAA,oEAAA,iEAAA,2DAAA,4DAAA,yEAAA,mEAAA,oEAAA,oEAAA,mEAAA,+DAAA,qEAAA,8DAAA,0DAAA,6DAAA,2DAAA,2DAAA,gEAAA,mEAAA,mEAAA,qEAAA,oEAAA,mEAAA,6DAAA,mEAAA,8DAAA,6DAAA,yEAAA,iEAAA,0EAAA,qEAAA,0DAAA,+DAAA,qEAAA,2CAAA,uDAAA,MAAA,yDAAA,OAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,OAAA,yDAAA,OAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,OAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,OAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,OAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,OAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,OAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,OAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,OAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,OAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,OAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,aAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,+DAAA,x6VAACC;AAsCH,yCAAA,zCAAMC;AAAN,AAEE,oBAAM,AAAChC;AAAP,AACE,IAAMmC,QAAM,AAASC;IACfC,SAAO,AAAUD;IACjBE,mBAAW,CAAGH,QAAME;IAF1BJ,aAGqB,oBAAA,wGAAA,1HAAIK,qGAAYD,OAAOF,iGAAQA,MAAME;gBAH1D,AAAAH,4CAAAD,WAAA,IAAA,vEAGOE;iBAHP,AAAAD,4CAAAD,WAAA,IAAA,xEAGaI;AAHb,AAAA,0FAIG,iBAAAE,WAAA,mFAAOJ,UAAME;AAAb,AAAA,GAAA,AAAAnC,6CAAA,mFAAA,MAAA,cAAAqC;AAAA;;AAAA,GAAA,AAAArC,6CAAA,mFAAA,MAAA,cAAAqC;AAAA;;AAAA,GAAA,AAAArC,6CAAA,mFAAA,MAAA,eAAAqC;AAAA;;AAAA,GAAA,AAAArC,6CAAA,mFAAA,MAAA,cAAAqC;AAAA;;AAAA,GAAA,AAAArC,6CAAA,mFAAA,MAAA,cAAAqC;AAAA;;AAAA,GAAA,AAAArC,6CAAA,mFAAA,OAAA,eAAAqC;AAAA;;AAAA,GAAA,AAAArC,6CAAA,mFAAA,MAAA,eAAAqC;AAAA;;AAAA,GAAA,AAAArC,6CAAA,mFAAA,MAAA,eAAAqC;AAAA;;AAAA,GAAA,AAAArC,6CAAA,mFAAA,MAAA,cAAAqC;AAAA;;AAAA,GAAA,AAAArC,6CAAA,mFAAA,MAAA,eAAAqC;AAAA;;AAAA,GAAA,AAAArC,6CAAA,mFAAA,MAAA,cAAAqC;AAAA;;AAAA,GAAA,AAAArC,6CAAA,mFAAA,MAAA,cAAAqC;AAAA;;AAAA,GAAA,AAAArC,6CAAA,mFAAA,MAAA,eAAAqC;AAAA;;AAAA,GAAA,AAAArC,6CAAA,mFAAA,MAAA,cAAAqC;AAAA;;AAAA,GAAA,AAAArC,6CAAA,mFAAA,MAAA,eAAAqC;AAAA;;AAAA,AAAA;;;;;;;;;;;;;;;;;KAiBAD;;AAtBL;;;AAwBF,0DAAA,1DAAME;AAAN,AAEE,IAAAC,qBAAiB,AAACT;AAAlB,AAAA,oBAAAS;AAAA,AAAA,YAAAA,RAAWC;AAAX,AACE,gEAAA,zDAACC,kCAAoB,AAACC,gBAAMF;;AAD9B;;;AAGF,4CAAA,5CAAMG;AAAN,AAEE,IAAAJ,qBAAiB,AAACT;AAAlB,AAAA,oBAAAS;AAAA,AAAA,YAAAA,RAAWC;AAAX,AACE,SAAK,yDAAA,zDAACC,kCAAoB,AAACC,gBAAMF,sBAC5B,GAAK,yDAAA,zDAACC,kCAAoB,AAACC,gBAAMF;;AAFxC;;;AAIF,0CAAA,1CAAMI;AAAN,AAEE,IAAAL,qBAAiB,AAACT;AAAlB,AAAA,oBAAAS;AAAA,AAAA,YAAAA,RAAWC;AAAX,AACE,gEAAA,zDAACC,kCAAoB,AAACC,gBAAMF;;AAD9B;;;AAGF,oDAAA,pDAAMK;AAAN,AAEE,IAAAC,aAAyB,AAAChB;YAA1B,AAAAE,4CAAAc,WAAA,IAAA,nEAAON;uBAAP,AAAAR,4CAAAc,WAAA,IAAA,9EAAaV;IACPI,YAAM,mFAAA,KAAA,tFAAU,mDAAA,nDAACxC,6CAAEwC,yCACX,AAACO,gDAAQP;AAFvB,AAGE,oBAAI,iBAAAzC,oBAAKyC;AAAL,AAAA,oBAAAzC;AAAWqC;;AAAXrC;;;AAAJ;;AAEE,OAAA,6FAAY,iBAAAiD,WAAA,AAAAC,gBAAQrB;AAAR,AAAA,0FAAAoB,gCAAAA,lHAACR,0CAAAA,oDAAAA","names":["frontend.mobile.util/platform","js/module$node_modules$$capacitor$core$dist$index_cjs.Capacitor","frontend.mobile.util/is-native-platform?","frontend.mobile.util/native-ios?","and__4251__auto__","cljs.core._EQ_","frontend.mobile.util/native-android?","frontend.mobile.util/convert-file-src","path-str","js/frontend","js/frontend.mobile","js/frontend.mobile.util","js/frontend.mobile.util.folder-picker","frontend.mobile.util/folder-picker","js/module$node_modules$$capacitor$core$dist$index_cjs.registerPlugin","js/frontend.mobile.util.download-icloud-files","frontend.mobile.util/download-icloud-files","js/frontend.mobile.util.ios-file-container","frontend.mobile.util/ios-file-container","js/frontend.mobile.util.file-sync","frontend.mobile.util/file-sync","js/frontend.mobile.util.fs-watcher","frontend.mobile.util/fs-watcher","frontend.mobile.util/sync-icloud-repo","repo-dir","repo-name","clojure.string.split","cljs.core/last","clojure.string/trim","js/decodeURI","cljs.core/clj->js","frontend.mobile.util/hide-splash","js/module$node_modules$$capacitor$splash_screen$dist$plugin_cjs.SplashScreen","frontend.mobile.util/idevice-info","cljs.core.atom","frontend.mobile.util/get-idevice-model","vec__66104","cljs.core.nth","width","js/screen","height","landscape?","G__66114","frontend.mobile.util/native-iphone-without-notch?","temp__5720__auto__","model","clojure.string/starts-with?","cljs.core/first","frontend.mobile.util/native-iphone?","frontend.mobile.util/native-ipad?","frontend.mobile.util/get-idevice-statusbar-height","vec__66148","cljs.core.keyword","G__66156","cljs.core/deref"],"sourcesContent":["(ns frontend.mobile.util\n  (:require [\"@capacitor/core\" :refer [Capacitor registerPlugin]]\n            [\"@capacitor/splash-screen\" :refer [SplashScreen]]\n            [clojure.string :as string]))\n\n(defn platform []\n  (.getPlatform Capacitor))\n\n(defn is-native-platform? []\n  (.isNativePlatform Capacitor))\n\n(defn native-ios? []\n  (and (is-native-platform?)\n       (= (platform) \"ios\")))\n\n(defn native-android? []\n  (and (is-native-platform?)\n       (= (platform) \"android\")))\n\n(defn convert-file-src [path-str]\n  (.convertFileSrc Capacitor path-str))\n\n(defonce folder-picker (registerPlugin \"FolderPicker\"))\n(when (native-ios?)\n  (defonce download-icloud-files (registerPlugin \"DownloadiCloudFiles\"))\n  (defonce ios-file-container (registerPlugin \"FileContainer\"))\n  (defonce file-sync (registerPlugin \"FileSync\")))\n\n;; NOTE: both iOS and android share the same FsWatcher API\n(when (is-native-platform?)\n  (defonce fs-watcher (registerPlugin \"FsWatcher\")))\n\n(defn sync-icloud-repo [repo-dir]\n  (let [repo-name (-> (string/split repo-dir \"Documents/\")\n                      last\n                      string/trim\n                      js/decodeURI)]\n    (.syncGraph download-icloud-files\n                (clj->js {:graph repo-name}))))\n\n(defn hide-splash []\n  (.hide SplashScreen))\n\n(def idevice-info\n  (atom\n   {:iPadPro12.9    {:width 1024 :height 1366 :statusbar 40}\n    :iPadPro11      {:width 834  :height 1194 :statusbar 40}\n    :iPadPro10.5    {:width 834  :height 1112 :statusbar 40}\n    :iPadAir10.5    {:width 834  :height 1112 :statusbar 40}\n    :iPadAir10.9    {:width 820  :height 1180 :statusbar 40}\n    :iPad10.2       {:width 810  :height 1080 :statusbar 40}\n    :iPadPro9.7     {:width 768  :height 1024 :statusbar 40}\n    :iPadmini9.7    {:width 768  :height 1024 :statusbar 40}\n    :iPadAir9.7     {:width 768  :height 1024 :statusbar 40}\n    :iPad9.7        {:width 768  :height 1024 :statusbar 40}\n    :iPadmini8.3        {:width 744  :height 1133 :statusbar 40}\n    :iPhone7Plus        {:width 476  :height 847  :statusbar 20}\n    :iPhone6sPlus   {:width 476  :height 847  :statusbar 20}\n    :iPhone6Plus        {:width 476  :height 847  :statusbar 20}\n    :iPhone13ProMax {:width 428  :height 926  :statusbar 47}\n    :iPhone12ProMax {:width 428  :height 926  :statusbar 47}\n    :iPhone11ProMax {:width 414  :height 896  :statusbar 44}\n    :iPhone11       {:width 414  :height 896  :statusbar 48}\n    :iPhoneXSMax        {:width 414  :height 896  :statusbar 48}\n    :iPhoneXR       {:width 414  :height 896  :statusbar 48}\n    :iPhone8Plus        {:width 414  :height 736  :statusbar 20}\n    :iPhone13Pro        {:width 390  :height 844  :statusbar 47}\n    :iPhone13       {:width 390  :height 844  :statusbar 47}\n    :iPhone12       {:width 390  :height 844  :statusbar 47}\n    :iPhone12Pro        {:width 390  :height 844  :statusbar 47}\n    :iPhone11Pro        {:width 375  :height 812  :statusbar 44}\n    :iPhoneXS       {:width 375  :height 812  :statusbar 44}\n    :iPhoneX        {:width 375  :height 812  :statusbar 44}\n    :iPhone8        {:width 375  :height 667  :statusbar 20}\n    :iPhone7        {:width 375  :height 667  :statusbar 20}\n    :iPhone6s       {:width 375  :height 667  :statusbar 20}\n    :iPhone6        {:width 375  :height 667  :statusbar 20}\n    :iPhone13mini   {:width 375  :height 812  :statusbar 44}\n    :iPhone12mini   {:width 375  :height 812  :statusbar 44}\n    :iPhoneSE4      {:width 320  :height 568  :statusbar 20}\n    :iPodtouch5     {:width 320  :height 568  :statusbar 20}}))\n\n(defn get-idevice-model\n  []\n  (when (native-ios?)\n    (let [width (.-width js/screen)\n          height (.-height js/screen)\n          landscape? (> width height)\n          [width height] (if landscape? [height width] [width height])]\n      [(case [width height]\n         [320 568] \"iPhoneSE4\"\n         [375 667] \"iPhone8\"\n         [375 812] \"iPhoneX\"\n         [390 844] \"iPhone12\"\n         [414 736] \"iPhone8Plus\"\n         [414 896] \"iPhone11\"\n         [428 926] \"iPhone13ProMax\"\n         [476 847] \"iPhone7Plus\"\n         [744 1133] \"iPadmini8.3\"\n         [768 1024] \"iPad9.7\"\n         [810 1080] \"iPad10.2\"\n         [820 1180] \"iPad10.9\"\n         [834 1112] \"iPadAir10.5\"\n         [834 1194] \"iPadPro11\"\n         [1024 1366] \"iPadPro12.9\"\n         \"Not a known Apple device!\")\n       landscape?])))\n\n(defn native-iphone-without-notch?\n  []\n  (when-let [model (get-idevice-model)]\n    (string/starts-with? (first model) \"iPhone8\")))\n\n(defn native-iphone?\n  []\n  (when-let [model (get-idevice-model)]\n    (and (string/starts-with? (first model) \"iPhone\")\n         (not (string/starts-with? (first model) \"iPhone8\")))))\n\n(defn native-ipad?\n  []\n  (when-let [model (get-idevice-model)]\n    (string/starts-with? (first model) \"iPad\")))\n\n(defn get-idevice-statusbar-height\n  []\n  (let [[model landscape?] (get-idevice-model)\n        model (when-not (= model \"Not a known Apple device!\")\n                (keyword model))]\n    (if (and model landscape?)\n      20\n      (:statusbar (model @idevice-info)))))\n"]}