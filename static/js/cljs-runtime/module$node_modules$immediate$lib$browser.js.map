{
"version":3,
"file":"module$node_modules$immediate$lib$browser.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgDtGC,QAASA,SAAQ,EAAG,CAClBC,QAAA,CAAW,CAAA,CAGX,KAJkB,IAEdC,CAFc,CAEXC,QAFW,CAGdC,IAAMC,KAAMC,CAAAA,MAChB,CAAOF,GAAP,CAAA,CAAY,CACVD,QAAA,CAAWE,KACXA,MAAA,CAAQ,EAER,KADAH,CACA,CADI,CAAC,CACL,CAAO,EAAEA,CAAT,CAAaE,GAAb,CAAA,CACED,QAAA,CAASD,CAAT,CAAA,EAEFE,IAAA,CAAMC,KAAMC,CAAAA,MAPF,CASZL,QAAA,CAAW,CAAA,CAbO,CA9ChBM,OAAAA,CAAWX,MAAOY,CAAAA,gBAAlBD,EAAsCX,MAAOa,CAAAA,sBAK/C,IAAIF,OAAJ,CAAc,CACZ,IAAIG,OAAS,CACTC,QAAAA,CAAW,IAAIJ,OAAJ,CAAaP,QAAb,CACf,KAAIY,QAAUhB,MAAOiB,CAAAA,QAASC,CAAAA,cAAhB,CAA+B,EAA/B,CACdH,QAASI,CAAAA,OAAT,CAAiBH,OAAjB,CAA0B,CACxBI,cAAe,CAAA,CADS,CAA1B,CAGA,KAAAC,cAAgBA,QAAS,EAAG,CAC1BL,OAAQM,CAAAA,IAAR;AAAgBR,MAAhB,CAAyB,EAAEA,MAA3B,CAAoC,CADV,CAPhB,CAAd,IAUO,IAAKd,MAAOuB,CAAAA,YAAZ,EAA6D,WAA7D,GAA4B,MAAOvB,OAAOwB,CAAAA,cAA1C,CAOLH,aAAA,CADS,UAAJ,EAAkBrB,OAAlB,EAA4B,oBAA5B,EAAoDA,OAAOiB,CAAAA,QAASQ,CAAAA,aAAhB,CAA8B,QAA9B,CAApD,CACWJ,QAAS,EAAG,CAI1B,IAAIK,SAAW1B,MAAOiB,CAAAA,QAASQ,CAAAA,aAAhB,CAA8B,QAA9B,CACfC,SAASC,CAAAA,kBAAT,CAA8BC,QAAS,EAAG,CACxCxB,QAAA,EAEAsB,SAASC,CAAAA,kBAAT,CAA8B,IAC9BD,SAASG,CAAAA,UAAWC,CAAAA,WAApB,CAAgCJ,QAAhC,CACAA,SAAA,CAAW,IAL6B,CAO1C1B,OAAOiB,CAAAA,QAASc,CAAAA,eAAgBC,CAAAA,WAAhC,CAA4CN,QAA5C,CAZ0B,CADvB,CAgBWL,QAAS,EAAG,CAC1BY,UAAA,CAAW7B,QAAX,CAAqB,CAArB,CAD0B,CAtBvB,KAA0E,CAC/E,IAAI8B,QAAU,IAAIlC,MAAOwB,CAAAA,cACzBU;OAAQC,CAAAA,KAAMC,CAAAA,SAAd,CAA0BhC,QAC1BiB,cAAA,CAAgBA,QAAS,EAAG,CAC1Ba,OAAQG,CAAAA,KAAMC,CAAAA,WAAd,CAA0B,CAA1B,CAD0B,CAHmD,CA4BnF,IAAIjC,QAAJ,CACII,MAAQ,EAkBZP,OAAOC,CAAAA,OAAP,CACAoC,QAAkB,CAACC,IAAD,CAAO,CACE,CAAzB,GAAI/B,KAAMgC,CAAAA,IAAN,CAAWD,IAAX,CAAJ,EAA+BnC,QAA/B,EACEgB,aAAA,EAFqB,CAjE6E;",
"sources":["node_modules/immediate/lib/browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$immediate$lib$browser\"] = function(global,require,module,exports) {\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","nextTick","draining","i","oldQueue","len","queue","length","Mutation","MutationObserver","WebKitMutationObserver","called","observer","element","document","createTextNode","observe","characterData","scheduleDrain","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","scriptEl.onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","immediate","task","push"]
}
