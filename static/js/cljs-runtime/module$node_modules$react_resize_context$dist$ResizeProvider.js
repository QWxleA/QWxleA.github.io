shadow$provide.module$node_modules$react_resize_context$dist$ResizeProvider=function(global,require,module,exports){var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,b);d.prototype=
null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var React=require("module$node_modules$react$index"),react_dom_1=require("module$node_modules$react_dom$index"),fastdom=require("module$node_modules$fastdom$fastdom"),context_1=require("module$node_modules$react_resize_context$dist$context"),methods_1=require("module$node_modules$react_resize_context$dist$methods");global=function(_super){function ResizeProvider(){var _this=null!==
_super&&_super.apply(this,arguments)||this;_this.state={size:null};_this.currentListenElement=null;_this.onSizeChanged=function(element){fastdom.clear(_this.measureID);_this.measureID=fastdom.measure(function(){var size=methods_1.getSize(element);_this.updateSize(size)})};_this.updateSize=function(size){fastdom.clear(_this.mutateID);_this.mutateID=fastdom.mutate(function(){_this.setState({size})})};return _this}__extends(ResizeProvider,_super);ResizeProvider.prototype.componentDidMount=function(){this.updateListenElement()};
ResizeProvider.prototype.componentWillUnmount=function(){this.removeListener(this.currentListenElement)};ResizeProvider.prototype.render=function(){return React.createElement(context_1.Provider,{value:this.state},this.props.children)};ResizeProvider.prototype.updateListenElement=function(){this.listenTo(this.getElement())};ResizeProvider.prototype.getElement=function(){var element=react_dom_1.findDOMNode(this);return element instanceof HTMLElement?element:null};ResizeProvider.prototype.listenTo=function(element){this.removeListener(this.currentListenElement);
(this.currentListenElement=element)&&methods_1.getResizeDetector().listenTo(element,this.onSizeChanged)};ResizeProvider.prototype.removeListener=function(element){element&&methods_1.getResizeDetector().removeListener(element,this.onSizeChanged)};return ResizeProvider}(React.PureComponent);exports.default=global}
//# sourceMappingURL=module$node_modules$react_resize_context$dist$ResizeProvider.js.map
