{
"version":3,
"file":"module$node_modules$$sentry$utils$dist$misc.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@sentry/utils/dist/misc.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$utils$dist$misc\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar global_1 = require(\"./global\");\nvar object_1 = require(\"./object\");\nvar string_1 = require(\"./string\");\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n    var global = global_1.getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n        // set 4 in byte 7\n        // eslint-disable-next-line no-bitwise\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        // eslint-disable-next-line no-bitwise\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n        var pad = function (num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = \"0\" + v;\n            }\n            return v;\n        };\n        return (pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]));\n    }\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        // eslint-disable-next-line no-bitwise\n        var r = (Math.random() * 16) | 0;\n        // eslint-disable-next-line no-bitwise\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexports.uuid4 = uuid4;\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n    if (!url) {\n        return {};\n    }\n    var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n        return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        host: match[4],\n        path: match[5],\n        protocol: match[2],\n        relative: match[5] + query + fragment,\n    };\n}\nexports.parseUrl = parseUrl;\nfunction getFirstException(event) {\n    return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n    var message = event.message, eventId = event.event_id;\n    if (message) {\n        return message;\n    }\n    var firstException = getFirstException(event);\n    if (firstException) {\n        if (firstException.type && firstException.value) {\n            return firstException.type + \": \" + firstException.value;\n        }\n        return firstException.type || firstException.value || eventId || '<unknown>';\n    }\n    return eventId || '<unknown>';\n}\nexports.getEventDescription = getEventDescription;\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n    var exception = (event.exception = event.exception || {});\n    var values = (exception.values = exception.values || []);\n    var firstException = (values[0] = values[0] || {});\n    if (!firstException.value) {\n        firstException.value = value || '';\n    }\n    if (!firstException.type) {\n        firstException.type = type || 'Error';\n    }\n}\nexports.addExceptionTypeValue = addExceptionTypeValue;\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n    var firstException = getFirstException(event);\n    if (!firstException) {\n        return;\n    }\n    var defaultMechanism = { type: 'generic', handled: true };\n    var currentMechanism = firstException.mechanism;\n    firstException.mechanism = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, defaultMechanism), currentMechanism), newMechanism);\n    if (newMechanism && 'data' in newMechanism) {\n        var mergedData = tslib_1.__assign(tslib_1.__assign({}, (currentMechanism && currentMechanism.data)), newMechanism.data);\n        firstException.mechanism.data = mergedData;\n    }\n}\nexports.addExceptionMechanism = addExceptionMechanism;\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nvar SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n    var match = input.match(SEMVER_REGEXP) || [];\n    var major = parseInt(match[1], 10);\n    var minor = parseInt(match[2], 10);\n    var patch = parseInt(match[3], 10);\n    return {\n        buildmetadata: match[5],\n        major: isNaN(major) ? undefined : major,\n        minor: isNaN(minor) ? undefined : minor,\n        patch: isNaN(patch) ? undefined : patch,\n        prerelease: match[4],\n    };\n}\nexports.parseSemver = parseSemver;\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext) {\n    if (linesOfContext === void 0) { linesOfContext = 5; }\n    var lineno = frame.lineno || 0;\n    var maxLines = lines.length;\n    var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n    frame.pre_context = lines\n        .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n        .map(function (line) { return string_1.snipLine(line, 0); });\n    frame.context_line = string_1.snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n    frame.post_context = lines\n        .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n        .map(function (line) { return string_1.snipLine(line, 0); });\n}\nexports.addContextToFrame = addContextToFrame;\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n    // eslint-disable-next-line no-useless-escape\n    return urlPath.split(/[\\?#]/, 1)[0];\n}\nexports.stripUrlQueryAndFragment = stripUrlQueryAndFragment;\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (exception && exception.__sentry_captured__) {\n        return true;\n    }\n    try {\n        // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n        // `ExtraErrorData` integration\n        object_1.addNonEnumerableProperty(exception, '__sentry_captured__', true);\n    }\n    catch (err) {\n        // `exception` is a primitive, so we can't mark it seen\n    }\n    return false;\n}\nexports.checkOrSetAlreadyCaught = checkOrSetAlreadyCaught;\n//# sourceMappingURL=misc.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","global_1","object_1","string_1","uuid4","getGlobalObject","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","toString","length","replace","c","r","Math","random","parseUrl","url","match","host","path","protocol","relative","getEventDescription","event","message","eventId","event_id","firstException","exception","values","undefined","type","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","__assign","defaultMechanism","handled","mergedData","data","SEMVER_REGEXP","parseSemver","input","major","parseInt","minor","patch","buildmetadata","isNaN","prerelease","addContextToFrame","lines","frame","linesOfContext","maxLines","sourceLine","max","min","lineno","pre_context","slice","map","line","snipLine","context_line","colno","post_context","stripUrlQueryAndFragment","urlPath","split","checkOrSetAlreadyCaught","__sentry_captured__","addNonEnumerableProperty","err"]
}
