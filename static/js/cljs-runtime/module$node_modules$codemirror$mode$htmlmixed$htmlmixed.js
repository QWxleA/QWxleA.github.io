shadow$provide.module$node_modules$codemirror$mode$htmlmixed$htmlmixed=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror"),require("module$node_modules$codemirror$mode$xml$xml"),require("module$node_modules$codemirror$mode$javascript$javascript"),require("module$node_modules$codemirror$mode$css$css")):"function"==typeof define&&define.amd?define(["../../lib/codemirror","../xml/xml","../javascript/javascript",
"../css/css"],mod):mod(CodeMirror)})(function(CodeMirror){function addTags(from,to){for(var tag in from)for(var dest=to[tag]||(to[tag]=[]),source=from[tag],i=source.length-1;0<=i;i--)dest.unshift(source[i])}function findMatchingMode(tagInfo,tagText){for(var i=0;i<tagInfo.length;i++){var spec=tagInfo[i],JSCompiler_temp;if(!(JSCompiler_temp=!spec[0])){JSCompiler_temp=spec[1];var JSCompiler_temp_const=JSCompiler_temp.test;var JSCompiler_inline_result=tagText;var JSCompiler_temp_const$jscomp$0=JSCompiler_inline_result.match;
var JSCompiler_inline_result$jscomp$0=spec[0];var regexp=attrRegexpCache[JSCompiler_inline_result$jscomp$0];JSCompiler_inline_result$jscomp$0=regexp?regexp:attrRegexpCache[JSCompiler_inline_result$jscomp$0]=new RegExp("\\s+"+JSCompiler_inline_result$jscomp$0+"\\s*\x3d\\s*('|\")?([^'\"]+)('|\")?\\s*");JSCompiler_inline_result=(JSCompiler_inline_result=JSCompiler_temp_const$jscomp$0.call(JSCompiler_inline_result,JSCompiler_inline_result$jscomp$0))?/^\s*(.*?)\s*$/.exec(JSCompiler_inline_result[2])[1]:
"";JSCompiler_temp=JSCompiler_temp_const.call(JSCompiler_temp,JSCompiler_inline_result)}if(JSCompiler_temp)return spec[2]}}var defaultTags={script:[["lang",/(javascript|babel)/i,"javascript"],["type",/^(?:text|application)\/(?:x-)?(?:java|ecma)script$|^module$|^$/i,"javascript"],["type",/./,"text/plain"],[null,null,"javascript"]],style:[["lang",/^css$/i,"css"],["type",/^(text\/)?(x-)?(stylesheet|css)$/i,"css"],["type",/./,"text/plain"],[null,null,"css"]]},attrRegexpCache={};CodeMirror.defineMode("htmlmixed",
function(config,parserConfig){function html(stream$jscomp$0,state$jscomp$0){var style=htmlMode.token(stream$jscomp$0,state$jscomp$0.htmlState),tag=/\btag\b/.test(style),tagName;if(tag&&!/[<>\s\/]/.test(stream$jscomp$0.current())&&(tagName=state$jscomp$0.htmlState.tagName&&state$jscomp$0.htmlState.tagName.toLowerCase())&&tags.hasOwnProperty(tagName))state$jscomp$0.inTag=tagName+" ";else if(state$jscomp$0.inTag&&tag&&/>$/.test(stream$jscomp$0.current())){tag=/^([\S]+) (.*)/.exec(state$jscomp$0.inTag);
state$jscomp$0.inTag=null;stream$jscomp$0="\x3e"==stream$jscomp$0.current()&&findMatchingMode(tags[tag[1]],tag[2]);stream$jscomp$0=CodeMirror.getMode(config,stream$jscomp$0);var endTagA=new RegExp("^\x3c/s*"+tag[1]+"s*\x3e","i"),endTag=new RegExp("\x3c/s*"+tag[1]+"s*\x3e","i");state$jscomp$0.token=function(stream,state){if(stream.match(endTagA,!1))return state.token=html,state.localState=state.localMode=null;state=state.localMode.token(stream,state.localState);var cur=stream.current(),close=cur.search(endTag);
-1<close?stream.backUp(cur.length-close):cur.match(/<\/?$/)&&(stream.backUp(cur.length),stream.match(endTag,!1)||stream.match(cur));return state};state$jscomp$0.localMode=stream$jscomp$0;state$jscomp$0.localState=CodeMirror.startState(stream$jscomp$0,htmlMode.indent(state$jscomp$0.htmlState,"",""))}else state$jscomp$0.inTag&&(state$jscomp$0.inTag+=stream$jscomp$0.current(),stream$jscomp$0.eol()&&(state$jscomp$0.inTag+=" "));return style}var htmlMode=CodeMirror.getMode(config,{name:"xml",htmlMode:!0,
multilineTagIndentFactor:parserConfig.multilineTagIndentFactor,multilineTagIndentPastTag:parserConfig.multilineTagIndentPastTag}),tags={},configTags=parserConfig&&parserConfig.tags;parserConfig=parserConfig&&parserConfig.scriptTypes;addTags(defaultTags,tags);configTags&&addTags(configTags,tags);if(parserConfig)for(configTags=parserConfig.length-1;0<=configTags;configTags--)tags.script.unshift(["type",parserConfig[configTags].matches,parserConfig[configTags].mode]);return{startState:function(){var state=
CodeMirror.startState(htmlMode);return{token:html,inTag:null,localMode:null,localState:null,htmlState:state}},copyState:function(state){var local;state.localState&&(local=CodeMirror.copyState(state.localMode,state.localState));return{token:state.token,inTag:state.inTag,localMode:state.localMode,localState:local,htmlState:CodeMirror.copyState(htmlMode,state.htmlState)}},token:function(stream,state){return state.token(stream,state)},indent:function(state,textAfter,line){return!state.localMode||/^\s*<\//.test(textAfter)?
htmlMode.indent(state.htmlState,textAfter,line):state.localMode.indent?state.localMode.indent(state.localState,textAfter,line):CodeMirror.Pass},innerMode:function(state){return{state:state.localState||state.htmlState,mode:state.localMode||htmlMode}}}},"xml","javascript","css");CodeMirror.defineMIME("text/html","htmlmixed")})}
//# sourceMappingURL=module$node_modules$codemirror$mode$htmlmixed$htmlmixed.js.map
