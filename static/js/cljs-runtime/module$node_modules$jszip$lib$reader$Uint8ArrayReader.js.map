{
"version":3,
"file":"module$node_modules$jszip$lib$reader$Uint8ArrayReader.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAKlHC,QAASA,iBAAgB,CAACC,IAAD,CAAO,CAC5BC,WAAYC,CAAAA,IAAZ,CAAiB,IAAjB,CAAuBF,IAAvB,CAD4B,CAHhC,IAAIC,YAAcL,OAAA,CAAQ,kDAAR,CACNA,QAAAO,CAAQ,qCAARA,CAKNC,CAAAA,QAAN,CAAeL,gBAAf,CAAiCE,WAAjC,CAIAF,iBAAiBM,CAAAA,SAAUC,CAAAA,QAA3B,CAAsCC,QAAQ,CAACC,IAAD,CAAO,CACjD,IAAKC,CAAAA,WAAL,CAAiBD,IAAjB,CACA,IAAY,CAAZ,GAAGA,IAAH,CAEI,MAAO,KAAIE,UAAJ,CAAe,CAAf,CAEX,KAAIC,OAAS,IAAKX,CAAAA,IAAKY,CAAAA,QAAV,CAAmB,IAAKC,CAAAA,IAAxB,CAA+B,IAAKC,CAAAA,KAApC,CAA2C,IAAKD,CAAAA,IAAhD;AAAuD,IAAKC,CAAAA,KAA5D,CAAoEN,IAApE,CACb,KAAKM,CAAAA,KAAL,EAAcN,IACd,OAAOG,OAR0C,CAUrDd,OAAOC,CAAAA,OAAP,CAAiBC,gBAtBiG;",
"sources":["node_modules/jszip/lib/reader/Uint8ArrayReader.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jszip$lib$reader$Uint8ArrayReader\"] = function(global,require,module,exports) {\n'use strict';\nvar ArrayReader = require('./ArrayReader');\nvar utils = require('../utils');\n\nfunction Uint8ArrayReader(data) {\n    ArrayReader.call(this, data);\n}\nutils.inherits(Uint8ArrayReader, ArrayReader);\n/**\n * @see DataReader.readData\n */\nUint8ArrayReader.prototype.readData = function(size) {\n    this.checkOffset(size);\n    if(size === 0) {\n        // in IE10, when using subarray(idx, idx), we get the array [0x00] instead of [].\n        return new Uint8Array(0);\n    }\n    var result = this.data.subarray(this.zero + this.index, this.zero + this.index + size);\n    this.index += size;\n    return result;\n};\nmodule.exports = Uint8ArrayReader;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Uint8ArrayReader","data","ArrayReader","call","utils","inherits","prototype","readData","Uint8ArrayReader.prototype.readData","size","checkOffset","Uint8Array","result","subarray","zero","index"]
}
