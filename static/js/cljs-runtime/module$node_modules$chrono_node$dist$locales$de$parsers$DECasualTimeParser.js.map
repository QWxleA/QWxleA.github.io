{
"version":3,
"file":"module$node_modules$chrono_node$dist$locales$de$parsers$DECasualTimeParser.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/chrono-node/dist/locales/de/parsers/DECasualTimeParser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$locales$de$parsers$DECasualTimeParser\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dayjs_1 = __importDefault(require(\"dayjs\"));\nconst index_1 = require(\"../../../index\");\nconst AbstractParserWithWordBoundary_1 = require(\"../../../common/parsers/AbstractParserWithWordBoundary\");\nconst dayjs_2 = require(\"../../../utils/dayjs\");\nconst timeunits_1 = require(\"../../../utils/timeunits\");\nclass DECasualTimeParser extends AbstractParserWithWordBoundary_1.AbstractParserWithWordBoundaryChecking {\n    innerPattern(context) {\n        return /(diesen)?\\s*(morgen|vormittag|mittags?|nachmittag|abend|nacht|mitternacht)(?=\\W|$)/i;\n    }\n    innerExtract(context, match) {\n        const targetDate = dayjs_1.default(context.refDate);\n        const timeKeywordPattern = match[2].toLowerCase();\n        const component = context.createParsingComponents();\n        dayjs_2.implySimilarTime(component, targetDate);\n        return DECasualTimeParser.extractTimeComponents(component, timeKeywordPattern);\n    }\n    static extractTimeComponents(component, timeKeywordPattern) {\n        switch (timeKeywordPattern) {\n            case \"morgen\":\n                component.imply(\"hour\", 6);\n                component.imply(\"minute\", 0);\n                component.imply(\"second\", 0);\n                component.imply(\"meridiem\", index_1.Meridiem.AM);\n                break;\n            case \"vormittag\":\n                component.imply(\"hour\", 9);\n                component.imply(\"minute\", 0);\n                component.imply(\"second\", 0);\n                component.imply(\"meridiem\", index_1.Meridiem.AM);\n                break;\n            case \"mittag\":\n            case \"mittags\":\n                component.imply(\"hour\", 12);\n                component.imply(\"minute\", 0);\n                component.imply(\"second\", 0);\n                component.imply(\"meridiem\", index_1.Meridiem.AM);\n                break;\n            case \"nachmittag\":\n                component.imply(\"hour\", 15);\n                component.imply(\"minute\", 0);\n                component.imply(\"second\", 0);\n                component.imply(\"meridiem\", index_1.Meridiem.PM);\n                break;\n            case \"abend\":\n                component.imply(\"hour\", 18);\n                component.imply(\"minute\", 0);\n                component.imply(\"second\", 0);\n                component.imply(\"meridiem\", index_1.Meridiem.PM);\n                break;\n            case \"nacht\":\n                component.imply(\"hour\", 22);\n                component.imply(\"minute\", 0);\n                component.imply(\"second\", 0);\n                component.imply(\"meridiem\", index_1.Meridiem.PM);\n                break;\n            case \"mitternacht\":\n                if (component.get(\"hour\") > 1) {\n                    component = timeunits_1.addImpliedTimeUnits(component, { \"day\": 1 });\n                }\n                component.imply(\"hour\", 0);\n                component.imply(\"minute\", 0);\n                component.imply(\"second\", 0);\n                component.imply(\"meridiem\", index_1.Meridiem.AM);\n                break;\n        }\n        return component;\n    }\n}\nexports.default = DECasualTimeParser;\n\n};"],
"names":["shadow$provide","global","require","module","exports","__importDefault","mod","__esModule","Object","defineProperty","value","dayjs_1","index_1","AbstractParserWithWordBoundary_1","dayjs_2","timeunits_1","DECasualTimeParser","AbstractParserWithWordBoundaryChecking","innerPattern","context","innerExtract","match","targetDate","default","refDate","timeKeywordPattern","toLowerCase","component","createParsingComponents","implySimilarTime","extractTimeComponents","imply","Meridiem","AM","PM","get","addImpliedTimeUnits"]
}
