{
"version":3,
"file":"module$node_modules$color_parse$index.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,CAAA,qCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOlG,IAAIC,MAAQH,OAAA,CAAQ,sCAAR,CAEZC,OAAOC,CAAAA,OAAP,CAqBAE,QAAe,CAACC,IAAD,CAAO,CAAA,IACjBC,CADiB,CACdC,MAAQ,EADM,CACFC,MAAQ,CAE3B,IAAoB,QAApB,GAAI,MAAOH,KAAX,CAEC,GAAIF,KAAA,CAAME,IAAN,CAAJ,CAAiB,CAChBE,KAAA,CAAQJ,KAAA,CAAME,IAAN,CAAYI,CAAAA,KAAZ,EACR,KAAAC,MAAQ,KAFQ,CAAjB,IAMK,IAAa,aAAb,GAAIL,IAAJ,CACJG,KAEA,CAFQ,CAER,CADAE,KACA,CADQ,KACR,CAAAH,KAAA,CAAQ,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAHJ,KAOA,IAAI,iBAAkBI,CAAAA,IAAlB,CAAuBN,IAAvB,CAAJ,CAAkC,CACtC,IAAIO,KAAOP,IAAKI,CAAAA,KAAL,CAAW,CAAX,CAAX,CACII,KAAOD,IAAKE,CAAAA,MAEhBN,MAAA,CAAQ,CADc,EAGtB,EAHcK,IAGd,EACCN,KAKA,CALQ,CACPQ,QAAA,CAASH,IAAA,CAAK,CAAL,CAAT,CAAmBA,IAAA,CAAK,CAAL,CAAnB,CAA4B,EAA5B,CADO,CAEPG,QAAA,CAASH,IAAA,CAAK,CAAL,CAAT,CAAmBA,IAAA,CAAK,CAAL,CAAnB;AAA4B,EAA5B,CAFO,CAGPG,QAAA,CAASH,IAAA,CAAK,CAAL,CAAT,CAAmBA,IAAA,CAAK,CAAL,CAAnB,CAA4B,EAA5B,CAHO,CAKR,CAAa,CAAb,GAAIC,IAAJ,GACCL,KADD,CACSO,QAAA,CAASH,IAAA,CAAK,CAAL,CAAT,CAAmBA,IAAA,CAAK,CAAL,CAAnB,CAA4B,EAA5B,CADT,CAC2C,GAD3C,CAND,GAWCL,KAKA,CALQ,CACPQ,QAAA,CAASH,IAAA,CAAK,CAAL,CAAT,CAAmBA,IAAA,CAAK,CAAL,CAAnB,CAA4B,EAA5B,CADO,CAEPG,QAAA,CAASH,IAAA,CAAK,CAAL,CAAT,CAAmBA,IAAA,CAAK,CAAL,CAAnB,CAA4B,EAA5B,CAFO,CAGPG,QAAA,CAASH,IAAA,CAAK,CAAL,CAAT,CAAmBA,IAAA,CAAK,CAAL,CAAnB,CAA4B,EAA5B,CAHO,CAKR,CAAa,CAAb,GAAIC,IAAJ,GACCL,KADD,CACSO,QAAA,CAASH,IAAA,CAAK,CAAL,CAAT,CAAmBA,IAAA,CAAK,CAAL,CAAnB,CAA4B,EAA5B,CADT,CAC2C,GAD3C,CAhBD,CAqBKL,MAAA,CAAM,CAAN,CAAL,GAAeA,KAAA,CAAM,CAAN,CAAf,CAA0B,CAA1B,CACKA,MAAA,CAAM,CAAN,CAAL,GAAeA,KAAA,CAAM,CAAN,CAAf,CAA0B,CAA1B,CACKA,MAAA,CAAM,CAAN,CAAL,GAAeA,KAAA,CAAM,CAAN,CAAf,CAA0B,CAA1B,CAEAG,MAAA,CAAQ,KA/B8B,CAAlC,IAmCA,CAAIJ,CAAJ,CAAQ,kFAAmFU,CAAAA,IAAnF,CAAwFX,IAAxF,CAAR,GACAY,IAgCJ,CAhCWX,CAAA,CAAE,CAAF,CAgCX,CA/BIY,KA+BJ,CA/BqB,KA+BrB,GA/BYD,IA+BZ,CA7BAP,KA6BA,CA9BIE,IA8BJ,CA9BWK,IAAKE,CAAAA,OAAL,CAAa,IAAb,CAAmB,EAAnB,CA8BX,CA5BIN,IA4BJ,CA5BoB,MAAT,GAAAD,IAAA,CAAkB,CAAlB;AAA+B,MAAT,GAAAA,IAAA,CAAkB,CAAlB,CAAsB,CA4BvD,CA3BAL,KA2BA,CA3BQD,CAAA,CAAE,CAAF,CAAKc,CAAAA,IAAL,EACNC,CAAAA,KADM,CACA,iBADA,CAENC,CAAAA,GAFM,CAEF,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAEpB,GAAI,IAAKb,CAAAA,IAAL,CAAUY,CAAV,CAAJ,CAAkB,CAEjB,GAAIC,CAAJ,GAAUX,IAAV,CAAgB,MAAOY,WAAA,CAAWF,CAAX,CAAP,CAAuB,GAEvC,IAAa,KAAb,GAAIX,IAAJ,CAAoB,MAAuB,IAAvB,CAAOa,UAAA,CAAWF,CAAX,CAAP,CAA6B,GAJhC,CAAlB,IAQK,IAAgB,GAAhB,GAAIX,IAAA,CAAKY,CAAL,CAAJ,EAEA,CAAA,MAAOb,CAAAA,IAAP,CAAYY,CAAZ,CAFA,EAMqBG,IAAAA,EANrB,GAMKC,QAAA,CAASJ,CAAT,CANL,CAOH,MAAOI,SAAA,CAASJ,CAAT,CAGT,OAAOE,WAAA,CAAWF,CAAX,CApBa,CAFd,CA2BR,CAFIN,IAEJ,GAFaL,IAEb,EAFmBL,KAAMqB,CAAAA,IAAN,CAAW,CAAX,CAEnB,CADApB,KACA,CADSU,KAAD,CAAU,CAAV,CAA+BQ,IAAAA,EAAjB,GAACnB,KAAA,CAAMM,IAAN,CAAD,CAA8B,CAA9B,CAAkCN,KAAA,CAAMM,IAAN,CACxD,CAAAN,KAAA,CAAQA,KAAME,CAAAA,KAAN,CAAY,CAAZ,CAAeI,IAAf,CAjCJ,EAqCkB,EArClB,CAqCIR,IAAKS,CAAAA,MArCT,EAqCwB,gBAAiBH,CAAAA,IAAjB,CAAsBN,IAAtB,CArCxB,GAsCJE,KAIA,CAJQF,IAAKwB,CAAAA,KAAL,CAAW,WAAX,CAAwBP,CAAAA,GAAxB,CAA4B,QAAS,CAACQ,KAAD,CAAQ,CACpD,MAAOL,WAAA,CAAWK,KAAX,CAD6C,CAA7C,CAIR;AAAApB,KAAA,CAAQL,IAAKwB,CAAAA,KAAL,CAAW,WAAX,CAAwBE,CAAAA,IAAxB,CAA6B,EAA7B,CAAiCC,CAAAA,WAAjC,EA1CJ,CAlDN,KAiGUC,MAAA,CAAM5B,IAAN,CAAL,CAMI6B,KAAMC,CAAAA,OAAN,CAAc9B,IAAd,CAAJ,EAA2BA,IAAKS,CAAAA,MAAhC,EACJP,KAEA,CAFQ,CAACF,IAAA,CAAK,CAAL,CAAD,CAAUA,IAAA,CAAK,CAAL,CAAV,CAAmBA,IAAA,CAAK,CAAL,CAAnB,CAER,CADAK,KACA,CADQ,KACR,CAAAF,KAAA,CAAwB,CAAhB,GAAAH,IAAKS,CAAAA,MAAL,CAAoBT,IAAA,CAAK,CAAL,CAApB,CAA8B,CAHlC,EAOIA,IAPJ,WAOoB+B,OAPpB,GAQU,IAAd,EAAI/B,IAAKgC,CAAAA,CAAT,EAAkC,IAAlC,EAAsBhC,IAAKiC,CAAAA,GAA3B,EAAoD,IAApD,EAA0CjC,IAAKkC,CAAAA,CAA/C,EACC7B,KACA,CADQ,KACR,CAAAH,KAAA,CAAQ,CACPF,IAAKgC,CAAAA,CADE,EACGhC,IAAKiC,CAAAA,GADR,EACejC,IAAKkC,CAAAA,CADpB,EACyB,CADzB,CAEPlC,IAAKmC,CAAAA,CAFE,EAEGnC,IAAKoC,CAAAA,KAFR,EAEiBpC,IAAKqC,CAAAA,CAFtB,EAE2B,CAF3B,CAGPrC,IAAKsC,CAAAA,CAHE,EAGGtC,IAAKuC,CAAAA,IAHR,EAGgBvC,IAAKwC,CAAAA,CAHrB,EAG0B,CAH1B,CAFT,GASCnC,KACA,CADQ,KACR,CAAAH,KAAA,CAAQ,CACPF,IAAKyC,CAAAA,CADE,EACGzC,IAAK0C,CAAAA,GADR,EACe1C,IAAK2C,CAAAA,CADpB,EACyB,CADzB,CAEP3C,IAAK4C,CAAAA,CAFE,EAEG5C,IAAK6C,CAAAA,UAFR,EAEsB7C,IAAK8C,CAAAA,CAF3B,EAEgC,CAFhC,CAGP9C,IAAK+C,CAAAA,CAHE,EAGG/C,IAAKgD,CAAAA,SAHR,EAGqBhD,IAAKiD,CAAAA,CAH1B,EAG+BjD,IAAKsC,CAAAA,CAHpC,EAGyCtC,IAAKkD,CAAAA,UAH9C,CAVT,CAmBA,CAFA/C,KAEA;AAFQH,IAAKmD,CAAAA,CAEb,EAFkBnD,IAAKG,CAAAA,KAEvB,EAFgCH,IAAKoD,CAAAA,OAErC,EAFgD,CAEhD,CAAoB,IAApB,EAAIpD,IAAKoD,CAAAA,OAAT,GAA0BjD,KAA1B,EAAmC,GAAnC,CA3BI,CANA,EACJE,KACA,CADQ,KACR,CAAAH,KAAA,CAAQ,CAACF,IAAD,GAAU,EAAV,EAAeA,IAAf,CAAsB,KAAtB,IAAoC,CAApC,CAAuCA,IAAvC,CAA8C,GAA9C,CAFJ,CAoCL,OAAO,CACCK,KADD,CAENgD,OAAQnD,KAFF,CAGCC,KAHD,CAxIc,CAdtB,KAAImB,SAAW,CACdW,IAAK,CADS,CAEdqB,OAAQ,EAFM,CAGdC,OAAQ,GAHM,CAIdnB,MAAO,GAJO,CAKdG,KAAM,GALQ,CAMdiB,OAAQ,GANM,CAhBmF;",
"sources":["node_modules/color-parse/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$color_parse$index\"] = function(global,require,module,exports) {\n/**\r\n * @module color-parse\r\n */\r\n\r\n'use strict'\r\n\r\nvar names = require('color-name')\r\n\r\nmodule.exports = parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","names","parse","cstr","m","parts","alpha","slice","space","test","base","size","length","parseInt","exec","name","isRGB","replace","trim","split","map","x","i","parseFloat","undefined","baseHues","push","match","value","join","toLowerCase","isNaN","Array","isArray","Object","r","red","R","g","green","G","b","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","values","orange","yellow","purple"]
}
