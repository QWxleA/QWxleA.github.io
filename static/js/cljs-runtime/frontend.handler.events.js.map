{"version":3,"sources":["frontend/handler/events.cljs"],"mappings":"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","names":["js/frontend","js/frontend.handler","js/frontend.handler.events","js/frontend.handler.events.handle","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","cljs.core.get","fexpr__71273","cljs.core/MultiFn","cljs.core.symbol","frontend.handler.events/handle","cljs.core/first","p__71278","vec__71279","cljs.core.nth","map__71282","cljs.core/--destructure-map","_","repo","empty-graph?","frontend.db/set-key-value","frontend.db-schema/ast-version","frontend.handler.search.rebuild_indices_BANG_","frontend.db/persist!","frontend.state/setups-picker?","frontend.handler.route/redirect!","frontend.handler.route.redirect_to_home_BANG_","frontend.handler.events/file-sync-stop-when-switch-graph","promesa.core.bind","___42616__auto__","___42615__auto__","promesa.protocols/-promise","frontend.util.persist-var/load-vars","frontend.fs.sync/sync-stop","frontend.fs.sync/sync-start","frontend.handler.events/graph-switch","graph","frontend.state/set-current-repo!","frontend.handler.common/reset-config!","frontend.modules.shortcut.core/refresh!","cljs.core._EQ_","frontend.state/get-current-route","temp__5720__auto__","dir-name","frontend.config/get-repo-dir","frontend.fs/watch-dir!","frontend.extensions.srs/update-cards-due-count!","frontend.state/pub-event!","frontend.handler.events/persist-db-noti-m","frontend.handler.notification.show_BANG_","frontend.ui/loading","frontend.context.i18n.t","frontend.handler.events/graph-switch-on-persisted","current-repo","frontend.state/get-current-repo","frontend.util/electron?","frontend.handler.repo.persist_db_BANG_","frontend.handler.repo/broadcast-persist-db!","frontend.handler.repo.restore_and_setup_repo_BANG_","p__71291","vec__71293","frontend.modules.outliner.file/writes-finished?","p__71297","vec__71298","ev","___42626__auto__","target-repo","or__4253__auto__","frontend.handler.ui.open_new_window_BANG_","p__71301","vec__71302","_repo","js/alert","frontend.handler.events/get-local-repo","frontend.config/local-db?","frontend.handler.events/ask-permission","cljs.core/not","frontend.mobile.util/is-native-platform?","close-fn","frontend.config/get-local-dir","frontend.ui.button","frontend.fs.nfs/check-directory-permission!","frontend.state.set_modal_BANG_","js/frontend.handler.events.*query-properties","frontend.handler.events/*query-properties","rum.core/lazy-build","rum.core/build-defc","daiquiri.core/create-element","cljs.core.into_array","iter__4652__auto__","s__71317","cljs.core/LazySeq","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__71319","cljs.core/chunk-buffer","i__71318","cljs.core/-nth","cljs.core/chunk-append","attrs71327","cljs.core/map?","daiquiri.interpreter/element-attributes","daiquiri.normalize.merge_with_class","daiquiri.interpreter/interpret","cljs.core/chunk-cons","cljs.core/chunk","iter__71316","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","frontend.handler.events/query-properties-settings-inner","rum.core/reactive","state","cljs.core/reset!","block","shown-properties","all-properties","_close-fn","query-properties","rum.core/react","property","property-value","shown?","cljs.core/contains?","cljs.core/name","frontend.ui.toggle","value","cljs.core.swap_BANG_","cljs.core/assoc","frontend.handler.editor/set-block-query-properties!","frontend.handler.events/query-properties-settings","p__71336","vec__71340","block-properties","G__71343","cljs.core.get_in","frontend.handler.common/safe-read-string","cljs.core/set","clojure.set.intersection","frontend.extensions.srs/global-cards","frontend.fs.capacitor-fs/instruction","frontend.components.plugins/open-select-theme!","frontend.handler.events/modal-output","content","p__71347","vec__71348","p__71351","vec__71352","_content","frontend.components.git/set-git-username-and-email","p__71355","vec__71356","old-title","new-title","frontend.handler.page/rename!","p__71359","vec__71360","page-name","opts","frontend.handler.page.create_BANG_","p__71363","vec__71364","frontend.handler.page/create-today-journal!","frontend.handler.ui.re_render_root_BANG_","p__71371","vec__71373","path","disk-content","db-content","frontend.state/clear-edit!","and__4251__auto__","cljs.core.not_EQ_","frontend.util/trim-safe","frontend.components.diff/local-file","p__71377","vec__71379","hash","frontend.encrypt.decrypt","frontend.components.git/file-specific-version","p__71383","vec__71384","frontend.handler.search.rebuild_indices_when_stale_BANG_","frontend.handler.repo/graph-ready!","p__71387","vec__71388","map__71391","status","clear?","frontend.components.shell/shell","frontend.components.search/search-modal","frontend.components.plugins/open-plugins-modal!","frontend.components.plugins/open-waiting-updates-modal!","p__71400","vec__71401","pid","nav?","title","frontend.state/set-state!","frontend.components.plugins/open-focused-settings-modal!","frontend.state.close_sub_modal_BANG_","p__71404","vec__71409","agent-opts","frontend.state.set_sub_modal_BANG_","frontend.components.plugins/user-proxy-settings-panel","p__71413","vec__71415","map__71418","type","payload","frontend.modules.instrumentation.posthog/capture","p__71420","vec__71421","map__71424","cmd","action","frontend.commands/exec-plugin-simple-command!","p__71426","vec__71427","cljs.core/deref","frontend.modules.shortcut.core/*inited?","frontend.modules.shortcut.core/consume-pending-shortcuts!","p__71430","vec__71431","frontend.state/get-left-sidebar-open?","frontend.state/editing?","frontend.state/set-left-sidebar-open!","p__71439","vec__71440","input","frontend.state/get-input","frontend.util/make-el-cursor-position-into-center-viewport","p__71445","vec__71446","id","pending?","updated?","downloading?","frontend.state/state","coming","error-code","temp__5718__auto__","n","frontend.state/get-next-selected-coming-update","frontend.handler.plugin/check-or-update-marketplace-plugin","cljs.core.assoc","e","js/console.error","frontend.handler.plugin/close-updates-downloading","cljs.core/second","frontend.state/all-available-coming-updates","p__71456","vec__71457","map__71460","blocks","tx-data","tx-meta","cljs.core.merge","p1__71455#","cljs.core.map","cljs.core.into","cljs.core.dissoc","frontend.handler.plugin.hook_plugin_db","frontend.handler.plugin/hook-plugin-block-changes","p__71463","vec__71464","frontend.config.get_config_path","broken-path","clojure.string/replace","frontend.fs/write-file!","frontend.handler.file/alter-file","frontend.config/config-default-content","p__71469","vec__71470","event","cljs.core.js__GT_clj","cljs.core.update","js/decodeURI","frontend.fs.watcher-handler/handle-changed!","frontend.fs.sync/file-watch-handler","p__71473","vec__71474","frontend.handler.page/rebuild-slash-commands-list!","p__71477","vec__71478","*multiple-windows?","frontend.util/atom?","frontend.state/close-modal!","frontend.handler.repo/re-index!","frontend.handler.web.nfs/rebuild-index!","p__71483","vec__71484","repo-url","frontend.components.encryption/encryption-setup-dialog","p__71487","vec__71488","db-encrypted-secret","frontend.components.encryption/encryption-input-secret-dialog","p__71491","vec__71492","frontend.util/page-name-sanity-lc","page","G__71495","frontend.db/pull","G__71496","G__71497","frontend.db/page-empty?","template","frontend.state/get-default-journal-template","frontend.handler.editor.insert_template_BANG_","frontend.handler.events/run!","chan","frontend.state/get-events-chan","c__41861__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__41862__auto__","switch__41838__auto__","state_71525","state_val_71526","statearr-71527","cljs.core.async.impl.ioc-helpers/take!","inst_71523","cljs.core.async.impl.ioc-helpers/return-chan","inst_71500","statearr-71528","statearr-71529","statearr-71530","inst_71517","statearr-71531","statearr-71532","inst_71520","statearr-71540","statearr-71541","inst_71501","inst_71502","inst_71503","inst_71504","inst_71505","cljs.core/PersistentVector","inst_71506","inst_71507","inst_71508","cljs.core/PersistentHashMap","inst_71509","inst_71510","inst_71511","statearr-71543","statearr-71544","statearr-71545","ex71539","statearr-71546","statearr-71547","statearr-71548","state-machine__41839__auto__","ret-value__41840__auto__","result__41841__auto__","cljs.core/keyword-identical?","ex__41842__auto__","e71549","statearr-71550","statearr-71551","state__41863__auto__","statearr-71552","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","js/Error","cljs.core/clj->js","cljs.core/chunk-first"],"sourcesContent":["(ns frontend.handler.events\n  (:refer-clojure :exclude [run!])\n  (:require [clojure.core.async :as async]\n            [clojure.set :as set]\n            [frontend.context.i18n :refer [t]]\n            [frontend.components.diff :as diff]\n            [frontend.handler.plugin :as plugin-handler]\n            [frontend.fs.capacitor-fs :as capacitor-fs]\n            [frontend.components.plugins :as plugin]\n            [frontend.components.git :as git-component]\n            [frontend.components.shell :as shell]\n            [frontend.components.search :as search]\n            [frontend.config :as config]\n            [frontend.db :as db]\n            [frontend.db-schema :as db-schema]\n            [frontend.extensions.srs :as srs]\n            [frontend.fs.nfs :as nfs]\n            [frontend.fs.watcher-handler :as fs-watcher]\n            [frontend.handler.common :as common-handler]\n            [frontend.handler.editor :as editor-handler]\n            [frontend.handler.notification :as notification]\n            [frontend.handler.page :as page-handler]\n            [frontend.handler.search :as search-handler]\n            [frontend.handler.ui :as ui-handler]\n            [frontend.handler.repo :as repo-handler]\n            [frontend.handler.file :as file-handler]\n            [frontend.handler.route :as route-handler]\n            [frontend.handler.web.nfs :as nfs-handler]\n            [frontend.modules.shortcut.core :as st]\n            [frontend.modules.outliner.file :as outliner-file]\n            [frontend.commands :as commands]\n            [frontend.state :as state]\n            [frontend.ui :as ui]\n            [frontend.util :as util]\n            [rum.core :as rum]\n            [frontend.modules.instrumentation.posthog :as posthog]\n            [frontend.mobile.util :as mobile-util]\n            [promesa.core :as p]\n            [frontend.fs :as fs]\n            [clojure.string :as string]\n            [frontend.util.persist-var :as persist-var]\n            [frontend.fs.sync :as sync]\n            [frontend.components.encryption :as encryption]\n            [frontend.encrypt :as encrypt]))\n\n;; TODO: should we move all events here?\n\n(defmulti handle first)\n\n(defmethod handle :graph/added [[_ repo {:keys [empty-graph?]}]]\n  (db/set-key-value repo :ast/version db-schema/ast-version)\n  (search-handler/rebuild-indices!)\n  (db/persist! repo)\n  (when (state/setups-picker?)\n    (if empty-graph?\n      (route-handler/redirect! {:to :import :query-params {:from \"picker\"}})\n      (route-handler/redirect-to-home!))))\n\n(defn- file-sync-stop-when-switch-graph []\n  (p/do! (persist-var/load-vars)\n         (sync/sync-stop)\n         (sync/sync-start)\n))\n\n(defn- graph-switch [graph]\n  (state/set-current-repo! graph)\n  ;; load config\n  (common-handler/reset-config! graph nil)\n  (st/refresh!)\n  (when-not (= :draw (state/get-current-route))\n    (route-handler/redirect-to-home!))\n  (when-let [dir-name (config/get-repo-dir graph)]\n    (fs/watch-dir! dir-name))\n  (srs/update-cards-due-count!)\n  (state/pub-event! [:graph/ready graph])\n\n  (file-sync-stop-when-switch-graph))\n\n(def persist-db-noti-m\n  {:before     #(notification/show!\n                 (ui/loading (t :graph/persist))\n                 :warning)\n   :on-error   #(notification/show!\n                 (t :graph/persist-error)\n                 :error)})\n\n(defn- graph-switch-on-persisted\n  \"Logic for keeping db sync when switching graphs\n   Only works for electron\"\n  [graph]\n  (let [current-repo (state/get-current-repo)]\n    (p/do!\n     (when (util/electron?)\n       (p/do!\n        (repo-handler/persist-db! current-repo persist-db-noti-m)\n        (repo-handler/broadcast-persist-db! graph)))\n     (repo-handler/restore-and-setup-repo! graph)\n     (graph-switch graph))))\n\n(defmethod handle :graph/switch [[_ graph]]\n  (if (outliner-file/writes-finished?)\n    (graph-switch-on-persisted graph)\n    (notification/show!\n     \"Please wait seconds until all changes are saved for the current graph.\"\n     :warning)))\n\n(defmethod handle :graph/open-new-window [[ev repo]]\n  (p/let [current-repo (state/get-current-repo)\n          target-repo (or repo current-repo)\n          _ (repo-handler/persist-db! current-repo persist-db-noti-m) ;; FIXME: redundant when opening non-current-graph window\n          _ (when-not (= current-repo target-repo)\n              (repo-handler/broadcast-persist-db! repo))]\n    (ui-handler/open-new-window! ev repo)))\n\n(defmethod handle :graph/migrated [[_ _repo]]\n  (js/alert \"Graph migrated.\"))\n\n(defmethod handle :graph/save [_]\n  (repo-handler/persist-db! (state/get-current-repo)\n                            {:before     #(notification/show!\n                                           (ui/loading (t :graph/save))\n                                           :warning)\n                             :on-success #(notification/show!\n                                           (ui/loading (t :graph/save-success))\n                                           :warning)\n                             :on-error   #(notification/show!\n                                           (t :graph/save-error)\n                                           :error)}))\n\n(defn get-local-repo\n  []\n  (when-let [repo (state/get-current-repo)]\n    (when (config/local-db? repo)\n      repo)))\n\n(defn ask-permission\n  [repo]\n  (when\n   (and (not (util/electron?))\n        (not (mobile-util/is-native-platform?)))\n    (fn [close-fn]\n      [:div\n       [:p\n        \"Grant native filesystem permission for directory: \"\n        [:b (config/get-local-dir repo)]]\n       (ui/button\n        \"Grant\"\n        :class \"ui__modal-enter\"\n        :on-click (fn []\n                    (nfs/check-directory-permission! repo)\n                    (close-fn)))])))\n\n(defmethod handle :modal/nfs-ask-permission []\n  (when-let [repo (get-local-repo)]\n    (state/set-modal! (ask-permission repo))))\n\n(defonce *query-properties (atom {}))\n(rum/defc query-properties-settings-inner < rum/reactive\n  {:will-unmount (fn [state]\n                   (reset! *query-properties {})\n                   state)}\n  [block shown-properties all-properties _close-fn]\n  (let [query-properties (rum/react *query-properties)]\n    [:div.p-4\n     [:div.font-bold \"Properties settings for this query:\"]\n     (for [property all-properties]\n       (let [property-value (get query-properties property)\n             shown? (if (nil? property-value)\n                      (contains? shown-properties property)\n                      property-value)]\n         [:div.flex.flex-row.m-2.justify-between.align-items\n          [:div (name property)]\n          [:div.mt-1 (ui/toggle shown?\n                                (fn []\n                                  (let [value (not shown?)]\n                                    (swap! *query-properties assoc property value)\n                                    (editor-handler/set-block-query-properties!\n                                     (:block/uuid block)\n                                     all-properties\n                                     property\n                                     value)))\n                                true)]]))]))\n\n(defn query-properties-settings\n  [block shown-properties all-properties]\n  (fn [close-fn]\n    (query-properties-settings-inner block shown-properties all-properties close-fn)))\n\n(defmethod handle :modal/set-query-properties [[_ block all-properties]]\n  (let [block-properties (some-> (get-in block [:block/properties :query-properties])\n                                 (common-handler/safe-read-string \"Parsing query properties failed\"))\n        shown-properties (if (seq block-properties)\n                           (set block-properties)\n                           (set all-properties))\n        shown-properties (set/intersection (set all-properties) shown-properties)]\n    (state/set-modal! (query-properties-settings block shown-properties all-properties))))\n\n(defmethod handle :modal/show-cards [_]\n  (state/set-modal! srs/global-cards {:id :srs\n                                      :label \"flashcards__cp\"}))\n\n(defmethod handle :modal/show-instruction [_]\n  (state/set-modal! capacitor-fs/instruction {:id :instruction\n                                              :label \"instruction__cp\"}))\n\n(defmethod handle :modal/show-themes-modal [_]\n  (plugin/open-select-theme!))\n\n(rum/defc modal-output\n  [content]\n  content)\n\n(defmethod handle :modal/show [[_ content]]\n  (state/set-modal! #(modal-output content)))\n\n(defmethod handle :modal/set-git-username-and-email [[_ _content]]\n  (state/set-modal! git-component/set-git-username-and-email))\n\n(defmethod handle :page/title-property-changed [[_ old-title new-title]]\n  (page-handler/rename! old-title new-title))\n\n(defmethod handle :page/create [[_ page-name opts]]\n  (page-handler/create! page-name opts))\n\n(defmethod handle :page/create-today-journal [[_ _repo]]\n  (p/let [_ (page-handler/create-today-journal!)]\n    (ui-handler/re-render-root!)))\n\n(defmethod handle :file/not-matched-from-disk [[_ path disk-content db-content]]\n  (state/clear-edit!)\n  (when-let [repo (state/get-current-repo)]\n    (when (and disk-content db-content\n               (not= (util/trim-safe disk-content) (util/trim-safe db-content)))\n      (state/set-modal! #(diff/local-file repo path disk-content db-content)\n                        {:label \"diff__cp\"}))))\n\n(defmethod handle :modal/display-file-version [[_ path content hash]]\n  (p/let [content (when content (encrypt/decrypt content))]\n    (state/set-modal! #(git-component/file-specific-version path hash content))))\n\n(defmethod handle :graph/ready [[_ repo]]\n  (search-handler/rebuild-indices-when-stale! repo)\n  (repo-handler/graph-ready! repo))\n\n(defmethod handle :notification/show [[_ {:keys [content status clear?]}]]\n  (notification/show! content status clear?))\n\n(defmethod handle :command/run [_]\n  (when (util/electron?)\n    (state/set-modal! shell/shell)))\n\n(defmethod handle :go/search [_]\n  (state/set-modal! search/search-modal\n                    {:fullscreen? false\n                     :close-btn?  false}))\n\n(defmethod handle :go/plugins [_]\n  (plugin/open-plugins-modal!))\n\n(defmethod handle :go/plugins-waiting-lists [_]\n  (plugin/open-waiting-updates-modal!))\n\n(defmethod handle :go/plugins-settings [[_ pid nav? title]]\n  (if pid\n    (do\n      (state/set-state! :plugin/focused-settings pid)\n      (state/set-state! :plugin/navs-settings? (not (false? nav?)))\n      (plugin/open-focused-settings-modal! title))\n    (state/close-sub-modal! \"ls-focused-settings-modal\")))\n\n(defmethod handle :go/proxy-settings [[_ agent-opts]]\n  (state/set-sub-modal!\n    (fn [_] (plugin/user-proxy-settings-panel agent-opts))\n    {:id :https-proxy-panel :center? true}))\n\n\n(defmethod handle :redirect-to-home [_]\n  (page-handler/create-today-journal!))\n\n(defmethod handle :instrument [[_ {:keys [type payload]}]]\n  (posthog/capture type payload))\n\n(defmethod handle :exec-plugin-cmd [[_ {:keys [pid cmd action]}]]\n  (commands/exec-plugin-simple-command! pid cmd action))\n\n(defmethod handle :shortcut-handler-refreshed [[_]]\n  (when-not @st/*inited?\n    (reset! st/*inited? true)\n    (st/consume-pending-shortcuts!)))\n\n\n(defmethod handle :mobile/keyboard-will-show [[_]]\n  (when (and (state/get-left-sidebar-open?)\n             (state/editing?))\n    (state/set-left-sidebar-open! false)))\n\n(defmethod handle :mobile/keyboard-did-show [[_]]\n  (when-let [input (state/get-input)]\n    (util/make-el-cursor-position-into-center-viewport input)))\n\n(defmethod handle :plugin/consume-updates [[_ id pending? updated?]]\n  (let [downloading? (:plugin/updates-downloading? @state/state)]\n\n    (when-let [coming (and (not downloading?)\n                           (get-in @state/state [:plugin/updates-coming id]))]\n      (let [error-code (:error-code coming)\n            error-code (if (= error-code (str :no-new-version)) nil error-code)]\n        (when (or pending? (not error-code))\n          (notification/show!\n            (str \"[Checked]<\" (:title coming) \"> \" error-code)\n            (if error-code :error :success)))))\n\n    (if (and updated? downloading?)\n      ;; try to start consume downloading item\n      (if-let [n (state/get-next-selected-coming-update)]\n        (plugin-handler/check-or-update-marketplace-plugin\n         (assoc n :only-check false :error-code nil)\n         (fn [^js e] (js/console.error \"[Download Err]\" n e)))\n        (plugin-handler/close-updates-downloading))\n\n      ;; try to start consume pending item\n      (if-let [n (second (first (:plugin/updates-pending @state/state)))]\n        (plugin-handler/check-or-update-marketplace-plugin\n         (assoc n :only-check true :error-code nil)\n         (fn [^js e]\n           (notification/show! (.toString e) :error)\n           (js/console.error \"[Check Err]\" n e)))\n        ;; try to open waiting updates list\n        (when (and pending? (seq (state/all-available-coming-updates)))\n          (plugin/open-waiting-updates-modal!))))))\n\n(defmethod handle :plugin/hook-db-tx [[_ {:keys [blocks tx-data tx-meta] :as payload}]]\n  (when-let [payload (and (seq blocks)\n                          (merge payload {:tx-data (map #(into [] %) tx-data)\n                                          :tx-meta (dissoc tx-meta :editor-cursor)}))]\n    (plugin-handler/hook-plugin-db :changed payload)\n    (plugin-handler/hook-plugin-block-changes payload)))\n\n(defmethod handle :backup/broken-config [[_ repo content]]\n  (when (and repo content)\n    (let [path (config/get-config-path)\n          broken-path (string/replace path \"/config.edn\" \"/broken-config.edn\")]\n      (p/let [_ (fs/write-file! repo (config/get-repo-dir repo) broken-path content {})\n              _ (file-handler/alter-file repo path config/config-default-content {:skip-compare? true})]\n        (notification/show!\n         [:p.content\n          \"It seems that your config.edn is broken. We've restored it with the default content and saved the previous content to the file logseq/broken-config.edn.\"]\n         :warning\n         false)))))\n\n(defmethod handle :file-watcher/changed [[_ ^js event]]\n  (let [type (.-event event)\n        payload (-> event\n                    (js->clj :keywordize-keys true)\n                    (update :path js/decodeURI))]\n    (fs-watcher/handle-changed! type payload)\n    (sync/file-watch-handler type payload)))\n\n(defmethod handle :rebuild-slash-commands-list [[_]]\n  (page-handler/rebuild-slash-commands-list!))\n\n(defmethod handle :graph/ask-for-re-index [[_ *multiple-windows?]]\n  (if (and (util/atom? *multiple-windows?) @*multiple-windows?)\n    (handle\n     [:modal/show\n      [:div\n       [:p (t :re-index-multiple-windows-warning)]]])\n    (handle\n     [:modal/show\n      [:div {:style {:max-width 700}}\n       [:p (t :re-index-discard-unsaved-changes-warning)]\n       (ui/button\n         (t :yes)\n         :autoFocus \"on\"\n         :large? true\n         :on-click (fn []\n                     (state/close-modal!)\n                     (repo-handler/re-index!\n                      nfs-handler/rebuild-index!\n                      page-handler/create-today-journal!)))]])))\n\n;; encryption\n(defmethod handle :modal/encryption-setup-dialog [[_ repo-url close-fn]]\n  (state/set-modal!\n   (encryption/encryption-setup-dialog repo-url close-fn)))\n\n(defmethod handle :modal/encryption-input-secret-dialog [[_ repo-url db-encrypted-secret close-fn]]\n  (state/set-modal!\n   (encryption/encryption-input-secret-dialog\n    repo-url\n    db-encrypted-secret\n    close-fn)))\n\n(defmethod handle :journal/insert-template [[_ page-name]]\n  (let [page-name (util/page-name-sanity-lc page-name)]\n    (when-let [page (db/pull [:block/name page-name])]\n      (when (db/page-empty? (state/get-current-repo) page-name)\n        (when-let [template (state/get-default-journal-template)]\n          (editor-handler/insert-template!\n           nil\n           template\n           {:target page}))))))\n\n(defn run!\n  []\n  (let [chan (state/get-events-chan)]\n    (async/go-loop []\n      (let [payload (async/<! chan)]\n        (try\n          (handle payload)\n          (catch js/Error error\n            (let [type :handle-system-events/failed]\n              (js/console.error (str type) (clj->js payload) \"\\n\" error)\n              (state/pub-event! [:instrument {:type    type\n                                              :payload payload\n                                              :error error}])))))\n      (recur))\n    chan))\n"]}