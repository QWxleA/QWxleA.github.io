shadow$provide.module$node_modules$$sentry$tracing$dist$browser$metrics=function(global,require,module,exports){function addNavigationSpans(transaction,entry,timeOrigin){["unloadEvent","redirect","domContentLoadedEvent","loadEvent","connect"].forEach(function(event){addPerformanceNavigationTiming(transaction,entry,event,timeOrigin)});addPerformanceNavigationTiming(transaction,entry,"secureConnection",timeOrigin,"TLS/SSL","connectEnd");addPerformanceNavigationTiming(transaction,entry,"fetch",timeOrigin,
"cache","domainLookupStart");addPerformanceNavigationTiming(transaction,entry,"domainLookup",timeOrigin,"DNS");addRequest(transaction,entry,timeOrigin)}function addResourceSpans(transaction,entry,resourceName,startTime,duration,timeOrigin){if("xmlhttprequest"!==entry.initiatorType&&"fetch"!==entry.initiatorType){var data={};"transferSize"in entry&&(data["Transfer Size"]=entry.transferSize);"encodedBodySize"in entry&&(data["Encoded Body Size"]=entry.encodedBodySize);"decodedBodySize"in entry&&(data["Decoded Body Size"]=
entry.decodedBodySize);startTime=timeOrigin+startTime;_startChild(transaction,{description:resourceName,endTimestamp:startTime+duration,op:entry.initiatorType?"resource."+entry.initiatorType:"resource",startTimestamp:startTime,data})}}function addPerformanceNavigationTiming(transaction,entry,event,timeOrigin,description,eventEnd){eventEnd=eventEnd?entry[eventEnd]:entry[event+"End"];(entry=entry[event+"Start"])&&eventEnd&&_startChild(transaction,{op:"browser",description:null!==description&&void 0!==
description?description:event,startTimestamp:timeOrigin+utils_2.msToSec(entry),endTimestamp:timeOrigin+utils_2.msToSec(eventEnd)})}function addRequest(transaction,entry,timeOrigin){_startChild(transaction,{op:"browser",description:"request",startTimestamp:timeOrigin+utils_2.msToSec(entry.requestStart),endTimestamp:timeOrigin+utils_2.msToSec(entry.responseEnd)});_startChild(transaction,{op:"browser",description:"response",startTimestamp:timeOrigin+utils_2.msToSec(entry.responseStart),endTimestamp:timeOrigin+
utils_2.msToSec(entry.responseEnd)})}function _startChild(transaction,_a){var startTimestamp=_a.startTimestamp;_a=tslib_1.__rest(_a,["startTimestamp"]);startTimestamp&&transaction.startTimestamp>startTimestamp&&(transaction.startTimestamp=startTimestamp);return transaction.startChild(tslib_1.__assign({startTimestamp},_a))}function isMeasurementValue(value){return"number"===typeof value&&isFinite(value)}function tagMetricInfo(transaction,lcpEntry,clsEntry){lcpEntry&&(utils_1.logger.log("[Measurements] Adding LCP Data"),
lcpEntry.element&&transaction.setTag("lcp.element",utils_1.htmlTreeAsString(lcpEntry.element)),lcpEntry.id&&transaction.setTag("lcp.id",lcpEntry.id),lcpEntry.url&&transaction.setTag("lcp.url",lcpEntry.url.trim().slice(0,200)),transaction.setTag("lcp.size",lcpEntry.size));clsEntry&&clsEntry.sources&&(utils_1.logger.log("[Measurements] Adding CLS Data"),clsEntry.sources.forEach(function(source,index){return transaction.setTag("cls.source."+(index+1),utils_1.htmlTreeAsString(source.node))}))}Object.defineProperty(exports,
"__esModule",{value:!0});var tslib_1=require("module$node_modules$$sentry$tracing$node_modules$tslib$tslib"),utils_1=require("module$node_modules$$sentry$utils$dist$index"),utils_2=require("module$node_modules$$sentry$tracing$dist$utils"),getCLS_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$getCLS"),getFID_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$getFID"),getLCP_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$getLCP"),getVisibilityWatcher_1=
require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$getVisibilityWatcher");global=utils_1.getGlobalObject();require=function(){function MetricsInstrumentation(_reportAllChanges){void 0===_reportAllChanges&&(_reportAllChanges=!1);this._reportAllChanges=_reportAllChanges;this._measurements={};this._performanceCursor=0;!utils_1.isNodeEnv()&&global&&global.performance&&global.document&&(global.performance.mark&&global.performance.mark("sentry-tracing-init"),this._trackCLS(),this._trackLCP(),
this._trackFID())}MetricsInstrumentation.prototype.addPerformanceEntries=function(transaction){var _this=this;if(global&&global.performance&&global.performance.getEntries&&utils_1.browserPerformanceTimeOrigin){utils_1.logger.log("[Tracing] Adding \x26 adjusting spans using Performance API");var timeOrigin=utils_2.msToSec(utils_1.browserPerformanceTimeOrigin),responseStartTimestamp,requestStartTimestamp;global.performance.getEntries().slice(this._performanceCursor).forEach(function(entry){var startTime=
utils_2.msToSec(entry.startTime),duration=utils_2.msToSec(entry.duration);if(!("navigation"===transaction.op&&timeOrigin+startTime<transaction.startTimestamp))switch(entry.entryType){case "navigation":addNavigationSpans(transaction,entry,timeOrigin);responseStartTimestamp=timeOrigin+utils_2.msToSec(entry.responseStart);requestStartTimestamp=timeOrigin+utils_2.msToSec(entry.requestStart);break;case "mark":case "paint":case "measure":startTime=timeOrigin+startTime;_startChild(transaction,{description:entry.name,
endTimestamp:startTime+duration,op:entry.entryType,startTimestamp:startTime});duration=getVisibilityWatcher_1.getVisibilityWatcher();duration=entry.startTime<duration.firstHiddenTime;"first-paint"===entry.name&&duration&&(utils_1.logger.log("[Measurements] Adding FP"),_this._measurements.fp={value:entry.startTime},_this._measurements["mark.fp"]={value:startTime});"first-contentful-paint"===entry.name&&duration&&(utils_1.logger.log("[Measurements] Adding FCP"),_this._measurements.fcp={value:entry.startTime},
_this._measurements["mark.fcp"]={value:startTime});break;case "resource":var resourceName=entry.name.replace(global.location.origin,"");addResourceSpans(transaction,entry,resourceName,startTime,duration,timeOrigin)}});this._performanceCursor=Math.max(performance.getEntries().length-1,0);this._trackNavigator(transaction);if("pageload"===transaction.op){var timeOrigin_1=utils_2.msToSec(utils_1.browserPerformanceTimeOrigin);"number"===typeof responseStartTimestamp&&(utils_1.logger.log("[Measurements] Adding TTFB"),
this._measurements.ttfb={value:1E3*(responseStartTimestamp-transaction.startTimestamp)},"number"===typeof requestStartTimestamp&&requestStartTimestamp<=responseStartTimestamp&&(this._measurements["ttfb.requestTime"]={value:1E3*(responseStartTimestamp-requestStartTimestamp)}));["fcp","fp","lcp"].forEach(function(name){if(_this._measurements[name]&&!(timeOrigin_1>=transaction.startTimestamp)){var oldValue=_this._measurements[name].value,measurementTimestamp=timeOrigin_1+utils_2.msToSec(oldValue);measurementTimestamp=
Math.abs(1E3*(measurementTimestamp-transaction.startTimestamp));utils_1.logger.log("[Measurements] Normalized "+name+" from "+oldValue+" to "+measurementTimestamp+" ("+(measurementTimestamp-oldValue)+")");_this._measurements[name].value=measurementTimestamp}});this._measurements["mark.fid"]&&this._measurements.fid&&_startChild(transaction,{description:"first input delay",endTimestamp:this._measurements["mark.fid"].value+utils_2.msToSec(this._measurements.fid.value),op:"web.vitals",startTimestamp:this._measurements["mark.fid"].value});
"fcp"in this._measurements||delete this._measurements.cls;transaction.setMeasurements(this._measurements);tagMetricInfo(transaction,this._lcpEntry,this._clsEntry);transaction.setTag("sentry_reportAllChanges",this._reportAllChanges)}}};MetricsInstrumentation.prototype._trackNavigator=function(transaction){var navigator=global.navigator;if(navigator){var connection=navigator.connection;connection&&(connection.effectiveType&&transaction.setTag("effectiveConnectionType",connection.effectiveType),connection.type&&
transaction.setTag("connectionType",connection.type),isMeasurementValue(connection.rtt)&&(this._measurements["connection.rtt"]={value:connection.rtt}),isMeasurementValue(connection.downlink)&&(this._measurements["connection.downlink"]={value:connection.downlink}));isMeasurementValue(navigator.deviceMemory)&&transaction.setTag("deviceMemory",String(navigator.deviceMemory));isMeasurementValue(navigator.hardwareConcurrency)&&transaction.setTag("hardwareConcurrency",String(navigator.hardwareConcurrency))}};
MetricsInstrumentation.prototype._trackCLS=function(){var _this=this;getCLS_1.getCLS(function(metric){var entry=metric.entries.pop();entry&&(utils_1.logger.log("[Measurements] Adding CLS"),_this._measurements.cls={value:metric.value},_this._clsEntry=entry)})};MetricsInstrumentation.prototype._trackLCP=function(){var _this=this;getLCP_1.getLCP(function(metric){var entry=metric.entries.pop();if(entry){var timeOrigin=utils_2.msToSec(utils_1.browserPerformanceTimeOrigin),startTime=utils_2.msToSec(entry.startTime);
utils_1.logger.log("[Measurements] Adding LCP");_this._measurements.lcp={value:metric.value};_this._measurements["mark.lcp"]={value:timeOrigin+startTime};_this._lcpEntry=entry}},this._reportAllChanges)};MetricsInstrumentation.prototype._trackFID=function(){var _this=this;getFID_1.getFID(function(metric){var entry=metric.entries.pop();if(entry){var timeOrigin=utils_2.msToSec(utils_1.browserPerformanceTimeOrigin);entry=utils_2.msToSec(entry.startTime);utils_1.logger.log("[Measurements] Adding FID");
_this._measurements.fid={value:metric.value};_this._measurements["mark.fid"]={value:timeOrigin+entry}}})};return MetricsInstrumentation}();exports.MetricsInstrumentation=require;exports.addResourceSpans=addResourceSpans;exports._startChild=_startChild}
//# sourceMappingURL=module$node_modules$$sentry$tracing$dist$browser$metrics.js.map
