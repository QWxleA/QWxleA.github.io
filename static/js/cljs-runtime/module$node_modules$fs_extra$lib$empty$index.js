shadow$provide.module$node_modules$fs_extra$lib$empty$index=function(global,require,module,exports){function emptyDirSync(dir){let items;try{items=fs.readdirSync(dir)}catch{return mkdir.mkdirsSync(dir)}items.forEach(item=>{item=path.join(dir,item);remove.removeSync(item)})}global=require("module$node_modules$universalify$index").fromCallback;const fs=require("module$node_modules$graceful_fs$graceful_fs"),path=require("module$node_modules$path_browserify$index"),mkdir=require("module$node_modules$fs_extra$lib$mkdirs$index"),
remove=require("module$node_modules$fs_extra$lib$remove$index");require=global(function(dir,callback){callback=callback||function(){};fs.readdir(dir,(err$jscomp$0,items)=>{function deleteItem(){const item=items.pop();if(!item)return callback();remove.remove(item,err=>{if(err)return callback(err);deleteItem()})}if(err$jscomp$0)return mkdir.mkdirs(dir,callback);items=items.map(item=>path.join(dir,item));deleteItem()})});module.exports={emptyDirSync,emptydirSync:emptyDirSync,emptyDir:require,emptydir:require}}
//# sourceMappingURL=module$node_modules$fs_extra$lib$empty$index.js.map
