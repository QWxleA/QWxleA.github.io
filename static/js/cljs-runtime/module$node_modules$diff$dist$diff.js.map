{
"version":3,
"file":"module$node_modules$diff$dist$diff.js",
"lineCount":56,
"mappings":"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",
"sources":["node_modules/diff/dist/diff.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$diff$dist$diff\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.Diff = {}));\n}(this, (function (exports) { 'use strict';\n\n  function Diff() {}\n  Diff.prototype = {\n    diff: function diff(oldString, newString) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var callback = options.callback;\n\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      this.options = options;\n      var self = this;\n\n      function done(value) {\n        if (callback) {\n          setTimeout(function () {\n            callback(undefined, value);\n          }, 0);\n          return true;\n        } else {\n          return value;\n        }\n      } // Allow subclasses to massage the input prior to running\n\n\n      oldString = this.castInput(oldString);\n      newString = this.castInput(newString);\n      oldString = this.removeEmpty(this.tokenize(oldString));\n      newString = this.removeEmpty(this.tokenize(newString));\n      var newLen = newString.length,\n          oldLen = oldString.length;\n      var editLength = 1;\n      var maxEditLength = newLen + oldLen;\n      var bestPath = [{\n        newPos: -1,\n        components: []\n      }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n      var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n      if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n        // Identity per the equality and tokenizer\n        return done([{\n          value: this.join(newString),\n          count: newString.length\n        }]);\n      } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n      function execEditLength() {\n        for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n          var basePath = void 0;\n\n          var addPath = bestPath[diagonalPath - 1],\n              removePath = bestPath[diagonalPath + 1],\n              _oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n          if (addPath) {\n            // No one else is going to attempt to use this value, clear it\n            bestPath[diagonalPath - 1] = undefined;\n          }\n\n          var canAdd = addPath && addPath.newPos + 1 < newLen,\n              canRemove = removePath && 0 <= _oldPos && _oldPos < oldLen;\n\n          if (!canAdd && !canRemove) {\n            // If this path is a terminal then prune\n            bestPath[diagonalPath] = undefined;\n            continue;\n          } // Select the diagonal that we want to branch from. We select the prior\n          // path whose position in the new string is the farthest from the origin\n          // and does not pass the bounds of the diff graph\n\n\n          if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n            basePath = clonePath(removePath);\n            self.pushComponent(basePath.components, undefined, true);\n          } else {\n            basePath = addPath; // No need to clone, we've pulled it from the list\n\n            basePath.newPos++;\n            self.pushComponent(basePath.components, true, undefined);\n          }\n\n          _oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath); // If we have hit the end of both strings, then we are done\n\n          if (basePath.newPos + 1 >= newLen && _oldPos + 1 >= oldLen) {\n            return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n          } else {\n            // Otherwise track this path as a potential candidate and continue.\n            bestPath[diagonalPath] = basePath;\n          }\n        }\n\n        editLength++;\n      } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n      // sync and async mode which is never fun. Loops over execEditLength until a value\n      // is produced.\n\n\n      if (callback) {\n        (function exec() {\n          setTimeout(function () {\n            // This should not happen, but we want to be safe.\n\n            /* istanbul ignore next */\n            if (editLength > maxEditLength) {\n              return callback();\n            }\n\n            if (!execEditLength()) {\n              exec();\n            }\n          }, 0);\n        })();\n      } else {\n        while (editLength <= maxEditLength) {\n          var ret = execEditLength();\n\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    },\n    pushComponent: function pushComponent(components, added, removed) {\n      var last = components[components.length - 1];\n\n      if (last && last.added === added && last.removed === removed) {\n        // We need to clone here as the component clone operation is just\n        // as shallow array clone\n        components[components.length - 1] = {\n          count: last.count + 1,\n          added: added,\n          removed: removed\n        };\n      } else {\n        components.push({\n          count: 1,\n          added: added,\n          removed: removed\n        });\n      }\n    },\n    extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n      var newLen = newString.length,\n          oldLen = oldString.length,\n          newPos = basePath.newPos,\n          oldPos = newPos - diagonalPath,\n          commonCount = 0;\n\n      while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n        newPos++;\n        oldPos++;\n        commonCount++;\n      }\n\n      if (commonCount) {\n        basePath.components.push({\n          count: commonCount\n        });\n      }\n\n      basePath.newPos = newPos;\n      return oldPos;\n    },\n    equals: function equals(left, right) {\n      if (this.options.comparator) {\n        return this.options.comparator(left, right);\n      } else {\n        return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n      }\n    },\n    removeEmpty: function removeEmpty(array) {\n      var ret = [];\n\n      for (var i = 0; i < array.length; i++) {\n        if (array[i]) {\n          ret.push(array[i]);\n        }\n      }\n\n      return ret;\n    },\n    castInput: function castInput(value) {\n      return value;\n    },\n    tokenize: function tokenize(value) {\n      return value.split('');\n    },\n    join: function join(chars) {\n      return chars.join('');\n    }\n  };\n\n  function buildValues(diff, components, newString, oldString, useLongestToken) {\n    var componentPos = 0,\n        componentLen = components.length,\n        newPos = 0,\n        oldPos = 0;\n\n    for (; componentPos < componentLen; componentPos++) {\n      var component = components[componentPos];\n\n      if (!component.removed) {\n        if (!component.added && useLongestToken) {\n          var value = newString.slice(newPos, newPos + component.count);\n          value = value.map(function (value, i) {\n            var oldValue = oldString[oldPos + i];\n            return oldValue.length > value.length ? oldValue : value;\n          });\n          component.value = diff.join(value);\n        } else {\n          component.value = diff.join(newString.slice(newPos, newPos + component.count));\n        }\n\n        newPos += component.count; // Common case\n\n        if (!component.added) {\n          oldPos += component.count;\n        }\n      } else {\n        component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n        oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n        // The diffing algorithm is tied to add then remove output and this is the simplest\n        // route to get the desired output with minimal overhead.\n\n        if (componentPos && components[componentPos - 1].added) {\n          var tmp = components[componentPos - 1];\n          components[componentPos - 1] = components[componentPos];\n          components[componentPos] = tmp;\n        }\n      }\n    } // Special case handle for when one terminal is ignored (i.e. whitespace).\n    // For this case we merge the terminal into the prior string and drop the change.\n    // This is only available for string mode.\n\n\n    var lastComponent = components[componentLen - 1];\n\n    if (componentLen > 1 && typeof lastComponent.value === 'string' && (lastComponent.added || lastComponent.removed) && diff.equals('', lastComponent.value)) {\n      components[componentLen - 2].value += lastComponent.value;\n      components.pop();\n    }\n\n    return components;\n  }\n\n  function clonePath(path) {\n    return {\n      newPos: path.newPos,\n      components: path.components.slice(0)\n    };\n  }\n\n  var characterDiff = new Diff();\n  function diffChars(oldStr, newStr, options) {\n    return characterDiff.diff(oldStr, newStr, options);\n  }\n\n  function generateOptions(options, defaults) {\n    if (typeof options === 'function') {\n      defaults.callback = options;\n    } else if (options) {\n      for (var name in options) {\n        /* istanbul ignore else */\n        if (options.hasOwnProperty(name)) {\n          defaults[name] = options[name];\n        }\n      }\n    }\n\n    return defaults;\n  }\n\n  //\n  // Ranges and exceptions:\n  // Latin-1 Supplement, 0080\u201300FF\n  //  - U+00D7  \u00d7 Multiplication sign\n  //  - U+00F7  \u00f7 Division sign\n  // Latin Extended-A, 0100\u2013017F\n  // Latin Extended-B, 0180\u2013024F\n  // IPA Extensions, 0250\u201302AF\n  // Spacing Modifier Letters, 02B0\u201302FF\n  //  - U+02C7  \u02c7 &#711;  Caron\n  //  - U+02D8  \u02d8 &#728;  Breve\n  //  - U+02D9  \u02d9 &#729;  Dot Above\n  //  - U+02DA  \u02da &#730;  Ring Above\n  //  - U+02DB  \u02db &#731;  Ogonek\n  //  - U+02DC  \u02dc &#732;  Small Tilde\n  //  - U+02DD  \u02dd &#733;  Double Acute Accent\n  // Latin Extended Additional, 1E00\u20131EFF\n\n  var extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\n  var reWhitespace = /\\S/;\n  var wordDiff = new Diff();\n\n  wordDiff.equals = function (left, right) {\n    if (this.options.ignoreCase) {\n      left = left.toLowerCase();\n      right = right.toLowerCase();\n    }\n\n    return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n  };\n\n  wordDiff.tokenize = function (value) {\n    // All whitespace symbols except newline group into one token, each newline - in separate token\n    var tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n    for (var i = 0; i < tokens.length - 1; i++) {\n      // If we have an empty string in the next field and we have only word chars before and after, merge\n      if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n        tokens[i] += tokens[i + 2];\n        tokens.splice(i + 1, 2);\n        i--;\n      }\n    }\n\n    return tokens;\n  };\n\n  function diffWords(oldStr, newStr, options) {\n    options = generateOptions(options, {\n      ignoreWhitespace: true\n    });\n    return wordDiff.diff(oldStr, newStr, options);\n  }\n  function diffWordsWithSpace(oldStr, newStr, options) {\n    return wordDiff.diff(oldStr, newStr, options);\n  }\n\n  var lineDiff = new Diff();\n\n  lineDiff.tokenize = function (value) {\n    var retLines = [],\n        linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n    if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n      linesAndNewlines.pop();\n    } // Merge the content and line separators into single tokens\n\n\n    for (var i = 0; i < linesAndNewlines.length; i++) {\n      var line = linesAndNewlines[i];\n\n      if (i % 2 && !this.options.newlineIsToken) {\n        retLines[retLines.length - 1] += line;\n      } else {\n        if (this.options.ignoreWhitespace) {\n          line = line.trim();\n        }\n\n        retLines.push(line);\n      }\n    }\n\n    return retLines;\n  };\n\n  function diffLines(oldStr, newStr, callback) {\n    return lineDiff.diff(oldStr, newStr, callback);\n  }\n  function diffTrimmedLines(oldStr, newStr, callback) {\n    var options = generateOptions(callback, {\n      ignoreWhitespace: true\n    });\n    return lineDiff.diff(oldStr, newStr, options);\n  }\n\n  var sentenceDiff = new Diff();\n\n  sentenceDiff.tokenize = function (value) {\n    return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n  };\n\n  function diffSentences(oldStr, newStr, callback) {\n    return sentenceDiff.diff(oldStr, newStr, callback);\n  }\n\n  var cssDiff = new Diff();\n\n  cssDiff.tokenize = function (value) {\n    return value.split(/([{}:;,]|\\s+)/);\n  };\n\n  function diffCss(oldStr, newStr, callback) {\n    return cssDiff.diff(oldStr, newStr, callback);\n  }\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var objectPrototypeToString = Object.prototype.toString;\n  var jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n  // dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\n  jsonDiff.useLongestToken = true;\n  jsonDiff.tokenize = lineDiff.tokenize;\n\n  jsonDiff.castInput = function (value) {\n    var _this$options = this.options,\n        undefinedReplacement = _this$options.undefinedReplacement,\n        _this$options$stringi = _this$options.stringifyReplacer,\n        stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n      return typeof v === 'undefined' ? undefinedReplacement : v;\n    } : _this$options$stringi;\n    return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n  };\n\n  jsonDiff.equals = function (left, right) {\n    return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n  };\n\n  function diffJson(oldObj, newObj, options) {\n    return jsonDiff.diff(oldObj, newObj, options);\n  } // This function handles the presence of circular references by bailing out when encountering an\n  // object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\n  function canonicalize(obj, stack, replacementStack, replacer, key) {\n    stack = stack || [];\n    replacementStack = replacementStack || [];\n\n    if (replacer) {\n      obj = replacer(key, obj);\n    }\n\n    var i;\n\n    for (i = 0; i < stack.length; i += 1) {\n      if (stack[i] === obj) {\n        return replacementStack[i];\n      }\n    }\n\n    var canonicalizedObj;\n\n    if ('[object Array]' === objectPrototypeToString.call(obj)) {\n      stack.push(obj);\n      canonicalizedObj = new Array(obj.length);\n      replacementStack.push(canonicalizedObj);\n\n      for (i = 0; i < obj.length; i += 1) {\n        canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n      }\n\n      stack.pop();\n      replacementStack.pop();\n      return canonicalizedObj;\n    }\n\n    if (obj && obj.toJSON) {\n      obj = obj.toJSON();\n    }\n\n    if (_typeof(obj) === 'object' && obj !== null) {\n      stack.push(obj);\n      canonicalizedObj = {};\n      replacementStack.push(canonicalizedObj);\n\n      var sortedKeys = [],\n          _key;\n\n      for (_key in obj) {\n        /* istanbul ignore else */\n        if (obj.hasOwnProperty(_key)) {\n          sortedKeys.push(_key);\n        }\n      }\n\n      sortedKeys.sort();\n\n      for (i = 0; i < sortedKeys.length; i += 1) {\n        _key = sortedKeys[i];\n        canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n      }\n\n      stack.pop();\n      replacementStack.pop();\n    } else {\n      canonicalizedObj = obj;\n    }\n\n    return canonicalizedObj;\n  }\n\n  var arrayDiff = new Diff();\n\n  arrayDiff.tokenize = function (value) {\n    return value.slice();\n  };\n\n  arrayDiff.join = arrayDiff.removeEmpty = function (value) {\n    return value;\n  };\n\n  function diffArrays(oldArr, newArr, callback) {\n    return arrayDiff.diff(oldArr, newArr, callback);\n  }\n\n  function parsePatch(uniDiff) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n        delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n        list = [],\n        i = 0;\n\n    function parseIndex() {\n      var index = {};\n      list.push(index); // Parse diff metadata\n\n      while (i < diffstr.length) {\n        var line = diffstr[i]; // File header found, end parsing diff metadata\n\n        if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n          break;\n        } // Diff index\n\n\n        var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n        if (header) {\n          index.index = header[1];\n        }\n\n        i++;\n      } // Parse file headers if they are defined. Unified diff requires them, but\n      // there's no technical issues to have an isolated hunk without file header\n\n\n      parseFileHeader(index);\n      parseFileHeader(index); // Parse hunks\n\n      index.hunks = [];\n\n      while (i < diffstr.length) {\n        var _line = diffstr[i];\n\n        if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n          break;\n        } else if (/^@@/.test(_line)) {\n          index.hunks.push(parseHunk());\n        } else if (_line && options.strict) {\n          // Ignore unexpected content unless in strict mode\n          throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n        } else {\n          i++;\n        }\n      }\n    } // Parses the --- and +++ headers, if none are found, no lines\n    // are consumed.\n\n\n    function parseFileHeader(index) {\n      var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n      if (fileHeader) {\n        var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n        var data = fileHeader[2].split('\\t', 2);\n        var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n        if (/^\".*\"$/.test(fileName)) {\n          fileName = fileName.substr(1, fileName.length - 2);\n        }\n\n        index[keyPrefix + 'FileName'] = fileName;\n        index[keyPrefix + 'Header'] = (data[1] || '').trim();\n        i++;\n      }\n    } // Parses a hunk\n    // This assumes that we are at the start of a hunk.\n\n\n    function parseHunk() {\n      var chunkHeaderIndex = i,\n          chunkHeaderLine = diffstr[i++],\n          chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n      var hunk = {\n        oldStart: +chunkHeader[1],\n        oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n        newStart: +chunkHeader[3],\n        newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n        lines: [],\n        linedelimiters: []\n      }; // Unified Diff Format quirk: If the chunk size is 0,\n      // the first number is one lower than one would expect.\n      // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n      if (hunk.oldLines === 0) {\n        hunk.oldStart += 1;\n      }\n\n      if (hunk.newLines === 0) {\n        hunk.newStart += 1;\n      }\n\n      var addCount = 0,\n          removeCount = 0;\n\n      for (; i < diffstr.length; i++) {\n        // Lines starting with '---' could be mistaken for the \"remove line\" operation\n        // But they could be the header for the next file. Therefore prune such cases out.\n        if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n          break;\n        }\n\n        var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n        if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n          hunk.lines.push(diffstr[i]);\n          hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n          if (operation === '+') {\n            addCount++;\n          } else if (operation === '-') {\n            removeCount++;\n          } else if (operation === ' ') {\n            addCount++;\n            removeCount++;\n          }\n        } else {\n          break;\n        }\n      } // Handle the empty block count case\n\n\n      if (!addCount && hunk.newLines === 1) {\n        hunk.newLines = 0;\n      }\n\n      if (!removeCount && hunk.oldLines === 1) {\n        hunk.oldLines = 0;\n      } // Perform optional sanity checking\n\n\n      if (options.strict) {\n        if (addCount !== hunk.newLines) {\n          throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n        }\n\n        if (removeCount !== hunk.oldLines) {\n          throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n        }\n      }\n\n      return hunk;\n    }\n\n    while (i < diffstr.length) {\n      parseIndex();\n    }\n\n    return list;\n  }\n\n  // Iterator that traverses in the range of [min, max], stepping\n  // by distance from a given start position. I.e. for [0, 4], with\n  // start of 2, this will iterate 2, 3, 1, 4, 0.\n  function distanceIterator (start, minLine, maxLine) {\n    var wantForward = true,\n        backwardExhausted = false,\n        forwardExhausted = false,\n        localOffset = 1;\n    return function iterator() {\n      if (wantForward && !forwardExhausted) {\n        if (backwardExhausted) {\n          localOffset++;\n        } else {\n          wantForward = false;\n        } // Check if trying to fit beyond text length, and if not, check it fits\n        // after offset location (or desired location on first iteration)\n\n\n        if (start + localOffset <= maxLine) {\n          return localOffset;\n        }\n\n        forwardExhausted = true;\n      }\n\n      if (!backwardExhausted) {\n        if (!forwardExhausted) {\n          wantForward = true;\n        } // Check if trying to fit before text beginning, and if not, check it fits\n        // before offset location\n\n\n        if (minLine <= start - localOffset) {\n          return -localOffset++;\n        }\n\n        backwardExhausted = true;\n        return iterator();\n      } // We tried to fit hunk before text beginning and beyond text length, then\n      // hunk can't fit on the text. Return undefined\n\n    };\n  }\n\n  function applyPatch(source, uniDiff) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (typeof uniDiff === 'string') {\n      uniDiff = parsePatch(uniDiff);\n    }\n\n    if (Array.isArray(uniDiff)) {\n      if (uniDiff.length > 1) {\n        throw new Error('applyPatch only works with a single input.');\n      }\n\n      uniDiff = uniDiff[0];\n    } // Apply the diff to the input\n\n\n    var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n        delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n        hunks = uniDiff.hunks,\n        compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n      return line === patchContent;\n    },\n        errorCount = 0,\n        fuzzFactor = options.fuzzFactor || 0,\n        minLine = 0,\n        offset = 0,\n        removeEOFNL,\n        addEOFNL;\n    /**\n     * Checks if the hunk exactly fits on the provided location\n     */\n\n\n    function hunkFits(hunk, toPos) {\n      for (var j = 0; j < hunk.lines.length; j++) {\n        var line = hunk.lines[j],\n            operation = line.length > 0 ? line[0] : ' ',\n            content = line.length > 0 ? line.substr(1) : line;\n\n        if (operation === ' ' || operation === '-') {\n          // Context sanity check\n          if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n            errorCount++;\n\n            if (errorCount > fuzzFactor) {\n              return false;\n            }\n          }\n\n          toPos++;\n        }\n      }\n\n      return true;\n    } // Search best fit offsets for each hunk based on the previous ones\n\n\n    for (var i = 0; i < hunks.length; i++) {\n      var hunk = hunks[i],\n          maxLine = lines.length - hunk.oldLines,\n          localOffset = 0,\n          toPos = offset + hunk.oldStart - 1;\n      var iterator = distanceIterator(toPos, minLine, maxLine);\n\n      for (; localOffset !== undefined; localOffset = iterator()) {\n        if (hunkFits(hunk, toPos + localOffset)) {\n          hunk.offset = offset += localOffset;\n          break;\n        }\n      }\n\n      if (localOffset === undefined) {\n        return false;\n      } // Set lower text limit to end of the current hunk, so next ones don't try\n      // to fit over already patched text\n\n\n      minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n    } // Apply patch hunks\n\n\n    var diffOffset = 0;\n\n    for (var _i = 0; _i < hunks.length; _i++) {\n      var _hunk = hunks[_i],\n          _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n      diffOffset += _hunk.newLines - _hunk.oldLines;\n\n      for (var j = 0; j < _hunk.lines.length; j++) {\n        var line = _hunk.lines[j],\n            operation = line.length > 0 ? line[0] : ' ',\n            content = line.length > 0 ? line.substr(1) : line,\n            delimiter = _hunk.linedelimiters[j];\n\n        if (operation === ' ') {\n          _toPos++;\n        } else if (operation === '-') {\n          lines.splice(_toPos, 1);\n          delimiters.splice(_toPos, 1);\n          /* istanbul ignore else */\n        } else if (operation === '+') {\n          lines.splice(_toPos, 0, content);\n          delimiters.splice(_toPos, 0, delimiter);\n          _toPos++;\n        } else if (operation === '\\\\') {\n          var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n          if (previousOperation === '+') {\n            removeEOFNL = true;\n          } else if (previousOperation === '-') {\n            addEOFNL = true;\n          }\n        }\n      }\n    } // Handle EOFNL insertion/removal\n\n\n    if (removeEOFNL) {\n      while (!lines[lines.length - 1]) {\n        lines.pop();\n        delimiters.pop();\n      }\n    } else if (addEOFNL) {\n      lines.push('');\n      delimiters.push('\\n');\n    }\n\n    for (var _k = 0; _k < lines.length - 1; _k++) {\n      lines[_k] = lines[_k] + delimiters[_k];\n    }\n\n    return lines.join('');\n  } // Wrapper that supports multiple file patches via callbacks.\n\n  function applyPatches(uniDiff, options) {\n    if (typeof uniDiff === 'string') {\n      uniDiff = parsePatch(uniDiff);\n    }\n\n    var currentIndex = 0;\n\n    function processIndex() {\n      var index = uniDiff[currentIndex++];\n\n      if (!index) {\n        return options.complete();\n      }\n\n      options.loadFile(index, function (err, data) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        var updatedContent = applyPatch(data, index, options);\n        options.patched(index, updatedContent, function (err) {\n          if (err) {\n            return options.complete(err);\n          }\n\n          processIndex();\n        });\n      });\n    }\n\n    processIndex();\n  }\n\n  function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (typeof options.context === 'undefined') {\n      options.context = 4;\n    }\n\n    var diff = diffLines(oldStr, newStr, options);\n    diff.push({\n      value: '',\n      lines: []\n    }); // Append an empty value to make cleanup easier\n\n    function contextLines(lines) {\n      return lines.map(function (entry) {\n        return ' ' + entry;\n      });\n    }\n\n    var hunks = [];\n    var oldRangeStart = 0,\n        newRangeStart = 0,\n        curRange = [],\n        oldLine = 1,\n        newLine = 1;\n\n    var _loop = function _loop(i) {\n      var current = diff[i],\n          lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n      current.lines = lines;\n\n      if (current.added || current.removed) {\n        var _curRange;\n\n        // If we have previous context, start with that\n        if (!oldRangeStart) {\n          var prev = diff[i - 1];\n          oldRangeStart = oldLine;\n          newRangeStart = newLine;\n\n          if (prev) {\n            curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n            oldRangeStart -= curRange.length;\n            newRangeStart -= curRange.length;\n          }\n        } // Output our changes\n\n\n        (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n          return (current.added ? '+' : '-') + entry;\n        }))); // Track the updated file position\n\n\n        if (current.added) {\n          newLine += lines.length;\n        } else {\n          oldLine += lines.length;\n        }\n      } else {\n        // Identical context lines. Track line changes\n        if (oldRangeStart) {\n          // Close out any changes that have been output (or join overlapping)\n          if (lines.length <= options.context * 2 && i < diff.length - 2) {\n            var _curRange2;\n\n            // Overlapping\n            (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n          } else {\n            var _curRange3;\n\n            // end the range and output\n            var contextSize = Math.min(lines.length, options.context);\n\n            (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n            var hunk = {\n              oldStart: oldRangeStart,\n              oldLines: oldLine - oldRangeStart + contextSize,\n              newStart: newRangeStart,\n              newLines: newLine - newRangeStart + contextSize,\n              lines: curRange\n            };\n\n            if (i >= diff.length - 2 && lines.length <= options.context) {\n              // EOF is inside this hunk\n              var oldEOFNewline = /\\n$/.test(oldStr);\n              var newEOFNewline = /\\n$/.test(newStr);\n              var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n              if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n                // special case: old has no eol and no trailing context; no-nl can end up before adds\n                // however, if the old file is empty, do not output the no-nl line\n                curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n              }\n\n              if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n                curRange.push('\\\\ No newline at end of file');\n              }\n            }\n\n            hunks.push(hunk);\n            oldRangeStart = 0;\n            newRangeStart = 0;\n            curRange = [];\n          }\n        }\n\n        oldLine += lines.length;\n        newLine += lines.length;\n      }\n    };\n\n    for (var i = 0; i < diff.length; i++) {\n      _loop(i);\n    }\n\n    return {\n      oldFileName: oldFileName,\n      newFileName: newFileName,\n      oldHeader: oldHeader,\n      newHeader: newHeader,\n      hunks: hunks\n    };\n  }\n  function formatPatch(diff) {\n    var ret = [];\n\n    if (diff.oldFileName == diff.newFileName) {\n      ret.push('Index: ' + diff.oldFileName);\n    }\n\n    ret.push('===================================================================');\n    ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n    ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n    for (var i = 0; i < diff.hunks.length; i++) {\n      var hunk = diff.hunks[i]; // Unified Diff Format quirk: If the chunk size is 0,\n      // the first number is one lower than one would expect.\n      // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n      if (hunk.oldLines === 0) {\n        hunk.oldStart -= 1;\n      }\n\n      if (hunk.newLines === 0) {\n        hunk.newStart -= 1;\n      }\n\n      ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n      ret.push.apply(ret, hunk.lines);\n    }\n\n    return ret.join('\\n') + '\\n';\n  }\n  function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n    return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n  }\n  function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n    return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n  }\n\n  function arrayEqual(a, b) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return arrayStartsWith(a, b);\n  }\n  function arrayStartsWith(array, start) {\n    if (start.length > array.length) {\n      return false;\n    }\n\n    for (var i = 0; i < start.length; i++) {\n      if (start[i] !== array[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function calcLineCount(hunk) {\n    var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n        oldLines = _calcOldNewLineCount.oldLines,\n        newLines = _calcOldNewLineCount.newLines;\n\n    if (oldLines !== undefined) {\n      hunk.oldLines = oldLines;\n    } else {\n      delete hunk.oldLines;\n    }\n\n    if (newLines !== undefined) {\n      hunk.newLines = newLines;\n    } else {\n      delete hunk.newLines;\n    }\n  }\n  function merge(mine, theirs, base) {\n    mine = loadPatch(mine, base);\n    theirs = loadPatch(theirs, base);\n    var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n    // Leaving sanity checks on this to the API consumer that may know more about the\n    // meaning in their own context.\n\n    if (mine.index || theirs.index) {\n      ret.index = mine.index || theirs.index;\n    }\n\n    if (mine.newFileName || theirs.newFileName) {\n      if (!fileNameChanged(mine)) {\n        // No header or no change in ours, use theirs (and ours if theirs does not exist)\n        ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n        ret.newFileName = theirs.newFileName || mine.newFileName;\n        ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n        ret.newHeader = theirs.newHeader || mine.newHeader;\n      } else if (!fileNameChanged(theirs)) {\n        // No header or no change in theirs, use ours\n        ret.oldFileName = mine.oldFileName;\n        ret.newFileName = mine.newFileName;\n        ret.oldHeader = mine.oldHeader;\n        ret.newHeader = mine.newHeader;\n      } else {\n        // Both changed... figure it out\n        ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n        ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n        ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n        ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n      }\n    }\n\n    ret.hunks = [];\n    var mineIndex = 0,\n        theirsIndex = 0,\n        mineOffset = 0,\n        theirsOffset = 0;\n\n    while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n      var mineCurrent = mine.hunks[mineIndex] || {\n        oldStart: Infinity\n      },\n          theirsCurrent = theirs.hunks[theirsIndex] || {\n        oldStart: Infinity\n      };\n\n      if (hunkBefore(mineCurrent, theirsCurrent)) {\n        // This patch does not overlap with any of the others, yay.\n        ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n        mineIndex++;\n        theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n      } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n        // This patch does not overlap with any of the others, yay.\n        ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n        theirsIndex++;\n        mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n      } else {\n        // Overlap, merge as best we can\n        var mergedHunk = {\n          oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n          oldLines: 0,\n          newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n          newLines: 0,\n          lines: []\n        };\n        mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n        theirsIndex++;\n        mineIndex++;\n        ret.hunks.push(mergedHunk);\n      }\n    }\n\n    return ret;\n  }\n\n  function loadPatch(param, base) {\n    if (typeof param === 'string') {\n      if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n        return parsePatch(param)[0];\n      }\n\n      if (!base) {\n        throw new Error('Must provide a base reference or pass in a patch');\n      }\n\n      return structuredPatch(undefined, undefined, base, param);\n    }\n\n    return param;\n  }\n\n  function fileNameChanged(patch) {\n    return patch.newFileName && patch.newFileName !== patch.oldFileName;\n  }\n\n  function selectField(index, mine, theirs) {\n    if (mine === theirs) {\n      return mine;\n    } else {\n      index.conflict = true;\n      return {\n        mine: mine,\n        theirs: theirs\n      };\n    }\n  }\n\n  function hunkBefore(test, check) {\n    return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n  }\n\n  function cloneHunk(hunk, offset) {\n    return {\n      oldStart: hunk.oldStart,\n      oldLines: hunk.oldLines,\n      newStart: hunk.newStart + offset,\n      newLines: hunk.newLines,\n      lines: hunk.lines\n    };\n  }\n\n  function mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n    // This will generally result in a conflicted hunk, but there are cases where the context\n    // is the only overlap where we can successfully merge the content here.\n    var mine = {\n      offset: mineOffset,\n      lines: mineLines,\n      index: 0\n    },\n        their = {\n      offset: theirOffset,\n      lines: theirLines,\n      index: 0\n    }; // Handle any leading content\n\n    insertLeading(hunk, mine, their);\n    insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n    while (mine.index < mine.lines.length && their.index < their.lines.length) {\n      var mineCurrent = mine.lines[mine.index],\n          theirCurrent = their.lines[their.index];\n\n      if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n        // Both modified ...\n        mutualChange(hunk, mine, their);\n      } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n        var _hunk$lines;\n\n        // Mine inserted\n        (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n      } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n        var _hunk$lines2;\n\n        // Theirs inserted\n        (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n      } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n        // Mine removed or edited\n        removal(hunk, mine, their);\n      } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n        // Their removed or edited\n        removal(hunk, their, mine, true);\n      } else if (mineCurrent === theirCurrent) {\n        // Context identity\n        hunk.lines.push(mineCurrent);\n        mine.index++;\n        their.index++;\n      } else {\n        // Context mismatch\n        conflict(hunk, collectChange(mine), collectChange(their));\n      }\n    } // Now push anything that may be remaining\n\n\n    insertTrailing(hunk, mine);\n    insertTrailing(hunk, their);\n    calcLineCount(hunk);\n  }\n\n  function mutualChange(hunk, mine, their) {\n    var myChanges = collectChange(mine),\n        theirChanges = collectChange(their);\n\n    if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n      // Special case for remove changes that are supersets of one another\n      if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n        var _hunk$lines3;\n\n        (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n        return;\n      } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n        var _hunk$lines4;\n\n        (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n        return;\n      }\n    } else if (arrayEqual(myChanges, theirChanges)) {\n      var _hunk$lines5;\n\n      (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n      return;\n    }\n\n    conflict(hunk, myChanges, theirChanges);\n  }\n\n  function removal(hunk, mine, their, swap) {\n    var myChanges = collectChange(mine),\n        theirChanges = collectContext(their, myChanges);\n\n    if (theirChanges.merged) {\n      var _hunk$lines6;\n\n      (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n    } else {\n      conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n    }\n  }\n\n  function conflict(hunk, mine, their) {\n    hunk.conflict = true;\n    hunk.lines.push({\n      conflict: true,\n      mine: mine,\n      theirs: their\n    });\n  }\n\n  function insertLeading(hunk, insert, their) {\n    while (insert.offset < their.offset && insert.index < insert.lines.length) {\n      var line = insert.lines[insert.index++];\n      hunk.lines.push(line);\n      insert.offset++;\n    }\n  }\n\n  function insertTrailing(hunk, insert) {\n    while (insert.index < insert.lines.length) {\n      var line = insert.lines[insert.index++];\n      hunk.lines.push(line);\n    }\n  }\n\n  function collectChange(state) {\n    var ret = [],\n        operation = state.lines[state.index][0];\n\n    while (state.index < state.lines.length) {\n      var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n      if (operation === '-' && line[0] === '+') {\n        operation = '+';\n      }\n\n      if (operation === line[0]) {\n        ret.push(line);\n        state.index++;\n      } else {\n        break;\n      }\n    }\n\n    return ret;\n  }\n\n  function collectContext(state, matchChanges) {\n    var changes = [],\n        merged = [],\n        matchIndex = 0,\n        contextChanges = false,\n        conflicted = false;\n\n    while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n      var change = state.lines[state.index],\n          match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n      if (match[0] === '+') {\n        break;\n      }\n\n      contextChanges = contextChanges || change[0] !== ' ';\n      merged.push(match);\n      matchIndex++; // Consume any additions in the other block as a conflict to attempt\n      // to pull in the remaining context after this\n\n      if (change[0] === '+') {\n        conflicted = true;\n\n        while (change[0] === '+') {\n          changes.push(change);\n          change = state.lines[++state.index];\n        }\n      }\n\n      if (match.substr(1) === change.substr(1)) {\n        changes.push(change);\n        state.index++;\n      } else {\n        conflicted = true;\n      }\n    }\n\n    if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n      conflicted = true;\n    }\n\n    if (conflicted) {\n      return changes;\n    }\n\n    while (matchIndex < matchChanges.length) {\n      merged.push(matchChanges[matchIndex++]);\n    }\n\n    return {\n      merged: merged,\n      changes: changes\n    };\n  }\n\n  function allRemoves(changes) {\n    return changes.reduce(function (prev, change) {\n      return prev && change[0] === '-';\n    }, true);\n  }\n\n  function skipRemoveSuperset(state, removeChanges, delta) {\n    for (var i = 0; i < delta; i++) {\n      var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n      if (state.lines[state.index + i] !== ' ' + changeContent) {\n        return false;\n      }\n    }\n\n    state.index += delta;\n    return true;\n  }\n\n  function calcOldNewLineCount(lines) {\n    var oldLines = 0;\n    var newLines = 0;\n    lines.forEach(function (line) {\n      if (typeof line !== 'string') {\n        var myCount = calcOldNewLineCount(line.mine);\n        var theirCount = calcOldNewLineCount(line.theirs);\n\n        if (oldLines !== undefined) {\n          if (myCount.oldLines === theirCount.oldLines) {\n            oldLines += myCount.oldLines;\n          } else {\n            oldLines = undefined;\n          }\n        }\n\n        if (newLines !== undefined) {\n          if (myCount.newLines === theirCount.newLines) {\n            newLines += myCount.newLines;\n          } else {\n            newLines = undefined;\n          }\n        }\n      } else {\n        if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n          newLines++;\n        }\n\n        if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n          oldLines++;\n        }\n      }\n    });\n    return {\n      oldLines: oldLines,\n      newLines: newLines\n    };\n  }\n\n  // See: http://code.google.com/p/google-diff-match-patch/wiki/API\n  function convertChangesToDMP(changes) {\n    var ret = [],\n        change,\n        operation;\n\n    for (var i = 0; i < changes.length; i++) {\n      change = changes[i];\n\n      if (change.added) {\n        operation = 1;\n      } else if (change.removed) {\n        operation = -1;\n      } else {\n        operation = 0;\n      }\n\n      ret.push([operation, change.value]);\n    }\n\n    return ret;\n  }\n\n  function convertChangesToXML(changes) {\n    var ret = [];\n\n    for (var i = 0; i < changes.length; i++) {\n      var change = changes[i];\n\n      if (change.added) {\n        ret.push('<ins>');\n      } else if (change.removed) {\n        ret.push('<del>');\n      }\n\n      ret.push(escapeHTML(change.value));\n\n      if (change.added) {\n        ret.push('</ins>');\n      } else if (change.removed) {\n        ret.push('</del>');\n      }\n    }\n\n    return ret.join('');\n  }\n\n  function escapeHTML(s) {\n    var n = s;\n    n = n.replace(/&/g, '&amp;');\n    n = n.replace(/</g, '&lt;');\n    n = n.replace(/>/g, '&gt;');\n    n = n.replace(/\"/g, '&quot;');\n    return n;\n  }\n\n  exports.Diff = Diff;\n  exports.applyPatch = applyPatch;\n  exports.applyPatches = applyPatches;\n  exports.canonicalize = canonicalize;\n  exports.convertChangesToDMP = convertChangesToDMP;\n  exports.convertChangesToXML = convertChangesToXML;\n  exports.createPatch = createPatch;\n  exports.createTwoFilesPatch = createTwoFilesPatch;\n  exports.diffArrays = diffArrays;\n  exports.diffChars = diffChars;\n  exports.diffCss = diffCss;\n  exports.diffJson = diffJson;\n  exports.diffLines = diffLines;\n  exports.diffSentences = diffSentences;\n  exports.diffTrimmedLines = diffTrimmedLines;\n  exports.diffWords = diffWords;\n  exports.diffWordsWithSpace = diffWordsWithSpace;\n  exports.merge = merge;\n  exports.parsePatch = parsePatch;\n  exports.structuredPatch = structuredPatch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","self","Diff","buildValues","diff","components","newString","oldString","useLongestToken","componentPos","componentLen","length","newPos","oldPos","component","removed","value","join","slice","count","added","tmp","map","i","oldValue","lastComponent","equals","pop","generateOptions","options","defaults","callback","name","hasOwnProperty","diffLines","oldStr","newStr","lineDiff","_typeof","obj","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","Object","iter","from","o","minLen","n","toString","call","test","TypeError","len","arr2","canonicalize","stack","replacementStack","replacer","key","objectPrototypeToString","push","canonicalizedObj","toJSON","sortedKeys","_key","sort","parsePatch","uniDiff","parseIndex","index","list","diffstr","line","header","exec","parseFileHeader","hunks","_line","chunkHeaderIndex","chunkHeader","chunkHeaderLine","split","hunk","oldStart","oldLines","newStart","newLines","lines","linedelimiters","addCount","removeCount","indexOf","operation","delimiters","strict","Error","JSON","stringify","fileHeader","keyPrefix","data","fileName","replace","substr","trim","arguments","undefined","match","distanceIterator","start","minLine","maxLine","wantForward","backwardExhausted","forwardExhausted","localOffset","applyPatch","source","hunkFits","toPos","j","content","compareLine","errorCount","fuzzFactor","lineNumber","patchContent","offset","removeEOFNL","addEOFNL","_i","diffOffset","_hunk","_toPos","delimiter","splice","previousOperation","_k","structuredPatch","oldFileName","newFileName","oldHeader","newHeader","contextLines","entry","context","oldRangeStart","newRangeStart","curRange","oldLine","newLine","_loop","current","_curRange","prev","apply","_curRange2","_curRange3","contextSize","Math","min","oldEOFNewline","newEOFNewline","noNlBeforeAdds","createTwoFilesPatch","ret","arrayStartsWith","array","loadPatch","param","base","selectField","mine","theirs","conflict","cloneHunk","removal","their","swap","myChanges","collectChange","changes","merged","matchIndex","contextChanges","conflicted","change","theirChanges","_hunk$lines6","insertLeading","insert","insertTrailing","state","allRemoves","reduce","skipRemoveSuperset","removeChanges","delta","changeContent","calcOldNewLineCount","forEach","myCount","theirCount","done","setTimeout","execEditLength","diagonalPath","editLength","addPath","bestPath","removePath","_oldPos","canAdd","newLen","canRemove","oldLen","basePath","pushComponent","extractCommon","castInput","removeEmpty","tokenize","maxEditLength","last","commonCount","left","right","comparator","ignoreCase","toLowerCase","chars","characterDiff","extendedWordChars","reWhitespace","wordDiff","wordDiff.equals","ignoreWhitespace","wordDiff.tokenize","tokens","lineDiff.tokenize","retLines","linesAndNewlines","newlineIsToken","sentenceDiff","sentenceDiff.tokenize","cssDiff","cssDiff.tokenize","jsonDiff","jsonDiff.castInput","_this$options","undefinedReplacement","_this$options$stringi","stringifyReplacer","k","v","jsonDiff.equals","arrayDiff","arrayDiff.tokenize","arrayDiff.removeEmpty","applyPatches","processIndex","currentIndex","complete","loadFile","err","updatedContent","patched","convertChangesToDMP","convertChangesToXML","createPatch","diffArrays","oldArr","newArr","diffChars","diffCss","diffJson","oldObj","newObj","diffSentences","diffTrimmedLines","diffWords","diffWordsWithSpace","merge","mineIndex","theirsIndex","mineOffset","theirsOffset","mineCurrent","Infinity","theirsCurrent","mergedHunk","theirCurrent","_hunk$lines","_hunk$lines2","_hunk$lines5","_hunk$lines3","_hunk$lines4","_calcOldNewLineCount","defineProperty"]
}
