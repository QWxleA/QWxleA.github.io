{
"version":3,
"file":"module$node_modules$fs_extra$lib$ensure$file.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGnGC,MAAAA,CAAIH,OAAA,CAAQ,wCAAR,CAAwBI,CAAAA,YAClC,OAAMC,KAAOL,OAAA,CAAQ,2CAAR,CAAb,CACMM,GAAKN,OAAA,CAAQ,6CAAR,CADX,CAEMO,MAAQP,OAAA,CAAQ,+CAAR,CA4DdC,OAAOC,CAAAA,OAAP,CAAiB,CACfM,WAAYL,MAAA,CA3DdK,QAAoB,CAACC,IAAD,CAAOC,QAAP,CAAiB,CACnCC,QAASA,SAAS,EAAG,CACnBL,EAAGM,CAAAA,SAAH,CAAaH,IAAb,CAAmB,EAAnB,CAAuBI,GAAA,EAAO,CAC5B,GAAIA,GAAJ,CAAS,MAAOH,SAAA,CAASG,GAAT,CAChBH,SAAA,EAF4B,CAA9B,CADmB;AAOrBJ,EAAGQ,CAAAA,IAAH,CAAQL,IAAR,CAAc,CAACI,YAAD,CAAME,cAAN,CAAA,EAAgB,CAC5B,GAAI,CAACF,YAAL,EAAYE,cAAMC,CAAAA,MAAN,EAAZ,CAA4B,MAAON,SAAA,EACnC,OAAMO,IAAMZ,IAAKa,CAAAA,OAAL,CAAaT,IAAb,CACZH,GAAGQ,CAAAA,IAAH,CAAQG,GAAR,CAAa,CAACJ,YAAD,CAAME,KAAN,CAAA,EAAgB,CAC3B,GAAIF,YAAJ,CAEE,MAAiB,QAAjB,GAAIA,YAAIM,CAAAA,IAAR,CACSZ,KAAMa,CAAAA,MAAN,CAAaH,GAAb,CAAkBJ,GAAA,EAAO,CAC9B,GAAIA,GAAJ,CAAS,MAAOH,SAAA,CAASG,GAAT,CAChBF,SAAA,EAF8B,CAAzB,CADT,CAMOD,QAAA,CAASG,YAAT,CAGLE,MAAMM,CAAAA,WAAN,EAAJ,CAAyBV,QAAA,EAAzB,CAIEL,EAAGgB,CAAAA,OAAH,CAAWL,GAAX,CAAgBJ,GAAA,EAAO,CACrB,GAAIA,GAAJ,CAAS,MAAOH,SAAA,CAASG,GAAT,CADK,CAAvB,CAhByB,CAA7B,CAH4B,CAA9B,CARmC,CA2DvB,CADG,CAEfU,eAzBFA,QAAwB,CAACd,IAAD,CAAO,CAE7B,GAAI,CACF,IAAAM,MAAQT,EAAGkB,CAAAA,QAAH,CAAYf,IAAZ,CADN,CAEF,KAAM,EACR,GAAIM,CAAAA,KAAJ,EAAa,CAAAA,KAAMC,CAAAA,MAAN,EAAb,CAAA,CAEMC,KAAAA,CAAMZ,IAAKa,CAAAA,OAAL,CAAaT,IAAb,CACZ;GAAI,CACGH,EAAGkB,CAAAA,QAAH,CAAYP,KAAZ,CAAiBI,CAAAA,WAAjB,EAAL,EAGEf,EAAGmB,CAAAA,WAAH,CAAeR,KAAf,CAJA,CAMF,MAAOJ,GAAP,CAAY,CAEZ,GAAIA,GAAJ,EAAwB,QAAxB,GAAWA,GAAIM,CAAAA,IAAf,CAAkCZ,KAAMmB,CAAAA,UAAN,CAAiBT,KAAjB,CAAlC,KACK,MAAMJ,IAAN,CAHO,CAMdP,EAAGqB,CAAAA,aAAH,CAAiBlB,IAAjB,CAAuB,EAAvB,CAfA,CAL6B,CAuBd,CAlEwF;",
"sources":["node_modules/fs-extra/lib/ensure/file.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fs_extra$lib$ensure$file\"] = function(global,require,module,exports) {\n'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\n\nfunction createFile (file, callback) {\n  function makeFile () {\n    fs.writeFile(file, '', err => {\n      if (err) return callback(err)\n      callback()\n    })\n  }\n\n  fs.stat(file, (err, stats) => { // eslint-disable-line handle-callback-err\n    if (!err && stats.isFile()) return callback()\n    const dir = path.dirname(file)\n    fs.stat(dir, (err, stats) => {\n      if (err) {\n        // if the directory doesn't exist, make it\n        if (err.code === 'ENOENT') {\n          return mkdir.mkdirs(dir, err => {\n            if (err) return callback(err)\n            makeFile()\n          })\n        }\n        return callback(err)\n      }\n\n      if (stats.isDirectory()) makeFile()\n      else {\n        // parent is not a directory\n        // This is just to cause an internal ENOTDIR error to be thrown\n        fs.readdir(dir, err => {\n          if (err) return callback(err)\n        })\n      }\n    })\n  })\n}\n\nfunction createFileSync (file) {\n  let stats\n  try {\n    stats = fs.statSync(file)\n  } catch {}\n  if (stats && stats.isFile()) return\n\n  const dir = path.dirname(file)\n  try {\n    if (!fs.statSync(dir).isDirectory()) {\n      // parent is not a directory\n      // This is just to cause an internal ENOTDIR error to be thrown\n      fs.readdirSync(dir)\n    }\n  } catch (err) {\n    // If the stat call above failed because the directory doesn't exist, create it\n    if (err && err.code === 'ENOENT') mkdir.mkdirsSync(dir)\n    else throw err\n  }\n\n  fs.writeFileSync(file, '')\n}\n\nmodule.exports = {\n  createFile: u(createFile),\n  createFileSync\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","u","fromCallback","path","fs","mkdir","createFile","file","callback","makeFile","writeFile","err","stat","stats","isFile","dir","dirname","code","mkdirs","isDirectory","readdir","createFileSync","statSync","readdirSync","mkdirsSync","writeFileSync"]
}
