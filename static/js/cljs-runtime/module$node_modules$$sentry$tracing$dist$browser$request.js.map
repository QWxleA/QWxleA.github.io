{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$browser$request.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@sentry/tracing/dist/browser/request.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$browser$request\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"@sentry/utils\");\nvar utils_2 = require(\"../utils\");\nexports.DEFAULT_TRACING_ORIGINS = ['localhost', /^\\//];\nexports.defaultRequestInstrumentationOptions = {\n    traceFetch: true,\n    traceXHR: true,\n    tracingOrigins: exports.DEFAULT_TRACING_ORIGINS,\n};\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    var _a = tslib_1.__assign(tslib_1.__assign({}, exports.defaultRequestInstrumentationOptions), _options), traceFetch = _a.traceFetch, traceXHR = _a.traceXHR, tracingOrigins = _a.tracingOrigins, shouldCreateSpanForRequest = _a.shouldCreateSpanForRequest;\n    // We should cache url -> decision so that we don't have to compute\n    // regexp everytime we create a request.\n    var urlMap = {};\n    var defaultShouldCreateSpan = function (url) {\n        if (urlMap[url]) {\n            return urlMap[url];\n        }\n        var origins = tracingOrigins;\n        urlMap[url] =\n            origins.some(function (origin) { return utils_1.isMatchingPattern(url, origin); }) &&\n                !utils_1.isMatchingPattern(url, 'sentry_key');\n        return urlMap[url];\n    };\n    // We want that our users don't have to re-implement shouldCreateSpanForRequest themselves\n    // That's why we filter out already unwanted Spans from tracingOrigins\n    var shouldCreateSpan = defaultShouldCreateSpan;\n    if (typeof shouldCreateSpanForRequest === 'function') {\n        shouldCreateSpan = function (url) {\n            return defaultShouldCreateSpan(url) && shouldCreateSpanForRequest(url);\n        };\n    }\n    var spans = {};\n    if (traceFetch) {\n        utils_1.addInstrumentationHandler('fetch', function (handlerData) {\n            fetchCallback(handlerData, shouldCreateSpan, spans);\n        });\n    }\n    if (traceXHR) {\n        utils_1.addInstrumentationHandler('xhr', function (handlerData) {\n            xhrCallback(handlerData, shouldCreateSpan, spans);\n        });\n    }\n}\nexports.instrumentOutgoingRequests = instrumentOutgoingRequests;\n/**\n * Create and track fetch request spans\n */\nfunction fetchCallback(handlerData, shouldCreateSpan, spans) {\n    if (!utils_2.hasTracingEnabled() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n        return;\n    }\n    if (handlerData.endTimestamp) {\n        var spanId = handlerData.fetchData.__span;\n        if (!spanId)\n            return;\n        var span = spans[spanId];\n        if (span) {\n            if (handlerData.response) {\n                // TODO (kmclb) remove this once types PR goes through\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                span.setHttpStatus(handlerData.response.status);\n            }\n            else if (handlerData.error) {\n                span.setStatus('internal_error');\n            }\n            span.finish();\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete spans[spanId];\n        }\n        return;\n    }\n    var activeTransaction = utils_2.getActiveTransaction();\n    if (activeTransaction) {\n        var span = activeTransaction.startChild({\n            data: tslib_1.__assign(tslib_1.__assign({}, handlerData.fetchData), { type: 'fetch' }),\n            description: handlerData.fetchData.method + \" \" + handlerData.fetchData.url,\n            op: 'http.client',\n        });\n        handlerData.fetchData.__span = span.spanId;\n        spans[span.spanId] = span;\n        var request = (handlerData.args[0] = handlerData.args[0]);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var options = (handlerData.args[1] = handlerData.args[1] || {});\n        var headers = options.headers;\n        if (utils_1.isInstanceOf(request, Request)) {\n            headers = request.headers;\n        }\n        if (headers) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (typeof headers.append === 'function') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                headers.append('sentry-trace', span.toTraceparent());\n            }\n            else if (Array.isArray(headers)) {\n                headers = tslib_1.__spread(headers, [['sentry-trace', span.toTraceparent()]]);\n            }\n            else {\n                headers = tslib_1.__assign(tslib_1.__assign({}, headers), { 'sentry-trace': span.toTraceparent() });\n            }\n        }\n        else {\n            headers = { 'sentry-trace': span.toTraceparent() };\n        }\n        options.headers = headers;\n    }\n}\nexports.fetchCallback = fetchCallback;\n/**\n * Create and track xhr request spans\n */\nfunction xhrCallback(handlerData, shouldCreateSpan, spans) {\n    if (!utils_2.hasTracingEnabled() ||\n        (handlerData.xhr && handlerData.xhr.__sentry_own_request__) ||\n        !(handlerData.xhr && handlerData.xhr.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))) {\n        return;\n    }\n    var xhr = handlerData.xhr.__sentry_xhr__;\n    // check first if the request has finished and is tracked by an existing span which should now end\n    if (handlerData.endTimestamp) {\n        var spanId = handlerData.xhr.__sentry_xhr_span_id__;\n        if (!spanId)\n            return;\n        var span = spans[spanId];\n        if (span) {\n            span.setHttpStatus(xhr.status_code);\n            span.finish();\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete spans[spanId];\n        }\n        return;\n    }\n    // if not, create a new span to track it\n    var activeTransaction = utils_2.getActiveTransaction();\n    if (activeTransaction) {\n        var span = activeTransaction.startChild({\n            data: tslib_1.__assign(tslib_1.__assign({}, xhr.data), { type: 'xhr', method: xhr.method, url: xhr.url }),\n            description: xhr.method + \" \" + xhr.url,\n            op: 'http.client',\n        });\n        handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n        spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n        if (handlerData.xhr.setRequestHeader) {\n            try {\n                handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n            }\n            catch (_) {\n                // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n            }\n        }\n    }\n}\nexports.xhrCallback = xhrCallback;\n//# sourceMappingURL=request.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","fetchCallback","handlerData","shouldCreateSpan","spans","utils_2","hasTracingEnabled","fetchData","url","endTimestamp","spanId","__span","span","response","setHttpStatus","status","error","setStatus","finish","activeTransaction","getActiveTransaction","startChild","data","tslib_1","__assign","type","description","method","op","request","args","options","headers","utils_1","isInstanceOf","Request","append","toTraceparent","Array","isArray","__spread","xhrCallback","xhr","__sentry_own_request__","__sentry_xhr__","__sentry_xhr_span_id__","status_code","setRequestHeader","_","Object","defineProperty","value","DEFAULT_TRACING_ORIGINS","defaultRequestInstrumentationOptions","traceFetch","traceXHR","tracingOrigins","instrumentOutgoingRequests","_options","_a","shouldCreateSpanForRequest","urlMap","defaultShouldCreateSpan","some","origin","isMatchingPattern","addInstrumentationHandler"]
}
