{"version":3,"sources":["frontend/loader.cljs"],"mappings":";AAKA,AAAA,uBAAA,+BAAAA,tDAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,mDAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,mDAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,qDAAA,rDAAMD,gEACFE,IAAIC;AADR,AACoB,yEAAA,lEAACC,mDAAKF,IAAIC;;;AAD9B,CAAA,qDAAA,rDAAMH,gEAEFE,IAAIC,WAAWE;AAFnB,AAGG,IAAMC,SAAO,AAACC,2BACA,AAACC,yDAAkC,4CAAKN,MACxC,AAACO,uBAAUJ;AAFzB,AAGE,OAAiCC,mBAAOH;;;AAN7C,CAAA,+CAAA,/CAAMH;;AAAN","names":["var_args","G__73381","frontend.loader/load","js/Error","url","ok-handler","frontend.loader.load","opts","loader","goog.net.jsloader/safeLoad","goog.html.legacyconversions/trustedResourceUrlFromString","cljs-bean.core/->js"],"sourcesContent":["(ns frontend.loader\n  (:require [goog.net.jsloader :as jsloader]\n            [goog.html.legacyconversions :as conv]\n            [cljs-bean.core :as bean]))\n\n(defn load\n  ([url ok-handler] (load url ok-handler nil))\n  ([url ok-handler opts]\n   (let [loader (jsloader/safeLoad\n                 (conv/trustedResourceUrlFromString (str url))\n                 (bean/->js opts))]\n     (.addCallback ^goog.net.jsloader loader ok-handler))))\n"]}