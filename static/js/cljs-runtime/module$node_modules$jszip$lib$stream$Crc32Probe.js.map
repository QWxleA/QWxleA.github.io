{
"version":3,
"file":"module$node_modules$jszip$lib$stream$Crc32Probe.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAW5GC,QAASA,WAAU,EAAG,CAClBC,aAAcC,CAAAA,IAAd,CAAmB,IAAnB,CAAyB,YAAzB,CACA,KAAKC,CAAAA,cAAL,CAAoB,OAApB,CAA6B,CAA7B,CAFkB,CARtB,IAAIF,cAAgBJ,OAAA,CAAQ,oDAAR,CAApB,CACIO,MAAQP,OAAA,CAAQ,qCAAR,CACAA,QAAAQ,CAAQ,qCAARA,CAUNC,CAAAA,QAAN,CAAeN,UAAf,CAA2BC,aAA3B,CAKAD,WAAWO,CAAAA,SAAUC,CAAAA,YAArB,CAAoCC,QAAS,CAACC,KAAD,CAAQ,CACjD,IAAKC,CAAAA,UAAWP,CAAAA,KAAhB,CAAwBA,KAAA,CAAMM,KAAME,CAAAA,IAAZ,CAAkB,IAAKD,CAAAA,UAAWP,CAAAA,KAAlC;AAA2C,CAA3C,CACxB,KAAKS,CAAAA,IAAL,CAAUH,KAAV,CAFiD,CAIrDZ,OAAOC,CAAAA,OAAP,CAAiBC,UAxB2F;",
"sources":["node_modules/jszip/lib/stream/Crc32Probe.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jszip$lib$stream$Crc32Probe\"] = function(global,require,module,exports) {\n'use strict';\n\nvar GenericWorker = require('./GenericWorker');\nvar crc32 = require('../crc32');\nvar utils = require('../utils');\n\n/**\n * A worker which calculate the crc32 of the data flowing through.\n * @constructor\n */\nfunction Crc32Probe() {\n    GenericWorker.call(this, \"Crc32Probe\");\n    this.withStreamInfo(\"crc32\", 0);\n}\nutils.inherits(Crc32Probe, GenericWorker);\n\n/**\n * @see GenericWorker.processChunk\n */\nCrc32Probe.prototype.processChunk = function (chunk) {\n    this.streamInfo.crc32 = crc32(chunk.data, this.streamInfo.crc32 || 0);\n    this.push(chunk);\n};\nmodule.exports = Crc32Probe;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Crc32Probe","GenericWorker","call","withStreamInfo","crc32","utils","inherits","prototype","processChunk","Crc32Probe.prototype.processChunk","chunk","streamInfo","data","push"]
}
