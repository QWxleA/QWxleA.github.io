{
"version":3,
"file":"module$node_modules$codemirror$addon$mode$simple.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/codemirror/addon/mode/simple.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$addon$mode$simple\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                state.pending.push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","asToken","apply","replace","result","i","length","push","Rule","data","next","regex","token","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","mode","m","endScan","exec","current","start","index","curState","rule","matches","sol","stack","pop","pers","spec","persistent","p","persistentStates","cmp","getMode","lState","startState","forceEnd","join","indent","indentation","indentUnit","dedent","j","backUp","a","b","props","prop","indentFunction","meta","textAfter","line","arr","Pass","rules","dedentIfLineStart","slice","defineSimpleMode","CodeMirror.defineSimpleMode","defineMode","simpleMode","CodeMirror.simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode"]
}
