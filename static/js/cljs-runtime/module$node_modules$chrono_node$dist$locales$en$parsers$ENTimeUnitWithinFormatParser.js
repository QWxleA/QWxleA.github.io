shadow$provide.module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeUnitWithinFormatParser=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});const constants_1=require("module$node_modules$chrono_node$dist$locales$en$constants"),results_1=require("module$node_modules$chrono_node$dist$results");global=require("module$node_modules$chrono_node$dist$common$parsers$AbstractParserWithWordBoundary");const PATTERN_WITH_PREFIX=new RegExp("(?:within|in|for)\\s*"+
`(?:(?:about|around|roughly|approximately|just)\\s*(?:~\\s*)?)?(${constants_1.TIME_UNITS_PATTERN})(?=\\W|$)`,"i"),PATTERN_WITHOUT_PREFIX=new RegExp(`(?:(?:about|around|roughly|approximately|just)\\s*(?:~\\s*)?)?(${constants_1.TIME_UNITS_PATTERN})(?=\\W|$)`,"i");class ENTimeUnitWithinFormatParser extends global.AbstractParserWithWordBoundaryChecking{innerPattern(context){return context.option.forwardDate?PATTERN_WITHOUT_PREFIX:PATTERN_WITH_PREFIX}innerExtract(context,match){match=constants_1.parseTimeUnits(match[1]);
return results_1.ParsingComponents.createRelativeFromRefDate(context.refDate,match)}}exports.default=ENTimeUnitWithinFormatParser}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeUnitWithinFormatParser.js.map
