shadow$provide.module$node_modules$chrono_node$dist$locales$ja$parsers$JPStandardParser=function(global,require,module,exports){global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});const constants_1=require("module$node_modules$chrono_node$dist$locales$ja$constants"),years_1=require("module$node_modules$chrono_node$dist$calculation$years"),dayjs_1=global(require("module$node_modules$dayjs$dayjs_min")),
PATTERN=/(?:(?:([同今本])|((昭和|平成|令和)?([0-9０-９]{1,4}|元)))年\s*)?([0-9０-９]{1,2})月\s*([0-9０-９]{1,2})日/i;class JPStandardParser{pattern(){return PATTERN}extract(context,match){const month=parseInt(constants_1.toHankaku(match[5])),day=parseInt(constants_1.toHankaku(match[6])),components=context.createParsingComponents({day,month});if(match[1]&&match[1].match("同|今|本")){const moment=dayjs_1.default(context.refDate);components.assign("year",moment.year())}match[2]?(context=match[4],context="元"==context?1:parseInt(constants_1.toHankaku(context)),
"令和"==match[3]?context+=2018:"平成"==match[3]?context+=1988:"昭和"==match[3]&&(context+=1925),components.assign("year",context)):(match=years_1.findYearClosestToRef(context.refDate,day,month),components.imply("year",match));return components}}exports.default=JPStandardParser}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$ja$parsers$JPStandardParser.js.map
