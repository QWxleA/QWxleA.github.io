{"version":3,"sources":["frontend/publishing/html.cljs"],"mappings":";AAMA,2CAAA,3CAAMA,8FACHC,WAAWC;AADd,AAEE,IAAAC,aAAsD,AAAA,yFAAU,AAACS;IAAjET,iBAAA,AAAAC,4BAAAD;WAAA,AAAAE,4CAAAF,eAAA,lEAAcG;WAAd,AAAAD,4CAAAF,eAAA,lEAAmBI;YAAnB,AAAAF,4CAAAF,eAAA,nEAAwBK;YAAxB,AAAAH,4CAAAF,eAAA,nEAA8BM;kBAA9B,AAAAJ,4CAAAF,eAAA,zEAAoCO;UAApC,AAAAL,4CAAAF,eAAA,jEAAgDQ;IAC1CL,WAAK,iBAAAO,mBAAIP;AAAJ,AAAA,oBAAAO;AAAAA;;AAAA;;;IACLC,UAAQ,iBAAAD,mBAAIL;AAAJ,AAAA,oBAAAK;AAAAA;;AAAUN;;;AAFxB,AAGE,QAAA,oBACK,CAAA,QAAA,GAAA,IAAA,6BAAA,gHAAA,yFAAA,8EAAA,+EAAA,IAAA,mDAAA,AAAAQ,gCAAA,2CAAA,kDAAA,KAAA,wDAAA,KAAA,8DAAA,qDAAA,YAAA,mDAAA,0BAAA,MAAA,IAAA,mDAAA,AAAAA,gCAAA,2CAAA,kDAAA,KAAA,wDAAA,KAAA,8DAAA,uDAAA,UAAA,mDAAA,0BAAA,MAAA,IAAA,mDAAA,AAAAA,gCAAA,2CAAA,kDAAA,KAAA,wDAAA,KAAA,8DAAA,mDAAA,6BAAA,MAAA,IAAA,mDAAA,AAAAA,gCAAA,2CAAA,kDAAA,KAAA,wDAAA,KAAA,qDAAA,6BAAA,2EAAA,MAAA,iEAAA,2DAAA,wFAAA,2DAAA,IAAA,mDAAA,AAAAA,gCAAA,2CAAA,kDAAA,KAAA,wDAAA,KAAA,+DAAA,8DAAA,qBAAA,MAAA,6FAAA,AAAAC,4BAAA,uBAAA,AAAA,mFAAA,qDAAA,2CAAA,6DAAA,8DAAA,yBAAA,QAAA,IAAA,mDAAA,AAAAD,gCAAA,2CAAA,kDAAA,KAAA,wDAAA,KAAA,kEAAA,8DAAA,qBAAA,MAAA,IAAA,mDAAA,AAAAA,gCAAA,2CAAA,kDAAA,KAAA,wDAAA,KAAA,qEAAA,8DAAA,2BAAA,MAAA,iBAAAE,h0GAWUX,wcAIAA,wcAIAA,geAG4CQ,slBAMnCL,0OAEXE,iPAAqBA,kZAEhBL,iZAGAI,yIAEHD;AArCV,AAAA,GAAA,AAAAS,qBAAAD;AAAA,QAAA,qDAAA,AAAAF,gCAAA,AAAAI,uGAAA,2CAAA,kDAAA,KAAA,wDAAA,aAAAF,mBAAA;;AAAA,QAAA,sDAAA,AAAAD,4BAAAC,aAAA;;KAAA,IAAA,mDAAA,AAAAF,gCAAA,2CAAA,kDAAA,KAAA,wDAAA,KAAA,iEAAA,8DAAA,yBAAA,MAAA,IAAA,mDAAA,AAAAA,gCAAA,2CAAA,kDAAA,KAAA,wDAAA,KAAA,0FAAA,MAAA,UAAA,QAAA,GAAA,IAAA,0BAAA,iBAAAK,/fAsCmBN,+ZAEFJ,6GAGN,0DAAA,1DAACY,kIAAkC,AAACC,eAAkB,AAACC,0BAAiBvB;AA3CnF,AAAA,GAAA,AAAAiB,qBAAAE;AAAA,QAAA,sDAAA,AAAAL,gCAAA,AAAAI,uGAAA,2CAAA,kDAAA,KAAA,wDAAA,aAAAC,mBAAA,IAAA;;AAAA,QAAA,uDAAA,AAAAJ,4BAAAI,aAAA;;KAAA,iBAAAC,aA4CW,CAAA,mEAA4B,AAACE,eAAkBrB;AA5C1D,AAAA,GAAA,AAAAgB,qBAAAG;AAAA,QAAA,sDAAA,AAAAN,gCAAA,AAAAI,uGAAA,2CAAA,kDAAA,KAAA,wDAAA,aAAAE,mBAAA,IAAA;;AAAA,QAAA,uDAAA,AAAAL,4BAAAK,aAAA;;KAAA,0xCAAA,8CAAA,uDAAA,sDAAA,qDAAA","names":["frontend.publishing.html/publishing-html","transit-db","app-state","map__49934","cljs.core/--destructure-map","cljs.core.get","icon","name","alias","title","description","url","frontend.state.get_config","or__5043__auto__","project","hiccups.runtime/render-attr-map","hiccups.runtime/render-html","attrs50107","cljs.core/map?","cljs.core.merge","attrs50114","attrs50115","frontend.util.format","js/JSON.stringify","frontend.util/escape-html"],"sourcesContent":["(ns frontend.publishing.html\n  (:require-macros [hiccups.core])\n  (:require [frontend.state :as state]\n            [frontend.util :as util]\n            [hiccups.runtime]))\n\n(defn publishing-html\n  [transit-db app-state]\n  (let [{:keys [icon name alias title description url]} (:project (state/get-config))\n        icon (or icon \"static/img/logo.png\")\n        project (or alias name)]\n    (str \"<!DOCTYPE html>\\n\"\n         (hiccups.core/html\n          [:head\n           [:meta {:charset \"utf-8\"}]\n           [:meta\n            {:content\n             \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\",\n             :name \"viewport\"}]\n           [:link {:type \"text/css\", :href \"static/css/tabler-icons.min.css\", :rel \"stylesheet\"}]\n           [:link {:type \"text/css\", :href \"static/css/style.css\", :rel \"stylesheet\"}]\n           [:link {:type \"text/css\", :href \"static/css/export.css\", :rel \"stylesheet\"}]\n           [:link\n            {:href icon\n             :type \"image/png\",\n             :rel \"shortcut icon\"}]\n           [:link\n            {:href icon\n             :sizes \"192x192\",\n             :rel \"shortcut icon\"}]\n           [:link\n            {:href icon\n             :rel \"apple-touch-icon\"}]\n\n           [:meta {:name \"apple-mobile-web-app-title\" :content project}]\n           [:meta {:name \"apple-mobile-web-app-capable\" :content \"yes\"}]\n           [:meta {:name \"apple-touch-fullscreen\" :content \"yes\"}]\n           [:meta {:name \"apple-mobile-web-app-status-bar-style\" :content \"black-translucent\"}]\n           [:meta {:name \"mobile-web-app-capable\" :content \"yes\"}]\n\n           [:meta {:content title, :property \"og:title\"}]\n           [:meta {:content \"site\", :property \"og:type\"}]\n           (when url [:meta {:content url, :property \"og:url\"}])\n           [:meta\n            {:content icon\n             :property \"og:image\"}]\n           [:meta\n            {:content description\n             :property \"og:description\"}]\n           [:title title]\n           [:meta {:content project, :property \"og:site_name\"}]\n           [:meta\n            {:description description}]]\n          [:body\n           [:div#root]\n           [:script (util/format \"window.logseq_db=%s\" (js/JSON.stringify (util/escape-html transit-db)))]\n           [:script (str \"window.logseq_state=\" (js/JSON.stringify app-state))]\n           [:script {:type \"text/javascript\"}\n            \"// Single Page Apps for GitHub Pages\n      // https://github.com/rafgraph/spa-github-pages\n      // Copyright (c) 2016 Rafael Pedicini, licensed under the MIT License\n      // ----------------------------------------------------------------------\n      // This script checks to see if a redirect is present in the query string\n      // and converts it back into the correct url and adds it to the\n      // browser's history using window.history.replaceState(...),\n      // which won't cause the browser to attempt to load the new url.\n      // When the single page app is loaded further down in this file,\n      // the correct url will be waiting in the browser's history for\n      // the single page app to route accordingly.\n      (function(l) {\n        if (l.search) {\n          var q = {};\n          l.search.slice(1).split('&').forEach(function(v) {\n            var a = v.split('=');\n            q[a[0]] = a.slice(1).join('=').replace(/~and~/g, '&');\n          });\n          if (q.p !== undefined) {\n            window.history.replaceState(null, null,\n              l.pathname.slice(0, -1) + (q.p || '') +\n              (q.q ? ('?' + q.q) : '') +\n              l.hash\n            );\n          }\n        }\n      }(window.location))\"]\n            ;; TODO: should make this configurable\n           [:script {:src \"static/js/main.js\"}]\n           [:script {:src \"static/js/highlight.min.js\"}]\n           [:script {:src \"static/js/interact.min.js\"}]\n           [:script {:src \"static/js/code-editor.js\"}]]))))\n"]}