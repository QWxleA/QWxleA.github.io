{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$transports$fetch.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@sentry/browser/dist/transports/fetch.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$transports$fetch\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"@sentry/utils\");\nvar base_1 = require(\"./base\");\nvar utils_2 = require(\"./utils\");\n/** `fetch` based transport */\nvar FetchTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(FetchTransport, _super);\n    function FetchTransport(options, fetchImpl) {\n        if (fetchImpl === void 0) { fetchImpl = utils_2.getNativeFetchImplementation(); }\n        var _this = _super.call(this, options) || this;\n        _this._fetch = fetchImpl;\n        return _this;\n    }\n    /**\n     * @param sentryRequest Prepared SentryRequest to be delivered\n     * @param originalPayload Original payload used to create SentryRequest\n     */\n    FetchTransport.prototype._sendRequest = function (sentryRequest, originalPayload) {\n        var _this = this;\n        if (this._isRateLimited(sentryRequest.type)) {\n            this.recordLostEvent('ratelimit_backoff', sentryRequest.type);\n            return Promise.reject({\n                event: originalPayload,\n                type: sentryRequest.type,\n                reason: \"Transport for \" + sentryRequest.type + \" requests locked till \" + this._disabledUntil(sentryRequest.type) + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        var options = {\n            body: sentryRequest.body,\n            method: 'POST',\n            // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n            // (see https://caniuse.com/#feat=referrer-policy),\n            // it doesn't. And it throws an exception instead of ignoring this parameter...\n            // REF: https://github.com/getsentry/raven-js/issues/1233\n            referrerPolicy: (utils_1.supportsReferrerPolicy() ? 'origin' : ''),\n        };\n        if (this.options.fetchParameters !== undefined) {\n            Object.assign(options, this.options.fetchParameters);\n        }\n        if (this.options.headers !== undefined) {\n            options.headers = this.options.headers;\n        }\n        return this._buffer\n            .add(function () {\n            return new utils_1.SyncPromise(function (resolve, reject) {\n                void _this._fetch(sentryRequest.url, options)\n                    .then(function (response) {\n                    var headers = {\n                        'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n                        'retry-after': response.headers.get('Retry-After'),\n                    };\n                    _this._handleResponse({\n                        requestType: sentryRequest.type,\n                        response: response,\n                        headers: headers,\n                        resolve: resolve,\n                        reject: reject,\n                    });\n                })\n                    .catch(reject);\n            });\n        })\n            .then(undefined, function (reason) {\n            // It's either buffer rejection or any other xhr/fetch error, which are treated as NetworkError.\n            if (reason instanceof utils_1.SentryError) {\n                _this.recordLostEvent('queue_overflow', sentryRequest.type);\n            }\n            else {\n                _this.recordLostEvent('network_error', sentryRequest.type);\n            }\n            throw reason;\n        });\n    };\n    return FetchTransport;\n}(base_1.BaseTransport));\nexports.FetchTransport = FetchTransport;\n//# sourceMappingURL=fetch.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","utils_1","base_1","utils_2","FetchTransport","_super","options","fetchImpl","getNativeFetchImplementation","_this","call","_fetch","__extends","prototype","_sendRequest","FetchTransport.prototype._sendRequest","sentryRequest","originalPayload","_isRateLimited","type","recordLostEvent","Promise","reject","event","reason","_disabledUntil","status","body","method","referrerPolicy","supportsReferrerPolicy","undefined","fetchParameters","assign","headers","_buffer","add","SyncPromise","resolve","url","then","response","get","_handleResponse","requestType","catch","SentryError","BaseTransport"]
}
