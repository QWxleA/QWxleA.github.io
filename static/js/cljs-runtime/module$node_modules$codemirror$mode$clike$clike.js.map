{
"version":3,
"file":"module$node_modules$codemirror$mode$clike$clike.js",
"lineCount":48,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAI3G,SAAQ,CAACC,GAAD,CAAM,CACS,QAAtB,EAAI,MAAOD,QAAX,EAAmD,QAAnD,EAAkC,MAAOD,OAAzC,CACEE,GAAA,CAAIH,OAAA,CAAQ,+CAAR,CAAJ,CADF,CAE0B,UAArB,EAAI,MAAOI,OAAX,EAAmCA,MAAOC,CAAAA,GAA1C,CACHD,MAAA,CAAO,CAAC,sBAAD,CAAP,CAAiCD,GAAjC,CADG,CAGHA,GAAA,CAAIG,UAAJ,CANW,CAAd,CAAD,CAOG,QAAQ,CAACA,UAAD,CAAa,CAGxBC,QAASA,QAAO,CAACC,QAAD,CAAWC,MAAX,CAAmBC,IAAnB,CAAyBC,IAAzB,CAA+BC,KAA/B,CAAsCC,IAAtC,CAA4C,CAC1D,IAAKL,CAAAA,QAAL,CAAgBA,QAChB,KAAKC,CAAAA,MAAL,CAAcA,MACd,KAAKC,CAAAA,IAAL,CAAYA,IACZ,KAAKC,CAAAA,IAAL,CAAYA,IACZ,KAAKC,CAAAA,KAAL,CAAaA,KACb,KAAKC,CAAAA,IAAL,CAAYA,IAN8C;AAQ5DC,QAASA,YAAW,CAACC,KAAD,CAAQC,GAAR,CAAaN,IAAb,CAAmBC,IAAnB,CAAyB,CAC3C,IAAIM,OAASF,KAAMP,CAAAA,QACfO,MAAMG,CAAAA,OAAV,EAA2C,WAA3C,EAAqBH,KAAMG,CAAAA,OAAQR,CAAAA,IAAnC,EAAkE,WAAlE,EAA0DA,IAA1D,GACEO,MADF,CACWF,KAAMG,CAAAA,OAAQV,CAAAA,QADzB,CAEA,OAAOO,MAAMG,CAAAA,OAAb,CAAuB,IAAIX,OAAJ,CAAYU,MAAZ,CAAoBD,GAApB,CAAyBN,IAAzB,CAA+BC,IAA/B,CAAqC,IAArC,CAA2CI,KAAMG,CAAAA,OAAjD,CAJoB,CAM7CC,QAASA,WAAU,CAACJ,KAAD,CAAQ,CACzB,IAAIK,EAAIL,KAAMG,CAAAA,OAAQR,CAAAA,IACtB,IAAS,GAAT,EAAIU,CAAJ,EAAqB,GAArB,EAAgBA,CAAhB,EAAiC,GAAjC,EAA4BA,CAA5B,CACEL,KAAMP,CAAAA,QAAN,CAAiBO,KAAMG,CAAAA,OAAQV,CAAAA,QACjC,OAAOO,MAAMG,CAAAA,OAAb,CAAuBH,KAAMG,CAAAA,OAAQL,CAAAA,IAJZ,CAO3BQ,QAASA,WAAU,CAACC,MAAD,CAASP,KAAT,CAAgBQ,GAAhB,CAAqB,CAGtC,GAFuB,UAEvB,EAFIR,KAAMS,CAAAA,SAEV,EAFwD,MAExD,EAFqCT,KAAMS,CAAAA,SAE3C,EADI,4BAA6BC,CAAAA,IAA7B,CAAkCH,MAAOI,CAAAA,MAAOC,CAAAA,KAAd,CAAoB,CAApB;AAAuBJ,GAAvB,CAAlC,CACJ,EAAIR,KAAMa,CAAAA,eAAV,EAA6BN,MAAOb,CAAAA,MAAP,EAA7B,EAAgDa,MAAOO,CAAAA,WAAP,EAAhD,CAAsE,MAAO,CAAA,CAHvC,CAMxCC,QAASA,WAAU,CAACZ,OAAD,CAAU,CAC3B,IAAA,CAAA,CAAA,CAAS,CACP,GAAI,CAACA,OAAL,EAAgC,KAAhC,EAAgBA,OAAQR,CAAAA,IAAxB,CAAuC,MAAO,CAAA,CAC9C,IAAoB,GAApB,EAAIQ,OAAQR,CAAAA,IAAZ,EAAgD,WAAhD,EAA2BQ,OAAQL,CAAAA,IAAKF,CAAAA,IAAxC,CAA6D,MAAO,CAAA,CACpEO,QAAA,CAAUA,OAAQL,CAAAA,IAHX,CADkB,CAwN3BkB,QAASA,eAAK,CAACC,GAAD,CAAM,CAAA,IACdC,IAAM,EAAIF,IAAAA,CAAQC,GAAIE,CAAAA,KAAJ,CAAU,GAAV,CACtB,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBJ,GAAMK,CAAAA,MAA1B,CAAkC,EAAED,CAApC,CAAuCF,GAAA,CAAIF,GAAA,CAAMI,CAAN,CAAJ,CAAA,CAAgB,CAAA,CACvD,OAAOF,IAHW,CAKpBI,QAASA,SAAQ,CAACN,KAAD,CAAQO,IAAR,CAAc,CAC7B,MAAqB,UAArB,GAAI,MAAOP,MAAX,CACSA,KAAA,CAAMO,IAAN,CADT,CAGSP,KAAMQ,CAAAA,oBAAN,CAA2BD,IAA3B,CAJoB,CA2C/BE,QAASA,OAAM,CAACC,UAAD,CAAa,CAC1B,MAAOJ,SAAA,CAASK,WAAT;AAAsBD,UAAtB,CAAP,EAA4C,OAAQhB,CAAAA,IAAR,CAAagB,UAAb,CADlB,CAK5BE,QAASA,UAAS,CAACF,UAAD,CAAa,CAC7B,MAAOD,OAAA,CAAOC,UAAP,CAAP,EAA6BJ,QAAA,CAASO,cAAT,CAAyBH,UAAzB,CADA,CAO/BI,QAASA,QAAO,CAACvB,MAAD,CAASP,KAAT,CAAgB,CAC9B,GAAI,CAACA,KAAM+B,CAAAA,WAAX,CAAwB,MAAO,CAAA,CAC/B,KAF8B,IAErBC,EAFqB,CAEjBC,KAAO,IAApB,CAA0BD,EAA1B,CAA+BzB,MAAO2B,CAAAA,IAAP,EAA/B,CAAA,CAA+C,CAC7C,GAAU,IAAV,EAAIF,EAAJ,EAAkBzB,MAAO4B,CAAAA,KAAP,CAAa,KAAb,CAAlB,CAAuC,CACrCF,IAAA,CAAOH,OACP,MAFqC,CAAvC,IAGO,IAAU,GAAV,EAAIE,EAAJ,EAAiBzB,MAAO4B,CAAAA,KAAP,CAAa,WAAb,CAA0B,CAAA,CAA1B,CAAjB,CACL,KAEF5B,OAAO0B,CAAAA,IAAP,EAP6C,CAS/CjC,KAAMoC,CAAAA,QAAN,CAAiBH,IACjB,OAAO,MAZuB,CAehCI,QAASA,YAAW,CAACC,OAAD,CAAUtC,KAAV,CAAiB,CACnC,MAAuB,MAAvB,EAAIA,KAAMS,CAAAA,SAAV,CAAsC,MAAtC,CACO,CAAA,CAF4B,CAOrC8B,QAASA,sBAAqB,CAACC,KAAD,CAAQ,CAEpC,MADI,CAACA,KACL;AAD6B,CAC7B,CADcA,KAAMnB,CAAAA,MACpB,EAAgB,GAAhB,EAAImB,KAAA,CAAM,CAAN,CAAJ,CAA4B,CAAA,CAA5B,CACoB,GADpB,EACQA,KAAA,CAAM,CAAN,CADR,EAC6BA,KAAA,CAAM,CAAN,CAD7B,GAC0CA,KAAA,CAAM,CAAN,CAASC,CAAAA,WAAT,EAHN,CAMtCC,QAASA,aAAY,CAACnC,MAAD,CAAS,CAC5BA,MAAOoC,CAAAA,QAAP,CAAgB,SAAhB,CACA,OAAO,QAFqB,CAK9BC,QAASA,gBAAe,CAACrC,MAAD,CAASP,KAAT,CAAgB,CACtCO,MAAOsC,CAAAA,MAAP,CAAc,CAAd,CAEA,IAAItC,MAAO4B,CAAAA,KAAP,CAAa,kBAAb,CAAJ,CAAsC,CACpC,IAAIA,MAAQ5B,MAAO4B,CAAAA,KAAP,CAAa,sBAAb,CACZ,IAAI,CAACA,KAAL,CACE,MAAO,CAAA,CAETnC,MAAM8C,CAAAA,mBAAN,CAA4BX,KAAA,CAAM,CAAN,CAC5BnC,MAAMoC,CAAAA,QAAN,CAAiBW,cACjB,OAAOA,eAAA,CAAexC,MAAf,CAAuBP,KAAvB,CAP6B,CAUtC,GAAIO,MAAO4B,CAAAA,KAAP,CAAa,YAAb,CAAJ,CACE,MAAI5B,OAAO4B,CAAAA,KAAP,CAAa,MAAb,CAA+B,CAAA,CAA/B,CAAJ,CACS,QADT,CAGO,CAAA,CAGT5B,OAAO0B,CAAAA,IAAP,EACA;MAAO,CAAA,CArB+B,CAwBxCe,QAASA,wBAAuB,CAACzB,IAAD,CAAO,CAErC,OADI0B,IACJ,CADc,iBAAkBC,CAAAA,IAAlB,CAAuB3B,IAAvB,CACd,GAAkB0B,IAAA,CAAQ,CAAR,CAAlB,EAAgCA,IAAA,CAAQ,CAAR,CAFK,CAMvCE,QAASA,cAAa,CAAC5C,MAAD,CAASP,KAAT,CAAgB,CAEpC,IADA,IAAIiC,IACJ,CAAiC,IAAjC,GAAQA,IAAR,CAAe1B,MAAO0B,CAAAA,IAAP,EAAf,EAAA,CACE,GAAY,GAAZ,EAAIA,IAAJ,EAAmB,CAAC1B,MAAO6C,CAAAA,GAAP,CAAW,GAAX,CAApB,CAAqC,CACnCpD,KAAMoC,CAAAA,QAAN,CAAiB,IACjB,MAFmC,CAKvC,MAAO,QAR6B,CAatCW,QAASA,eAAc,CAACxC,MAAD,CAASP,KAAT,CAAgB,CAErC,IAAIqD,MAAQrD,KAAM8C,CAAAA,mBAAoBQ,CAAAA,OAA1B,CAAkC,UAAlC,CAA8C,SAA9C,CACA/C,OAAO4B,CAAAA,KAAPA,CAAa,IAAIoB,MAAJ,CAAW,QAAX,CAAsBF,KAAtB,CAA8B,GAA9B,CAAblB,CACZ,CACEnC,KAAMoC,CAAAA,QADR,CACmB,IADnB,CAGE7B,MAAOiD,CAAAA,SAAP,EACF,OAAO,QAR8B,CAWvCC,QAASA,IAAG,CAACC,KAAD,CAAQC,IAAR,CAAc,CAGxBC,QAASA,IAAG,CAAC1C,GAAD,CAAM,CAChB,GAAIA,GAAJ,CAAS,IAAK2C,IAAIA,IAAT,GAAiB3C,IAAjB,CAA0BA,GAAI4C,CAAAA,cAAJ,CAAmBD,IAAnB,CAAJ;AAC7B7C,KAAM+C,CAAAA,IAAN,CAAWF,IAAX,CAFc,CAFE,QAApB,EAAI,MAAOH,MAAX,GAA8BA,KAA9B,CAAsC,CAACA,KAAD,CAAtC,CACA,KAAI1C,MAAQ,EAKZ4C,IAAA,CAAID,IAAKK,CAAAA,QAAT,CACAJ,IAAA,CAAID,IAAKM,CAAAA,KAAT,CACAL,IAAA,CAAID,IAAKO,CAAAA,OAAT,CACAN,IAAA,CAAID,IAAKQ,CAAAA,KAAT,CACInD,MAAMK,CAAAA,MAAV,GACEsC,IAAKS,CAAAA,UACL,CADkBV,KAAA,CAAM,CAAN,CAClB,CAAAnE,UAAW8E,CAAAA,cAAX,CAA0B,WAA1B,CAAuCX,KAAA,CAAM,CAAN,CAAvC,CAAiD1C,KAAjD,CAFF,CAKA,KAAK,IAAII,EAAI,CAAb,CAAgBA,CAAhB,CAAoBsC,KAAMrC,CAAAA,MAA1B,CAAkC,EAAED,CAApC,CACE7B,UAAW+E,CAAAA,UAAX,CAAsBZ,KAAA,CAAMtC,CAAN,CAAtB,CAAgCuC,IAAhC,CAjBsB,CAmI1BY,QAASA,kBAAiB,CAAChE,MAAD,CAASP,KAAT,CAAgB,CAExC,IADA,IAAIwE,QAAU,CAAA,CACd,CAAO,CAACjE,MAAOkE,CAAAA,GAAP,EAAR,CAAA,CAAsB,CACpB,GAAI,CAACD,OAAL,EAAgBjE,MAAO4B,CAAAA,KAAP,CAAa,KAAb,CAAhB,CAAqC,CACnCnC,KAAMoC,CAAAA,QAAN,CAAiB,IACjB,MAFmC,CAIrCoC,OAAA,CAA2B,IAA3B,EAAUjE,MAAO0B,CAAAA,IAAP,EAAV,EAAmC,CAACuC,OALhB,CAOtB,MAAO,QATiC,CAY1CE,QAASA,mBAAkB,CAACC,KAAD,CAAQ,CACjC,MAAO,SAAS,CAACpE,MAAD;AAASP,KAAT,CAAgB,CAE9B,IADA,IAAIgC,EACJ,CAAOA,EAAP,CAAYzB,MAAO0B,CAAAA,IAAP,EAAZ,CAAA,CACE,GAAU,GAAV,EAAID,EAAJ,EAAiBzB,MAAO6C,CAAAA,GAAP,CAAW,GAAX,CAAjB,CACE,GAAa,CAAb,EAAIuB,KAAJ,CAAgB,CACd3E,KAAMoC,CAAAA,QAAN,CAAiB,IACjB,MAFc,CAAhB,IAKE,OADApC,MAAMoC,CAAAA,QACC,CADUsC,kBAAA,CAAmBC,KAAnB,CAA2B,CAA3B,CACV,CAAA3E,KAAMoC,CAAAA,QAAN,CAAe7B,MAAf,CAAuBP,KAAvB,CANX,KAQO,IAAU,GAAV,EAAIgC,EAAJ,EAAiBzB,MAAO6C,CAAAA,GAAP,CAAW,GAAX,CAAjB,CAEL,MADApD,MAAMoC,CAAAA,QACC,CADUsC,kBAAA,CAAmBC,KAAnB,CAA2B,CAA3B,CACV,CAAA3E,KAAMoC,CAAAA,QAAN,CAAe7B,MAAf,CAAuBP,KAAvB,CAGX,OAAO,SAhBuB,CADC,CAsFnC4E,QAASA,kBAAiB,CAACC,YAAD,CAAc,CACtC,MAAO,SAAS,CAACtE,MAAD,CAASP,KAAT,CAAgB,CAE9B,IAF8B,IAC1BwE,QAAU,CAAA,CADgB,CACTvC,IADS,CACH6C,IAAM,CAAA,CACjC,CAAO,CAACvE,MAAOkE,CAAAA,GAAP,EAAR,CAAA,CAAsB,CACpB,GAAI,CAACI,YAAL,EAAqB,CAACL,OAAtB,EAAiCjE,MAAO4B,CAAAA,KAAP,CAAa,GAAb,CAAjC,CAAqD,CAAC2C,GAAA,CAAM,CAAA,CAAM,MAAb,CACrD,GAAID,YAAJ;AAAoBtE,MAAO4B,CAAAA,KAAP,CAAa,KAAb,CAApB,CAAyC,CAAC2C,GAAA,CAAM,CAAA,CAAM,MAAb,CACzC7C,IAAA,CAAO1B,MAAO0B,CAAAA,IAAP,EACJ,EAACuC,OAAJ,EAAuB,GAAvB,EAAevC,IAAf,EAA8B1B,MAAO4B,CAAAA,KAAP,CAAa,GAAb,CAA9B,EACE5B,MAAOwE,CAAAA,MAAP,CAAc,GAAd,CACFP,QAAA,CAAU,CAACA,OAAX,EAA8B,IAA9B,EAAsBvC,IAAtB,EAAsC,CAAC4C,YANnB,CAQtB,GAAIC,GAAJ,EAAW,CAACD,YAAZ,CACE7E,KAAMoC,CAAAA,QAAN,CAAiB,IACnB,OAAO,QAZuB,CADM,CA+NxC4C,QAASA,kBAAiB,CAACrF,IAAD,CAAO,CAC/B,MAAO,SAAQ,CAACY,MAAD,CAASP,KAAT,CAAgB,CAE7B,IAF6B,IACzBwE,QAAU,CAAA,CADe,CACRvC,IADQ,CACF6C,IAAM,CAAA,CACjC,CAAO,CAACvE,MAAOkE,CAAAA,GAAP,EAAR,CAAA,CAAsB,CACpB,GAAI,CAACD,OAAL,EAAgBjE,MAAO4B,CAAAA,KAAP,CAAa,GAAb,CAAhB,GACe,QADf,EACOxC,IADP,EAC2BY,MAAO4B,CAAAA,KAAP,CAAa,IAAb,CAD3B,EACgD,CAC9C2C,GAAA,CAAM,CAAA,CACN,MAF8C,CAIhD,GAAI,CAACN,OAAL,EAAgBjE,MAAO4B,CAAAA,KAAP,CAAa,IAAb,CAAhB,CAAoC,CAClC8C,eAAA,CAAkBD,iBAAA,CAAkBrF,IAAlB,CAClBmF,IAAA,CAAM,CAAA,CACN,MAHkC,CAKpC7C,IAAA,CAAO1B,MAAO0B,CAAAA,IAAP,EACPuC;OAAA,CAAkB,QAAlB,EAAU7E,IAAV,EAA8B,CAAC6E,OAA/B,EAAkD,IAAlD,EAA0CvC,IAZtB,CAclB6C,GAAJ,GACI9E,KAAMoC,CAAAA,QADV,CACqB,IADrB,CAEA,OAAO,QAlBsB,CADA,CAvyBnC7C,UAAW2F,CAAAA,UAAX,CAAsB,OAAtB,CAA+B,QAAQ,CAACC,MAAD,CAASC,YAAT,CAAuB,CA0B5DC,QAASA,UAAS,CAAC9E,MAAD,CAASP,KAAT,CAAgB,CAChC,IAAIgC,GAAKzB,MAAO0B,CAAAA,IAAP,EACT,IAAIqD,KAAA,CAAMtD,EAAN,CAAJ,CAAe,CACb,IAAIuD,OAASD,KAAA,CAAMtD,EAAN,CAAA,CAAUzB,MAAV,CAAkBP,KAAlB,CACb,IAAe,CAAA,CAAf,GAAIuF,MAAJ,CAAsB,MAAOA,OAFhB,CAIf,GAAU,GAAV,EAAIvD,EAAJ,EAAuB,GAAvB,EAAiBA,EAAjB,CAEE,MADAhC,MAAMoC,CAAAA,QACC,CADUoD,WAAA,CAAYxD,EAAZ,CACV,CAAAhC,KAAMoC,CAAAA,QAAN,CAAe7B,MAAf,CAAuBP,KAAvB,CAET,IAAIyF,iBAAkB/E,CAAAA,IAAlB,CAAuBsB,EAAvB,CAAJ,CAEE,MADA0D,QACO,CADG1D,EACH,CAAA,IAET,IAAI2D,WAAYjF,CAAAA,IAAZ,CAAiBsB,EAAjB,CAAJ,CAA0B,CACxBzB,MAAOsC,CAAAA,MAAP,CAAc,CAAd,CACA,IAAItC,MAAO4B,CAAAA,KAAP,CAAayD,MAAb,CAAJ,CAA0B,MAAO,QACjCrF;MAAO0B,CAAAA,IAAP,EAHwB,CAK1B,GAAU,GAAV,EAAID,EAAJ,CAAe,CACb,GAAIzB,MAAO6C,CAAAA,GAAP,CAAW,GAAX,CAAJ,CAEE,MADApD,MAAMoC,CAAAA,QACC,CADUyD,YACV,CAAAA,YAAA,CAAatF,MAAb,CAAqBP,KAArB,CAET,IAAIO,MAAO6C,CAAAA,GAAP,CAAW,GAAX,CAAJ,CAEE,MADA7C,OAAOiD,CAAAA,SAAP,EACO,CAAA,SAPI,CAUf,GAAIsC,cAAepF,CAAAA,IAAf,CAAoBsB,EAApB,CAAJ,CAA6B,CAC3B,IAAA,CAAO,CAACzB,MAAO4B,CAAAA,KAAP,CAAa,UAAb,CAAyB,CAAA,CAAzB,CAAR,EAA2C5B,MAAO6C,CAAAA,GAAP,CAAW0C,cAAX,CAA3C,CAAA,EACA,MAAO,UAFoB,CAI7BvF,MAAOoC,CAAAA,QAAP,CAAgBoD,gBAAhB,CACA,IAAIC,kBAAJ,CAAwB,IAAA,CAAOzF,MAAO4B,CAAAA,KAAP,CAAa6D,kBAAb,CAAP,CAAA,CACtBzF,MAAOoC,CAAAA,QAAP,CAAgBoD,gBAAhB,CAEEE,OAAAA,CAAM1F,MAAO2F,CAAAA,OAAP,EACV,OAAI5E,SAAA,CAAS0C,QAAT,CAAmBiC,MAAnB,CAAJ,EACM3E,QAAA,CAAS6E,aAAT,CAAwBF,MAAxB,CAEG,GAF2BP,OAE3B,CAFqC,cAErC;AADHpE,QAAA,CAAS8E,WAAT,CAAsBH,MAAtB,CACG,GADyBI,YACzB,CADwC,CAAA,CACxC,EAAA,SAHT,EAKI/E,QAAA,CAAS2C,KAAT,CAAgBgC,MAAhB,CAAJ,CAAiC,MAAjC,CACI3E,QAAA,CAAS4C,OAAT,CAAkB+B,MAAlB,CAAJ,EACQK,oBADR,EACgCA,oBAAA,CAAqBL,MAArB,CADhC,EAEM3E,QAAA,CAAS6E,aAAT,CAAwBF,MAAxB,CACG,GAD2BP,OAC3B,CADqC,cACrC,EAAA,SAHT,EAKIpE,QAAA,CAAS6C,KAAT,CAAgB8B,MAAhB,CAAJ,CAAiC,MAAjC,CACO,UAlDyB,CAqDlCT,QAASA,YAAW,CAACe,KAAD,CAAQ,CAC1B,MAAO,SAAQ,CAAChG,MAAD,CAASP,KAAT,CAAgB,CAE7B,IAF6B,IACzBwE,QAAU,CAAA,CADe,CACRvC,IADQ,CACF6C,IAAM,CAAA,CACjC,CAAiC,IAAjC,GAAQ7C,IAAR,CAAe1B,MAAO0B,CAAAA,IAAP,EAAf,EAAA,CAAuC,CACrC,GAAIA,IAAJ,EAAYsE,KAAZ,EAAqB,CAAC/B,OAAtB,CAA+B,CAACM,GAAA,CAAM,CAAA,CAAM,MAAb,CAC/BN,OAAA,CAAU,CAACA,OAAX,EAA8B,IAA9B,EAAsBvC,IAFe,CAIvC,GAAI6C,GAAJ,EAAaN,CAAAA,OAAb,EAAwBgC,CAAAA,gBAAxB,CACExG,KAAMoC,CAAAA,QAAN;AAAiB,IACnB,OAAO,QARsB,CADL,CAa5ByD,QAASA,aAAY,CAACtF,MAAD,CAASP,KAAT,CAAgB,CAEnC,IAFmC,IAC/ByG,SAAW,CAAA,CADoB,CACbzE,EACtB,CAAOA,EAAP,CAAYzB,MAAO0B,CAAAA,IAAP,EAAZ,CAAA,CAA2B,CACzB,GAAU,GAAV,EAAID,EAAJ,EAAiByE,QAAjB,CAA2B,CACzBzG,KAAMoC,CAAAA,QAAN,CAAiB,IACjB,MAFyB,CAI3BqE,QAAA,CAAkB,GAAlB,EAAYzE,EALa,CAO3B,MAAO,SAT4B,CAYrC0E,QAASA,SAAQ,CAACnG,MAAD,CAASP,KAAT,CAAgB,CAC3BoF,YAAauB,CAAAA,oBAAjB,EAAyCpG,MAAOkE,CAAAA,GAAP,EAAzC,EAAyD1D,UAAA,CAAWf,KAAMG,CAAAA,OAAjB,CAAzD,GACEH,KAAMa,CAAAA,eADR,CAC0BP,UAAA,CAAWC,MAAX,CAAmBP,KAAnB,CAA0BO,MAAOC,CAAAA,GAAjC,CAD1B,CAD+B,CAxG2B,IACxDoG,WAAazB,MAAOyB,CAAAA,UADoC,CAExDC,oBAAsBzB,YAAayB,CAAAA,mBAAnCA,EAA0DD,UAFF,CAGxDE,eAAiB1B,YAAa0B,CAAAA,cAH0B,CAIxD9C,SAAWoB,YAAapB,CAAAA,QAAxBA;AAAoC,EAJoB,CAKxDC,MAAQmB,YAAanB,CAAAA,KAArBA,EAA8B,EAL0B,CAMxDC,QAAUkB,YAAalB,CAAAA,OAAvBA,EAAkC,EANsB,CAOxDiC,cAAgBf,YAAae,CAAAA,aAA7BA,EAA8C,EAPU,CAQxDC,YAAchB,YAAagB,CAAAA,WAA3BA,EAA0C,EARc,CASxDjC,MAAQiB,YAAajB,CAAAA,KAArBA,EAA8B,EAT0B,CAUxDmB,MAAQF,YAAaE,CAAAA,KAArBA,EAA8B,EAV0B,CAWxDkB,iBAAmBpB,YAAaoB,CAAAA,gBAXwB,CAYxDO,iBAAqD,CAAA,CAArDA,GAAmB3B,YAAa2B,CAAAA,gBAZwB,CAcxDf,mBAAqBZ,YAAaY,CAAAA,kBAdsB,CAexDP,kBAAoBL,YAAaK,CAAAA,iBAAjCA,EAAsD,mBAfE,CAgBxDE,YAAcP,YAAaO,CAAAA,WAA3BA,EAA0C,QAhBc,CAiBxDC,OAASR,YAAaQ,CAAAA,MAAtBA;AAAgC,wEAjBwB,CAkBxDE,eAAiBV,YAAaU,CAAAA,cAA9BA,EAAgD,kBAlBQ,CAmBxDC,iBAAmBX,YAAaW,CAAAA,gBAAhCA,EAAoD,oBAnBI,CAsBxDO,qBAAuBlB,YAAakB,CAAAA,oBAApCA,EAA4D,CAAA,CAtBJ,CAwBxDZ,OAxBwD,CAwB/CW,YAuFb,OAAO,CACLW,WAAYA,QAAQ,CAACC,UAAD,CAAa,CAC/B,MAAO,CACL7E,SAAU,IADL,CAELjC,QAAS,IAAIX,OAAJ,EAAayH,UAAb,EAA2B,CAA3B,EAAgCL,UAAhC,CAA4C,CAA5C,CAA+C,KAA/C,CAAsD,IAAtD,CAA4D,CAAA,CAA5D,CAFJ,CAGLnH,SAAU,CAHL,CAILsC,YAAa,CAAA,CAJR,CAKLtB,UAAW,IALN,CADwB,CAD5B,CAWL+B,MAAOA,QAAQ,CAACjC,MAAD,CAASP,KAAT,CAAgB,CAC7B,IAAIkH,IAAMlH,KAAMG,CAAAA,OACZI;MAAO4G,CAAAA,GAAP,EAAJ,GACmB,IAEjB,EAFID,GAAIrH,CAAAA,KAER,GAFuBqH,GAAIrH,CAAAA,KAE3B,CAFmC,CAAA,CAEnC,EADAG,KAAMP,CAAAA,QACN,CADiBc,MAAOO,CAAAA,WAAP,EACjB,CAAAd,KAAM+B,CAAAA,WAAN,CAAoB,CAAA,CAHtB,CAKA,IAAIxB,MAAO6G,CAAAA,QAAP,EAAJ,CAAkD,MAAzBV,SAAA,CAASnG,MAAT,CAAiBP,KAAjB,CAAgC,CAAA,IACzD0F,QAAA,CAAUW,YAAV,CAAyB,IACzB,KAAIgB,MAAQ,CAACrH,KAAMoC,CAAAA,QAAP,EAAmBiD,SAAnB,EAA8B9E,MAA9B,CAAsCP,KAAtC,CACZ,IAAa,SAAb,EAAIqH,KAAJ,EAAmC,MAAnC,EAA0BA,KAA1B,CAA2C,MAAOA,MACjC,KAAjB,EAAIH,GAAIrH,CAAAA,KAAR,GAAuBqH,GAAIrH,CAAAA,KAA3B,CAAmC,CAAA,CAAnC,CAEA,IAAe,GAAf,EAAI6F,OAAJ,EAAiC,GAAjC,EAAsBA,OAAtB,EAAoD,GAApD,EAAyCA,OAAzC,EAA2DnF,MAAO4B,CAAAA,KAAP,CAAa,kBAAb,CAAiC,CAAA,CAAjC,CAA3D,CACE,IAAA,CAA6B,WAA7B,EAAOnC,KAAMG,CAAAA,OAAQR,CAAAA,IAArB,CAAA,CAA0CS,UAAA,CAAWJ,KAAX,CAD5C,KAEK,IAAe,GAAf,EAAI0F,OAAJ,CAAoB3F,WAAA,CAAYC,KAAZ,CAAmBO,MAAOb,CAAAA,MAAP,EAAnB;AAAoC,GAApC,CAApB,KACA,IAAe,GAAf,EAAIgG,OAAJ,CAAoB3F,WAAA,CAAYC,KAAZ,CAAmBO,MAAOb,CAAAA,MAAP,EAAnB,CAAoC,GAApC,CAApB,KACA,IAAe,GAAf,EAAIgG,OAAJ,CAAoB3F,WAAA,CAAYC,KAAZ,CAAmBO,MAAOb,CAAAA,MAAP,EAAnB,CAAoC,GAApC,CAApB,KACA,IAAe,GAAf,EAAIgG,OAAJ,CAAoB,CACvB,IAAA,CAAmB,WAAnB,EAAOwB,GAAIvH,CAAAA,IAAX,CAAA,CAAgCuH,GAAA,CAAM9G,UAAA,CAAWJ,KAAX,CAEtC,KADgB,GAChB,EADIkH,GAAIvH,CAAAA,IACR,GADqBuH,GACrB,CAD2B9G,UAAA,CAAWJ,KAAX,CAC3B,EAAmB,WAAnB,EAAOkH,GAAIvH,CAAAA,IAAX,CAAA,CAAgCuH,GAAA,CAAM9G,UAAA,CAAWJ,KAAX,CAHf,CAApB,IAKI0F,QAAJ,EAAewB,GAAIvH,CAAAA,IAAnB,CAAyBS,UAAA,CAAWJ,KAAX,CAAzB,CACI+G,gBADJ,IAEmB,GAFnB,EAEOG,GAAIvH,CAAAA,IAFX,EAEsC,KAFtC,EAE0BuH,GAAIvH,CAAAA,IAF9B,GAE2D,GAF3D,EAEgD+F,OAFhD,EAGkB,WAHlB,EAGMwB,GAAIvH,CAAAA,IAHV,EAG4C,cAH5C,EAGiC+F,OAHjC,GAIH3F,WAAA,CAAYC,KAAZ,CAAmBO,MAAOb,CAAAA,MAAP,EAAnB,CAAoC,WAApC,CAAiDa,MAAO2F,CAAAA,OAAP,EAAjD,CAGW;UAAb,EAAImB,KAAJ,GACyB,KADzB,EACMrH,KAAMS,CAAAA,SADZ,EAEO2E,YAAauB,CAAAA,oBAFpB,EAE4CrG,UAAA,CAAWC,MAAX,CAAmBP,KAAnB,CAA0BO,MAAO+G,CAAAA,KAAjC,CAF5C,EAGOvG,UAAA,CAAWf,KAAMG,CAAAA,OAAjB,CAHP,EAGoCI,MAAO4B,CAAAA,KAAP,CAAa,QAAb,CAAuB,CAAA,CAAvB,CAHpC,IAIEkF,KAJF,CAIU,KAJV,CAMI/B,MAAM9C,CAAAA,KAAV,GACM+C,GACJ,CADaD,KAAM9C,CAAAA,KAAN,CAAYjC,MAAZ,CAAoBP,KAApB,CAA2BqH,KAA3B,CACb,CAAeE,IAAAA,EAAf,GAAIhC,GAAJ,GAA0B8B,KAA1B,CAAkC9B,GAAlC,CAFF,CAKa,MAAb,EAAI8B,KAAJ,EAAiD,CAAA,CAAjD,GAAsBjC,YAAaoC,CAAAA,SAAnC,GAAwDH,KAAxD,CAAgE,UAAhE,CAEArH,MAAM+B,CAAAA,WAAN,CAAoB,CAAA,CACpB/B,MAAMS,CAAAA,SAAN,CAAkB4F,YAAA,CAAe,KAAf,CAAuBgB,KAAvB,EAAgC3B,OAClDgB,SAAA,CAASnG,MAAT,CAAiBP,KAAjB,CACA,OAAOqH,MA9CsB,CAX1B,CA4DLnH,OAAQA,QAAQ,CAACF,KAAD,CAAQyH,SAAR,CAAmB,CACjC,GAAIzH,KAAMoC,CAAAA,QAAV,EAAsBiD,SAAtB,EAAqD,IAArD;AAAmCrF,KAAMoC,CAAAA,QAAzC,EAA6DpC,KAAMa,CAAAA,eAAnE,CAAoF,MAAOtB,WAAWmI,CAAAA,IADrE,KAE7BR,IAAMlH,KAAMG,CAAAA,OAFiB,CAERwH,UAAYF,SAAZE,EAAyBF,SAAUG,CAAAA,MAAV,CAAiB,CAAjB,CAFjB,CAG7BC,QAAUF,SAAVE,EAAuBX,GAAIvH,CAAAA,IACf,YAAhB,EAAIuH,GAAIvH,CAAAA,IAAR,EAA4C,GAA5C,EAA+BgI,SAA/B,GAAiDT,GAAjD,CAAuDA,GAAIpH,CAAAA,IAA3D,CACA,IAAIsF,YAAa0C,CAAAA,oBAAjB,CACE,IAAA,CAAmB,WAAnB,EAAOZ,GAAIvH,CAAAA,IAAX,EAAkCyF,YAAa0C,CAAAA,oBAAqBpH,CAAAA,IAAlC,CAAuCwG,GAAItH,CAAAA,IAA3C,CAAlC,CAAA,CACEsH,GAAA,CAAMA,GAAIpH,CAAAA,IACd,IAAIwF,KAAMpF,CAAAA,MAAV,GACM6H,KACA,CADOzC,KAAMpF,CAAAA,MAAN,CAAaF,KAAb,CAAoBkH,GAApB,CAAyBO,SAAzB,CAAoCb,UAApC,CACP,CAAe,QAAf,EAAA,MAAOmB,MAFb,EAE+B,MAAOA,MAElCC,MAAAA,CAAcd,GAAIpH,CAAAA,IAAlBkI,EAA2C,QAA3CA,EAA0Bd,GAAIpH,CAAAA,IAAKF,CAAAA,IACvC,IAAIwF,YAAa6C,CAAAA,iBAAjB;AAAsC,MAAOvH,CAAAA,IAAP,CAAYiH,SAAZ,CAAtC,CAA8D,CAC5D,IAAA,CAAmB,KAAnB,EAAOT,GAAIvH,CAAAA,IAAX,EAAwC,GAAxC,EAA4BuH,GAAIvH,CAAAA,IAAhC,CAAA,CAA6CuH,GAAA,CAAMA,GAAIpH,CAAAA,IACvD,OAAOoH,IAAIzH,CAAAA,QAFiD,CAI9D,MAAgB,WAAhB,EAAIyH,GAAIvH,CAAAA,IAAR,CACSuH,GAAIzH,CAAAA,QADb,EACsC,GAAb,EAAAkI,SAAA,CAAmB,CAAnB,CAAuBd,mBADhD,EAEQhH,CAAJqH,GAAIrH,CAAAA,KAAR,EAAmBiH,cAAnB,EAAiD,GAAjD,EAAqCI,GAAIvH,CAAAA,IAAzC,CAEgB,GAAhB,EAAIuH,GAAIvH,CAAAA,IAAR,EAAwBkI,OAAxB,CAGOX,GAAIzH,CAAAA,QAHX,EAGuBoI,OAAA,CAAU,CAAV,CAAcjB,UAHrC,GAIIiB,OAAD,EAAYG,CAAAA,KAAZ,EAA4B,qBAAsBtH,CAAAA,IAAtB,CAA2B+G,SAA3B,CAA5B,CAAiF,CAAjF,CAAoEb,UAJvE,EACSM,GAAIzH,CAAAA,QADb,CACwBoH,mBAHxB,CACSK,GAAIxH,CAAAA,MADb,EACuBmI,OAAA,CAAU,CAAV,CAAc,CADrC,CAnBiC,CA5D9B,CAwFLK,cA1L+C,CAAA,CA0LhC,GA1LE9C,YAAa+C,CAAAA,YA0Lf,CAAe,sCAAf,CAAwD,WAxFlE,CAyFLC,kBAAmB,IAzFd;AA0FLC,gBAAiB,IA1FZ,CA2FLC,qBAAsB,KA3FjB,CA4FLC,YAAa,IA5FR,CA6FLC,KAAM,OA7FD,CA/GqD,CAA9D,CAqPE,KAAI7G,YAAcX,cAAA,CAAM,4DAAN,CAAlB,CAKIa,eAAiBb,cAAA,CAAM,yCAAN,CA6HrByC,IAAA,CAAI,CAAC,aAAD,CAAgB,UAAhB,CAA4B,aAA5B,CAAJ,CAAgD,CAC9CgF,KAAM,OADwC,CAE9CzE,SAAUhD,cAAA,CA7JI0H,6KA6JJ,CAFoC;AAG9CzE,MAAOxC,MAHuC,CAI9C0E,cAAenF,cAAA,CAlHI2H,oDAkHJ,CAJ+B,CAK9CvC,YAAapF,cAAA,CAlHI4H,mBAkHJ,CALiC,CAM9CjC,qBAAsB,CAAA,CANwB,CAO9CxC,MAAOnD,cAAA,CAAM,iBAAN,CAPuC,CAQ9CsF,qBAAsB/D,qBARwB,CAS9C+C,MAAO,CACL,IAAKxD,OADA,CAEL,IAAKO,WAFA,CATuC,CAa9CwG,UAAW,CAACL,KAAM,CAAC,OAAD,CAAU,SAAV,CAAP,CAbmC,CAAhD,CAgBA/E,IAAA,CAAI,CAAC,eAAD,CAAkB,eAAlB,CAAJ,CAAwC,CACtCgF,KAAM,OADgC,CAEtCzE,SAAUhD,cAAA,CAAM,wjBAAN,CAF4B;AAGtCiD,MAAOxC,MAH+B,CAItC0E,cAAenF,cAAA,CAAM,oEAAN,CAJuB,CAKtCoF,YAAapF,cAAA,CAAM,mCAAN,CALyB,CAMtC2F,qBAAsB,CAAA,CANgB,CAOtCxC,MAAOnD,cAAA,CAAM,yBAAN,CAP+B,CAQtC8G,qBAAsB,YARgB,CAStC/B,iBAAkB,qBAToB,CAUtCO,qBAAsB/D,qBAVgB,CAWtC+C,MAAO,CACL,IAAKxD,OADA,CAEL,IAAKO,WAFA,CAGL,EAAKO,eAHA,CAIL,EAAKA,eAJA,CAKL,EAAKA,eALA,CAML,EAAKA,eANA,CAOL,EAAKF,YAPA,CAQL,EAAKA,YARA;AASL,EAAKA,YATA,CAUL,EAAKA,YAVA,CAWL,EAAKA,YAXA,CAYL,EAAKA,YAZA,CAaL,EAAKA,YAbA,CAcL,EAAKA,YAdA,CAeL,EAAKA,YAfA,CAgBL,EAAKA,YAhBA,CAiBLF,MAAOA,QAAQ,CAACjC,MAAD,CAASP,KAAT,CAAgBqH,KAAhB,CAAuB,CACpC,GAAa,UAAb,EAAIA,KAAJ,EAA4C,GAA5C,EAA2B9G,MAAO2B,CAAAA,IAAP,EAA3B,GACwB,GADxB,EACKlC,KAAMS,CAAAA,SADX,EACkD,IADlD,EAC+BT,KAAMS,CAAAA,SADrC,EAEwB,GAFxB,EAEKT,KAAMS,CAAAA,SAFX,GAGIuC,uBAAA,CAAwBzC,MAAO2F,CAAAA,OAAP,EAAxB,CAHJ,CAIE,MAAO,KAL2B,CAjBjC,CAX+B,CAoCtCF,mBAAoB,IApCkB,CAqCtC6C,UAAW,CAACL,KAAM,CAAC,OAAD,CAAU,SAAV,CAAP,CArC2B,CAAxC,CAwCA/E,IAAA,CAAI,aAAJ,CAAmB,CACjBgF,KAAM,OADW,CAEjBzE,SAAUhD,cAAA,CAAM,4SAAN,CAFO;AAOjBiD,MAAOjD,cAAA,CAAM,gKAAN,CAPU,CASjBmF,cAAenF,cAAA,CAAM,qDAAN,CATE,CAUjBoF,YAAapF,cAAA,CAAM,iCAAN,CAVI,CAWjB2F,qBAAsB,CAAA,CAXL,CAYjBxC,MAAOnD,cAAA,CAAM,iBAAN,CAZU,CAajB4E,OAAQ,gFAbS,CAcjBN,MAAO,CACL,IAAKwD,QAAQ,CAACvI,MAAD,CAAS,CAEpB,GAAIA,MAAO4B,CAAAA,KAAP,CAAa,WAAb;AAA0B,CAAA,CAA1B,CAAJ,CAAsC,MAAO,CAAA,CAE7C5B,OAAOoC,CAAAA,QAAP,CAAgB,SAAhB,CACA,OAAO,MALa,CADjB,CAdU,CAuBjBkG,UAAW,CAACL,KAAM,CAAC,OAAD,CAAU,QAAV,CAAP,CAvBM,CAAnB,CA0BA/E,IAAA,CAAI,eAAJ,CAAqB,CACnBgF,KAAM,OADa,CAEnBzE,SAAUhD,cAAA,CAAM,qhBAAN,CAFS;AASnBiD,MAAOjD,cAAA,CAAM,oPAAN,CATY,CAanBmF,cAAenF,cAAA,CAAM,oEAAN,CAbI,CAcnBoF,YAAapF,cAAA,CAAM,sCAAN,CAdM,CAenB2F,qBAAsB,CAAA,CAfH,CAgBnBxC,MAAOnD,cAAA,CAAM,iBAAN,CAhBY,CAiBnBsE,MAAO,CACL,IAAKwD,QAAQ,CAACvI,MAAD;AAASP,KAAT,CAAgB,CAC3B,GAAIO,MAAO6C,CAAAA,GAAP,CAAW,GAAX,CAAJ,CAEE,MADApD,MAAMoC,CAAAA,QACC,CADUe,aACV,CAAAA,aAAA,CAAc5C,MAAd,CAAsBP,KAAtB,CAETO,OAAOoC,CAAAA,QAAP,CAAgB,SAAhB,CACA,OAAO,MANoB,CADxB,CAjBY,CAArB,CA8DAc,IAAA,CAAI,cAAJ,CAAoB,CAClBgF,KAAM,OADY,CAElBzE,SAAUhD,cAAA,CAER,qWAFQ,CAFQ;AAYlBiD,MAAOjD,cAAA,CACL,iuBADK,CAZW;AAyBlBwF,iBAAkB,CAAA,CAzBA,CA0BlBL,cAAenF,cAAA,CAAM,wEAAN,CA1BG,CA2BlBoF,YAAapF,cAAA,CAAM,kDAAN,CA3BK,CA4BlBmD,MAAOnD,cAAA,CAAM,iBAAN,CA5BW,CA6BlB+F,iBAAkB,CAAA,CA7BA,CA8BlBoB,aAAc,CAAA,CA9BI,CA+BlBrC,eAAgB,qBA/BE,CAgClBR,MAAO,CACL,IAAKwD,QAAQ,CAACvI,MAAD,CAAS,CACpBA,MAAOoC,CAAAA,QAAP,CAAgB,SAAhB,CACA,OAAO,MAFa,CADjB,CAKL,IAAKoG,QAAQ,CAACxI,MAAD,CAASP,KAAT,CAAgB,CAC3B,GAAI,CAACO,MAAO4B,CAAAA,KAAP,CAAa,IAAb,CAAL,CAAyB,MAAO,CAAA,CAChCnC,MAAMoC,CAAAA,QAAN,CAAiBmC,iBACjB,OAAOvE,MAAMoC,CAAAA,QAAN,CAAe7B,MAAf;AAAuBP,KAAvB,CAHoB,CALxB,CAUL,IAAKgJ,QAAQ,CAACzI,MAAD,CAAS,CACpBA,MAAOoC,CAAAA,QAAP,CAAgB,oBAAhB,CACA,OAAO,MAFa,CAVjB,CAcL,OAAKsG,QAAQ,CAAC1I,MAAD,CAASP,KAAT,CAAgB,CAC3B,IAAIkJ,GAAKlJ,KAAMG,CAAAA,OACf,OAAe,GAAf,EAAI+I,EAAGvJ,CAAAA,IAAP,EAAsBuJ,EAAGrJ,CAAAA,KAAzB,EAAkCU,MAAO6C,CAAAA,GAAP,CAAW,MAAX,CAAlC,EACEpD,KAAMG,CAAAA,OACC,CADS,IAAIX,OAAJ,CAAY0J,EAAGzJ,CAAAA,QAAf,CAAyByJ,EAAGxJ,CAAAA,MAA5B,CAAoCwJ,EAAGvJ,CAAAA,IAAvC,CAA6CuJ,EAAGtJ,CAAAA,IAAhD,CAAsD,IAAtD,CAA4DsJ,EAAGpJ,CAAAA,IAA/D,CACT,CAAA,UAFT,EAIS,CAAA,CANkB,CAdxB,CAwBL,IAAKqJ,QAAQ,CAAC5I,MAAD,CAASP,KAAT,CAAgB,CAC3B,GAAI,CAACO,MAAO6C,CAAAA,GAAP,CAAW,GAAX,CAAL,CAAsB,MAAO,CAAA,CAC7BpD,MAAMoC,CAAAA,QAAN,CAAiBsC,kBAAA,CAAmB,CAAnB,CACjB,OAAO1E,MAAMoC,CAAAA,QAAN,CAAe7B,MAAf,CAAuBP,KAAvB,CAHoB,CAxBxB,CAhCW,CA8DlB6I,UAAW,CAACO,cAAe,CAACC,MAAO,UAAR,CAAoBC,QAAS,GAA7B,CAAhB,CA9DO,CAApB,CAkFA7F,IAAA,CAAI,eAAJ,CAAqB,CACnBgF,KAAM,OADa,CAEnBzE,SAAUhD,cAAA,CAER,0fAFQ,CAFS;AAcnBiD,MAAOjD,cAAA,CAEL,yeAFK,CAdY;AAuBnBuI,aAAc,CAAA,CAvBK,CAwBnBxC,iBAAkB,CAAA,CAxBC,CAyBnBP,iBAAkB,CAAA,CAzBC,CA0BnBZ,OAAQ,kFA1BW,CA2BnBO,cAAenF,cAAA,CAAM,yDAAN,CA3BI,CA4BnBoF,YAAapF,cAAA,CAAM,oCAAN,CA5BM,CA6BnBmD,MAAOnD,cAAA,CAAM,sBAAN,CA7BY,CA8BnBsE,MAAO,CACL,IAAKwD,QAAQ,CAACvI,MAAD,CAAS,CACpBA,MAAOoC,CAAAA,QAAP,CAAgB,SAAhB,CACA,OAAO,MAFa,CADjB,CAKL,IAAK6G,QAAQ,CAAClH,OAAD,CAAUtC,KAAV,CAAiB,CAC5B,MAA0B,GAAnB,EAAAA,KAAMS,CAAAA,SAAN,CAAyB,UAAzB,CAAsC,UADjB,CALzB,CAQL,IAAKsI,QAAQ,CAACxI,MAAD;AAASP,KAAT,CAAgB,CAC3BA,KAAMoC,CAAAA,QAAN,CAAiBwC,iBAAA,CAAkBrE,MAAO4B,CAAAA,KAAP,CAAa,IAAb,CAAlB,CACjB,OAAOnC,MAAMoC,CAAAA,QAAN,CAAe7B,MAAf,CAAuBP,KAAvB,CAFoB,CARxB,CAYL,IAAKmJ,QAAQ,CAAC5I,MAAD,CAASP,KAAT,CAAgB,CAC3B,GAAI,CAACO,MAAO6C,CAAAA,GAAP,CAAW,GAAX,CAAL,CAAsB,MAAO,CAAA,CAC7BpD,MAAMoC,CAAAA,QAAN,CAAiBsC,kBAAA,CAAmB,CAAnB,CACjB,OAAO1E,MAAMoC,CAAAA,QAAN,CAAe7B,MAAf,CAAuBP,KAAvB,CAHoB,CAZxB,CAiBLE,OAAQA,QAAQ,CAACF,KAAD,CAAQkH,GAAR,CAAaO,SAAb,CAAwBb,UAAxB,CAAoC,CAClD,IAAIe,UAAYF,SAAZE,EAAyBF,SAAUG,CAAAA,MAAV,CAAiB,CAAjB,CAC7B,KAAwB,GAAxB,EAAK5H,KAAMS,CAAAA,SAAX,EAAkD,GAAlD,EAA+BT,KAAMS,CAAAA,SAArC,GAAuE,EAAvE,EAA0DgH,SAA1D,CACE,MAAOzH,MAAMP,CAAAA,QACf,IAAwB,UAAxB,EAAKO,KAAMS,CAAAA,SAAX,EAAmD,GAAnD,EAAsCgH,SAAtC,EAAgF,GAAhF,EAA0DzH,KAAMG,CAAAA,OAAQR,CAAAA,IAAxE,EACqB,UADrB,EACEK,KAAMS,CAAAA,SADR;AACgD,GADhD,EACmCkH,SADnC,GAEsB,GAFtB,EAEG3H,KAAMS,CAAAA,SAFT,EAEgD,GAFhD,EAE6BT,KAAMS,CAAAA,SAFnC,GAEqE,GAFrE,EAEwDkH,SAFxD,CAGE,MAAoB,EAApB,CAAOf,UAAP,CAAwBM,GAAIzH,CAAAA,QAC9B,IAAIyH,GAAIrH,CAAAA,KAAR,EAA6B,GAA7B,EAAiBqH,GAAIvH,CAAAA,IAArB,CACE,MAAOuH,IAAIzH,CAAAA,QAAX,EAAuBO,KAAMG,CAAAA,OAAQR,CAAAA,IAAd,EAAwCiI,CAAjBH,SAAiBG,EAAJ,EAAIA,EAAAA,MAAlB,CAAyB,CAAzB,CAAtB,CAAoD,CAApD,CAAwDhB,UAA/E,CATgD,CAjB/C,CA9BY,CA2DnBiC,UAAW,CAACO,cAAe,CAACE,QAAS,GAAV,CAAhB,CA3DQ,CAArB,CA8DA7F,IAAA,CAAI,CAAC,mBAAD,CAAsB,qBAAtB,CAAJ,CAAkD,CAChDgF,KAAM,OAD0C,CAEhDzE,SAAUhD,cAAA,CAAM,kLAAN,CAFsC;AAQhDiD,MAAOjD,cAAA,CAAM,uFAAN,CARyC,CAWhDmF,cAAenF,cAAA,CAAM,6BAAN,CAXiC,CAYhDkD,QAASlD,cAAA,CAAM,qoBAAN,CAZuC;AA2BhDmD,MAAOnD,cAAA,CAAM,gyCAAN,CA3ByC;AAsDhDmH,aAAc,CAAA,CAtDkC,CAuDhD7C,MAAO,CAAC,IAAKxD,OAAN,CAvDyC,CAwDhD+G,UAAW,CAACL,KAAM,CAAC,OAAD,CAAU,SAAV,CAAP,CAxDqC,CAAlD,CA2DA/E,IAAA,CAAI,aAAJ,CAAmB,CACjBgF,KAAM,OADW,CAEjBzE,SAAUhD,cAAA,CAAM,kXAAN,CAFO;AAKjBiD,MAAOxC,MALU,CAMjB0E,cAAenF,cAAA,CA/cI2H,oDA+cJ,CANE,CAOjBxE,MAAOnD,cAAA,CAAM,iBAAN,CAPU,CAQjBsE,MAAO,CAAC,IAAKxD,OAAN,CARU,CASjB+G,UAAW,CAACL,KAAM,CAAC,OAAD,CAAU,SAAV,CAAP,CATM,CAAnB,CAYA/E,IAAA,CAAI,mBAAJ,CAAyB,CACvBgF,KAAM,OADiB,CAEvBzE,SAAUhD,cAAA,CAAM,8kBAAN,CAFa;AAGvBiD,MAAOrC,SAHgB,CAIvBsC,QAASlD,cAAA,CApfQyI,+SAofR,CAJc,CAKvBtD,cAAenF,cAAA,CAAM,oHAAN,CALQ,CAMvBoF,YAAapF,cAAA,CAAM,+DAAN,CANU;AAOvB8G,qBAAsB,OAPC,CAQvBnB,qBAAsB,CAAA,CARC,CASvBxC,MAAOnD,cAAA,CAAM,wCAAN,CATgB,CAUvBsF,qBAAsB/D,qBAVC,CAWvB+C,MAAO,CACL,IAAKxD,OADA,CAEL,IAAKO,WAFA,CAXgB,CAevBwG,UAAW,CAACL,KAAM,CAAC,OAAD,CAAU,SAAV,CAAP,CAfY,CAAzB,CAkBA/E,IAAA,CAAI,qBAAJ,CAA2B,CACzBgF,KAAM,OADmB,CAEzBzE,SAAUhD,cAAA,CAAM,y9BAAN,CAFe;AAGzBiD,MAAOrC,SAHkB,CAIzBsC,QAASlD,cAAA,CAtgBQyI,+SAsgBR,CAJgB,CAKzBtD,cAAenF,cAAA,CAAM,oIAAN,CALU;AAMzBoF,YAAapF,cAAA,CAAM,+EAAN,CANY,CAOzB8G,qBAAsB,kBAPG,CAQzBnB,qBAAsB,CAAA,CARG,CASzBxC,MAAOnD,cAAA,CAAM,wCAAN,CATkB,CAUzBsF,qBAAsB/D,qBAVG,CAWzB+C,MAAO,CACL,IAAKxD,OADA,CAEL,IAAKO,WAFA,CAGL,EAAKO,eAHA,CAIL,EAAKA,eAJA,CAKL,EAAKA,eALA,CAML,EAAKA,eANA,CAOL,EAAKF,YAPA,CAQL,EAAKA,YARA,CASL,EAAKA,YATA,CAUL,EAAKA,YAVA,CAWL,EAAKA,YAXA,CAYL,EAAKA,YAZA,CAaL,EAAKA,YAbA,CAcL,EAAKA,YAdA;AAeL,EAAKA,YAfA,CAgBL,EAAKA,YAhBA,CAiBLF,MAAOA,QAAQ,CAACjC,MAAD,CAASP,KAAT,CAAgBqH,KAAhB,CAAuB,CACpC,GAAa,UAAb,EAAIA,KAAJ,EAA4C,GAA5C,EAA2B9G,MAAO2B,CAAAA,IAAP,EAA3B,GACwB,GADxB,EACKlC,KAAMS,CAAAA,SADX,EACkD,IADlD,EAC+BT,KAAMS,CAAAA,SADrC,EAEwB,GAFxB,EAEKT,KAAMS,CAAAA,SAFX,GAGIuC,uBAAA,CAAwBzC,MAAO2F,CAAAA,OAAP,EAAxB,CAHJ,CAIE,MAAO,KAL2B,CAjBjC,CAXkB,CAoCzBF,mBAAoB,IApCK,CAqCzB6C,UAAW,CAACL,KAAM,CAAC,OAAD,CAAU,SAAV,CAAP,CArCc,CAA3B,CAwCA/E,IAAA,CAAI,iBAAJ,CAAuB,CACrBgF,KAAM,OADe,CAErBzE,SAAUhD,cAAA,CAAM,iKAAN,CAFW;AAIrBiD,MAAOxC,MAJc,CAKrB0E,cAAenF,cAAA,CAAM,uDAAN,CALM,CAMrBoF,YAAapF,cAAA,CAAM,sBAAN,CANQ,CAOrB2F,qBAAsB,CAAA,CAPD,CAQrBxC,MAAOnD,cAAA,CAAM,iBAAN,CARc,CASrBsE,MAAO,CAAC,IAAKxD,OAAN,CATc,CAUrB+G,UAAW,CAACL,KAAM,CAAC,OAAD,CAAU,SAAV,CAAP,CAVU,CAAvB,CAcA,KAAIvD,gBAAkB,IAwBtBxB,IAAA,CAAI,eAAJ,CAAqB,CACnBgF,KAAM,OADa,CAEnBzE,SAAUhD,cAAA,CAAM,gRAAN,CAFS;AAMnBiD,MAAOA,QAAQ,CAAC1C,IAAD,CAAO,CAEdmI,IAAAA,CAAQnI,IAAKqG,CAAAA,MAAL,CAAY,CAAZ,CACZ,OAAQ8B,KAAR,GAAkBA,IAAMC,CAAAA,WAAN,EAAlB,EAAyCD,IAAzC,GAAmDA,IAAMjH,CAAAA,WAAN,EAHjC,CANH,CAWnB0D,cAAenF,cAAA,CAAM,oGAAN,CAXI,CAYnBoF,YAAapF,cAAA,CAAM,8DAAN,CAZM,CAanBkD,QAASlD,cAAA,CAAM,+KAAN,CAbU;AAenByE,kBAAmB,oBAfA,CAgBnBK,eAAgB,qBAhBG,CAiBnBH,YAAa,QAjBM,CAkBnBC,OAAQ,gGAlBW,CAmBnBY,iBAAkB,CAAA,CAnBC,CAoBnBG,qBAAsB,CAAA,CApBH,CAqBnBxC,MAAOnD,cAAA,CAAM,qDAAN,CArBY,CAsBnBmH,aAAc,CAAA,CAtBK,CAuBnBX,UAAW,CAAA,CAvBQ,CAwBnBlC,MAAO,CACL,IAAKwD,QAAQ,CAACvI,MAAD,CAAS,CACpBA,MAAOoC,CAAAA,QAAP,CAAgB,SAAhB,CACA,OAAO,MAFa,CADjB,CAKL,IAAKoG,QAAQ,CAACxI,MAAD,CAASP,KAAT,CAAgB,CACzBA,KAAMoC,CAAAA,QAAN,CAAiB4C,iBAAA,CAAkBzE,MAAO4B,CAAAA,KAAP,CAAa,IAAb,CAAA,CAAqB,QAArB;AAAgC,QAAlD,CACjB,OAAOnC,MAAMoC,CAAAA,QAAN,CAAe7B,MAAf,CAAuBP,KAAvB,CAFkB,CALxB,CASL,IAAK4J,QAAQ,CAACrJ,MAAD,CAASP,KAAT,CAAgB,CACzB,GAAI,CAACiF,eAAL,EAAwB,CAAC1E,MAAO4B,CAAAA,KAAP,CAAa,GAAb,CAAzB,CAA4C,MAAO,CAAA,CACnDnC,MAAMoC,CAAAA,QAAN,CAAiB6C,eACjBA,gBAAA,CAAkB,IAClB,OAAOjF,MAAMoC,CAAAA,QAAN,CAAe7B,MAAf,CAAuBP,KAAvB,CAJkB,CATxB,CAeL,IAAKgJ,QAAQ,CAACzI,MAAD,CAAS,CACpBA,MAAOoC,CAAAA,QAAP,CAAgB,oBAAhB,CACA,OAAO,MAFa,CAfjB,CAmBLH,MAAOA,QAAQ,CAACF,OAAD,CAAUtC,KAAV,CAAiBqH,KAAjB,CAAwB,CACnC,IAAc,UAAd,EAAKA,KAAL,EAAqC,MAArC,EAA4BA,KAA5B,GACuB,GADvB,EACIrH,KAAMS,CAAAA,SADV,CAEE,MAAO,YAH0B,CAnBlC,CAxBY,CAkDnBoI,UAAW,CACPL,KAAM,CAAC,OAAD,CAAU,QAAV,CADC,CAEPY,cAAe,CAACE,QAAS,GAAV,CAFR,CAlDQ,CAArB,CAp2BsB,CAPxB,CAJ4G;",
"sources":["node_modules/codemirror/mode/clike/clike.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$clike$clike\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction Context(indented, column, type, info, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.info = info;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type, info) {\n  var indent = state.indented;\n  if (state.context && state.context.type == \"statement\" && type != \"statement\")\n    indent = state.context.indented;\n  return state.context = new Context(indent, col, type, info, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\nfunction typeBefore(stream, state, pos) {\n  if (state.prevToken == \"variable\" || state.prevToken == \"type\") return true;\n  if (/\\S(?:[^- ]>|[*\\]])\\s*$|\\*$/.test(stream.string.slice(0, pos))) return true;\n  if (state.typeAtEndOfLine && stream.column() == stream.indentation()) return true;\n}\n\nfunction isTopScope(context) {\n  for (;;) {\n    if (!context || context.type == \"top\") return true;\n    if (context.type == \"}\" && context.prev.info != \"namespace\") return false;\n    context = context.prev;\n  }\n}\n\nCodeMirror.defineMode(\"clike\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      statementIndentUnit = parserConfig.statementIndentUnit || indentUnit,\n      dontAlignCalls = parserConfig.dontAlignCalls,\n      keywords = parserConfig.keywords || {},\n      types = parserConfig.types || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      defKeywords = parserConfig.defKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings,\n      indentStatements = parserConfig.indentStatements !== false,\n      indentSwitch = parserConfig.indentSwitch !== false,\n      namespaceSeparator = parserConfig.namespaceSeparator,\n      isPunctuationChar = parserConfig.isPunctuationChar || /[\\[\\]{}\\(\\),;\\:\\.]/,\n      numberStart = parserConfig.numberStart || /[\\d\\.]/,\n      number = parserConfig.number || /^(?:0x[a-f\\d]+|0b[01]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:e[-+]?\\d+)?)(u|ll?|l|f)?/i,\n      isOperatorChar = parserConfig.isOperatorChar || /[+\\-*&%=<>!?|\\/]/,\n      isIdentifierChar = parserConfig.isIdentifierChar || /[\\w\\$_\\xa1-\\uffff]/,\n      // An optional function that takes a {string} token and returns true if it\n      // should be treated as a builtin.\n      isReservedIdentifier = parserConfig.isReservedIdentifier || false;\n\n  var curPunc, isDefKeyword;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (isPunctuationChar.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (numberStart.test(ch)) {\n      stream.backUp(1)\n      if (stream.match(number)) return \"number\"\n      stream.next()\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      while (!stream.match(/^\\/[\\/*]/, false) && stream.eat(isOperatorChar)) {}\n      return \"operator\";\n    }\n    stream.eatWhile(isIdentifierChar);\n    if (namespaceSeparator) while (stream.match(namespaceSeparator))\n      stream.eatWhile(isIdentifierChar);\n\n    var cur = stream.current();\n    if (contains(keywords, cur)) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      if (contains(defKeywords, cur)) isDefKeyword = true;\n      return \"keyword\";\n    }\n    if (contains(types, cur)) return \"type\";\n    if (contains(builtin, cur)\n        || (isReservedIdentifier && isReservedIdentifier(cur))) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      return \"builtin\";\n    }\n    if (contains(atoms, cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function maybeEOL(stream, state) {\n    if (parserConfig.typeFirstDefinitions && stream.eol() && isTopScope(state.context))\n      state.typeAtEndOfLine = typeBefore(stream, state, stream.pos)\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", null, false),\n        indented: 0,\n        startOfLine: true,\n        prevToken: null\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) { maybeEOL(stream, state); return null; }\n      curPunc = isDefKeyword = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if (curPunc == \";\" || curPunc == \":\" || (curPunc == \",\" && stream.match(/^\\s*(?:\\/\\/.*)?$/, false)))\n        while (state.context.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (indentStatements &&\n               (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != \";\") ||\n                (ctx.type == \"statement\" && curPunc == \"newstatement\"))) {\n        pushContext(state, stream.column(), \"statement\", stream.current());\n      }\n\n      if (style == \"variable\" &&\n          ((state.prevToken == \"def\" ||\n            (parserConfig.typeFirstDefinitions && typeBefore(stream, state, stream.start) &&\n             isTopScope(state.context) && stream.match(/^\\s*\\(/, false)))))\n        style = \"def\";\n\n      if (hooks.token) {\n        var result = hooks.token(stream, state, style);\n        if (result !== undefined) style = result;\n      }\n\n      if (style == \"def\" && parserConfig.styleDefs === false) style = \"variable\";\n\n      state.startOfLine = false;\n      state.prevToken = isDefKeyword ? \"def\" : style || curPunc;\n      maybeEOL(stream, state);\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null || state.typeAtEndOfLine) return CodeMirror.Pass;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      if (parserConfig.dontIndentStatements)\n        while (ctx.type == \"statement\" && parserConfig.dontIndentStatements.test(ctx.info))\n          ctx = ctx.prev\n      if (hooks.indent) {\n        var hook = hooks.indent(state, ctx, textAfter, indentUnit);\n        if (typeof hook == \"number\") return hook\n      }\n      var switchBlock = ctx.prev && ctx.prev.info == \"switch\";\n      if (parserConfig.allmanIndentation && /[{(]/.test(firstChar)) {\n        while (ctx.type != \"top\" && ctx.type != \"}\") ctx = ctx.prev\n        return ctx.indented\n      }\n      if (ctx.type == \"statement\")\n        return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit);\n      if (ctx.align && (!dontAlignCalls || ctx.type != \")\"))\n        return ctx.column + (closing ? 0 : 1);\n      if (ctx.type == \")\" && !closing)\n        return ctx.indented + statementIndentUnit;\n\n      return ctx.indented + (closing ? 0 : indentUnit) +\n        (!closing && switchBlock && !/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 0);\n    },\n\n    electricInput: indentSwitch ? /^\\s*(?:case .*?:|default:|\\{\\}?|\\})$/ : /^\\s*[{}]$/,\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    blockCommentContinue: \" * \",\n    lineComment: \"//\",\n    fold: \"brace\"\n  };\n});\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  function contains(words, word) {\n    if (typeof words === \"function\") {\n      return words(word);\n    } else {\n      return words.propertyIsEnumerable(word);\n    }\n  }\n  var cKeywords = \"auto if break case register continue return default do sizeof \" +\n    \"static else struct switch extern typedef union for goto while enum const \" +\n    \"volatile inline restrict asm fortran\";\n\n  // Keywords from https://en.cppreference.com/w/cpp/keyword includes C++20.\n  var cppKeywords = \"alignas alignof and and_eq audit axiom bitand bitor catch \" +\n  \"class compl concept constexpr const_cast decltype delete dynamic_cast \" +\n  \"explicit export final friend import module mutable namespace new noexcept \" +\n  \"not not_eq operator or or_eq override private protected public \" +\n  \"reinterpret_cast requires static_assert static_cast template this \" +\n  \"thread_local throw try typeid typename using virtual xor xor_eq\";\n\n  var objCKeywords = \"bycopy byref in inout oneway out self super atomic nonatomic retain copy \" +\n  \"readwrite readonly strong weak assign typeof nullable nonnull null_resettable _cmd \" +\n  \"@interface @implementation @end @protocol @encode @property @synthesize @dynamic @class \" +\n  \"@public @package @private @protected @required @optional @try @catch @finally @import \" +\n  \"@selector @encode @defs @synchronized @autoreleasepool @compatibility_alias @available\";\n\n  var objCBuiltins = \"FOUNDATION_EXPORT FOUNDATION_EXTERN NS_INLINE NS_FORMAT_FUNCTION \" +\n  \" NS_RETURNS_RETAINEDNS_ERROR_ENUM NS_RETURNS_NOT_RETAINED NS_RETURNS_INNER_POINTER \" +\n  \"NS_DESIGNATED_INITIALIZER NS_ENUM NS_OPTIONS NS_REQUIRES_NIL_TERMINATION \" +\n  \"NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END NS_SWIFT_NAME NS_REFINED_FOR_SWIFT\"\n\n  // Do not use this. Use the cTypes function below. This is global just to avoid\n  // excessive calls when cTypes is being called multiple times during a parse.\n  var basicCTypes = words(\"int long char short double float unsigned signed \" +\n    \"void bool\");\n\n  // Do not use this. Use the objCTypes function below. This is global just to avoid\n  // excessive calls when objCTypes is being called multiple times during a parse.\n  var basicObjCTypes = words(\"SEL instancetype id Class Protocol BOOL\");\n\n  // Returns true if identifier is a \"C\" type.\n  // C type is defined as those that are reserved by the compiler (basicTypes),\n  // and those that end in _t (Reserved by POSIX for types)\n  // http://www.gnu.org/software/libc/manual/html_node/Reserved-Names.html\n  function cTypes(identifier) {\n    return contains(basicCTypes, identifier) || /.+_t$/.test(identifier);\n  }\n\n  // Returns true if identifier is a \"Objective C\" type.\n  function objCTypes(identifier) {\n    return cTypes(identifier) || contains(basicObjCTypes, identifier);\n  }\n\n  var cBlockKeywords = \"case do else for if switch while struct enum union\";\n  var cDefKeywords = \"struct enum union\";\n\n  function cppHook(stream, state) {\n    if (!state.startOfLine) return false\n    for (var ch, next = null; ch = stream.peek();) {\n      if (ch == \"\\\\\" && stream.match(/^.$/)) {\n        next = cppHook\n        break\n      } else if (ch == \"/\" && stream.match(/^\\/[\\/\\*]/, false)) {\n        break\n      }\n      stream.next()\n    }\n    state.tokenize = next\n    return \"meta\"\n  }\n\n  function pointerHook(_stream, state) {\n    if (state.prevToken == \"type\") return \"type\";\n    return false;\n  }\n\n  // For C and C++ (and ObjC): identifiers starting with __\n  // or _ followed by a capital letter are reserved for the compiler.\n  function cIsReservedIdentifier(token) {\n    if (!token || token.length < 2) return false;\n    if (token[0] != '_') return false;\n    return (token[1] == '_') || (token[1] !== token[1].toLowerCase());\n  }\n\n  function cpp14Literal(stream) {\n    stream.eatWhile(/[\\w\\.']/);\n    return \"number\";\n  }\n\n  function cpp11StringHook(stream, state) {\n    stream.backUp(1);\n    // Raw strings.\n    if (stream.match(/(R|u8R|uR|UR|LR)/)) {\n      var match = stream.match(/\"([^\\s\\\\()]{0,16})\\(/);\n      if (!match) {\n        return false;\n      }\n      state.cpp11RawStringDelim = match[1];\n      state.tokenize = tokenRawString;\n      return tokenRawString(stream, state);\n    }\n    // Unicode strings/chars.\n    if (stream.match(/(u8|u|U|L)/)) {\n      if (stream.match(/[\"']/, /* eat */ false)) {\n        return \"string\";\n      }\n      return false;\n    }\n    // Ignore this hook.\n    stream.next();\n    return false;\n  }\n\n  function cppLooksLikeConstructor(word) {\n    var lastTwo = /(\\w+)::~?(\\w+)$/.exec(word);\n    return lastTwo && lastTwo[1] == lastTwo[2];\n  }\n\n  // C#-style strings where \"\" escapes a quote.\n  function tokenAtString(stream, state) {\n    var next;\n    while ((next = stream.next()) != null) {\n      if (next == '\"' && !stream.eat('\"')) {\n        state.tokenize = null;\n        break;\n      }\n    }\n    return \"string\";\n  }\n\n  // C++11 raw string literal is <prefix>\"<delim>( anything )<delim>\", where\n  // <delim> can be a string up to 16 characters long.\n  function tokenRawString(stream, state) {\n    // Escape characters that have special regex meanings.\n    var delim = state.cpp11RawStringDelim.replace(/[^\\w\\s]/g, '\\\\$&');\n    var match = stream.match(new RegExp(\".*?\\\\)\" + delim + '\"'));\n    if (match)\n      state.tokenize = null;\n    else\n      stream.skipToEnd();\n    return \"string\";\n  }\n\n  function def(mimes, mode) {\n    if (typeof mimes == \"string\") mimes = [mimes];\n    var words = [];\n    function add(obj) {\n      if (obj) for (var prop in obj) if (obj.hasOwnProperty(prop))\n        words.push(prop);\n    }\n    add(mode.keywords);\n    add(mode.types);\n    add(mode.builtin);\n    add(mode.atoms);\n    if (words.length) {\n      mode.helperType = mimes[0];\n      CodeMirror.registerHelper(\"hintWords\", mimes[0], words);\n    }\n\n    for (var i = 0; i < mimes.length; ++i)\n      CodeMirror.defineMIME(mimes[i], mode);\n  }\n\n  def([\"text/x-csrc\", \"text/x-c\", \"text/x-chdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords),\n    types: cTypes,\n    blockKeywords: words(cBlockKeywords),\n    defKeywords: words(cDefKeywords),\n    typeFirstDefinitions: true,\n    atoms: words(\"NULL true false\"),\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n    },\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def([\"text/x-c++src\", \"text/x-c++hdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords + \" \" + cppKeywords),\n    types: cTypes,\n    blockKeywords: words(cBlockKeywords + \" class try catch\"),\n    defKeywords: words(cDefKeywords + \" class namespace\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false NULL nullptr\"),\n    dontIndentStatements: /^template$/,\n    isIdentifierChar: /[\\w\\$_~\\xa1-\\uffff]/,\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n      \"u\": cpp11StringHook,\n      \"U\": cpp11StringHook,\n      \"L\": cpp11StringHook,\n      \"R\": cpp11StringHook,\n      \"0\": cpp14Literal,\n      \"1\": cpp14Literal,\n      \"2\": cpp14Literal,\n      \"3\": cpp14Literal,\n      \"4\": cpp14Literal,\n      \"5\": cpp14Literal,\n      \"6\": cpp14Literal,\n      \"7\": cpp14Literal,\n      \"8\": cpp14Literal,\n      \"9\": cpp14Literal,\n      token: function(stream, state, style) {\n        if (style == \"variable\" && stream.peek() == \"(\" &&\n            (state.prevToken == \";\" || state.prevToken == null ||\n             state.prevToken == \"}\") &&\n            cppLooksLikeConstructor(stream.current()))\n          return \"def\";\n      }\n    },\n    namespaceSeparator: \"::\",\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-java\", {\n    name: \"clike\",\n    keywords: words(\"abstract assert break case catch class const continue default \" +\n                    \"do else enum extends final finally for goto if implements import \" +\n                    \"instanceof interface native new package private protected public \" +\n                    \"return static strictfp super switch synchronized this throw throws transient \" +\n                    \"try volatile while @interface\"),\n    types: words(\"byte short int long float double boolean char void Boolean Byte Character Double Float \" +\n                 \"Integer Long Number Object Short String StringBuffer StringBuilder Void\"),\n    blockKeywords: words(\"catch class do else finally for if switch try while\"),\n    defKeywords: words(\"class interface enum @interface\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+\\.?\\d*|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n    hooks: {\n      \"@\": function(stream) {\n        // Don't match the @interface keyword.\n        if (stream.match('interface', false)) return false;\n\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    },\n    modeProps: {fold: [\"brace\", \"import\"]}\n  });\n\n  def(\"text/x-csharp\", {\n    name: \"clike\",\n    keywords: words(\"abstract as async await base break case catch checked class const continue\" +\n                    \" default delegate do else enum event explicit extern finally fixed for\" +\n                    \" foreach goto if implicit in interface internal is lock namespace new\" +\n                    \" operator out override params private protected public readonly ref return sealed\" +\n                    \" sizeof stackalloc static struct switch this throw try typeof unchecked\" +\n                    \" unsafe using virtual void volatile while add alias ascending descending dynamic from get\" +\n                    \" global group into join let orderby partial remove select set value var yield\"),\n    types: words(\"Action Boolean Byte Char DateTime DateTimeOffset Decimal Double Func\" +\n                 \" Guid Int16 Int32 Int64 Object SByte Single String Task TimeSpan UInt16 UInt32\" +\n                 \" UInt64 bool byte char decimal double short int long object\"  +\n                 \" sbyte float string ushort uint ulong\"),\n    blockKeywords: words(\"catch class do else finally for foreach if struct switch try while\"),\n    defKeywords: words(\"class interface namespace struct var\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    hooks: {\n      \"@\": function(stream, state) {\n        if (stream.eat('\"')) {\n          state.tokenize = tokenAtString;\n          return tokenAtString(stream, state);\n        }\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    }\n  });\n\n  function tokenTripleString(stream, state) {\n    var escaped = false;\n    while (!stream.eol()) {\n      if (!escaped && stream.match('\"\"\"')) {\n        state.tokenize = null;\n        break;\n      }\n      escaped = stream.next() == \"\\\\\" && !escaped;\n    }\n    return \"string\";\n  }\n\n  function tokenNestedComment(depth) {\n    return function (stream, state) {\n      var ch\n      while (ch = stream.next()) {\n        if (ch == \"*\" && stream.eat(\"/\")) {\n          if (depth == 1) {\n            state.tokenize = null\n            break\n          } else {\n            state.tokenize = tokenNestedComment(depth - 1)\n            return state.tokenize(stream, state)\n          }\n        } else if (ch == \"/\" && stream.eat(\"*\")) {\n          state.tokenize = tokenNestedComment(depth + 1)\n          return state.tokenize(stream, state)\n        }\n      }\n      return \"comment\"\n    }\n  }\n\n  def(\"text/x-scala\", {\n    name: \"clike\",\n    keywords: words(\n      /* scala */\n      \"abstract case catch class def do else extends final finally for forSome if \" +\n      \"implicit import lazy match new null object override package private protected return \" +\n      \"sealed super this throw trait try type val var while with yield _ \" +\n\n      /* package scala */\n      \"assert assume require print println printf readLine readBoolean readByte readShort \" +\n      \"readChar readInt readLong readFloat readDouble\"\n    ),\n    types: words(\n      \"AnyVal App Application Array BufferedIterator BigDecimal BigInt Char Console Either \" +\n      \"Enumeration Equiv Error Exception Fractional Function IndexedSeq Int Integral Iterable \" +\n      \"Iterator List Map Numeric Nil NotNull Option Ordered Ordering PartialFunction PartialOrdering \" +\n      \"Product Proxy Range Responder Seq Serializable Set Specializable Stream StringBuilder \" +\n      \"StringContext Symbol Throwable Traversable TraversableOnce Tuple Unit Vector \" +\n\n      /* package java.lang */\n      \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void\"\n    ),\n    multiLineStrings: true,\n    blockKeywords: words(\"catch class enum do else finally for forSome if match switch try while\"),\n    defKeywords: words(\"class enum def object package trait type val var\"),\n    atoms: words(\"true false null\"),\n    indentStatements: false,\n    indentSwitch: false,\n    isOperatorChar: /[+\\-*&%=<>!?|\\/#:@]/,\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function(stream, state) {\n        if (!stream.match('\"\"')) return false;\n        state.tokenize = tokenTripleString;\n        return state.tokenize(stream, state);\n      },\n      \"'\": function(stream) {\n        stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n        return \"atom\";\n      },\n      \"=\": function(stream, state) {\n        var cx = state.context\n        if (cx.type == \"}\" && cx.align && stream.eat(\">\")) {\n          state.context = new Context(cx.indented, cx.column, cx.type, cx.info, null, cx.prev)\n          return \"operator\"\n        } else {\n          return false\n        }\n      },\n\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false\n        state.tokenize = tokenNestedComment(1)\n        return state.tokenize(stream, state)\n      }\n    },\n    modeProps: {closeBrackets: {pairs: '()[]{}\"\"', triples: '\"'}}\n  });\n\n  function tokenKotlinString(tripleString){\n    return function (stream, state) {\n      var escaped = false, next, end = false;\n      while (!stream.eol()) {\n        if (!tripleString && !escaped && stream.match('\"') ) {end = true; break;}\n        if (tripleString && stream.match('\"\"\"')) {end = true; break;}\n        next = stream.next();\n        if(!escaped && next == \"$\" && stream.match('{'))\n          stream.skipTo(\"}\");\n        escaped = !escaped && next == \"\\\\\" && !tripleString;\n      }\n      if (end || !tripleString)\n        state.tokenize = null;\n      return \"string\";\n    }\n  }\n\n  def(\"text/x-kotlin\", {\n    name: \"clike\",\n    keywords: words(\n      /*keywords*/\n      \"package as typealias class interface this super val operator \" +\n      \"var fun for is in This throw return annotation \" +\n      \"break continue object if else while do try when !in !is as? \" +\n\n      /*soft keywords*/\n      \"file import where by get set abstract enum open inner override private public internal \" +\n      \"protected catch finally out final vararg reified dynamic companion constructor init \" +\n      \"sealed field property receiver param sparam lateinit data inline noinline tailrec \" +\n      \"external annotation crossinline const operator infix suspend actual expect setparam\"\n    ),\n    types: words(\n      /* package java.lang */\n      \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void Annotation Any BooleanArray \" +\n      \"ByteArray Char CharArray DeprecationLevel DoubleArray Enum FloatArray Function Int IntArray Lazy \" +\n      \"LazyThreadSafetyMode LongArray Nothing ShortArray Unit\"\n    ),\n    intendSwitch: false,\n    indentStatements: false,\n    multiLineStrings: true,\n    number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+(\\.\\d+)?|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n    blockKeywords: words(\"catch class do else finally for if where try while enum\"),\n    defKeywords: words(\"class val var object interface fun\"),\n    atoms: words(\"true false null this\"),\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '*': function(_stream, state) {\n        return state.prevToken == '.' ? 'variable' : 'operator';\n      },\n      '\"': function(stream, state) {\n        state.tokenize = tokenKotlinString(stream.match('\"\"'));\n        return state.tokenize(stream, state);\n      },\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false;\n        state.tokenize = tokenNestedComment(1);\n        return state.tokenize(stream, state)\n      },\n      indent: function(state, ctx, textAfter, indentUnit) {\n        var firstChar = textAfter && textAfter.charAt(0);\n        if ((state.prevToken == \"}\" || state.prevToken == \")\") && textAfter == \"\")\n          return state.indented;\n        if ((state.prevToken == \"operator\" && textAfter != \"}\" && state.context.type != \"}\") ||\n          state.prevToken == \"variable\" && firstChar == \".\" ||\n          (state.prevToken == \"}\" || state.prevToken == \")\") && firstChar == \".\")\n          return indentUnit * 2 + ctx.indented;\n        if (ctx.align && ctx.type == \"}\")\n          return ctx.indented + (state.context.type == (textAfter || \"\").charAt(0) ? 0 : indentUnit);\n      }\n    },\n    modeProps: {closeBrackets: {triples: '\"'}}\n  });\n\n  def([\"x-shader/x-vertex\", \"x-shader/x-fragment\"], {\n    name: \"clike\",\n    keywords: words(\"sampler1D sampler2D sampler3D samplerCube \" +\n                    \"sampler1DShadow sampler2DShadow \" +\n                    \"const attribute uniform varying \" +\n                    \"break continue discard return \" +\n                    \"for while do if else struct \" +\n                    \"in out inout\"),\n    types: words(\"float int bool void \" +\n                 \"vec2 vec3 vec4 ivec2 ivec3 ivec4 bvec2 bvec3 bvec4 \" +\n                 \"mat2 mat3 mat4\"),\n    blockKeywords: words(\"for while do if else struct\"),\n    builtin: words(\"radians degrees sin cos tan asin acos atan \" +\n                    \"pow exp log exp2 sqrt inversesqrt \" +\n                    \"abs sign floor ceil fract mod min max clamp mix step smoothstep \" +\n                    \"length distance dot cross normalize ftransform faceforward \" +\n                    \"reflect refract matrixCompMult \" +\n                    \"lessThan lessThanEqual greaterThan greaterThanEqual \" +\n                    \"equal notEqual any all not \" +\n                    \"texture1D texture1DProj texture1DLod texture1DProjLod \" +\n                    \"texture2D texture2DProj texture2DLod texture2DProjLod \" +\n                    \"texture3D texture3DProj texture3DLod texture3DProjLod \" +\n                    \"textureCube textureCubeLod \" +\n                    \"shadow1D shadow2D shadow1DProj shadow2DProj \" +\n                    \"shadow1DLod shadow2DLod shadow1DProjLod shadow2DProjLod \" +\n                    \"dFdx dFdy fwidth \" +\n                    \"noise1 noise2 noise3 noise4\"),\n    atoms: words(\"true false \" +\n                \"gl_FragColor gl_SecondaryColor gl_Normal gl_Vertex \" +\n                \"gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 \" +\n                \"gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 \" +\n                \"gl_FogCoord gl_PointCoord \" +\n                \"gl_Position gl_PointSize gl_ClipVertex \" +\n                \"gl_FrontColor gl_BackColor gl_FrontSecondaryColor gl_BackSecondaryColor \" +\n                \"gl_TexCoord gl_FogFragCoord \" +\n                \"gl_FragCoord gl_FrontFacing \" +\n                \"gl_FragData gl_FragDepth \" +\n                \"gl_ModelViewMatrix gl_ProjectionMatrix gl_ModelViewProjectionMatrix \" +\n                \"gl_TextureMatrix gl_NormalMatrix gl_ModelViewMatrixInverse \" +\n                \"gl_ProjectionMatrixInverse gl_ModelViewProjectionMatrixInverse \" +\n                \"gl_TexureMatrixTranspose gl_ModelViewMatrixInverseTranspose \" +\n                \"gl_ProjectionMatrixInverseTranspose \" +\n                \"gl_ModelViewProjectionMatrixInverseTranspose \" +\n                \"gl_TextureMatrixInverseTranspose \" +\n                \"gl_NormalScale gl_DepthRange gl_ClipPlane \" +\n                \"gl_Point gl_FrontMaterial gl_BackMaterial gl_LightSource gl_LightModel \" +\n                \"gl_FrontLightModelProduct gl_BackLightModelProduct \" +\n                \"gl_TextureColor gl_EyePlaneS gl_EyePlaneT gl_EyePlaneR gl_EyePlaneQ \" +\n                \"gl_FogParameters \" +\n                \"gl_MaxLights gl_MaxClipPlanes gl_MaxTextureUnits gl_MaxTextureCoords \" +\n                \"gl_MaxVertexAttribs gl_MaxVertexUniformComponents gl_MaxVaryingFloats \" +\n                \"gl_MaxVertexTextureImageUnits gl_MaxTextureImageUnits \" +\n                \"gl_MaxFragmentUniformComponents gl_MaxCombineTextureImageUnits \" +\n                \"gl_MaxDrawBuffers\"),\n    indentSwitch: false,\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-nesc\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \" as atomic async call command component components configuration event generic \" +\n                    \"implementation includes interface module new norace nx_struct nx_union post provides \" +\n                    \"signal task uses abstract extends\"),\n    types: cTypes,\n    blockKeywords: words(cBlockKeywords),\n    atoms: words(\"null true false\"),\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-objectivec\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \" \" + objCKeywords),\n    types: objCTypes,\n    builtin: words(objCBuiltins),\n    blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized\"),\n    defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class\"),\n    dontIndentStatements: /^@.*$/,\n    typeFirstDefinitions: true,\n    atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n    },\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-objectivec++\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \" \" + objCKeywords + \" \" + cppKeywords),\n    types: objCTypes,\n    builtin: words(objCBuiltins),\n    blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized class try catch\"),\n    defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class class namespace\"),\n    dontIndentStatements: /^@.*$|^template$/,\n    typeFirstDefinitions: true,\n    atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n      \"u\": cpp11StringHook,\n      \"U\": cpp11StringHook,\n      \"L\": cpp11StringHook,\n      \"R\": cpp11StringHook,\n      \"0\": cpp14Literal,\n      \"1\": cpp14Literal,\n      \"2\": cpp14Literal,\n      \"3\": cpp14Literal,\n      \"4\": cpp14Literal,\n      \"5\": cpp14Literal,\n      \"6\": cpp14Literal,\n      \"7\": cpp14Literal,\n      \"8\": cpp14Literal,\n      \"9\": cpp14Literal,\n      token: function(stream, state, style) {\n        if (style == \"variable\" && stream.peek() == \"(\" &&\n            (state.prevToken == \";\" || state.prevToken == null ||\n             state.prevToken == \"}\") &&\n            cppLooksLikeConstructor(stream.current()))\n          return \"def\";\n      }\n    },\n    namespaceSeparator: \"::\",\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-squirrel\", {\n    name: \"clike\",\n    keywords: words(\"base break clone continue const default delete enum extends function in class\" +\n                    \" foreach local resume return this throw typeof yield constructor instanceof static\"),\n    types: cTypes,\n    blockKeywords: words(\"case catch class else for foreach if switch try while\"),\n    defKeywords: words(\"function local class\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  // Ceylon Strings need to deal with interpolation\n  var stringTokenizer = null;\n  function tokenCeylonString(type) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while (!stream.eol()) {\n        if (!escaped && stream.match('\"') &&\n              (type == \"single\" || stream.match('\"\"'))) {\n          end = true;\n          break;\n        }\n        if (!escaped && stream.match('``')) {\n          stringTokenizer = tokenCeylonString(type);\n          end = true;\n          break;\n        }\n        next = stream.next();\n        escaped = type == \"single\" && !escaped && next == \"\\\\\";\n      }\n      if (end)\n          state.tokenize = null;\n      return \"string\";\n    }\n  }\n\n  def(\"text/x-ceylon\", {\n    name: \"clike\",\n    keywords: words(\"abstracts alias assembly assert assign break case catch class continue dynamic else\" +\n                    \" exists extends finally for function given if import in interface is let module new\" +\n                    \" nonempty object of out outer package return satisfies super switch then this throw\" +\n                    \" try value void while\"),\n    types: function(word) {\n        // In Ceylon all identifiers that start with an uppercase are types\n        var first = word.charAt(0);\n        return (first === first.toUpperCase() && first !== first.toLowerCase());\n    },\n    blockKeywords: words(\"case catch class dynamic else finally for function if interface module new object switch try while\"),\n    defKeywords: words(\"class dynamic function interface module object package value\"),\n    builtin: words(\"abstract actual aliased annotation by default deprecated doc final formal late license\" +\n                   \" native optional sealed see serializable shared suppressWarnings tagged throws variable\"),\n    isPunctuationChar: /[\\[\\]{}\\(\\),;\\:\\.`]/,\n    isOperatorChar: /[+\\-*&%=<>!?|^~:\\/]/,\n    numberStart: /[\\d#$]/,\n    number: /^(?:#[\\da-fA-F_]+|\\$[01_]+|[\\d_]+[kMGTPmunpf]?|[\\d_]+\\.[\\d_]+(?:[eE][-+]?\\d+|[kMGTPmunpf]|)|)/i,\n    multiLineStrings: true,\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null larger smaller equal empty finished\"),\n    indentSwitch: false,\n    styleDefs: false,\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function(stream, state) {\n          state.tokenize = tokenCeylonString(stream.match('\"\"') ? \"triple\" : \"single\");\n          return state.tokenize(stream, state);\n        },\n      '`': function(stream, state) {\n          if (!stringTokenizer || !stream.match('`')) return false;\n          state.tokenize = stringTokenizer;\n          stringTokenizer = null;\n          return state.tokenize(stream, state);\n        },\n      \"'\": function(stream) {\n        stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n        return \"atom\";\n      },\n      token: function(_stream, state, style) {\n          if ((style == \"variable\" || style == \"type\") &&\n              state.prevToken == \".\") {\n            return \"variable-2\";\n          }\n        }\n    },\n    modeProps: {\n        fold: [\"brace\", \"import\"],\n        closeBrackets: {triples: '\"'}\n    }\n  });\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","Context","indented","column","type","info","align","prev","pushContext","state","col","indent","context","popContext","t","typeBefore","stream","pos","prevToken","test","string","slice","typeAtEndOfLine","indentation","isTopScope","words","str","obj","split","i","length","contains","word","propertyIsEnumerable","cTypes","identifier","basicCTypes","objCTypes","basicObjCTypes","cppHook","startOfLine","ch","next","peek","match","tokenize","pointerHook","_stream","cIsReservedIdentifier","token","toLowerCase","cpp14Literal","eatWhile","cpp11StringHook","backUp","cpp11RawStringDelim","tokenRawString","cppLooksLikeConstructor","lastTwo","exec","tokenAtString","eat","delim","replace","RegExp","skipToEnd","def","mimes","mode","add","prop","hasOwnProperty","push","keywords","types","builtin","atoms","helperType","registerHelper","defineMIME","tokenTripleString","escaped","eol","tokenNestedComment","depth","tokenKotlinString","tripleString","end","skipTo","tokenCeylonString","stringTokenizer","defineMode","config","parserConfig","tokenBase","hooks","result","tokenString","isPunctuationChar","curPunc","numberStart","number","tokenComment","isOperatorChar","isIdentifierChar","namespaceSeparator","cur","current","blockKeywords","defKeywords","isDefKeyword","isReservedIdentifier","quote","multiLineStrings","maybeEnd","maybeEOL","typeFirstDefinitions","indentUnit","statementIndentUnit","dontAlignCalls","indentStatements","startState","basecolumn","ctx","sol","eatSpace","style","start","undefined","styleDefs","textAfter","Pass","firstChar","charAt","closing","dontIndentStatements","hook","switchBlock","allmanIndentation","electricInput","indentSwitch","blockCommentStart","blockCommentEnd","blockCommentContinue","lineComment","fold","name","cKeywords","cBlockKeywords","cDefKeywords","modeProps","@","\"","'","=","cx","/","closeBrackets","pairs","triples","intendSwitch","*","objCBuiltins","first","toUpperCase","`"]
}
