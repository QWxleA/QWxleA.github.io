{"version":3,"sources":["rewrite_cljc/node/comment.cljc"],"mappings":";AAOA,AAAA,AAAA,AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,2DAAA,3DAAWsE;;AAAX,AAAA,YAAA,RAYaa;AAZb,AAaI,OAAaA;;;AAbjB,CAAA,AAAA,oFAAA,WAAAnF,mBAAAC,lHAAWqE;;AAAX,AAAA,IAAAtE,yBAAA;AAAA,AAAA,OAAAA,8DAAAC,gBAAA;;;AAAA,CAAA,AAAA,oFAAA,WAAAC,mBAAAC,OAAAC,zHAAWkE;;AAAX,AAAA,IAAApE,yBAAA;AAAA,AAAA,IAAAG,WAAAF;IAAAE,eAAA,EAAA,CAAAA,oBAAAC,oBAAA,AAAAD,aAAA;AAAA,AAAA,QAAAA;KAAA;AAAAE;;;;AAAA,OAAAC,4CAAAC,gBAAAN,OAAAC;;;;;AAAA,CAAA,AAAA,yFAAA,WAAAM,mBAAAC,gBAAAC,vIAAW0D;;AAAX,AAAA,IAAA5D,yBAAA;AAAA,AAAA,OAAAG,+CAAA,WAAAC,kBAAAC;AAAA,AAAA,IAAAC,aAAAD;IAAAE,kBAAA,AAAAC,4CAAAF,WAAA,IAAA;IAAAG,kBAAA,AAAAD,4CAAAF,WAAA,IAAA;AAAA,AAAA,QAAAL,gDAAAA,8CAAAG,kBAAAG,gBAAAE,mBAAAR,0BAAAG,kBAAAG,gBAAAE;GAAAP,mBAAAF;;;AAAA,CAAA,AAAA,gGAAA,WAAAU,mBAAAC,qBAAAC,nJAAWgD;;AAAX,AAAA,IAAAlD,yBAAA;AAAA,AAAA,IAAAG,wBAAA,WAAAC;AAAA,AAAA,OAAAC,+BAAAJ,qBAAA,oBAAA,GAAA,IAAA,GAAAC,mBAAAE;;AAAA,AAAA,OAAAC,+BAAAJ,qBAAAE,sBAAA,0CAAA,KAAA,IAAAD,mBAAA,AAAAI,+CAAA,mFAAA,KAAAC,2BAAA,KAAA,EAAA,IAAA,AAAAA,sCAAA,CAAA,+CAAApB,UAAA,eAAAE;;;AAAA,CAAA,AAAA,wFAAA,WAAAmB,nGAAW0C;;AAAX,AAAA,IAAA1C,eAAA;AAAA,AAAA,YAAAC,qBAAA,IAAAD,aAAA,EAAA,mFAAA,uDAAA,kBAAAnB,iBAAA,AAAAqB,oBAAArB,iBAAA,AAAAsB;;;AAAA,CAAA,AAAA,gFAAA,WAAAC,3FAAWsC;;AAAX,AAAA,IAAAtC,yBAAA;AAAA,AAAAC;;;AAAA,CAAA,AAAA,sFAAA,WAAAC,jGAAWoC;;AAAX,AAAA,IAAApC,yBAAA;AAAA,AAAA,kDAAA3B,SAAA0B,cAAAxB,gBAAA0B,7EAAWmC;;;AAAX,CAAA,AAAA,oFAAA,WAAAlC,/FAAWkC;;AAAX,AAAA,IAAAlC,yBAAA;AAAA,AAAA,QAAA,IAAA,AAAAC,gBAAA5B;;;AAAA,CAAA,AAAA,gFAAA,WAAA6B,3FAAWgC;;AAAX,AAAA,IAAAhC,yBAAA;AAAA,AAAA,IAAAC,kBAAAJ;AAAA,AAAA,GAAA,GAAA,CAAAI,mBAAA;AAAAA;;AAAA,IAAAA,sBAAA,AAAA,WAAAC;AAAA,AAAA,QAAA,YAAA,AAAAC,8BAAAD;GAAAF;AAAA,AAAA,CAAAH,gBAAAI;;AAAAA;;;;AAAA,CAAA,AAAA,kFAAA,WAAAG,UAAAC,vGAAW2B;;AAAX,AAAA,IAAA5B,gBAAA;AAAA,AAAA,SAAA,GAAA,CAAAC,cAAA,aAAA,EAAA,CAAA,AAAAD,8BAAA,AAAAC,6BAAA,EAAA,AAAAC,6CAAA,AAAAF,gBAAA,AAAAC,mBAAA,AAAAC,6CAAA,AAAAF,uBAAA,AAAAC;;;AAAA,CAAA,AAAA,oFAAAE,pFAAWyB;;AAAX,CAAA,AAAA,+FAAA,/FAAWA,0GAEHW;;AAFR,AAAA,YAAA,RAEQA;AAFR,AAAA;;;AAAA,CAAA,AAAA,iHAAA,jHAAWX,4HAGSW;;AAHpB,AAAA,YAAA,RAGoBA;AAHpB,AAAA;;;AAAA,CAAA,AAAA,iGAAA,jGAAWX,4GAIDW;;AAJV,AAAA,YAAA,RAIUA;AAJV,AAKI,MAAO,gDAAA,wBAAA,xEAACC;;;AALZ,CAAA,AAAA,kGAAA,lGAAWZ,6GAMAW;;AANX,AAAA,YAAA,RAMWA;AANX,AAOI,QAAA,MAAK,AAAC5C,gBAAM9B;;;AAPhB,CAAA,AAAA,kGAAA,lGAAW+D,6GAQAW;;AARX,AAAA,YAAA,RAQWA;AARX,AASI,QAAA,gDAAS1E;;;AATb,CAAA,AAAA,iFAAA,WAAAuC,mBAAAC,/GAAWuB;;AAAX,AAAA,IAAAxB,yBAAA;AAAA,AAAA,GAAA,AAAAE,0BAAA,iFAAA,mEAAAD;AAAA,OAAAE,+CAAA,AAAAC,qBAAA,AAAAC,6CAAA,mCAAAL,wBAAAb,eAAAc;;AAAA,kDAAAxC,SAAA0B,cAAA,AAAAmB,oBAAA,AAAAH,+CAAAxC,gBAAAsC,kBAAA,lKAAWuB;;;;AAAX,CAAA,AAAA,sGAAA,WAAAjB,mBAAAlD,pIAAWmE;;AAAX,AAAA,IAAAjB,yBAAA;AAAA,AAAA,IAAAC,WAAAnD;IAAAmD,eAAA,EAAA,CAAAA,oBAAAhD,oBAAA,AAAAgD,aAAA;AAAA,AAAA,QAAAA;KAAA;AAAA;;;;AAAA,OAAAN,0BAAAvC,gBAAAN;;;;;AAAA,CAAA,AAAA,wFAAA,WAAAoD,mBAAAC,gBAAA5B,tIAAW0C;;AAAX,AAAA,IAAAf,yBAAA;AAAA,AAAA,IAAAE,cAAAC;IAAAC,cAAAH;AAAA,AAAA,oBAAA,CAAAC,4CAAAA,0CAAA,+CAAAE,eAAAF,sBAAA,+CAAAE;AAAA,kDAAA/B,SAAAK,cAAAxB,gBAAA,7EAAW6D;;AAAX,kDAAA/D,SAAA0B,cAAA,AAAA2B,8CAAAnD,gBAAA+C,gBAAA5B,UAAA,rJAAW0C;;;;AAAX,CAAA,AAAA,kFAAA,WAAAT,7FAAWS;;AAAX,AAAA,IAAAT,yBAAA;AAAA,AAAA,OAAAC,cAAA,AAAApC,+CAAA,mFAAA,KAAAqC,mBAAA,+CAAAxD,SAAA,eAAAE;;;AAAA,CAAA,AAAA,yFAAA,WAAAuD,mBAAApC,vHAAW0C;;AAAX,AAAA,IAAAN,yBAAA;AAAA,AAAA,kDAAAzD,SAAAqB,SAAAnB,gBAAA0B,xEAAWmC;;;AAAX,CAAA,AAAA,sFAAA,WAAAL,mBAAAC,pHAAWI;;AAAX,AAAA,IAAAL,yBAAA;AAAA,AAAA,GAAA,AAAAE,wBAAAD;AAAA,OAAAD,kEAAA,AAAAG,eAAAF,oBAAA,KAAA,AAAAE,eAAAF,oBAAA;;AAAA,OAAArD,+CAAAwD,gBAAAJ,uBAAAC;;;;AAAA,CAAA,AAAAI,iDAAA;AAAA,AAAA,AAAA;;;AAAA,CAAA,AAAAA,uDAAA;;AAAA,CAAA,AAAAA,4DAAA,WAAAC;AAAA,AAAA,YAAAC,eAAA,KAAA,wCAAA,KAAA,IAAA;;;AAAA,CAAA,AAAAF,+DAAA,WAAAC,mBAAAE;AAAA,AAAA,OAAAC,iBAAAD,qBAAA;;;AAAA;;;6CAAA,7CAAWM,kGAAaxE;AAAxB,AAAA,YAAA+D,wCAAA,KAAA,KAAA,ZAAwB/D;;;AAAxB;;;gDAAA,wDAAAoE,xGAAWK;AAAX,AAAA,IAAAJ,uBAAA,iBAAAC,WAAA,AAAA5B,+CAAA0B,SAAA;AAAA,AAAA,GAAA,AAAAG,wBAAAH;AAAA,OAAAxB,6CAAA,mCAAA0B;;AAAAA;;;AAAA,AAAA,YAAAP,sCAAA,AAAA,6EAAAK,UAAA,KAAA,AAAAvB,oBAAAwB,sBAAA;;;AAAAN,AAeA,AAACc,iDAAqBd;AAItB;;;yCAAA,zCAAMgB,0FAEH/E;AAFH,AAAA,oBAGS,qBAAA,rBAACgF,uCAA8BhF;AAHxC;AAAA,AAAA,MAAA,KAAA8E,MAAA;;;AAIE,OAACN,2CAAcxE;;AAEjB;;;2CAAA,3CAAMiF,8FAEHC;AAFH,AAGE,0FAAA,nFAAC7C,6CAAE,AAAC8C,gCAASD","names":["this__5340__auto__","k__5341__auto__","this__5342__auto__","k77467","else__5343__auto__","G__77473","cljs.core/Keyword","s","cljs.core.get","__extmap","this__5360__auto__","f__5361__auto__","init__5362__auto__","cljs.core.reduce","ret__5363__auto__","p__77474","vec__77475","k__5364__auto__","cljs.core.nth","v__5365__auto__","this__5355__auto__","writer__5356__auto__","opts__5357__auto__","pr-pair__5358__auto__","keyval__5359__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__77466","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__5338__auto__","__meta","this__5335__auto__","__hash","this__5344__auto__","cljs.core/count","this__5336__auto__","h__5152__auto__","coll__5337__auto__","cljs.core/hash-unordered-coll","this77468","other77469","cljs.core._EQ_","cljs.core/PROTOCOL_SENTINEL","this__5350__auto__","k__5351__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__5347__auto__","G__77489","this__5348__auto__","k__5349__auto__","pred__77490","cljs.core/keyword-identical?","expr__77491","cljs.core.assoc","this__5353__auto__","cljs.core/seq","cljs.core/MapEntry","this__5339__auto__","this__5345__auto__","entry__5346__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","rewrite-cljc.node.comment/CommentNode","this__5386__auto__","cljs.core/List","writer__5387__auto__","cljs.core/-write","G__77471","extmap__5382__auto__","G__77495","cljs.core/record?","rewrite-cljc.node.comment/->CommentNode","rewrite-cljc.node.comment/map->CommentNode","_","cljs.core.ex_info","this","rewrite-cljc.node.protocols/make-printable!","js/Error","rewrite-cljc.node.comment/comment-node","cljs.core/re-matches","rewrite-cljc.node.comment/comment?","node","rewrite-cljc.node.protocols/tag"],"sourcesContent":["(ns ^:no-doc rewrite-cljc.node.comment\n  (:require [rewrite-cljc.node.protocols :as node]))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n;; ## Node\n\n(defrecord CommentNode [s]\n  node/Node\n  (tag [_] :comment)\n  (printable-only? [_] true)\n  (sexpr [_]\n    (throw (ex-info \"unsupported operation\" {})))\n  (length [_]\n    (+ 1 (count s)))\n  (string [_]\n    (str \";\" s))\n\n  Object\n  (toString [this]\n    (node/string this)))\n\n(node/make-printable! CommentNode)\n\n;; ## Constructor\n\n(defn comment-node\n  \"Create node representing a comment with text `s`.\"\n  [s]\n  {:pre [(re-matches #\"[^\\r\\n]*[\\r\\n]?\" s)]}\n  (->CommentNode s))\n\n(defn comment?\n  \"Returns true if `node` is a comment.\"\n  [node]\n  (= (node/tag node) :comment))\n"]}