{"version":3,"sources":["frontend/components/page.cljs"],"mappings":"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","names":["frontend.components.page/get-page-name","state","route-match","cljs.core/first","cljs.core.get_in","frontend.components.page/get-blocks","repo","page-name","block-id","root","G__71157","frontend.db/pull","frontend.db.model/get-page","opts","G__71159","G__71160","G__71161","frontend.db/get-paginated-blocks","frontend.components.page/open-first-block!","vec__71164","cljs.core.nth","_","blocks","sidebar?","preview?","and__4251__auto__","or__4253__auto__","cljs.core/contains?","frontend.state/get-current-route","cljs.core/not","block","cljs.core._EQ_","cljs.core/count","clojure.string/blank?","frontend.handler.editor.edit_block_BANG_","rum.core/lazy-build","rum.core/build-defc","daiquiri.core/create-element","frontend.components.page/page-blocks-inner","_blocks","hiccup","_block-uuid","rum.core/with-key","frontend.components.content/content","frontend.components.page/dummy-block","handler-fn","frontend.handler.editor.insert_first_page_block_if_not_exists_BANG_","js/setTimeout","e","frontend.util/ekey","attrs71173","cljs.core/map?","daiquiri.interpreter/element-attributes","daiquiri.normalize.merge_with_class","daiquiri.interpreter/interpret","frontend.components.page/add-button","args","frontend.handler.editor/api-insert-new-block!","frontend.ui.icon","p__71174","map__71175","cljs.core/--destructure-map","cljs.core.get","frontend.components.page/page-blocks-cp","rum.core/reactive","frontend.db-mixins/query","page-e","cljs.core/second","frontend.db/journal-page?","frontend.date/journal-title->int","frontend.date/today","frontend.state/pub-event!","config","block?","frontend.util/uuid-string?","cljs.core/uuid","page-blocks","cljs.core/empty?","document-mode?","frontend.state/sub","block-entity","G__71176","frontend.db/entity","hiccup-config","cljs.core.merge","frontend.components.editor/box","frontend.handler.common/config-with-document-mode","frontend.components.block/->hiccup","frontend.config/publishing?","frontend.components.page/contents-page","page","temp__5720__auto__","frontend.state/get-current-repo","cljs.core.into_array","iter__4652__auto__","s__71178","cljs.core/LazySeq","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","b__71180","cljs.core/chunk-buffer","i__71179","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__71177","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","frontend.components.page/today-queries","today?","queries","query","frontend.ui/catch-error","frontend.ui/component-error","cljs.core.pr_str","frontend.components.block/custom-query","frontend.components.page/page","frontend.components.page/tagged-pages","tag","pages","frontend.db/get-tag-pages","frontend.ui/foldable","frontend.util.format","s__71182","b__71184","i__71183","vec__71185","iter__71181","vec__71188","original-name","name","cljs.core.sort","reitit.frontend.easy.href","rum.core/build-defcs","cljs.core/deref","daiquiri.util/join-classes","rum.core/mark-sync-update","attrs71198","frontend.components.page/page-title","rum.core.local","cljs.core.assoc","cljs.core.atom","icon","title","_format","fmt-journal?","*title-value","*edit?","input-ref","rum.core/create-ref","hls-file?","frontend.extensions.pdf.assets/hls-file?","frontend.extensions.pdf.assets/human-hls-filename-display","frontend.date/journal-title->custom-format","old-name","confirm-fn","new-page-name","clojure.string/trim","merge?","cljs.core.not_EQ_","frontend.util/page-name-sanity-lc","G__71191","frontend.db/page-exists?","G__71192","frontend.ui/make-confirm-modal","p__71193","map__71194","_e","close-fn","frontend.handler.page/rename!","cljs.core/reset!","frontend.components.page.goog$module$goog$object.set","rum.core/deref","rollback-fn","frontend.handler.notification.show_BANG_","blur-fn","logseq.graph-parser.util/wrapped-by-quotes?","cljs.core.swap_BANG_","logseq.graph-parser.util/unquote-string","frontend.state/set-state!","frontend.state.set_modal_BANG_","frontend.util/stop","frontend.util/classnames","frontend.util/chrome?","value","frontend.util/evalue","frontend.components.page.goog$module$goog$object.get","frontend.util/right-click?","G__71195","G__71196","G__71197","frontend.state/sidebar-add-block!","frontend.components.page/page-mouse-over","*control-show?","*all-collapsed?","all-collapsed?","frontend.handler.editor/all-blocks-with-level","cljs.core.filter","b","frontend.handler.editor.collapsable_QMARK_","frontend.components.page/page-mouse-leave","frontend.components.page/page-blocks-collapse-control","event","frontend.handler.editor.expand_all_BANG_","frontend.handler.editor.collapse_all_BANG_","frontend.ui/rotating-arrow","p__71209","map__71210","option","path-page-name","frontend.state/get-current-page","map__71227","current-repo","format","G__71228","frontend.db/get-page-format","journal?","cljs.core/boolean","route-page-name","G__71232","G__71233","G__71229","G__71230","G__71235","G__71236","m","frontend.format.block.page_name__GT_map","G__71237","G__71238","frontend.db/transact!","G__71239","page-original-name","G__71240","frontend.date.journal_name","page-names","frontend.db.model.get_page_names_by_ids","cljs.core.map","logseq.graph-parser.text/build-data-value","frontend.mobile.util/is-native-platform?","frontend.util/mobile?","frontend.handler.plugin/lsp-enabled?","frontend.components.plugins/hook-ui-slot","frontend.components.plugins/hook-ui-items","frontend.components.block/breadcrumb","G__71241","G__71242","frontend.components.reference/references","frontend.components.hierarchy/structures","frontend.components.reference/unlinked-references","js/frontend","js/frontend.components","js/frontend.components.page","js/frontend.components.page.layout","frontend.components.page/layout","js/window.innerWidth","js/window.innerHeight","p__71245","map__71246","attrs71247","frontend.components.page/graph-filter-section","content","search-filters","open?","frontend.components.svg/caret-down","frontend.components.svg/caret-right","frontend.components.page/filter-expand-area","js/frontend.components.page.*n-hops","frontend.components.page/*n-hops","js/frontend.components.page.*focus-nodes","frontend.components.page/*focus-nodes","js/frontend.components.page.*graph-reset?","frontend.components.page/*graph-reset?","js/frontend.components.page.*journal?","frontend.components.page/*journal?","js/frontend.components.page.*orphan-pages?","frontend.components.page/*orphan-pages?","js/frontend.components.page.*builtin-pages?","frontend.components.page/*builtin-pages?","map__71249","frontend.components.page/graph-filters","graph","settings","n-hops","orphan-pages?","builtin-pages?","journal?'","rum.core/react","orphan-pages?'","builtin-pages?'","set-setting!","key","new-settings","frontend.handler.config/set-config!","search-graph-filters","focus-nodes","c1","s1","frontend.context.i18n.t","frontend.ui.toggle","frontend.ui/tippy","p1__71248#","frontend.ui/slider","frontend.state/clear-search-filters!","s__71255","b__71257","i__71256","iter__71254","q","frontend.state/remove-search-filter!","frontend.components.svg/close","frontend.handler.route/go-to-search!","js/frontend.components.page.last-node-position","frontend.components.page/last-node-position","frontend.components.page/graph-register-handlers","dark?","node","x","y","drag?","frontend.extensions.graph/on-click-handler","vec__71258","frontend.components.page/global-graph-inner","theme","width","height","reset?","cljs.core/integer?","frontend.handler.graph/n-hops","cljs.core.update","links","nodes","cljs.core/set","cljs.core.remove","link","G__71261","G__71262","frontend.extensions.graph/graph-2d","frontend.components.page/filter-graph-nodes","filters","filter-patterns","p1__71263#","cljs.core/re-pattern","frontend.util/regex-escape","p1__71264#","cljs.core/some","cljs.core/re-find","frontend.components.page/global-graph","frontend.mixins.event_mixin","frontend.mixins/listen","js/window","frontend.state/set-search-mode!","frontend.state/sub-graph-config-settings","frontend.handler.graph/build-global-graph","p1__71265#","frontend.components.page/page-graph-inner","rum.core/static","_page","frontend.components.page/page-graph","frontend.state/state","frontend.handler.graph/build-block-graph","frontend.handler.graph/build-page-graph","frontend.components.page/sort-pages-by","by-item","desc?","comp","cljs.core/>","cljs.core/<","clojure.string/lower-case","cljs.core.sort_by","attrs71266","frontend.components.page/checkbox-opt","checked","*input","indeterminate?","rum.core.use_effect_BANG_","attrs71267","attrs71268","frontend.components.page/sortable-title","cljs.core/name","frontend.components.svg/caret-up","frontend.components.page/batch-delete-dialog","orphaned-pages?","refresh-fn","s__71270","b__71272","i__71271","vec__71274","map__71277","iter__71269","vec__71283","map__71286","n","created-at","updated-at","backlinks","medley.core.indexed","frontend.components.block/page-cp","frontend.date/int->local-time-2","frontend.ui.button","seq__71287","chunk__71288","count__71289","i__71290","c__4679__auto__","cljs.core/chunk-first","cljs.core/next","frontend.handler.page/delete!","attrs71308","s__71451","b__71453","i__71452","map__71454","attrs71461","attrs71462","attrs71467","iter__71450","map__71468","frontend.components.page/all-pages","per-page-num","*sort-by-item","*desc?","*journal?","*results","*results-all","*checks","*pages","*current-page","*filter-fn","*search-key","*search-input","*indeterminate","G__71305","G__71306","G__71307","rum.core/derived-atom","checks","cljs.core/vals","cljs.core/every?","cljs.core/true?","mobile?","total-pages","js/Math.ceil","to-page","frontend.util.scroll_to_top","search-key","refresh-pages","frontend.handler.page/get-all-pages","cljs.core.map_indexed","idx","G__71309","cljs.core/memoize","sort-by-item","p1__71292#","G__71313","G__71314","G__71315","fexpr__71312","frontend.search.fuzzy_search","G__71320","cljs.core.take","cljs.core.drop","cljs.core.into","s__71322","b__71324","i__71323","map__71325","iter__71321","map__71326","selected","p__71328","vec__71329","v","s__71333","b__71335","i__71334","vec__71337","iter__71332","vec__71344","k","p1__71296#","search-fn","input","reset-fn","target","orphaned-pages","frontend.db.model/get-orphaned-pages","all?","seq__71434","chunk__71435","count__71436","i__71437","map__71444","map__71449","cljs.core/assoc","cljs.core/update"],"sourcesContent":["(ns frontend.components.page\n  (:require [clojure.string :as string]\n            [frontend.components.block :as component-block]\n            [frontend.components.content :as content]\n            [frontend.components.editor :as editor]\n            [frontend.components.hierarchy :as hierarchy]\n            [frontend.components.plugins :as plugins]\n            [frontend.components.reference :as reference]\n            [frontend.components.svg :as svg]\n            [frontend.config :as config]\n            [frontend.context.i18n :refer [t]]\n            [frontend.date :as date]\n            [frontend.db :as db]\n            [frontend.db-mixins :as db-mixins]\n            [frontend.db.model :as model]\n            [frontend.extensions.graph :as graph]\n            [frontend.extensions.pdf.assets :as pdf-assets]\n            [frontend.handler.common :as common-handler]\n            [frontend.handler.config :as config-handler]\n            [frontend.handler.editor :as editor-handler]\n            [frontend.handler.graph :as graph-handler]\n            [frontend.handler.notification :as notification]\n            [frontend.handler.page :as page-handler]\n            [frontend.handler.plugin :as plugin-handler]\n            [frontend.handler.route :as route-handler]\n            [frontend.mixins :as mixins]\n            [frontend.state :as state]\n            [logseq.graph-parser.text :as text]\n            [frontend.search :as search]\n            [frontend.ui :as ui]\n            [frontend.util :as util]\n            [goog.object :as gobj]\n            [reitit.frontend.easy :as rfe]\n            [medley.core :as medley]\n            [rum.core :as rum]\n            [logseq.graph-parser.util :as gp-util]\n            [frontend.format.block :as block]\n            [frontend.mobile.util :as mobile-util]))\n\n(defn- get-page-name\n  [state]\n  (let [route-match (first (:rum/args state))]\n    (get-in route-match [:parameters :path :name])))\n\n(defn- get-blocks\n  [repo page-name block-id]\n  (when page-name\n    (let [root (if block-id\n                 (db/pull [:block/uuid block-id])\n                 (model/get-page page-name))\n          opts (if block-id\n                 {:scoped-block-id (:db/id root)}\n                 {})]\n      (db/get-paginated-blocks repo (:db/id root) opts))))\n\n(defn- open-first-block!\n  [state]\n  (let [[_ blocks _ sidebar? preview?] (:rum/args state)]\n    (when (and\n           (or preview?\n               (not (contains? #{:home :all-journals} (state/get-current-route))))\n           (not sidebar?))\n      (let [block (first blocks)]\n        (when (and (= (count blocks) 1)\n                   (string/blank? (:block/content block))\n                   (not preview?))\n          (editor-handler/edit-block! block :max (:block/uuid block))))))\n  state)\n\n(rum/defc page-blocks-inner <\n  {:did-mount  open-first-block!\n   :did-update open-first-block!}\n  [page-name _blocks hiccup sidebar? _block-uuid]\n  [:div.page-blocks-inner {:style {:margin-left (if sidebar? 0 -20)}}\n   (rum/with-key\n     (content/content page-name\n                      {:hiccup   hiccup\n                       :sidebar? sidebar?})\n     (str page-name \"-hiccup\"))])\n\n(declare page)\n\n(rum/defc dummy-block\n  [page-name]\n  (let [handler-fn (fn []\n                     (let [block (editor-handler/insert-first-page-block-if-not-exists! page-name {:redirect? false})]\n                       (js/setTimeout #(editor-handler/edit-block! block :max (:block/uuid block)) 0)))]\n    [:div.ls-block.flex-1.flex-col.rounded-sm {:style {:width \"100%\"}}\n     [:div.flex.flex-row\n      [:div.flex.flex-row.items-center.mr-2.ml-1 {:style {:height 24}}\n       [:span.bullet-container.cursor\n        [:span.bullet]]]\n      [:div.flex.flex-1 {:tabindex 0\n                         :on-key-press (fn [e]\n                                         (when (= \"Enter\" (util/ekey e))\n                                           (handler-fn)))\n                         :on-click handler-fn}\n       [:span.opacity-50\n        \"Click here to edit...\"]]]]))\n\n(rum/defc add-button\n  [args]\n  [:div.flex-1.flex-col.rounded-sm.add-button-link-wrap\n   {:on-click (fn [] (editor-handler/api-insert-new-block! \"\" args))}\n   [:div.flex.flex-row\n    [:div.block {:style {:height      20\n                         :width       20\n                         :margin-left 2}}\n     [:a.add-button-link.block\n      (ui/icon \"circle-plus\")]]]])\n\n(rum/defc page-blocks-cp < rum/reactive db-mixins/query\n  {:will-mount (fn [state]\n                 (let [page-e (second (:rum/args state))\n                       page-name (:block/name page-e)]\n                   (when (and (db/journal-page? page-name)\n                              (>= (date/journal-title->int page-name)\n                                  (date/journal-title->int (date/today))))\n                     (state/pub-event! [:journal/insert-template page-name])))\n                 state)}\n  [repo page-e {:keys [sidebar?] :as config}]\n  (when page-e\n    (let [page-name (or (:block/name page-e)\n                        (str (:block/uuid page-e)))\n          block? (util/uuid-string? page-name)\n          block-id (and block? (uuid page-name))\n          page-blocks (get-blocks repo page-name block-id)]\n      (if (empty? page-blocks)\n        (dummy-block page-name)\n        (let [document-mode? (state/sub :document/mode?)\n              block-entity (db/entity (if block-id\n                                       [:block/uuid block-id]\n                                       [:block/name page-name]))\n              hiccup-config (merge\n                             {:id (if block? (str block-id) page-name)\n                              :db/id (:db/id block-entity)\n                              :block? block?\n                              :editor-box editor/box\n                              :document/mode? document-mode?}\n                             config)\n              hiccup-config (common-handler/config-with-document-mode hiccup-config)\n              hiccup (component-block/->hiccup page-blocks hiccup-config {})]\n          [:div\n           (page-blocks-inner page-name page-blocks hiccup sidebar? block-id)\n           (when-not config/publishing?\n             (let [args (if block-id\n                          {:block-uuid block-id}\n                          {:page page-name})]\n               (add-button args)))])))))\n\n(defn contents-page\n  [page]\n  (when-let [repo (state/get-current-repo)]\n    (page-blocks-cp repo page {:sidebar? true})))\n\n(rum/defc today-queries < rum/reactive\n  [repo today? sidebar?]\n  (when (and today? (not sidebar?))\n    (let [queries (state/sub [:config repo :default-queries :journals])]\n      (when (seq queries)\n        [:div#today-queries.mt-10\n         (for [query queries]\n           (rum/with-key\n             (ui/catch-error\n              (ui/component-error \"Failed default query:\" {:content (pr-str query)})\n              (component-block/custom-query {:attr {:class \"mt-10\"}\n                                             :editor-box editor/box\n                                             :page page} query))\n             (str repo \"-custom-query-\" (:query query))))]))))\n\n(defn tagged-pages\n  [repo tag]\n  (let [pages (db/get-tag-pages repo tag)]\n    (when (seq pages)\n      [:div.references.mt-6.flex-1.flex-row\n       [:div.content\n        (ui/foldable\n         [:h2.font-bold.opacity-50 (util/format \"Pages tagged with \\\"%s\\\"\" tag)]\n         [:ul.mt-2\n          (for [[original-name name] (sort pages)]\n            [:li {:key (str \"tagged-page-\" name)}\n             [:a {:href (rfe/href :page {:name name})}\n              original-name]])]\n         {:default-collapsed? false})]])))\n\n(rum/defcs page-title <\n  (rum/local false ::edit?)\n  {:init (fn [state]\n           (assoc state ::title-value (atom (nth (:rum/args state) 2))))}\n  [state page-name icon title _format fmt-journal?]\n  (when title\n    (let [*title-value (get state ::title-value)\n          *edit? (get state ::edit?)\n          input-ref (rum/create-ref)\n          repo (state/get-current-repo)\n          hls-file? (pdf-assets/hls-file? title)\n          title (if hls-file?\n                  (pdf-assets/human-hls-filename-display title)\n                  (if fmt-journal? (date/journal-title->custom-format title) title))\n          old-name (or title page-name)\n          confirm-fn (fn []\n                       (let [new-page-name (string/trim @*title-value)\n                             merge? (and (not= (util/page-name-sanity-lc page-name)\n                                               (util/page-name-sanity-lc @*title-value))\n                                         (db/page-exists? page-name)\n                                         (db/page-exists? @*title-value))]\n                         (ui/make-confirm-modal\n                          {:title         (if merge?\n                                            (str \"Page \u201c\" @*title-value \"\u201d already exists, merge to it?\")\n                                            (str \"Do you really want to change the page name to \u201c\" new-page-name \"\u201d?\"))\n                           :on-confirm    (fn [_e {:keys [close-fn]}]\n                                            (close-fn)\n                                            (page-handler/rename! (or title page-name) @*title-value)\n                                            (reset! *edit? false))\n                           :on-cancel     (fn []\n                                            (reset! *title-value old-name)\n                                            (gobj/set (rum/deref input-ref) \"value\" old-name)\n                                            (reset! *edit? true))})))\n          rollback-fn #(do\n                         (reset! *title-value old-name)\n                         (gobj/set (rum/deref input-ref) \"value\" old-name)\n                         (reset! *edit? false)\n                         (notification/show! \"Illegal page name, can not rename!\" :warning))\n          blur-fn (fn [e]\n                    (when (gp-util/wrapped-by-quotes? @*title-value)\n                      (swap! *title-value gp-util/unquote-string)\n                      (gobj/set (rum/deref input-ref) \"value\" @*title-value))\n                    (state/set-state! :editor/editing-page-title? false)\n                    (cond\n                      (= old-name @*title-value)\n                      (reset! *edit? false)\n\n                      (string/blank? @*title-value)\n                      (rollback-fn)\n\n                      :else\n                      (state/set-modal! (confirm-fn)))\n                    (util/stop e))]\n      (if @*edit?\n        [:h1.title.ls-page-title\n         {:class (util/classnames [{:editing @*edit?}])}\n         [:input.edit-input\n          {:type          \"text\"\n           :ref           input-ref\n           :auto-focus    true\n           :style         {:outline \"none\"\n                           :font-weight 600}\n           :auto-complete (if (util/chrome?) \"chrome-off\" \"off\") ; off not working here\n           :default-value old-name\n           :on-change     (fn [^js e]\n                            (let [value (util/evalue e)]\n                              (reset! *title-value (string/trim value))))\n           :on-blur       blur-fn\n           :on-key-down   (fn [^js e]\n                            (when (= (gobj/get e \"key\") \"Enter\")\n                              (blur-fn e)))\n           :on-key-up     (fn [^js e]\n                            ;; Esc\n                            (when (= 27 (.-keyCode e))\n                              (reset! *title-value old-name)\n                              (reset! *edit? false)))}]]\n        [:a.page-title {:on-mouse-down (fn [e]\n                                         (state/set-state! :editor/editing-page-title? true)\n                                         (when (util/right-click? e)\n                                           (state/set-state! :page-title/context {:page page-name})))\n                        :on-click (fn [e]\n                                    (.preventDefault e)\n                                    (if (gobj/get e \"shiftKey\")\n                                      (when-let [page (db/pull repo '[*] [:block/name page-name])]\n                                        (state/sidebar-add-block!\n                                         repo\n                                         (:db/id page)\n                                         :page))\n                                      (when (and (not hls-file?) (not fmt-journal?))\n                                        (reset! *edit? true))))}\n         [:h1.title.ls-page-title {:data-ref page-name}\n          (when (not= icon \"\") [:span.page-icon icon])\n          title]]))))\n\n(defn- page-mouse-over\n  [e *control-show? *all-collapsed?]\n  (util/stop e)\n  (reset! *control-show? true)\n  (let [all-collapsed?\n        (->> (editor-handler/all-blocks-with-level {:collapse? true})\n             (filter (fn [b] (editor-handler/collapsable? (:block/uuid b))))\n             (empty?))]\n    (reset! *all-collapsed? all-collapsed?)))\n\n(defn- page-mouse-leave\n  [e *control-show?]\n  (util/stop e)\n  (reset! *control-show? false))\n\n(rum/defcs page-blocks-collapse-control <\n  [state title *control-show? *all-collapsed?]\n  [:a.page-blocks-collapse-control\n   {:id (str \"control-\" title)\n    :on-click (fn [event]\n                (util/stop event)\n                (if @*all-collapsed?\n                  (editor-handler/expand-all!)\n                  (editor-handler/collapse-all!))\n                (swap! *all-collapsed? not))}\n   [:span.mt-6 {:class (if @*control-show?\n                         \"control-show cursor-pointer\" \"control-hide\")}\n    (ui/rotating-arrow @*all-collapsed?)]])\n\n;; A page is just a logical block\n(rum/defcs page < rum/reactive\n  (rum/local false ::all-collapsed?)\n  (rum/local false ::control-show?)\n  [state {:keys [repo page-name] :as option}]\n  (when-let [path-page-name (or page-name\n                                (get-page-name state)\n                                (state/get-current-page))]\n    (let [current-repo (state/sub :git/current-repo)\n          repo (or repo current-repo)\n          page-name (util/page-name-sanity-lc path-page-name)\n          block? (util/uuid-string? page-name)\n          block-id (and block? (uuid page-name))\n          format (let [page (if block-id\n                              (:block/name (:block/page (db/entity [:block/uuid block-id])))\n                              page-name)]\n                   (db/get-page-format page))\n          journal? (db/journal-page? page-name)\n          fmt-journal? (boolean (date/journal-title->int page-name))\n          sidebar? (:sidebar? option)\n          route-page-name path-page-name\n          page (if block?\n                 (->> (:db/id (:block/page (db/entity repo [:block/uuid block-id])))\n                      (db/entity repo))\n                 (do\n                   (when-not (db/entity repo [:block/name page-name])\n                     (let [m (block/page-name->map path-page-name true)]\n                       (db/transact! repo [m])))\n                   (db/pull [:block/name page-name])))\n          {:keys [icon]} (:block/properties page)\n          page-name (:block/name page)\n          page-original-name (:block/original-name page)\n          title (or page-original-name page-name)\n          icon (or icon \"\")\n          today? (and\n                  journal?\n                  (= page-name (util/page-name-sanity-lc (date/journal-name))))\n          *control-show? (::control-show? state)\n          *all-collapsed? (::all-collapsed? state)]\n      [:div.flex-1.page.relative\n       (merge (if (seq (:block/tags page))\n                (let [page-names (model/get-page-names-by-ids (map :db/id (:block/tags page)))]\n                  {:data-page-tags (text/build-data-value page-names)})\n                {})\n\n              {:key path-page-name\n               :class (util/classnames [{:is-journals (or journal? fmt-journal?)}])})\n\n       [:div.relative\n        (when (and (not sidebar?) (not block?))\n          [:div.flex.flex-row.space-between\n           (when (or (mobile-util/is-native-platform?) (util/mobile?))\n             [:div.flex.flex-row.pr-2\n              {:style {:margin-left -15}\n               :on-mouse-over (fn [e]\n                                (page-mouse-over e *control-show? *all-collapsed?))\n               :on-mouse-leave (fn [e]\n                                 (page-mouse-leave e *control-show?))}\n              (page-blocks-collapse-control title *control-show? *all-collapsed?)])\n           [:div.flex-1.flex-row\n            (page-title page-name icon title format fmt-journal?)]\n           (when (not config/publishing?)\n             [:div.flex.flex-row\n              (when plugin-handler/lsp-enabled?\n                (plugins/hook-ui-slot :page-head-actions-slotted nil)\n                (plugins/hook-ui-items :pagebar))])])\n        [:div\n         (when (and block? (not sidebar?))\n           (let [config {:id \"block-parent\"\n                         :block? true}]\n             [:div.mb-4\n              (component-block/breadcrumb config repo block-id {:level-limit 3})]))\n\n         ;; blocks\n         (let [page (if block?\n                      (db/entity repo [:block/uuid block-id])\n                      page)]\n           (page-blocks-cp repo page {:sidebar? sidebar?}))]]\n\n       (when-not block?\n         (today-queries repo today? sidebar?))\n\n       (when-not block?\n         (tagged-pages repo page-name))\n\n       ;; referenced blocks\n       [:div {:key \"page-references\"}\n        (rum/with-key\n          (reference/references route-page-name)\n          (str route-page-name \"-refs\"))]\n\n       (when-not block?\n         [:div\n          (when (not journal?)\n            (hierarchy/structures route-page-name))\n\n          ;; TODO: or we can lazy load them\n          (when-not sidebar?\n            [:div {:key \"page-unlinked-references\"}\n             (reference/unlinked-references route-page-name)])])])))\n\n(defonce layout (atom [js/window.innerWidth js/window.innerHeight]))\n\n;; scrollHeight\n(rum/defcs graph-filter-section < (rum/local false ::open?)\n  [state title content {:keys [search-filters]}]\n  (let [open? (get state ::open?)]\n    (when (and (seq search-filters) (not @open?))\n      (reset! open? true))\n    [:li.relative\n     [:div\n      [:button.w-full.px-4.py-2.text-left.focus:outline-none {:on-click #(swap! open? not)}\n       [:div.flex.items-center.justify-between\n        title\n        (if @open? (svg/caret-down) (svg/caret-right))]]\n      (content open?)]]))\n\n(rum/defc filter-expand-area\n  [open? content]\n  [:div.relative.overflow-hidden.transition-all.max-h-0.duration-700\n   {:style {:max-height (if @open? 400 0)}}\n   content])\n\n(defonce *n-hops (atom nil))\n(defonce *focus-nodes (atom []))\n(defonce *graph-reset? (atom false))\n(defonce *journal? (atom nil))\n(defonce *orphan-pages? (atom true))\n(defonce *builtin-pages? (atom nil))\n\n(rum/defc ^:large-vars/cleanup-todo graph-filters < rum/reactive\n  [graph settings n-hops]\n  (let [{:keys [journal? orphan-pages? builtin-pages?]\n         :or {orphan-pages? true}} settings\n        journal?' (rum/react *journal?)\n        orphan-pages?' (rum/react *orphan-pages?)\n        builtin-pages?' (rum/react *builtin-pages?)\n        journal? (if (nil? journal?') journal? journal?')\n        orphan-pages? (if (nil? orphan-pages?') orphan-pages? orphan-pages?')\n        builtin-pages? (if (nil? builtin-pages?') builtin-pages? builtin-pages?')\n        set-setting! (fn [key value]\n                       (let [new-settings (assoc settings key value)]\n                         (config-handler/set-config! :graph/settings new-settings)))\n        search-graph-filters (state/sub :search/graph-filters)\n        focus-nodes (rum/react *focus-nodes)]\n    [:div.absolute.top-4.right-4.graph-filters\n     [:div.flex.flex-col\n      [:div.shadow-xl.rounded-sm\n       [:ul\n        (graph-filter-section\n         [:span.font-medium \"Nodes\"]\n         (fn [open?]\n           (filter-expand-area\n            open?\n            [:div\n             [:p.text-sm.opacity-70.px-4\n              (let [c1 (count (:nodes graph))\n                    s1 (if (> c1 1) \"s\" \"\")\n                    ;; c2 (count (:links graph))\n                    ;; s2 (if (> c2 1) \"s\" \"\")\n                    ]\n                ;; (util/format \"%d page%s, %d link%s\" c1 s1 c2 s2)\n                (util/format \"%d page%s\" c1 s1))]\n             [:div.p-6\n              ;; [:div.flex.items-center.justify-between.mb-2\n              ;;  [:span \"Layout\"]\n              ;;  (ui/select\n              ;;    (mapv\n              ;;     (fn [item]\n              ;;       (if (= (:label item) layout)\n              ;;         (assoc item :selected \"selected\")\n              ;;         item))\n              ;;     [{:label \"gForce\"}\n              ;;      {:label \"dagre\"}])\n              ;;    (fn [value]\n              ;;      (set-setting! :layout value))\n              ;;    \"graph-layout\")]\n              [:div.flex.items-center.justify-between.mb-2\n               [:span (t :settings-page/enable-journals)]\n               ;; FIXME: why it's not aligned well?\n               [:div.mt-1\n                (ui/toggle journal?\n                           (fn []\n                             (let [value (not journal?)]\n                               (reset! *journal? value)\n                               (set-setting! :journal? value)))\n                           true)]]\n              [:div.flex.items-center.justify-between.mb-2\n               [:span \"Orphan pages\"]\n               [:div.mt-1\n                (ui/toggle orphan-pages?\n                           (fn []\n                             (let [value (not orphan-pages?)]\n                               (reset! *orphan-pages? value)\n                               (set-setting! :orphan-pages? value)))\n                           true)]]\n              [:div.flex.items-center.justify-between.mb-2\n               [:span \"Built-in pages\"]\n               [:div.mt-1\n                (ui/toggle builtin-pages?\n                           (fn []\n                             (let [value (not builtin-pages?)]\n                               (reset! *builtin-pages? value)\n                               (set-setting! :builtin-pages? value)))\n                           true)]]\n              (when (seq focus-nodes)\n                [:div.flex.flex-col.mb-2\n                 [:p {:title \"N hops from selected nodes\"}\n                  \"N hops from selected nodes\"]\n                 (ui/tippy {:html [:div.pr-3 n-hops]}\n                           (ui/slider (or n-hops 10)\n                                      {:min 1\n                                       :max 10\n                                       :on-change #(reset! *n-hops (int %))}))])\n\n              [:a.opacity-70.opacity-100 {:on-click (fn []\n                                                      (swap! *graph-reset? not)\n                                                      (reset! *focus-nodes [])\n                                                      (reset! *n-hops nil)\n                                                      (state/clear-search-filters!))}\n               \"Reset Graph\"]]]))\n         {})\n        (graph-filter-section\n         [:span.font-medium \"Search\"]\n         (fn [open?]\n           (filter-expand-area\n            open?\n            [:div.p-6\n             (if (seq search-graph-filters)\n               [:div\n                (for [q search-graph-filters]\n                  [:div.flex.flex-row.justify-between.items-center.mb-2\n                   [:span.font-medium q]\n                   [:a.search-filter-close.opacity-70.opacity-100 {:on-click #(state/remove-search-filter! q)}\n                    svg/close]])\n\n                [:a.opacity-70.opacity-100 {:on-click state/clear-search-filters!}\n                 \"Clear All\"]]\n               [:a.opacity-70.opacity-100 {:on-click #(route-handler/go-to-search! :graph)}\n                \"Click to search\"])]))\n         {:search-filters search-graph-filters})]]]]))\n\n(defonce last-node-position (atom nil))\n(defn- graph-register-handlers\n  [graph focus-nodes n-hops dark?]\n  (.on graph \"nodeClick\"\n       (fn [event node]\n         (let [x (.-x event)\n               y (.-y event)\n               drag? (not= [node x y] @last-node-position)]\n           (graph/on-click-handler graph node event focus-nodes n-hops drag? dark?))))\n  (.on graph \"nodeMousedown\"\n       (fn [event node]\n         (reset! last-node-position [node (.-x event) (.-y event)]))))\n\n(rum/defc global-graph-inner < rum/reactive\n  [graph settings theme]\n  (let [[width height] (rum/react layout)\n        dark? (= theme \"dark\")\n        n-hops (rum/react *n-hops)\n        reset? (rum/react *graph-reset?)\n        focus-nodes (when n-hops (rum/react *focus-nodes))\n        graph (if (and (integer? n-hops)\n                       (seq focus-nodes)\n                       (not (:orphan-pages? settings)))\n                (graph-handler/n-hops graph focus-nodes n-hops)\n                graph)\n        graph (update graph :links (fn [links]\n                                     (let [nodes (set (map :id (:nodes graph)))]\n                                       (remove (fn [link]\n                                                 (and (not (nodes (:source link)))\n                                                      (not (nodes (:target link)))))\n                                               links))))]\n    [:div.relative#global-graph\n     (graph/graph-2d {:nodes (:nodes graph)\n                      :links (:links graph)\n                      :width (- width 24)\n                      :height (- height 48)\n                      :dark? dark?\n                      :register-handlers-fn\n                      (fn [graph]\n                        (graph-register-handlers graph *focus-nodes *n-hops dark?))\n                      :reset? reset?})\n     (graph-filters graph settings n-hops)]))\n\n(defn- filter-graph-nodes\n  [nodes filters]\n  (if (seq filters)\n    (let [filter-patterns (map #(re-pattern (str \"(?i)\" (util/regex-escape %))) filters)]\n      (filter (fn [node] (some #(re-find % (:id node)) filter-patterns)) nodes))\n    nodes))\n\n(rum/defcs global-graph < rum/reactive\n  (mixins/event-mixin\n   (fn [state]\n     (mixins/listen state js/window \"resize\"\n                    (fn [_e]\n                      (reset! layout [js/window.innerWidth js/window.innerHeight])))))\n  {:will-mount (fn [state]\n                 (state/set-search-mode! :graph)\n                 state)\n   :will-unmount (fn [state]\n                   (reset! *n-hops nil)\n                   (reset! *focus-nodes [])\n                   (state/set-search-mode! :global)\n                   state)}\n  [state]\n  (let [settings (state/sub-graph-config-settings)\n        theme (state/sub :ui/theme)\n        graph (graph-handler/build-global-graph theme settings)\n        search-graph-filters (state/sub :search/graph-filters)\n        graph (update graph :nodes #(filter-graph-nodes % search-graph-filters))]\n    (global-graph-inner graph settings theme)))\n\n(rum/defc page-graph-inner < rum/static\n  [_page graph dark?]\n  [:div.sidebar-item.flex-col\n   (graph/graph-2d {:nodes (:nodes graph)\n                    :links (:links graph)\n                    :width 600\n                    :height 600\n                    :dark? dark?\n                    :register-handlers-fn\n                    (fn [graph]\n                      (graph-register-handlers graph (atom nil) (atom nil) dark?))})])\n\n(rum/defc page-graph < db-mixins/query rum/reactive\n  []\n  (let [page (or\n              (and (= :page (state/sub [:route-match :data :name]))\n                   (state/sub [:route-match :path-params :name]))\n              (date/today))\n        theme (:ui/theme @state/state)\n        dark? (= theme \"dark\")\n        graph (if (util/uuid-string? page)\n                (graph-handler/build-block-graph (uuid page) theme)\n                (graph-handler/build-page-graph page theme))]\n    (when (seq (:nodes graph))\n      (page-graph-inner page graph dark?))))\n\n(defn- sort-pages-by\n  [by-item desc? pages]\n  (let [comp (if desc? > <)\n        by-item (if (= by-item :block/name)\n                  (fn [x] (string/lower-case (:block/name x)))\n                  by-item)]\n    (sort-by by-item comp pages)))\n\n(rum/defc checkbox-opt\n  [key checked opts]\n\n  (let [*input (rum/create-ref)\n        indeterminate? (boolean (:indeterminate opts))]\n\n    (rum/use-effect!\n     #(set! (.-indeterminate (rum/deref *input)) indeterminate?)\n     [indeterminate?])\n\n    [:label {:for key}\n     [:input.form-checkbox\n      (merge {:type    \"checkbox\"\n              :checked (boolean checked)\n              :ref *input\n              :id      key} opts)]]))\n\n(rum/defc sortable-title\n  [title key by-item desc?]\n  [:th\n   {:class [(name key)]}\n   [:a {:on-click (fn []\n                    (reset! by-item key)\n                    (swap! desc? not))}\n    [:span.flex.items-center\n     [:span.mr-1 title]\n     (when (= @by-item key)\n       [:span\n        (if @desc? (svg/caret-down) (svg/caret-up))])]]])\n\n(defn batch-delete-dialog\n  [pages orphaned-pages? refresh-fn]\n  (fn [close-fn]\n    [:div\n     [:div.sm:flex.items-center\n      [:div.mx-auto.flex-shrink-0.flex.items-center.justify-center.h-12.w-12.rounded-full.bg-red-100.sm:mx-0.sm:h-10.sm:w-10\n       [:span.text-red-600.text-xl\n        (ui/icon \"alert-triangle\")]]\n      [:div.mt-3.text-center.sm:mt-0.sm:ml-4.sm:text-left\n       [:h3#modal-headline.text-lg.leading-6.font-medium\n        (if orphaned-pages?\n          (str (t :remove-orphaned-pages) \"?\")\n          (t :page/delete-confirmation))]]]\n\n     [:table.table-auto.cp__all_pages_table.mt-4\n      [:thead\n       [:tr.opacity-70\n        [:th [:span \"#\"]]\n        [:th [:span (t :block/name)]]\n        [:th [:span (t :page/backlinks)]]\n        (when-not orphaned-pages? [:th [:span (t :page/created-at)]])\n        (when-not orphaned-pages? [:th [:span (t :page/updated-at)]])]]\n\n      [:tbody\n       (for [[n {:block/keys [name created-at updated-at backlinks] :as page}] (medley/indexed pages)]\n         [:tr {:key name}\n          [:td.n.w-12 [:span.opacity-70 (str (inc n) \".\")]]\n          [:td.name [:a {:href     (rfe/href :page {:name (:block/name page)})}\n                     (component-block/page-cp {} page)]]\n          [:td.backlinks [:span (or backlinks \"0\")]]\n          (when-not orphaned-pages? [:td.created-at [:span (if created-at (date/int->local-time-2 created-at) \"Unknown\")]])\n          (when-not orphaned-pages? [:td.updated-at [:span (if updated-at (date/int->local-time-2 updated-at) \"Unknown\")]])])]]\n\n     [:div.pt-6.flex.justify-end\n\n      [:span.pr-2\n       (ui/button\n         (t :cancel)\n         :intent \"logseq\"\n         :on-click close-fn)]\n\n      (ui/button\n        (t :yes)\n        :on-click (fn []\n                    (close-fn)\n                    (doseq [page-name (map :block/name pages)]\n                      (page-handler/delete! page-name #()))\n                    (notification/show! (str (t :tips/all-done) \"!\") :success)\n                    (js/setTimeout #(refresh-fn) 200)))]]))\n\n(rum/defcs ^:large-vars/cleanup-todo all-pages < rum/reactive\n  (rum/local nil ::pages)\n  (rum/local nil ::search-key)\n  (rum/local nil ::results-all)\n  (rum/local nil ::results)\n  (rum/local {} ::checks)\n  (rum/local :block/updated-at ::sort-by-item)\n  (rum/local true ::desc?)\n  (rum/local false ::journals)\n  (rum/local nil ::filter-fn)\n  (rum/local 1 ::current-page)\n  ;; {:did-mount (fn [state]\n  ;;               (let [current-repo (state/sub :git/current-repo)]\n  ;;                 (js/setTimeout #(db/remove-orphaned-pages! current-repo) 0))\n  ;;               state)}\n  [state]\n  (let [current-repo (state/sub :git/current-repo)\n        per-page-num 40\n        *sort-by-item (get state ::sort-by-item)\n        *desc? (::desc? state)\n        *journal? (::journals state)\n        *results (::results state)\n        *results-all (::results-all state)\n        *checks (::checks state)\n        *pages (::pages state)\n        *current-page (::current-page state)\n        *filter-fn (::filter-fn state)\n        *search-key (::search-key state)\n        *search-input (rum/create-ref)\n\n        *indeterminate (rum/derived-atom\n                           [*checks] ::indeterminate\n                         (fn [checks]\n                           (when-let [checks (vals checks)]\n                             (if (every? true? checks)\n                               1 (if (some true? checks) -1 0)))))\n\n        mobile? (util/mobile?)\n        total-pages (if-not @*results-all 0\n                            (js/Math.ceil (/ (count @*results-all) per-page-num)))\n        to-page (fn [page]\n                  (when (> total-pages 1)\n                    (if (and (> page 0)\n                             (<= page total-pages))\n                      (reset! *current-page page)\n                      (reset! *current-page 1))\n                    (js/setTimeout #(util/scroll-to-top))))\n\n        search-key (fn [key]\n                     (when-let [key (and key (string/trim key))]\n                       (if (and (not (string/blank? key))\n                                (seq @*results))\n                         (reset! *search-key key)\n                         (reset! *search-key nil))))\n\n        refresh-pages #(do\n                         (reset! *pages nil)\n                         (reset! *current-page 1))]\n\n    [:div.flex-1.cp__all_pages\n     [:h1.title (t :all-pages)]\n\n     (when current-repo\n\n       ;; all pages\n       (when (nil? @*pages)\n         (let [pages (->> (page-handler/get-all-pages current-repo)\n                          (map-indexed (fn [idx page] (assoc page\n                                                             :block/backlinks (count (:block/_refs (db/entity (:db/id page))))\n                                                             :block/idx idx))))]\n           (reset! *filter-fn\n                   (memoize (fn [sort-by-item desc? journal?]\n                              (->> pages\n                                   (filter #(or (boolean journal?)\n                                                (= false (boolean (:block/journal? %)))))\n                                   (sort-pages-by sort-by-item desc?)))))\n           (reset! *pages pages)))\n\n       ;; filter results\n       (when @*filter-fn\n         (let [pages (@*filter-fn @*sort-by-item @*desc? @*journal?)\n\n               ;; search key\n               pages (if-not (string/blank? @*search-key)\n                       (search/fuzzy-search pages (util/page-name-sanity-lc @*search-key)\n                                            :limit 20\n                                            :extract-fn :block/name)\n                       pages)\n\n               _ (reset! *results-all pages)\n\n               pages (take per-page-num (drop (* per-page-num (dec @*current-page)) pages))]\n\n           (reset! *checks (into {} (for [{:block/keys [idx]} pages]\n                                      [idx (boolean (get @*checks idx))])))\n           (reset! *results pages)))\n\n       [[:div.actions\n         {:class (util/classnames [{:has-selected (or (nil? @*indeterminate)\n                                                      (not= 0 @*indeterminate))}])}\n         [:div.l.flex.items-center\n          [:div.actions-wrap\n           (ui/button\n             [(ui/icon \"trash\") (t :delete)]\n             :on-click (fn []\n                         (let [selected (filter (fn [[_ v]] v) @*checks)\n                               selected (and (seq selected)\n                                             (into #{} (for [[k _] selected] k)))]\n                           (when-let [pages (and selected (filter #(contains? selected (:block/idx %)) @*results))]\n                             (state/set-modal! (batch-delete-dialog pages false #(do\n                                                                                   (reset! *checks nil)\n                                                                                   (refresh-pages)))))))\n             :small? true)]\n\n          [:div.search-wrap.flex.items-center.pl-2\n           (let [search-fn (fn []\n                             (let [^js input (rum/deref *search-input)]\n                               (search-key (.-value input))\n                               (reset! *current-page 1)))\n                 reset-fn (fn []\n                            (let [^js input (rum/deref *search-input)]\n                              (set! (.-value input) \"\")\n                              (reset! *search-key nil)))]\n\n             [(ui/button (ui/icon \"search\")\n                :on-click search-fn\n                :small? true)\n              [:input.form-input {:placeholder   (t :search/page-names)\n                                  :on-key-up     (fn [^js e]\n                                                   (let [^js target (.-target e)]\n                                                     (if (string/blank? (.-value target))\n                                                       (reset! *search-key nil)\n                                                       (cond\n                                                         (= 13 (.-keyCode e)) (search-fn)\n                                                         (= 27 (.-keyCode e)) (reset-fn)))))\n                                  :ref           *search-input\n                                  :default-value \"\"}]\n\n              (when (not (string/blank? @*search-key))\n                [:a.cancel {:on-click reset-fn}\n                 (ui/icon \"x\")])])]]\n\n         [:div.r.flex.items-center.justify-between\n          (let [orphaned-pages (model/get-orphaned-pages {})\n                orphaned-pages? (seq orphaned-pages)]\n            [:a.ml-1.pr-2.opacity-70.hover:opacity-100\n             {:on-click (fn []\n                          (if orphaned-pages?\n                            (state/set-modal!\n                             (batch-delete-dialog\n                              orphaned-pages  true\n                              #(do\n                                 (reset! *checks nil)\n                                 (refresh-pages))))\n                            (notification/show! \"Congratulations, no orphaned pages in your graph!\" :success)))}\n             [:span\n              (ui/icon \"file-x\")\n              [:span.ml-1 (t :remove-orphaned-pages)]]])\n\n          [:a.ml-1.pr-2.opacity-70.hover:opacity-100 {:href (rfe/href :all-files)}\n           [:span\n            (ui/icon \"files\")\n            [:span.ml-1 (t :all-files)]]]\n\n          [:div\n           (ui/tippy\n            {:html  [:small (str (t :page/show-journals) \" ?\")]\n             :arrow true}\n            [:a.button.journal\n             {:class    (util/classnames [{:active (boolean @*journal?)}])\n              :on-click #(reset! *journal? (not @*journal?))}\n             (ui/icon \"calendar\")])]\n\n          [:div.paginates\n           [:span.flex.items-center.opacity-60.text-sm\n            [:span.pr-1 (t :paginates/pages (count @*results-all))]]\n           [:span.flex.items-center\n            {:class (util/classnames [{:is-first (= 1 @*current-page)\n                                       :is-last  (= @*current-page total-pages)}])}\n            [:a.py-4.pr-2 {:on-click #(to-page (dec @*current-page))} (ui/icon \"caret-left\") (str \" \" (t :paginates/prev))]\n            [:span.opacity-30 (str @*current-page \"/\" total-pages)]\n            [:a.py-4.pl-2 {:on-click #(to-page (inc @*current-page))} (str (t :paginates/next) \" \") (ui/icon \"caret-right\")]]]]]\n\n        [:table.table-auto.cp__all_pages_table\n         [:thead\n          [:tr\n           [:th.selector\n            (checkbox-opt \"all-pages-select-all\"\n                          (= 1 @*indeterminate)\n                          {:on-change     (fn []\n                                            (let [indeterminate? (= -1 @*indeterminate)\n                                                  all? (= 1 @*indeterminate)]\n                                              (doseq [{:block/keys [idx]} @*results]\n                                                (swap! *checks assoc idx (or indeterminate? (not all?))))))\n                           :indeterminate (= -1 @*indeterminate)})]\n\n           (sortable-title (t :block/name) :block/name *sort-by-item *desc?)\n           (when-not mobile?\n             [(sortable-title (t :page/backlinks) :block/backlinks *sort-by-item *desc?)\n              (sortable-title (t :page/created-at) :block/created-at *sort-by-item *desc?)\n              (sortable-title (t :page/updated-at) :block/updated-at *sort-by-item *desc?)])]]\n\n         [:tbody\n          (for [{:block/keys [idx name created-at updated-at backlinks] :as page} @*results]\n            (when-not (string/blank? name)\n              [:tr {:key name}\n               [:td.selector\n                (checkbox-opt (str \"label-\" idx)\n                              (get @*checks idx)\n                              {:on-change (fn []\n                                            (swap! *checks update idx not))})]\n\n               [:td.name [:a {:on-click (fn [e]\n                                          (let [repo (state/get-current-repo)]\n                                            (when (gobj/get e \"shiftKey\")\n                                              (state/sidebar-add-block!\n                                               repo\n                                               (:db/id page)\n                                               :page))))\n                              :href     (rfe/href :page {:name (:block/name page)})}\n                          (component-block/page-cp {} page)]]\n\n               (when-not mobile?\n                 [:td.backlinks [:span backlinks]])\n\n               (when-not mobile?\n                 [:td.created-at [:span (if created-at\n                                          (date/int->local-time-2 created-at)\n                                          \"Unknown\")]])\n               (when-not mobile?\n                 [:td.updated-at [:span (if updated-at\n                                          (date/int->local-time-2 updated-at)\n                                          \"Unknown\")]])]))]]\n\n        [:div.paginates\n         [:span]\n         [:span.flex.items-center\n          {:class (util/classnames [{:is-first (= 1 @*current-page)\n                                     :is-last  (= @*current-page total-pages)}])}\n          [:a.py-4.text-sm {:on-click #(to-page (dec @*current-page))} (ui/icon \"caret-left\") (str \" \" (t :paginates/prev))]\n          [:a.py-4.pl-2.text-sm {:on-click #(to-page (inc @*current-page))} (str (t :paginates/next) \" \") (ui/icon \"caret-right\")]]]])]))\n"]}