{
"version":3,
"file":"module$node_modules$codemirror$mode$smarty$smarty.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/codemirror/mode/smarty/smarty.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$smarty$smarty\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**\n * Smarty 2 and 3 mode.\n */\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"smarty\", function(config, parserConf) {\n    var rightDelimiter = parserConf.rightDelimiter || \"}\";\n    var leftDelimiter = parserConf.leftDelimiter || \"{\";\n    var version = parserConf.version || 2;\n    var baseMode = CodeMirror.getMode(config, parserConf.baseMode || \"null\");\n\n    var keyFunctions = [\"debug\", \"extends\", \"function\", \"include\", \"literal\"];\n    var regs = {\n      operatorChars: /[+\\-*&%=<>!?]/,\n      validIdentifier: /[a-zA-Z0-9_]/,\n      stringChar: /['\"]/\n    };\n\n    var last;\n    function cont(style, lastType) {\n      last = lastType;\n      return style;\n    }\n\n    function chain(stream, state, parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    // Smarty 3 allows { and } surrounded by whitespace to NOT slip into Smarty mode\n    function doesNotCount(stream, pos) {\n      if (pos == null) pos = stream.pos;\n      return version === 3 && leftDelimiter == \"{\" &&\n        (pos == stream.string.length || /\\s/.test(stream.string.charAt(pos)));\n    }\n\n    function tokenTop(stream, state) {\n      var string = stream.string;\n      for (var scan = stream.pos;;) {\n        var nextMatch = string.indexOf(leftDelimiter, scan);\n        scan = nextMatch + leftDelimiter.length;\n        if (nextMatch == -1 || !doesNotCount(stream, nextMatch + leftDelimiter.length)) break;\n      }\n      if (nextMatch == stream.pos) {\n        stream.match(leftDelimiter);\n        if (stream.eat(\"*\")) {\n          return chain(stream, state, tokenBlock(\"comment\", \"*\" + rightDelimiter));\n        } else {\n          state.depth++;\n          state.tokenize = tokenSmarty;\n          last = \"startTag\";\n          return \"tag\";\n        }\n      }\n\n      if (nextMatch > -1) stream.string = string.slice(0, nextMatch);\n      var token = baseMode.token(stream, state.base);\n      if (nextMatch > -1) stream.string = string;\n      return token;\n    }\n\n    // parsing Smarty content\n    function tokenSmarty(stream, state) {\n      if (stream.match(rightDelimiter, true)) {\n        if (version === 3) {\n          state.depth--;\n          if (state.depth <= 0) {\n            state.tokenize = tokenTop;\n          }\n        } else {\n          state.tokenize = tokenTop;\n        }\n        return cont(\"tag\", null);\n      }\n\n      if (stream.match(leftDelimiter, true)) {\n        state.depth++;\n        return cont(\"tag\", \"startTag\");\n      }\n\n      var ch = stream.next();\n      if (ch == \"$\") {\n        stream.eatWhile(regs.validIdentifier);\n        return cont(\"variable-2\", \"variable\");\n      } else if (ch == \"|\") {\n        return cont(\"operator\", \"pipe\");\n      } else if (ch == \".\") {\n        return cont(\"operator\", \"property\");\n      } else if (regs.stringChar.test(ch)) {\n        state.tokenize = tokenAttribute(ch);\n        return cont(\"string\", \"string\");\n      } else if (regs.operatorChars.test(ch)) {\n        stream.eatWhile(regs.operatorChars);\n        return cont(\"operator\", \"operator\");\n      } else if (ch == \"[\" || ch == \"]\") {\n        return cont(\"bracket\", \"bracket\");\n      } else if (ch == \"(\" || ch == \")\") {\n        return cont(\"bracket\", \"operator\");\n      } else if (/\\d/.test(ch)) {\n        stream.eatWhile(/\\d/);\n        return cont(\"number\", \"number\");\n      } else {\n\n        if (state.last == \"variable\") {\n          if (ch == \"@\") {\n            stream.eatWhile(regs.validIdentifier);\n            return cont(\"property\", \"property\");\n          } else if (ch == \"|\") {\n            stream.eatWhile(regs.validIdentifier);\n            return cont(\"qualifier\", \"modifier\");\n          }\n        } else if (state.last == \"pipe\") {\n          stream.eatWhile(regs.validIdentifier);\n          return cont(\"qualifier\", \"modifier\");\n        } else if (state.last == \"whitespace\") {\n          stream.eatWhile(regs.validIdentifier);\n          return cont(\"attribute\", \"modifier\");\n        } if (state.last == \"property\") {\n          stream.eatWhile(regs.validIdentifier);\n          return cont(\"property\", null);\n        } else if (/\\s/.test(ch)) {\n          last = \"whitespace\";\n          return null;\n        }\n\n        var str = \"\";\n        if (ch != \"/\") {\n          str += ch;\n        }\n        var c = null;\n        while (c = stream.eat(regs.validIdentifier)) {\n          str += c;\n        }\n        for (var i=0, j=keyFunctions.length; i<j; i++) {\n          if (keyFunctions[i] == str) {\n            return cont(\"keyword\", \"keyword\");\n          }\n        }\n        if (/\\s/.test(ch)) {\n          return null;\n        }\n        return cont(\"tag\", \"tag\");\n      }\n    }\n\n    function tokenAttribute(quote) {\n      return function(stream, state) {\n        var prevChar = null;\n        var currChar = null;\n        while (!stream.eol()) {\n          currChar = stream.peek();\n          if (stream.next() == quote && prevChar !== '\\\\') {\n            state.tokenize = tokenSmarty;\n            break;\n          }\n          prevChar = currChar;\n        }\n        return \"string\";\n      };\n    }\n\n    function tokenBlock(style, terminator) {\n      return function(stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = tokenTop;\n            break;\n          }\n          stream.next();\n        }\n        return style;\n      };\n    }\n\n    return {\n      startState: function() {\n        return {\n          base: CodeMirror.startState(baseMode),\n          tokenize: tokenTop,\n          last: null,\n          depth: 0\n        };\n      },\n      copyState: function(state) {\n        return {\n          base: CodeMirror.copyState(baseMode, state.base),\n          tokenize: state.tokenize,\n          last: state.last,\n          depth: state.depth\n        };\n      },\n      innerMode: function(state) {\n        if (state.tokenize == tokenTop)\n          return {mode: baseMode, state: state.base};\n      },\n      token: function(stream, state) {\n        var style = state.tokenize(stream, state);\n        state.last = last;\n        return style;\n      },\n      indent: function(state, text, line) {\n        if (state.tokenize == tokenTop && baseMode.indent)\n          return baseMode.indent(state.base, text, line);\n        else\n          return CodeMirror.Pass;\n      },\n      blockCommentStart: leftDelimiter + \"*\",\n      blockCommentEnd: \"*\" + rightDelimiter\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-smarty\", \"smarty\");\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","config","parserConf","cont","style","lastType","last","tokenTop","stream","state","string","scan","pos","nextMatch","indexOf","leftDelimiter","length","version","test","charAt","match","eat","tokenBlock","rightDelimiter","tokenize","parser","depth","tokenSmarty","slice","token","baseMode","base","ch","next","eatWhile","regs","validIdentifier","stringChar","tokenAttribute","operatorChars","str","c","i","j","keyFunctions","quote","prevChar","currChar","eol","peek","terminator","getMode","startState","copyState","innerMode","mode","indent","text","line","Pass","blockCommentStart","blockCommentEnd","defineMIME"]
}
