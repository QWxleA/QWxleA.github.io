{
"version":3,
"file":"module$node_modules$codemirror$mode$sieve$sieve.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/codemirror/mode/sieve/sieve.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$sieve$sieve\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"sieve\", function(config) {\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  var keywords = words(\"if elsif else stop require\");\n  var atoms = words(\"true false not\");\n  var indentUnit = config.indentUnit;\n\n  function tokenBase(stream, state) {\n\n    var ch = stream.next();\n    if (ch == \"/\" && stream.eat(\"*\")) {\n      state.tokenize = tokenCComment;\n      return tokenCComment(stream, state);\n    }\n\n    if (ch === '#') {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    if (ch == \"\\\"\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n\n    if (ch == \"(\") {\n      state._indent.push(\"(\");\n      // add virtual angel wings so that editor behaves...\n      // ...more sane incase of broken brackets\n      state._indent.push(\"{\");\n      return null;\n    }\n\n    if (ch === \"{\") {\n      state._indent.push(\"{\");\n      return null;\n    }\n\n    if (ch == \")\")  {\n      state._indent.pop();\n      state._indent.pop();\n    }\n\n    if (ch === \"}\") {\n      state._indent.pop();\n      return null;\n    }\n\n    if (ch == \",\")\n      return null;\n\n    if (ch == \";\")\n      return null;\n\n\n    if (/[{}\\(\\),;]/.test(ch))\n      return null;\n\n    // 1*DIGIT \"K\" / \"M\" / \"G\"\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\d]/);\n      stream.eat(/[KkMmGg]/);\n      return \"number\";\n    }\n\n    // \":\" (ALPHA / \"_\") *(ALPHA / DIGIT / \"_\")\n    if (ch == \":\") {\n      stream.eatWhile(/[a-zA-Z_]/);\n      stream.eatWhile(/[a-zA-Z0-9_]/);\n\n      return \"operator\";\n    }\n\n    stream.eatWhile(/\\w/);\n    var cur = stream.current();\n\n    // \"text:\" *(SP / HTAB) (hash-comment / CRLF)\n    // *(multiline-literal / multiline-dotstart)\n    // \".\" CRLF\n    if ((cur == \"text\") && stream.eat(\":\"))\n    {\n      state.tokenize = tokenMultiLineString;\n      return \"string\";\n    }\n\n    if (keywords.propertyIsEnumerable(cur))\n      return \"keyword\";\n\n    if (atoms.propertyIsEnumerable(cur))\n      return \"atom\";\n\n    return null;\n  }\n\n  function tokenMultiLineString(stream, state)\n  {\n    state._multiLineString = true;\n    // the first line is special it may contain a comment\n    if (!stream.sol()) {\n      stream.eatSpace();\n\n      if (stream.peek() == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      stream.skipToEnd();\n      return \"string\";\n    }\n\n    if ((stream.next() == \".\")  && (stream.eol()))\n    {\n      state._multiLineString = false;\n      state.tokenize = tokenBase;\n    }\n\n    return \"string\";\n  }\n\n  function tokenCComment(stream, state) {\n    var maybeEnd = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (maybeEnd && ch == \"/\") {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped)\n          break;\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      if (!escaped) state.tokenize = tokenBase;\n      return \"string\";\n    };\n  }\n\n  return {\n    startState: function(base) {\n      return {tokenize: tokenBase,\n              baseIndent: base || 0,\n              _indent: []};\n    },\n\n    token: function(stream, state) {\n      if (stream.eatSpace())\n        return null;\n\n      return (state.tokenize || tokenBase)(stream, state);\n    },\n\n    indent: function(state, _textAfter) {\n      var length = state._indent.length;\n      if (_textAfter && (_textAfter[0] == \"}\"))\n        length--;\n\n      if (length <0)\n        length = 0;\n\n      return length * indentUnit;\n    },\n\n    electricChars: \"}\"\n  };\n});\n\nCodeMirror.defineMIME(\"application/sieve\", \"sieve\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","config","words","str","obj","split","i","length","tokenBase","stream","state","ch","next","eat","tokenize","tokenCComment","skipToEnd","tokenString","_indent","push","pop","test","eatWhile","cur","current","tokenMultiLineString","keywords","propertyIsEnumerable","atoms","_multiLineString","sol","eatSpace","peek","eol","maybeEnd","quote","escaped","indentUnit","startState","base","baseIndent","token","indent","_textAfter","electricChars","defineMIME"]
}
