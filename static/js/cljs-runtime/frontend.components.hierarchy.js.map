{"version":3,"sources":["frontend/components/hierarchy.cljs"],"mappings":"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","names":["frontend.components.hierarchy/get-relation","page","temp__5720__auto__","or__4253__auto__","logseq.graph-parser.text/get-nested-page-name","logseq.graph-parser.text/namespace-page?","G__70458","frontend.db/entity","frontend.util/page-name-sanity-lc","repo","frontend.state/get-current-repo","namespace-pages","frontend.db/get-namespace-pages","parent-routes","frontend.db.model/get-page-namespace-routes","pages","cljs.core.concat","cljs.core.distinct","cljs.core.sort_by","cljs.core.map","p1__70457#","clojure.string.split","page-namespace","frontend.db.model/get-page-namespace","frontend.util/get-page-original-name","cljs.core/seq","rum.core/lazy-build","rum.core/build-defc","daiquiri.core/create-element","frontend.components.hierarchy/structures","namespaces","frontend.ui/foldable","iter__4652__auto__","s__70563","cljs.core/LazySeq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__70565","cljs.core/chunk-buffer","i__70564","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__70562","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","namespace","s__70569","b__70571","i__70570","vec__70572","cljs.core.nth","iter__70568","vec__70575","s__70580","b__70582","i__70581","vec__70584","iter__70579","vec__70587","idx","medley.core.indexed","and__4251__auto__","full-page","cljs.core.take","clojure.string.join","frontend.components.block/page-reference","cljs.core.interpose","cljs.core/chunk-first"],"sourcesContent":["(ns frontend.components.hierarchy\n  (:require [clojure.string :as string]\n            [frontend.components.block :as block]\n            [frontend.db :as db]\n            [frontend.db.model :as db-model]\n            [frontend.state :as state]\n            [logseq.graph-parser.text :as text]\n            [frontend.ui :as ui]\n            [medley.core :as medley]\n            [rum.core :as rum]\n            [frontend.util :as util]))\n\n(defn get-relation\n  [page]\n  (when-let [page (or (text/get-nested-page-name page) page)]\n    (when (or (text/namespace-page? page)\n              (:block/_namespace (db/entity [:block/name (util/page-name-sanity-lc page)])))\n      (let [repo (state/get-current-repo)\n            namespace-pages (db/get-namespace-pages repo page)\n            parent-routes (db-model/get-page-namespace-routes repo page)\n            pages (->> (concat namespace-pages parent-routes)\n                       (distinct)\n                       (sort-by :block/name)\n                       (map (fn [page]\n                              (or (:block/original-name page) (:block/name page))))\n                       (map #(string/split % \"/\")))\n            page-namespace (db-model/get-page-namespace repo page)\n            page-namespace (util/get-page-original-name page-namespace)]\n        (cond\n          (seq pages)\n          pages\n\n          page-namespace\n          [(string/split page-namespace \"/\")]\n\n          :else\n          nil)))))\n\n(rum/defc structures\n  [page]\n  (let [namespaces (get-relation page)]\n    (when (seq namespaces)\n      [:div.page-hierarchy.mt-6\n       (ui/foldable\n        [:h2.font-bold.opacity-30 \"Hierarchy\"]\n        [:ul.namespaces {:style {:margin \"12px 24px\"}}\n         (for [namespace namespaces]\n           [:li.my-2\n            (->>\n             (for [[idx page] (medley/indexed namespace)]\n               (when (and (string? page) page)\n                 (let [full-page (->> (take (inc idx) namespace)\n                                      (string/join \"/\"))]\n                   (block/page-reference false\n                                         full-page\n                                         {}\n                                         page))))\n             (interpose [:span.mx-2.opacity-30 \"/\"]))])]\n        {:default-collapsed? false\n         :title-trigger? true})])))\n"]}