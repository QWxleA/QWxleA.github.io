{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$transports$xhr.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@sentry/browser/dist/transports/xhr.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$transports$xhr\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"@sentry/utils\");\nvar base_1 = require(\"./base\");\n/** `XHR` based transport */\nvar XHRTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(XHRTransport, _super);\n    function XHRTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param sentryRequest Prepared SentryRequest to be delivered\n     * @param originalPayload Original payload used to create SentryRequest\n     */\n    XHRTransport.prototype._sendRequest = function (sentryRequest, originalPayload) {\n        var _this = this;\n        if (this._isRateLimited(sentryRequest.type)) {\n            this.recordLostEvent('ratelimit_backoff', sentryRequest.type);\n            return Promise.reject({\n                event: originalPayload,\n                type: sentryRequest.type,\n                reason: \"Transport for \" + sentryRequest.type + \" requests locked till \" + this._disabledUntil(sentryRequest.type) + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        return this._buffer\n            .add(function () {\n            return new utils_1.SyncPromise(function (resolve, reject) {\n                var request = new XMLHttpRequest();\n                request.onreadystatechange = function () {\n                    if (request.readyState === 4) {\n                        var headers = {\n                            'x-sentry-rate-limits': request.getResponseHeader('X-Sentry-Rate-Limits'),\n                            'retry-after': request.getResponseHeader('Retry-After'),\n                        };\n                        _this._handleResponse({ requestType: sentryRequest.type, response: request, headers: headers, resolve: resolve, reject: reject });\n                    }\n                };\n                request.open('POST', sentryRequest.url);\n                for (var header in _this.options.headers) {\n                    if (Object.prototype.hasOwnProperty.call(_this.options.headers, header)) {\n                        request.setRequestHeader(header, _this.options.headers[header]);\n                    }\n                }\n                request.send(sentryRequest.body);\n            });\n        })\n            .then(undefined, function (reason) {\n            // It's either buffer rejection or any other xhr/fetch error, which are treated as NetworkError.\n            if (reason instanceof utils_1.SentryError) {\n                _this.recordLostEvent('queue_overflow', sentryRequest.type);\n            }\n            else {\n                _this.recordLostEvent('network_error', sentryRequest.type);\n            }\n            throw reason;\n        });\n    };\n    return XHRTransport;\n}(base_1.BaseTransport));\nexports.XHRTransport = XHRTransport;\n//# sourceMappingURL=xhr.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","utils_1","XHRTransport","_super","apply","arguments","__extends","prototype","_sendRequest","XHRTransport.prototype._sendRequest","sentryRequest","originalPayload","_this","_isRateLimited","type","recordLostEvent","Promise","reject","event","reason","_disabledUntil","status","_buffer","add","SyncPromise","resolve","request","XMLHttpRequest","onreadystatechange","request.onreadystatechange","readyState","headers","getResponseHeader","_handleResponse","requestType","response","open","url","header","options","hasOwnProperty","call","setRequestHeader","send","body","then","undefined","SentryError","base_1","BaseTransport"]
}
