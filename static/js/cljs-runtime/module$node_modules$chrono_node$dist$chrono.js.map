{
"version":3,
"file":"module$node_modules$chrono_node$dist$chrono.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/chrono-node/dist/chrono.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$chrono\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParsingContext = exports.Chrono = void 0;\nconst results_1 = require(\"./results\");\nconst en_1 = require(\"./locales/en\");\nclass Chrono {\n    constructor(configuration) {\n        configuration = configuration || en_1.createCasualConfiguration();\n        this.parsers = [...configuration.parsers];\n        this.refiners = [...configuration.refiners];\n    }\n    clone() {\n        return new Chrono({\n            parsers: [...this.parsers],\n            refiners: [...this.refiners],\n        });\n    }\n    parseDate(text, referenceDate, option) {\n        const results = this.parse(text, referenceDate, option);\n        return results.length > 0 ? results[0].start.date() : null;\n    }\n    parse(text, referenceDate, option) {\n        const context = new ParsingContext(text, referenceDate || new Date(), option || {});\n        let results = [];\n        this.parsers.forEach((parser) => {\n            const parsedResults = Chrono.executeParser(context, parser);\n            results = results.concat(parsedResults);\n        });\n        results.sort((a, b) => {\n            return a.index - b.index;\n        });\n        this.refiners.forEach(function (refiner) {\n            results = refiner.refine(context, results);\n        });\n        return results;\n    }\n    static executeParser(context, parser) {\n        const results = [];\n        const pattern = parser.pattern(context);\n        const originalText = context.text;\n        let remainingText = context.text;\n        let match = pattern.exec(remainingText);\n        while (match) {\n            const index = match.index + originalText.length - remainingText.length;\n            match.index = index;\n            const result = parser.extract(context, match);\n            if (!result) {\n                remainingText = originalText.substring(match.index + 1);\n                match = pattern.exec(remainingText);\n                continue;\n            }\n            let parsedResult = null;\n            if (result instanceof results_1.ParsingResult) {\n                parsedResult = result;\n            }\n            else if (result instanceof results_1.ParsingComponents) {\n                parsedResult = context.createParsingResult(match.index, match[0]);\n                parsedResult.start = result;\n            }\n            else {\n                parsedResult = context.createParsingResult(match.index, match[0], result);\n            }\n            context.debug(() => console.log(`${parser.constructor.name} extracted result ${parsedResult}`));\n            results.push(parsedResult);\n            remainingText = originalText.substring(index + parsedResult.text.length);\n            match = pattern.exec(remainingText);\n        }\n        return results;\n    }\n}\nexports.Chrono = Chrono;\nclass ParsingContext {\n    constructor(text, refDate, option) {\n        this.text = text;\n        this.refDate = refDate;\n        this.option = option;\n    }\n    createParsingComponents(components) {\n        return new results_1.ParsingComponents(this.refDate, components);\n    }\n    createParsingResult(index, textOrEndIndex, startComponents, endComponents) {\n        const text = typeof textOrEndIndex === \"string\" ? textOrEndIndex : this.text.substring(index, textOrEndIndex);\n        const start = startComponents ? this.createParsingComponents(startComponents) : null;\n        const end = endComponents ? this.createParsingComponents(endComponents) : null;\n        return new results_1.ParsingResult(this.refDate, index, text, start, end);\n    }\n    debug(block) {\n        if (this.option.debug) {\n            if (this.option.debug instanceof Function) {\n                this.option.debug(block);\n            }\n            else {\n                const handler = this.option.debug;\n                handler.debug(block);\n            }\n        }\n    }\n}\nexports.ParsingContext = ParsingContext;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","ParsingContext","Chrono","results_1","en_1","constructor","configuration","createCasualConfiguration","parsers","refiners","clone","parseDate","text","referenceDate","option","results","parse","length","start","date","context","Date","forEach","parser","parsedResults","executeParser","concat","sort","a","b","index","refiner","refine","pattern","originalText","remainingText","match","exec","result","extract","substring","parsedResult","ParsingResult","ParsingComponents","createParsingResult","debug","console","log","name","push","refDate","createParsingComponents","components","textOrEndIndex","startComponents","endComponents","end","block","Function"]
}
