shadow$provide.module$node_modules$codemirror$mode$erlang$erlang=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)})(function(CodeMirror){CodeMirror.defineMIME("text/x-erlang","erlang");CodeMirror.defineMode("erlang",function(cmCfg){function tokenizer(stream,state){if(state.in_string)return state.in_string=
!quote(stream,'"',"\\"),rval(state,stream,"string");if(state.in_atom)return state.in_atom=!quote(stream,"'","\\"),rval(state,stream,"atom");if(stream.eatSpace())return rval(state,stream,"whitespace");if(!peekToken(state)&&stream.match(/-\s*[a-zß-öø-ÿ][\wØ-ÞÀ-Öß-öø-ÿ]*/))return is_member(stream.current(),typeWords)?rval(state,stream,"type"):rval(state,stream,"attribute");var ch=stream.next();if("%"==ch)return stream.skipToEnd(),rval(state,stream,"comment");if(":"==ch)return rval(state,stream,"colon");
if("?"==ch)return stream.eatSpace(),stream.eatWhile(anumRE),rval(state,stream,"macro");if("#"==ch)return stream.eatSpace(),stream.eatWhile(anumRE),rval(state,stream,"record");if("$"==ch)return"\\"!=stream.next()||stream.match(escapesRE)?rval(state,stream,"number"):rval(state,stream,"error");if("."==ch)return rval(state,stream,"dot");if("'"==ch){if(!(state.in_atom=!quote(stream,"'","\\"))){if(stream.match(/\s*\/\s*[0-9]/,!1))return stream.match(/\s*\/\s*[0-9]/,!0),rval(state,stream,"fun");if(stream.match(/\s*\(/,
!1)||stream.match(/\s*:/,!1))return rval(state,stream,"function")}return rval(state,stream,"atom")}if('"'==ch)return state.in_string=!quote(stream,'"',"\\"),rval(state,stream,"string");if(/[A-Z_Ø-ÞÀ-Ö]/.test(ch))return stream.eatWhile(anumRE),rval(state,stream,"variable");if(/[a-z_ß-öø-ÿ]/.test(ch)){stream.eatWhile(anumRE);if(stream.match(/\s*\/\s*[0-9]/,!1))return stream.match(/\s*\/\s*[0-9]/,!0),rval(state,stream,"fun");ch=stream.current();if(is_member(ch,keywordWords))return rval(state,stream,
"keyword");if(is_member(ch,operatorAtomWords))return rval(state,stream,"operator");if(stream.match(/\s*\(/,!1))return!is_member(ch,bifWords)||":"==peekToken(state).token&&"erlang"!=peekToken(state,2).token?is_member(ch,guardWords)?rval(state,stream,"guard"):rval(state,stream,"function"):rval(state,stream,"builtin");var m=stream.match(/([\n\s]+|%[^\n]*\n)*(.)/,!1);return":"==(m?m.pop():"")?"erlang"==ch?rval(state,stream,"builtin"):rval(state,stream,"function"):is_member(ch,["true","false"])?rval(state,
stream,"boolean"):rval(state,stream,"atom")}m=/[0-9]/;var radixRE=/[0-9a-zA-Z]/;return m.test(ch)?(stream.eatWhile(m),stream.eat("#")?stream.eatWhile(radixRE)||stream.backUp(1):stream.eat(".")&&(stream.eatWhile(m)?stream.eat(/[eE]/)&&(stream.eat(/[-+]/)?stream.eatWhile(m)||stream.backUp(2):stream.eatWhile(m)||stream.backUp(1)):stream.backUp(1)),rval(state,stream,"number")):nongreedy(stream,openParenRE,openParenWords)?rval(state,stream,"open_paren"):nongreedy(stream,closeParenRE,closeParenWords)?rval(state,
stream,"close_paren"):greedy(stream,separatorRE,separatorWords)?rval(state,stream,"separator"):greedy(stream,operatorSymbolRE,operatorSymbolWords)?rval(state,stream,"operator"):rval(state,stream,null)}function nongreedy(stream,re,words){if(1==stream.current().length&&re.test(stream.current())){for(stream.backUp(1);re.test(stream.peek());)if(stream.next(),is_member(stream.current(),words))return!0;stream.backUp(stream.current().length-1)}return!1}function greedy(stream,re,words){if(1==stream.current().length&&
re.test(stream.current())){for(;re.test(stream.peek());)stream.next();for(;0<stream.current().length;){if(is_member(stream.current(),words))return!0;stream.backUp(1)}stream.next()}return!1}function quote(stream,quoteChar,escapeChar){for(;!stream.eol();){var ch=stream.next();if(ch==quoteChar)return!0;ch==escapeChar&&stream.next()}return!1}function is_member(element,list){return-1<list.indexOf(element)}function rval(state,stream,type){var JSCompiler_inline_result=stream.current();var col=stream.column();
stream=stream.indentation();JSCompiler_inline_result={token:JSCompiler_inline_result,column:col,indent:stream,type};"comment"!=JSCompiler_inline_result.type&&"whitespace"!=JSCompiler_inline_result.type&&(col=state.tokenStack,stream=col.length-1,0<stream&&"record"===col[stream].type&&"dot"===JSCompiler_inline_result.type?col.pop():(0<stream&&"group"===col[stream].type&&col.pop(),col.push(JSCompiler_inline_result)),state.tokenStack=col,state.tokenStack=maybe_drop_post(state.tokenStack));switch(type){case "atom":return"atom";
case "attribute":return"attribute";case "boolean":return"atom";case "builtin":return"builtin";case "close_paren":return null;case "colon":return null;case "comment":return"comment";case "dot":return null;case "error":return"error";case "fun":return"meta";case "function":return"tag";case "guard":return"property";case "keyword":return"keyword";case "macro":return"variable-2";case "number":return"number";case "open_paren":return null;case "operator":return"operator";case "record":return"bracket";case "separator":return null;
case "string":return"string";case "type":return"def";case "variable":return"variable";default:return null}}function peekToken(state,depth){var len=state.tokenStack.length;depth=depth?depth:1;return len<depth?!1:state.tokenStack[len-depth]}function maybe_drop_post(s){if(!s.length)return s;var last=s.length-1;if("dot"===s[last].type)return[];if(1<last&&"fun"===s[last].type&&"fun"===s[last-1].token)return s.slice(0,last-1);switch(s[last].token){case "}":return d(s,{g:["{"]});case "]":return d(s,{i:["["]});
case ")":return d(s,{i:["("]});case "\x3e\x3e":return d(s,{i:["\x3c\x3c"]});case "end":return d(s,{i:"begin case fun if receive try".split(" ")});case ",":return d(s,{e:"begin try when -\x3e , ( [ { \x3c\x3c".split(" ")});case "-\x3e":return d(s,{r:["when"],m:["try","if","case","receive"]});case ";":return d(s,{E:"case fun if receive try when".split(" ")});case "catch":return d(s,{e:["try"]});case "of":return d(s,{e:["case"]});case "after":return d(s,{e:["receive","try"]});default:return s}}function d(stack,
tt){for(var type in tt)for(var len=stack.length-1,tokens=tt[type],i=len-1;-1<i;i--)if(is_member(stack[i].token,tokens)){var ss=stack.slice(0,i);switch(type){case "m":return ss.concat(stack[i]).concat(stack[len]);case "r":return ss.concat(stack[len]);case "i":return ss;case "g":return stack=ss,stack.concat.call(stack,{token:"group",column:0,indent:0,type:"group"});case "E":return ss.concat(stack[i]);case "e":return ss.concat(stack[i])}}return"E"==type?[]:stack}function indenter(state,textAfter){var t,
unit=cmCfg.indentUnit;textAfter=textAfter.match(/,|[a-z]+|\}|\]|\)|>>|\|+|\(/);textAfter=truthy(textAfter)&&0===textAfter.index?textAfter[0]:"";var currT=peekToken(state,1),prevT=peekToken(state,2);if(state.in_string||state.in_atom)return CodeMirror.Pass;if(prevT){if("when"==currT.token)return currT.column+unit;if("when"===textAfter&&"function"===prevT.type)return prevT.indent+unit;if("("===textAfter&&"fun"===currT.token)return currT.column+3;if("catch"===textAfter&&(t=getToken(state,["try"])))return t.column;
if(is_member(textAfter,["end","after","of"]))return(t=getToken(state,"begin case fun if receive try".split(" ")))?t.column:CodeMirror.Pass;if(is_member(textAfter,closeParenWords))return(t=getToken(state,openParenWords))?t.column:CodeMirror.Pass;if(is_member(currT.token,[",","|","||"])||is_member(textAfter,[",","|","||"]))return state=state.tokenStack.slice(0,-1),t=getTokenIndex(state,"type",["open_paren"]),(t=truthy(state[t])?state[t]:!1)?t.column+t.token.length:unit;if("-\x3e"==currT.token)return is_member(prevT.token,
["receive","case","if","try"])?prevT.column+unit+unit:prevT.column+unit;if(is_member(currT.token,openParenWords))return currT.column+currT.token.length;state=state.tokenStack;t=getTokenIndex(state,"type",["open_paren","separator","keyword"]);textAfter=getTokenIndex(state,"type",["operator"]);t=truthy(t)&&truthy(textAfter)&&t<textAfter?state[t+1]:truthy(t)?state[t]:!1;return truthy(t)?t.column+unit:0}return 0}function getToken(state,tokens){state=state.tokenStack;tokens=getTokenIndex(state,"token",
tokens);return truthy(state[tokens])?state[tokens]:!1}function getTokenIndex(objs,propname,propvals){for(var i=objs.length-1;-1<i;i--)if(is_member(objs[i][propname],propvals))return i;return!1}function truthy(x){return!1!==x&&null!=x}var typeWords=["-type","-spec","-export_type","-opaque"],keywordWords="after begin catch case cond end fun if let of query receive try when".split(" "),separatorRE=/[\->,;]/,separatorWords=["-\x3e",";",","],operatorAtomWords="and andalso band bnot bor bsl bsr bxor div not or orelse rem xor".split(" "),
operatorSymbolRE=/[\+\-\*\/<>=\|:!]/,operatorSymbolWords="\x3d + - * / \x3e \x3e\x3d \x3c \x3d\x3c \x3d:\x3d \x3d\x3d \x3d/\x3d /\x3d || \x3c- !".split(" "),openParenRE=/[<\(\[\{]/,openParenWords=["\x3c\x3c","(","[","{"],closeParenRE=/[>\)\]\}]/,closeParenWords=["}","]",")","\x3e\x3e"],guardWords="is_atom is_binary is_bitstring is_boolean is_float is_function is_integer is_list is_number is_pid is_port is_record is_reference is_tuple atom binary bitstring boolean function integer list number pid port record reference tuple".split(" "),
bifWords="abs adler32 adler32_combine alive apply atom_to_binary atom_to_list binary_to_atom binary_to_existing_atom binary_to_list binary_to_term bit_size bitstring_to_list byte_size check_process_code contact_binary crc32 crc32_combine date decode_packet delete_module disconnect_node element erase exit float float_to_list garbage_collect get get_keys group_leader halt hd integer_to_list internal_bif iolist_size iolist_to_binary is_alive is_atom is_binary is_bitstring is_boolean is_float is_function is_integer is_list is_number is_pid is_port is_process_alive is_record is_reference is_tuple length link list_to_atom list_to_binary list_to_bitstring list_to_existing_atom list_to_float list_to_integer list_to_pid list_to_tuple load_module make_ref module_loaded monitor_node node node_link node_unlink nodes notalive now open_port pid_to_list port_close port_command port_connect port_control pre_loaded process_flag process_info processes purge_module put register registered round self setelement size spawn spawn_link spawn_monitor spawn_opt split_binary statistics term_to_binary time throw tl trunc tuple_size tuple_to_list unlink unregister whereis".split(" "),
anumRE=/[\w@Ø-ÞÀ-Öß-öø-ÿ]/,escapesRE=/[0-7]{1,3}|[bdefnrstv\\"']|\^[a-zA-Z]|x[0-9a-zA-Z]{2}|x{[0-9a-zA-Z]+}/;return{startState:function(){return{tokenStack:[],in_string:!1,in_atom:!1}},token:function(stream,state){return tokenizer(stream,state)},indent:function(state,textAfter){return indenter(state,textAfter)},lineComment:"%"}})})}
//# sourceMappingURL=module$node_modules$codemirror$mode$erlang$erlang.js.map
