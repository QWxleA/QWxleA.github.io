shadow$provide.module$node_modules$codemirror$mode$shell$shell=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)})(function(CodeMirror){CodeMirror.defineMode("shell",function(){function define(style,dict){for(var i=0;i<dict.length;i++)words[dict[i]]=style}function tokenBase(stream,state){if(stream.eatSpace())return null;
var sol=stream.sol(),ch=stream.next();if("\\"===ch)return stream.next(),null;if("'"===ch||'"'===ch||"`"===ch)return state.tokens.unshift(tokenString(ch,"`"===ch?"quote":"string")),tokenize(stream,state);if("#"===ch){if(sol&&stream.eat("!"))return stream.skipToEnd(),"meta";stream.skipToEnd();return"comment"}if("$"===ch)return state.tokens.unshift(tokenDollar),tokenize(stream,state);if("+"===ch||"\x3d"===ch)return"operator";if("-"===ch)return stream.eat("-"),stream.eatWhile(/\w/),"attribute";if(/\d/.test(ch)&&
(stream.eatWhile(/\d/),stream.eol()||!/\w/.test(stream.peek())))return"number";stream.eatWhile(/[\w-]/);state=stream.current();return"\x3d"===stream.peek()&&/\w+/.test(state)?"def":words.hasOwnProperty(state)?words[state]:null}function tokenString(quote,style){var close="("==quote?")":"{"==quote?"}":quote;return function(stream,state){for(var next,escaped=!1;null!=(next=stream.next());){if(next!==close||escaped)if("$"!==next||escaped||"'"===quote||stream.peek()==close){if(!escaped&&quote!==close&&
next===quote)return state.tokens.unshift(tokenString(quote,style)),tokenize(stream,state);if(!escaped&&/['"]/.test(next)&&!/['"]/.test(quote)){state.tokens.unshift(tokenStringStart(next,"string"));stream.backUp(1);break}}else{stream.backUp(1);state.tokens.unshift(tokenDollar);break}else{state.tokens.shift();break}escaped=!escaped&&"\\"===next}return style}}function tokenStringStart(quote,style){return function(stream,state){state.tokens[0]=tokenString(quote,style);stream.next();return tokenize(stream,
state)}}function tokenize(stream,state){return(state.tokens[0]||tokenBase)(stream,state)}var words={},commonAtoms=["true","false"],commonKeywords="if then do else elif while until for in esac fi fin fil done exit set unset export function".split(" "),commonCommands="ab awk bash beep cat cc cd chown chmod chroot clear cp curl cut diff echo find gawk gcc get git grep hg kill killall ln ls make mkdir openssl mv nc nl node npm ping ps restart rm rmdir sed service sh shopt shred source sort sleep ssh start stop su sudo svn tee telnet top touch vi vim wall wc wget who write yes zsh".split(" ");
CodeMirror.registerHelper("hintWords","shell",commonAtoms.concat(commonKeywords,commonCommands));define("atom",commonAtoms);define("keyword",commonKeywords);define("builtin",commonCommands);var tokenDollar=function(stream,state){1<state.tokens.length&&stream.eat("$");var ch=stream.next();if(/['"({]/.test(ch))return state.tokens[0]=tokenString(ch,"("==ch?"quote":"{"==ch?"def":"string"),tokenize(stream,state);/\d/.test(ch)||stream.eatWhile(/\w/);state.tokens.shift();return"def"};return{startState:function(){return{tokens:[]}},
token:function(stream,state){return tokenize(stream,state)},closeBrackets:"()[]{}''\"\"``",lineComment:"#",fold:"brace"}});CodeMirror.defineMIME("text/x-sh","shell");CodeMirror.defineMIME("application/x-sh","shell")})}
//# sourceMappingURL=module$node_modules$codemirror$mode$shell$shell.js.map
