shadow$provide.module$node_modules$$sentry$core$dist$request=function(global,require,module,exports){function getSdkMetadataForEnvelopeHeader(api){if(api.metadata&&api.metadata.sdk)return api=api.metadata.sdk,{name:api.name,version:api.version}}Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("module$node_modules$$sentry$core$node_modules$tslib$tslib"),utils_1=require("module$node_modules$$sentry$utils$dist$index"),api_1=require("module$node_modules$$sentry$core$dist$api");
exports.sessionToSentryRequest=function(session,api){var sdkInfo=getSdkMetadataForEnvelopeHeader(api),envelopeHeaders=tslib_1.__assign(tslib_1.__assign({sent_at:(new Date).toISOString()},sdkInfo&&{sdk:sdkInfo}),!!api.tunnel&&{dsn:utils_1.dsnToString(api.dsn)});sdkInfo="aggregates"in session?"sessions":"session";session=utils_1.createEnvelope(envelopeHeaders,[[{type:sdkInfo},session]]);return{body:utils_1.serializeEnvelope(session),type:sdkInfo,url:api_1.getEnvelopeEndpointWithUrlEncodedAuth(api.dsn,
api.tunnel)}};exports.eventToSentryRequest=function(event,api){var sdkInfo=getSdkMetadataForEnvelopeHeader(api),eventType=event.type||"event",useEnvelope="transaction"===eventType||!!api.tunnel,_a=(event.sdkProcessingMetadata||{}).transactionSampling||{},samplingMethod=_a.method;_a=_a.rate;var sdkInfo$jscomp$0=api.metadata.sdk;sdkInfo$jscomp$0&&(event.sdk=event.sdk||{},event.sdk.name=event.sdk.name||sdkInfo$jscomp$0.name,event.sdk.version=event.sdk.version||sdkInfo$jscomp$0.version,event.sdk.integrations=
tslib_1.__spread(event.sdk.integrations||[],sdkInfo$jscomp$0.integrations||[]),event.sdk.packages=tslib_1.__spread(event.sdk.packages||[],sdkInfo$jscomp$0.packages||[]));event.tags=event.tags||{};event.extra=event.extra||{};event.sdkProcessingMetadata&&event.sdkProcessingMetadata.baseClientNormalized||(event.tags.skippedNormalization=!0,event.extra.normalizeDepth=event.sdkProcessingMetadata?event.sdkProcessingMetadata.normalizeDepth:"unset");delete event.sdkProcessingMetadata;try{var body=JSON.stringify(event)}catch(err){event.tags.JSONStringifyError=
!0;event.extra.JSONStringifyError=err;try{body=JSON.stringify(utils_1.normalize(event))}catch(newErr){body=newErr,body=JSON.stringify({message:"JSON.stringify error after renormalization",extra:{message:body.message,stack:body.stack}})}}body={body,type:eventType,url:useEnvelope?api_1.getEnvelopeEndpointWithUrlEncodedAuth(api.dsn,api.tunnel):api_1.getStoreEndpointWithUrlEncodedAuth(api.dsn)};useEnvelope&&(event=tslib_1.__assign(tslib_1.__assign({event_id:event.event_id,sent_at:(new Date).toISOString()},
sdkInfo&&{sdk:sdkInfo}),!!api.tunnel&&{dsn:utils_1.dsnToString(api.dsn)}),eventType=utils_1.createEnvelope(event,[[{type:eventType,sample_rates:[{id:samplingMethod,rate:_a}]},body.body]]),body.body=utils_1.serializeEnvelope(eventType));return body}}
//# sourceMappingURL=module$node_modules$$sentry$core$dist$request.js.map
