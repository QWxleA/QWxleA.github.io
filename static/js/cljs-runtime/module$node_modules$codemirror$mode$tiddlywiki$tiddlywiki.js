shadow$provide.module$node_modules$codemirror$mode$tiddlywiki$tiddlywiki=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)})(function(CodeMirror){CodeMirror.defineMode("tiddlywiki",function(){function chain(stream,state,f){state.tokenize=f;return f(stream,state)}function tokenBase(stream,state){var sol=
stream.sol(),ch=stream.peek();state.block=!1;if(sol&&/[<\/\*{}\-]/.test(ch)){if(stream.match(reCodeBlockStart))return state.block=!0,chain(stream,state,twTokenCode);if(stream.match(reBlockQuote))return"quote";if(stream.match(reWikiCommentStart)||stream.match(reWikiCommentStop)||stream.match(reJsCodeStart)||stream.match(reJsCodeStop)||stream.match(reXmlCodeStart)||stream.match(reXmlCodeStop))return"comment";if(stream.match(reHR))return"hr"}stream.next();if(sol&&/[\/\*!#;:>|]/.test(ch)){if("!"==ch)return stream.skipToEnd(),
"header";if("*"==ch)return stream.eatWhile("*"),"comment";if("#"==ch)return stream.eatWhile("#"),"comment";if(";"==ch)return stream.eatWhile(";"),"comment";if(":"==ch)return stream.eatWhile(":"),"comment";if("\x3e"==ch)return stream.eatWhile("\x3e"),"quote";if("|"==ch)return"header"}if("{"==ch&&stream.match(/\{\{/))return chain(stream,state,twTokenCode);if(/[hf]/i.test(ch)&&/[ti]/i.test(stream.peek())&&stream.match(/\b(ttps?|tp|ile):\/\/[\-A-Z0-9+&@#\/%?=~_|$!:,.;]*[A-Z0-9+&@#\/%=~_|$]/i))return"link";
if('"'==ch)return"string";if("~"==ch||/[\[\]]/.test(ch)&&stream.match(ch))return"brace";if("@"==ch)return stream.eatWhile(isSpaceName),"link";if(/\d/.test(ch))return stream.eatWhile(/\d/),"number";if("/"==ch){if(stream.eat("%"))return chain(stream,state,twTokenComment);if(stream.eat("/"))return chain(stream,state,twTokenEm)}if("_"==ch&&stream.eat("_"))return chain(stream,state,twTokenUnderline);if("-"==ch&&stream.eat("-")){if(" "!=stream.peek())return chain(stream,state,twTokenStrike);if(" "==stream.peek())return"brace"}if("'"==
ch&&stream.eat("'"))return chain(stream,state,twTokenStrong);if("\x3c"==ch&&stream.eat("\x3c"))return chain(stream,state,twTokenMacro);stream.eatWhile(/[\w\$_]/);return textwords.propertyIsEnumerable(stream.current())?"keyword":null}function twTokenComment(stream,state){for(var maybeEnd=!1,ch;ch=stream.next();){if("/"==ch&&maybeEnd){state.tokenize=tokenBase;break}maybeEnd="%"==ch}return"comment"}function twTokenStrong(stream,state){for(var maybeEnd=!1,ch;ch=stream.next();){if("'"==ch&&maybeEnd){state.tokenize=
tokenBase;break}maybeEnd="'"==ch}return"strong"}function twTokenCode(stream,state){var sb=state.block;if(sb&&stream.current())return"comment";if(!sb&&stream.match(reUntilCodeStop)||sb&&stream.sol()&&stream.match(reCodeBlockStop))return state.tokenize=tokenBase,"comment";stream.next();return"comment"}function twTokenEm(stream,state){for(var maybeEnd=!1,ch;ch=stream.next();){if("/"==ch&&maybeEnd){state.tokenize=tokenBase;break}maybeEnd="/"==ch}return"em"}function twTokenUnderline(stream,state){for(var maybeEnd=
!1,ch;ch=stream.next();){if("_"==ch&&maybeEnd){state.tokenize=tokenBase;break}maybeEnd="_"==ch}return"underlined"}function twTokenStrike(stream,state){for(var maybeEnd=!1,ch;ch=stream.next();){if("-"==ch&&maybeEnd){state.tokenize=tokenBase;break}maybeEnd="-"==ch}return"strikethrough"}function twTokenMacro(stream,state){if("\x3c\x3c"==stream.current())return"macro";var ch=stream.next();if(!ch)return state.tokenize=tokenBase,null;if("\x3e"==ch&&"\x3e"==stream.peek())return stream.next(),state.tokenize=
tokenBase,"macro";stream.eatWhile(/[\w\$_]/);return keywords.propertyIsEnumerable(stream.current())?"keyword":null}var textwords={},keywords={allTags:!0,closeAll:!0,list:!0,newJournal:!0,newTiddler:!0,permaview:!0,saveChanges:!0,search:!0,slider:!0,tabs:!0,tag:!0,tagging:!0,tags:!0,tiddler:!0,timeline:!0,today:!0,version:!0,option:!0,"with":!0,filter:!0},isSpaceName=/[\w_\-]/i,reHR=/^\-\-\-\-+$/,reWikiCommentStart=/^\/\*\*\*$/,reWikiCommentStop=/^\*\*\*\/$/,reBlockQuote=/^<<<$/,reJsCodeStart=/^\/\/\{\{\{$/,
reJsCodeStop=/^\/\/\}\}\}$/,reXmlCodeStart=/^\x3c!--\{\{\{--\x3e$/,reXmlCodeStop=/^\x3c!--\}\}\}--\x3e$/,reCodeBlockStart=/^\{\{\{$/,reCodeBlockStop=/^\}\}\}$/,reUntilCodeStop=/.*?\}\}\}/;return{startState:function(){return{tokenize:tokenBase}},token:function(stream,state){return stream.eatSpace()?null:state.tokenize(stream,state)}}});CodeMirror.defineMIME("text/x-tiddlywiki","tiddlywiki")})}
//# sourceMappingURL=module$node_modules$codemirror$mode$tiddlywiki$tiddlywiki.js.map
