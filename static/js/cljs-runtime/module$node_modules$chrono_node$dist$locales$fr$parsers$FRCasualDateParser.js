shadow$provide.module$node_modules$chrono_node$dist$locales$fr$parsers$FRCasualDateParser=function(global,require,module,exports){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k);o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,
v){o["default"]=v});global=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);__setModuleDefault(result,mod);return result};module=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});const dayjs_1=module(require("module$node_modules$dayjs$dayjs_min")),
index_1=require("module$node_modules$chrono_node$dist$index");module=require("module$node_modules$chrono_node$dist$common$parsers$AbstractParserWithWordBoundary");const dayjs_2=require("module$node_modules$chrono_node$dist$utils$dayjs"),references=global(require("module$node_modules$chrono_node$dist$common$casualReferences"));class FRCasualDateParser extends module.AbstractParserWithWordBoundaryChecking{innerPattern(context){return/(maintenant|aujourd'hui|demain|hier|cette\s*nuit|la\s*veille)(?=\W|$)/i}innerExtract(context,
match){let targetDate=dayjs_1.default(context.refDate);match=match[0].toLowerCase();const component=context.createParsingComponents();switch(match){case "maintenant":return references.now(context.refDate);case "aujourd'hui":return references.today(context.refDate);case "hier":return references.yesterday(context.refDate);case "demain":return references.tomorrow(context.refDate);default:match.match(/cette\s*nuit/)?(dayjs_2.assignSimilarDate(component,targetDate),component.imply("hour",22),component.imply("meridiem",
index_1.Meridiem.PM)):match.match(/la\s*veille/)&&(targetDate=targetDate.add(-1,"day"),dayjs_2.assignSimilarDate(component,targetDate),component.imply("hour",0))}return component}}exports.default=FRCasualDateParser}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$fr$parsers$FRCasualDateParser.js.map
