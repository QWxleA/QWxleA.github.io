{"version":3,"sources":["frontend/modules/layout/core.cljs"],"mappings":"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","names":["js/frontend","js/frontend.modules","js/frontend.modules.layout","js/frontend.modules.layout.core","js/frontend.modules.layout.core.*movable-containers","frontend.modules.layout.core/*movable-containers","cljs.core.atom","frontend.modules.layout.core/calc-layout-data","cnt","_evt","frontend.modules.layout.core/move-container-to-top","identity","temp__5720__auto__","container","and__4251__auto__","cljs.core/deref","cljs.core/count","cljs.core.get","zdx","cljs.core.map","p__109582","vec__109583","cljs.core.nth","_","el","c","js/getComputedStyle","v1","v2","z","cljs.core._EQ_","cljs.core.not_EQ_","cljs.core.remove","cljs.core/nil?","cljs-bean.core/->js","js/Math.max.apply","zdx'","frontend.util/safe-parse-int","frontend.modules.layout.core/setup-draggable-container!","callback","handle","cls","ds","ing?","js/interact","e","dset","dx","dy","dx'","frontend.util/safe-parse-float","dy'","x","y","G__109587","cljs.core.swap_BANG_","cljs.core/assoc","cljs.core/dissoc","frontend.modules.layout.core/setup-resizable-container!","G__109588","w","h"],"sourcesContent":["(ns frontend.modules.layout.core\n  (:require [cljs-bean.core :as bean]\n            [frontend.util :as util]))\n\n(defonce *movable-containers (atom {}))\n\n(defn- calc-layout-data\n  [^js cnt ^js _evt]\n  (.toJSON (.getBoundingClientRect cnt)))\n\n(defn ^:export move-container-to-top\n  [identity]\n  (when-let [^js/HTMLElement container (and (> (count @*movable-containers) 1)\n                                            (get @*movable-containers identity))]\n    (let [zdx (->> @*movable-containers\n                   (map (fn [[_ ^js el]]\n                          (let [^js c (js/getComputedStyle el)\n                                v1 (.-visibility c)\n                                v2 (.-display c)]\n                            (when-let [z (and (= \"visible\" v1)\n                                              (not= \"none\" v2)\n                                              (.-zIndex c))]\n                              z))))\n                   (remove nil?))\n          zdx (bean/->js zdx)\n          zdx (and zdx (js/Math.max.apply nil zdx))\n          zdx' (util/safe-parse-int (.. container -style -zIndex))]\n\n      (when (or (nil? zdx') (not= zdx zdx'))\n        (set! (.. container -style -zIndex) (inc zdx))))))\n\n(defn ^:export setup-draggable-container!\n  [^js/HTMLElement el callback]\n  (when-let [^js/HTMLElement handle (.querySelector el \".draggable-handle\")]\n    (let [^js cls (.-classList el)\n          ^js ds (.-dataset el)\n          identity (.-identity ds)\n          ing? \"is-dragging\"]\n\n      ;; draggable\n      (-> (js/interact handle)\n          (.draggable\n            (bean/->js\n              {:listeners\n               {:move (fn [^js/MouseEvent e]\n                        (let [^js dset (.-dataset el)\n                              dx (.-dx e)\n                              dy (.-dy e)\n                              dx' (util/safe-parse-float (.-dx dset))\n                              dy' (util/safe-parse-float (.-dy dset))\n                              x (+ dx (if dx' dx' 0))\n                              y (+ dy (if dy' dy' 0))]\n\n                          ;; update container position\n                          (set! (.. el -style -transform) (str \"translate(\" x \"px, \" y \"px)\"))\n\n                          ;; cache dx dy\n                          (set! (.. el -dataset -dx) x)\n                          (set! (.. el -dataset -dy) y)))}}))\n          (.on \"dragstart\" (fn [] (.add cls ing?)))\n          (.on \"dragend\" (fn [e]\n                           (.remove cls ing?)\n                           (callback (bean/->js (calc-layout-data el e))))))\n      ;; manager\n      (swap! *movable-containers assoc identity el)\n\n      #(swap! *movable-containers dissoc identity el))))\n\n(defn ^:export setup-resizable-container!\n  [^js/HTMLElement el callback]\n  (let [^js cls (.-classList el)\n        ^js ds (.-dataset el)\n        identity (.-identity ds)\n        ing? \"is-resizing\"]\n\n    ;; resizable\n    (-> (js/interact el)\n        (.resizable\n          (bean/->js\n            {:edges\n             {:left true :top true :bottom true :right true}\n\n             :listeners\n             {:start (fn [] (.add cls ing?))\n              :end   (fn [e] (.remove cls ing?) (callback (bean/->js (calc-layout-data el e))))\n              :move  (fn [^js/MouseEvent e]\n                       (let [^js dset (.-dataset el)\n                             w (.. e -rect -width)\n                             h (.. e -rect -height)\n\n                             ;; update position from top/left\n                             dx (.. e -deltaRect -left)\n                             dy (.. e -deltaRect -top)\n\n                             dx' (util/safe-parse-float (.-dx dset))\n                             dy' (util/safe-parse-float (.-dy dset))\n\n                             x (+ dx (if dx' dx' 0))\n                             y (+ dy (if dy' dy' 0))]\n\n                         ;; update container position\n                         (set! (.. el -style -transform) (str \"translate(\" x \"px, \" y \"px)\"))\n\n                         ;; update container size\n                         (set! (.. el -style -width) (str w \"px\"))\n                         (set! (.. el -style -height) (str h \"px\"))\n\n                         (set! (. dset -dx) x)\n                         (set! (. dset -dy) y)))}})))\n\n    ;; manager\n    (swap! *movable-containers assoc identity el)\n\n    #(swap! *movable-containers dissoc identity el)))\n"]}