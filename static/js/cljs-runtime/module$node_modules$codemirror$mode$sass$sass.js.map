{
"version":3,
"file":"module$node_modules$codemirror$mode$sass$sass.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/codemirror/mode/sass/sass.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$sass$sass\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"sass\", function(config) {\n  var cssMode = CodeMirror.mimeModes[\"text/css\"];\n  var propertyKeywords = cssMode.propertyKeywords || {},\n      colorKeywords = cssMode.colorKeywords || {},\n      valueKeywords = cssMode.valueKeywords || {},\n      fontProperties = cssMode.fontProperties || {};\n\n  function tokenRegexp(words) {\n    return new RegExp(\"^\" + words.join(\"|\"));\n  }\n\n  var keywords = [\"true\", \"false\", \"null\", \"auto\"];\n  var keywordsRegexp = new RegExp(\"^\" + keywords.join(\"|\"));\n\n  var operators = [\"\\\\(\", \"\\\\)\", \"=\", \">\", \"<\", \"==\", \">=\", \"<=\", \"\\\\+\", \"-\",\n                   \"\\\\!=\", \"/\", \"\\\\*\", \"%\", \"and\", \"or\", \"not\", \";\",\"\\\\{\",\"\\\\}\",\":\"];\n  var opRegexp = tokenRegexp(operators);\n\n  var pseudoElementsRegexp = /^::?[a-zA-Z_][\\w\\-]*/;\n\n  var word;\n\n  function isEndLine(stream) {\n    return !stream.peek() || stream.match(/\\s+$/, false);\n  }\n\n  function urlTokens(stream, state) {\n    var ch = stream.peek();\n\n    if (ch === \")\") {\n      stream.next();\n      state.tokenizer = tokenBase;\n      return \"operator\";\n    } else if (ch === \"(\") {\n      stream.next();\n      stream.eatSpace();\n\n      return \"operator\";\n    } else if (ch === \"'\" || ch === '\"') {\n      state.tokenizer = buildStringTokenizer(stream.next());\n      return \"string\";\n    } else {\n      state.tokenizer = buildStringTokenizer(\")\", false);\n      return \"string\";\n    }\n  }\n  function comment(indentation, multiLine) {\n    return function(stream, state) {\n      if (stream.sol() && stream.indentation() <= indentation) {\n        state.tokenizer = tokenBase;\n        return tokenBase(stream, state);\n      }\n\n      if (multiLine && stream.skipTo(\"*/\")) {\n        stream.next();\n        stream.next();\n        state.tokenizer = tokenBase;\n      } else {\n        stream.skipToEnd();\n      }\n\n      return \"comment\";\n    };\n  }\n\n  function buildStringTokenizer(quote, greedy) {\n    if (greedy == null) { greedy = true; }\n\n    function stringTokenizer(stream, state) {\n      var nextChar = stream.next();\n      var peekChar = stream.peek();\n      var previousChar = stream.string.charAt(stream.pos-2);\n\n      var endingString = ((nextChar !== \"\\\\\" && peekChar === quote) || (nextChar === quote && previousChar !== \"\\\\\"));\n\n      if (endingString) {\n        if (nextChar !== quote && greedy) { stream.next(); }\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        state.tokenizer = tokenBase;\n        return \"string\";\n      } else if (nextChar === \"#\" && peekChar === \"{\") {\n        state.tokenizer = buildInterpolationTokenizer(stringTokenizer);\n        stream.next();\n        return \"operator\";\n      } else {\n        return \"string\";\n      }\n    }\n\n    return stringTokenizer;\n  }\n\n  function buildInterpolationTokenizer(currentTokenizer) {\n    return function(stream, state) {\n      if (stream.peek() === \"}\") {\n        stream.next();\n        state.tokenizer = currentTokenizer;\n        return \"operator\";\n      } else {\n        return tokenBase(stream, state);\n      }\n    };\n  }\n\n  function indent(state) {\n    if (state.indentCount == 0) {\n      state.indentCount++;\n      var lastScopeOffset = state.scopes[0].offset;\n      var currentOffset = lastScopeOffset + config.indentUnit;\n      state.scopes.unshift({ offset:currentOffset });\n    }\n  }\n\n  function dedent(state) {\n    if (state.scopes.length == 1) return;\n\n    state.scopes.shift();\n  }\n\n  function tokenBase(stream, state) {\n    var ch = stream.peek();\n\n    // Comment\n    if (stream.match(\"/*\")) {\n      state.tokenizer = comment(stream.indentation(), true);\n      return state.tokenizer(stream, state);\n    }\n    if (stream.match(\"//\")) {\n      state.tokenizer = comment(stream.indentation(), false);\n      return state.tokenizer(stream, state);\n    }\n\n    // Interpolation\n    if (stream.match(\"#{\")) {\n      state.tokenizer = buildInterpolationTokenizer(tokenBase);\n      return \"operator\";\n    }\n\n    // Strings\n    if (ch === '\"' || ch === \"'\") {\n      stream.next();\n      state.tokenizer = buildStringTokenizer(ch);\n      return \"string\";\n    }\n\n    if(!state.cursorHalf){// state.cursorHalf === 0\n    // first half i.e. before : for key-value pairs\n    // including selectors\n\n      if (ch === \"-\") {\n        if (stream.match(/^-\\w+-/)) {\n          return \"meta\";\n        }\n      }\n\n      if (ch === \".\") {\n        stream.next();\n        if (stream.match(/^[\\w-]+/)) {\n          indent(state);\n          return \"qualifier\";\n        } else if (stream.peek() === \"#\") {\n          indent(state);\n          return \"tag\";\n        }\n      }\n\n      if (ch === \"#\") {\n        stream.next();\n        // ID selectors\n        if (stream.match(/^[\\w-]+/)) {\n          indent(state);\n          return \"builtin\";\n        }\n        if (stream.peek() === \"#\") {\n          indent(state);\n          return \"tag\";\n        }\n      }\n\n      // Variables\n      if (ch === \"$\") {\n        stream.next();\n        stream.eatWhile(/[\\w-]/);\n        return \"variable-2\";\n      }\n\n      // Numbers\n      if (stream.match(/^-?[0-9\\.]+/))\n        return \"number\";\n\n      // Units\n      if (stream.match(/^(px|em|in)\\b/))\n        return \"unit\";\n\n      if (stream.match(keywordsRegexp))\n        return \"keyword\";\n\n      if (stream.match(/^url/) && stream.peek() === \"(\") {\n        state.tokenizer = urlTokens;\n        return \"atom\";\n      }\n\n      if (ch === \"=\") {\n        // Match shortcut mixin definition\n        if (stream.match(/^=[\\w-]+/)) {\n          indent(state);\n          return \"meta\";\n        }\n      }\n\n      if (ch === \"+\") {\n        // Match shortcut mixin definition\n        if (stream.match(/^\\+[\\w-]+/)){\n          return \"variable-3\";\n        }\n      }\n\n      if(ch === \"@\"){\n        if(stream.match(/@extend/)){\n          if(!stream.match(/\\s*[\\w]/))\n            dedent(state);\n        }\n      }\n\n\n      // Indent Directives\n      if (stream.match(/^@(else if|if|media|else|for|each|while|mixin|function)/)) {\n        indent(state);\n        return \"def\";\n      }\n\n      // Other Directives\n      if (ch === \"@\") {\n        stream.next();\n        stream.eatWhile(/[\\w-]/);\n        return \"def\";\n      }\n\n      if (stream.eatWhile(/[\\w-]/)){\n        if(stream.match(/ *: *[\\w-\\+\\$#!\\(\"']/,false)){\n          word = stream.current().toLowerCase();\n          var prop = state.prevProp + \"-\" + word;\n          if (propertyKeywords.hasOwnProperty(prop)) {\n            return \"property\";\n          } else if (propertyKeywords.hasOwnProperty(word)) {\n            state.prevProp = word;\n            return \"property\";\n          } else if (fontProperties.hasOwnProperty(word)) {\n            return \"property\";\n          }\n          return \"tag\";\n        }\n        else if(stream.match(/ *:/,false)){\n          indent(state);\n          state.cursorHalf = 1;\n          state.prevProp = stream.current().toLowerCase();\n          return \"property\";\n        }\n        else if(stream.match(/ *,/,false)){\n          return \"tag\";\n        }\n        else{\n          indent(state);\n          return \"tag\";\n        }\n      }\n\n      if(ch === \":\"){\n        if (stream.match(pseudoElementsRegexp)){ // could be a pseudo-element\n          return \"variable-3\";\n        }\n        stream.next();\n        state.cursorHalf=1;\n        return \"operator\";\n      }\n\n    } // cursorHalf===0 ends here\n    else{\n\n      if (ch === \"#\") {\n        stream.next();\n        // Hex numbers\n        if (stream.match(/[0-9a-fA-F]{6}|[0-9a-fA-F]{3}/)){\n          if (isEndLine(stream)) {\n            state.cursorHalf = 0;\n          }\n          return \"number\";\n        }\n      }\n\n      // Numbers\n      if (stream.match(/^-?[0-9\\.]+/)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"number\";\n      }\n\n      // Units\n      if (stream.match(/^(px|em|in)\\b/)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"unit\";\n      }\n\n      if (stream.match(keywordsRegexp)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"keyword\";\n      }\n\n      if (stream.match(/^url/) && stream.peek() === \"(\") {\n        state.tokenizer = urlTokens;\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"atom\";\n      }\n\n      // Variables\n      if (ch === \"$\") {\n        stream.next();\n        stream.eatWhile(/[\\w-]/);\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"variable-2\";\n      }\n\n      // bang character for !important, !default, etc.\n      if (ch === \"!\") {\n        stream.next();\n        state.cursorHalf = 0;\n        return stream.match(/^[\\w]+/) ? \"keyword\": \"operator\";\n      }\n\n      if (stream.match(opRegexp)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"operator\";\n      }\n\n      // attributes\n      if (stream.eatWhile(/[\\w-]/)) {\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        word = stream.current().toLowerCase();\n        if (valueKeywords.hasOwnProperty(word)) {\n          return \"atom\";\n        } else if (colorKeywords.hasOwnProperty(word)) {\n          return \"keyword\";\n        } else if (propertyKeywords.hasOwnProperty(word)) {\n          state.prevProp = stream.current().toLowerCase();\n          return \"property\";\n        } else {\n          return \"tag\";\n        }\n      }\n\n      //stream.eatSpace();\n      if (isEndLine(stream)) {\n        state.cursorHalf = 0;\n        return null;\n      }\n\n    } // else ends here\n\n    if (stream.match(opRegexp))\n      return \"operator\";\n\n    // If we haven't returned by now, we move 1 character\n    // and return an error\n    stream.next();\n    return null;\n  }\n\n  function tokenLexer(stream, state) {\n    if (stream.sol()) state.indentCount = 0;\n    var style = state.tokenizer(stream, state);\n    var current = stream.current();\n\n    if (current === \"@return\" || current === \"}\"){\n      dedent(state);\n    }\n\n    if (style !== null) {\n      var startOfToken = stream.pos - current.length;\n\n      var withCurrentIndent = startOfToken + (config.indentUnit * state.indentCount);\n\n      var newScopes = [];\n\n      for (var i = 0; i < state.scopes.length; i++) {\n        var scope = state.scopes[i];\n\n        if (scope.offset <= withCurrentIndent)\n          newScopes.push(scope);\n      }\n\n      state.scopes = newScopes;\n    }\n\n\n    return style;\n  }\n\n  return {\n    startState: function() {\n      return {\n        tokenizer: tokenBase,\n        scopes: [{offset: 0, type: \"sass\"}],\n        indentCount: 0,\n        cursorHalf: 0,  // cursor half tells us if cursor lies after (1)\n                        // or before (0) colon (well... more or less)\n        definedVars: [],\n        definedMixins: []\n      };\n    },\n    token: function(stream, state) {\n      var style = tokenLexer(stream, state);\n\n      state.lastToken = { style: style, content: stream.current() };\n\n      return style;\n    },\n\n    indent: function(state) {\n      return state.scopes[0].offset;\n    }\n  };\n}, \"css\");\n\nCodeMirror.defineMIME(\"text/x-sass\", \"sass\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","config","isEndLine","stream","peek","match","urlTokens","state","ch","next","tokenizer","tokenBase","eatSpace","buildStringTokenizer","comment","indentation","multiLine","sol","skipTo","skipToEnd","quote","greedy","stringTokenizer","nextChar","peekChar","previousChar","string","charAt","pos","cursorHalf","buildInterpolationTokenizer","currentTokenizer","indent","indentCount","scopes","unshift","offset","indentUnit","keywordsRegexp","eatWhile","opRegexp","word","current","toLowerCase","valueKeywords","hasOwnProperty","colorKeywords","propertyKeywords","prevProp","length","shift","fontProperties","pseudoElementsRegexp","cssMode","mimeModes","RegExp","startState","type","definedVars","definedMixins","token","style","withCurrentIndent","newScopes","i","scope","push","lastToken","content","defineMIME"]
}
