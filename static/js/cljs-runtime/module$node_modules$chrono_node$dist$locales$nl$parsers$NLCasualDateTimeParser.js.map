{
"version":3,
"file":"module$node_modules$chrono_node$dist$locales$nl$parsers$NLCasualDateTimeParser.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,8EAAA,CAAmG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEvIC,MAAAA,CAAmB,IAAnBA,EAA2B,IAAKA,CAAAA,eAAhCA,EAAoD,QAAS,CAACC,GAAD,CAAM,CACnE,MAAQA,IAAD,EAAQA,GAAIC,CAAAA,UAAZ,CAA0BD,GAA1B,CAAgC,CAAE,UAAWA,GAAb,CAD4B,CAGvEE,OAAOC,CAAAA,cAAP,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAAEM,MAAO,CAAA,CAAT,CAA7C,CACMC,OAAAA,CAAmCT,OAAA,CAAQ,oFAAR,CACzC,OAAMU,QAAUV,OAAA,CAAQ,4CAAR,CAAhB,CACMW,QAAUX,OAAA,CAAQ,kDAAR,CADhB;AAEMY,QAAUT,MAAA,CAAgBH,OAAA,CAAQ,qCAAR,CAAhB,CAGhB,MAAMa,uBAAN,QAAqCJ,OAAiCK,CAAAA,sCAAtE,CACIC,YAAY,CAACC,OAAD,CAAU,CAClB,MAAO,qEADW,CAGtBC,YAAY,CAACD,OAAD,CAAUE,KAAV,CAAiB,CACzB,MAAMC,SAAWD,KAAA,CAPNE,CAOM,CAAkBC,CAAAA,WAAlB,EACXC,MAAAA,CAAWJ,KAAA,CAPCK,CAOD,CAAyBF,CAAAA,WAAzB,EACjB,OAAMG,UAAYR,OAAQS,CAAAA,uBAAR,EACZC,QAAAA,CAAad,OAAQe,CAAAA,OAAR,CAAgBX,OAAQY,CAAAA,OAAxB,CACnB,QAAQT,QAAR,EACI,KAAK,UAAL,CACIR,OAAQkB,CAAAA,iBAAR,CAA0BL,SAA1B,CAAqCE,OAAWI,CAAAA,GAAX,CAAe,CAAC,CAAhB;AAAmB,KAAnB,CAArC,CACA,MACJ,MAAK,KAAL,CACInB,OAAQkB,CAAAA,iBAAR,CAA0BL,SAA1B,CAAqCE,OAArC,CACA,MACJ,MAAK,QAAL,CACIf,OAAQoB,CAAAA,gBAAR,CAAyBP,SAAzB,CAAoCE,OAApC,CARR,CAWA,OAAQJ,KAAR,EACI,KAAK,SAAL,CACIE,SAAUQ,CAAAA,KAAV,CAAgB,UAAhB,CAA4BtB,OAAQuB,CAAAA,QAASC,CAAAA,EAA7C,CACAV,UAAUQ,CAAAA,KAAV,CAAgB,MAAhB,CAAwB,CAAxB,CACA,MACJ,MAAK,QAAL,CACIR,SAAUQ,CAAAA,KAAV,CAAgB,UAAhB,CAA4BtB,OAAQuB,CAAAA,QAASC,CAAAA,EAA7C,CACAV,UAAUQ,CAAAA,KAAV,CAAgB,MAAhB,CAAwB,EAAxB,CACA,MACJ,MAAK,UAAL,CACIR,SAAUQ,CAAAA,KAAV,CAAgB,UAAhB,CAA4BtB,OAAQuB,CAAAA,QAASE,CAAAA,EAA7C,CACAX,UAAUQ,CAAAA,KAAV,CAAgB,MAAhB,CAAwB,EAAxB,CACA,MACJ,MAAK,OAAL,CACIR,SAAUQ,CAAAA,KAAV,CAAgB,UAAhB,CAA4BtB,OAAQuB,CAAAA,QAASE,CAAAA,EAA7C,CACA,CAAAX,SAAUQ,CAAAA,KAAV,CAAgB,MAAhB;AAAwB,EAAxB,CAfR,CAkBA,MAAOR,UAlCkB,CAJjC,CAyCAtB,OAAQyB,CAAAA,OAAR,CAAkBd,sBArDyH;",
"sources":["node_modules/chrono-node/dist/locales/nl/parsers/NLCasualDateTimeParser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$locales$nl$parsers$NLCasualDateTimeParser\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbstractParserWithWordBoundary_1 = require(\"../../../common/parsers/AbstractParserWithWordBoundary\");\nconst index_1 = require(\"../../../index\");\nconst dayjs_1 = require(\"../../../utils/dayjs\");\nconst dayjs_2 = __importDefault(require(\"dayjs\"));\nconst DATE_GROUP = 1;\nconst TIME_OF_DAY_GROUP = 2;\nclass NLCasualDateTimeParser extends AbstractParserWithWordBoundary_1.AbstractParserWithWordBoundaryChecking {\n    innerPattern(context) {\n        return /(gisteren|morgen|van)(ochtend|middag|namiddag|avond|nacht)(?=\\W|$)/i;\n    }\n    innerExtract(context, match) {\n        const dateText = match[DATE_GROUP].toLowerCase();\n        const timeText = match[TIME_OF_DAY_GROUP].toLowerCase();\n        const component = context.createParsingComponents();\n        const targetDate = dayjs_2.default(context.refDate);\n        switch (dateText) {\n            case \"gisteren\":\n                dayjs_1.assignSimilarDate(component, targetDate.add(-1, \"day\"));\n                break;\n            case \"van\":\n                dayjs_1.assignSimilarDate(component, targetDate);\n                break;\n            case \"morgen\":\n                dayjs_1.assignTheNextDay(component, targetDate);\n                break;\n        }\n        switch (timeText) {\n            case \"ochtend\":\n                component.imply(\"meridiem\", index_1.Meridiem.AM);\n                component.imply(\"hour\", 6);\n                break;\n            case \"middag\":\n                component.imply(\"meridiem\", index_1.Meridiem.AM);\n                component.imply(\"hour\", 12);\n                break;\n            case \"namiddag\":\n                component.imply(\"meridiem\", index_1.Meridiem.PM);\n                component.imply(\"hour\", 15);\n                break;\n            case \"avond\":\n                component.imply(\"meridiem\", index_1.Meridiem.PM);\n                component.imply(\"hour\", 20);\n                break;\n        }\n        return component;\n    }\n}\nexports.default = NLCasualDateTimeParser;\n\n};"],
"names":["shadow$provide","global","require","module","exports","__importDefault","mod","__esModule","Object","defineProperty","value","AbstractParserWithWordBoundary_1","index_1","dayjs_1","dayjs_2","NLCasualDateTimeParser","AbstractParserWithWordBoundaryChecking","innerPattern","context","innerExtract","match","dateText","DATE_GROUP","toLowerCase","timeText","TIME_OF_DAY_GROUP","component","createParsingComponents","targetDate","default","refDate","assignSimilarDate","add","assignTheNextDay","imply","Meridiem","AM","PM"]
}
