{"version":3,"sources":["frontend/components/export.cljs"],"mappings":"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","names":["rum.core/lazy-build","rum.core/build-defc","daiquiri.interpreter/interpret","frontend.components.export/export","temp__5720__auto__","current-repo","frontend.state/get-current-repo","frontend.util/electron?","frontend.handler.export/export-repo-as-html!","frontend.context.i18n.t","frontend.handler.export/export-repo-as-markdown!","frontend.handler.export/export-repo-as-opml!","frontend.handler.export/export-repo-as-edn-v2!","frontend.handler.export/export-repo-as-json-v2!","frontend.handler.export/export-repo-as-roam-json!","frontend.components.export/*export-block-type","cljs.core.atom","frontend.components.export/text-indent-style-options","rum.core/build-defcs","daiquiri.core/create-element","rum.core/mark-sync-update","cljs.core.into_array","iter__4652__auto__","s__69247","cljs.core/LazySeq","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__69249","cljs.core/chunk-buffer","i__69248","map__69252","cljs.core/-nth","cljs.core/--destructure-map","cljs.core.get","cljs.core/chunk-append","attrs69245","cljs.core/map?","daiquiri.interpreter/element-attributes","cljs.core/chunk-cons","cljs.core/chunk","iter__69246","cljs.core/chunk-rest","map__69254","cljs.core/first","cljs.core/cons","cljs.core/rest","attrs69236","daiquiri.normalize.merge_with_class","attrs69216","frontend.components.export/export-blocks","rum.core/reactive","rum.core.local","state","root-block-ids","type","rum.core/react","text-indent-style","frontend.state/sub","text-remove-options","copied?","content","G__69208","cljs.core/Keyword","frontend.handler.export/export-blocks-as-markdown","cljs.core.into","frontend.handler.export/export-blocks-as-opml","frontend.handler.export/export-blocks-as-html","frontend.ui.button","cljs.core/reset!","options","cljs.core.mapv","opt","cljs.core._EQ_","cljs.core.assoc","e","value","frontend.util/evalue","frontend.state/set-export-block-text-indent-style!","label","selected","G__69253","G__69255","or__4253__auto__","frontend.ui/checkbox","cljs.core/contains?","frontend.state/update-export-block-text-remove-options!","cljs.core/deref","frontend.util.copy_to_clipboard_BANG_","cljs.core/chunk-first"],"sourcesContent":["(ns frontend.components.export\n  (:require [rum.core :as rum]\n            [frontend.ui :as ui]\n            [frontend.util :as util]\n            [frontend.handler.export :as export]\n            [frontend.state :as state]\n            [frontend.context.i18n :refer [t]]))\n\n(rum/defc export\n  []\n  (when-let [current-repo (state/get-current-repo)]\n    [:div.export\n     [:h1.title \"Export\"]\n\n     [:ul.mr-1\n      (when (util/electron?)\n        [:li.mb-4\n         [:a.font-medium {:on-click #(export/export-repo-as-html! current-repo)}\n          (t :export-public-pages)]])\n      [:li.mb-4\n       [:a.font-medium {:on-click #(export/export-repo-as-markdown! current-repo)}\n        (t :export-markdown)]]\n      [:li.mb-4\n       [:a.font-medium {:on-click #(export/export-repo-as-opml! current-repo)}\n        (t :export-opml)]]\n      [:li.mb-4\n       [:a.font-medium {:on-click #(export/export-repo-as-edn-v2! current-repo)}\n        (t :export-edn)]]\n      [:li.mb-4\n       [:a.font-medium {:on-click #(export/export-repo-as-json-v2! current-repo)}\n        (t :export-json)]]\n      [:li.mb-4\n       [:a.font-medium {:on-click #(export/export-repo-as-roam-json! current-repo)}\n        (t :export-roam-json)]]]\n     [:a#download-as-edn-v2.hidden]\n     [:a#download-as-json-v2.hidden]\n     [:a#download-as-roam-json.hidden]\n     [:a#download-as-html.hidden]\n     [:a#download-as-zip.hidden]\n     [:a#export-as-markdown.hidden]\n     [:a#export-as-opml.hidden]\n     [:a#convert-markdown-to-unordered-list-or-heading.hidden]]))\n\n\n(def *export-block-type (atom :text))\n\n(def text-indent-style-options [{:label \"dashes\"\n                                 :selected false}\n                                {:label \"spaces\"\n                                 :selected false}\n                                {:label \"no-indent\"\n                                 :selected false}])\n\n(rum/defcs export-blocks\n  < rum/reactive\n  (rum/local false ::copied?)\n  [state root-block-ids]\n  (let [current-repo (state/get-current-repo)\n        type (rum/react *export-block-type)\n        text-indent-style (state/sub :copy/export-block-text-indent-style)\n        text-remove-options (state/sub :copy/export-block-text-remove-options)\n        copied? (::copied? state)\n        content\n        (case type\n          :text (export/export-blocks-as-markdown current-repo root-block-ids text-indent-style (into [] text-remove-options))\n          :opml (export/export-blocks-as-opml current-repo root-block-ids)\n          :html (export/export-blocks-as-html current-repo root-block-ids)\n          (export/export-blocks-as-markdown current-repo root-block-ids text-indent-style (into [] text-remove-options)))]\n    [:div.export.resize\n     [:div\n      {:class \"mb-2\"}\n      (ui/button \"Text\"\n                 :class \"mr-4 w-20\"\n                 :on-click #(reset! *export-block-type :text))\n      (ui/button \"OPML\"\n                 :class \"mr-4 w-20\"\n                 :on-click #(reset! *export-block-type :opml))\n      (ui/button \"HTML\"\n                 :class \"w-20\"\n                 :on-click #(reset! *export-block-type :html))]\n     [:textarea.overflow-y-auto.h-96 {:value content}]\n     (let [options (->> text-indent-style-options\n                        (mapv (fn [opt]\n                                (if (= text-indent-style (:label opt))\n                                  (assoc opt :selected true)\n                                  opt))))]\n       [:div [:div.flex.items-center\n              [:label.mr-4\n               {:style {:visibility (if (= :text type) \"visible\" \"hidden\")}}\n               \"Indentation style:\"]\n              [:select.block.my-2.text-lg.rounded.border\n               {:style     {:padding \"0 0 0 12px\"\n                            :visibility (if (= :text type) \"visible\" \"hidden\")}\n                :on-change (fn [e]\n                             (let [value (util/evalue e)]\n                               (state/set-export-block-text-indent-style! value)))}\n               (for [{:keys [label value selected]} options]\n                 [:option (cond->\n                           {:key   label\n                            :value (or value label)}\n                            selected\n                            (assoc :selected selected))\n                  label])]]\n        [:div.flex.items-center\n         (ui/checkbox {:style {:margin-right 6\n                               :visibility (if (= :text type) \"visible\" \"hidden\")}\n                       :checked (contains? text-remove-options :page-ref)\n                       :on-change (fn [e]\n                                    (state/update-export-block-text-remove-options! e :page-ref))})\n\n         [:div\n          {:style {:visibility (if (= :text type) \"visible\" \"hidden\")}}\n          \"[[text]] -> text\"]\n\n         (ui/checkbox {:style {:margin-right 6\n                               :margin-left \"1em\"\n                               :visibility (if (= :text type) \"visible\" \"hidden\")}\n                       :checked (contains? text-remove-options :emphasis)\n                       :on-change (fn [e]\n                                    (state/update-export-block-text-remove-options! e :emphasis))})\n\n         [:div\n          {:style {:visibility (if (= :text type) \"visible\" \"hidden\")}}\n          \"remove emphasis\"]]])\n\n     [:div.mt-4\n      (ui/button (if @copied? \"Copied to clipboard!\" \"Copy to clipboard\")\n        :on-click (fn []\n                    (util/copy-to-clipboard! content (= type :html))\n                    (reset! copied? true)))]]))\n"]}