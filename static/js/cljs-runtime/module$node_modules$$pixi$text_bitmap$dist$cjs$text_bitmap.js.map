{
"version":3,
"file":"module$node_modules$$pixi$text_bitmap$dist$cjs$text_bitmap.js",
"lineCount":58,
"mappings":"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",
"sources":["node_modules/@pixi/text-bitmap/dist/cjs/text-bitmap.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$text_bitmap$dist$cjs$text_bitmap\"] = function(global,require,module,exports) {\n/*!\n * @pixi/text-bitmap - v6.2.0\n * Compiled Mon, 01 Nov 2021 16:52:10 UTC\n *\n * @pixi/text-bitmap is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar math = require('@pixi/math');\nvar settings = require('@pixi/settings');\nvar mesh = require('@pixi/mesh');\nvar utils = require('@pixi/utils');\nvar core = require('@pixi/core');\nvar text = require('@pixi/text');\nvar constants = require('@pixi/constants');\nvar display = require('@pixi/display');\nvar loaders = require('@pixi/loaders');\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) { if (b.hasOwnProperty(p)) { d[p] = b[p]; } } };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\n/* eslint-disable max-len */\n/**\n * Normalized parsed data from .fnt files.\n *\n * @class\n * @memberof PIXI\n */\nvar BitmapFontData = /** @class */ (function () {\n    function BitmapFontData() {\n        /**\n         * @member {PIXI.IBitmapFontDataInfo[]}\n         * @readOnly\n         */\n        this.info = [];\n        /**\n         * @member {PIXI.IBitmapFontDataCommon[]}\n         * @readOnly\n         */\n        this.common = [];\n        /**\n         * @member {PIXI.IBitmapFontDataPage[]}\n         * @readOnly\n         */\n        this.page = [];\n        /**\n         * @member {PIXI.IBitmapFontDataChar[]}\n         * @readOnly\n         */\n        this.char = [];\n        /**\n         * @member {PIXI.IBitmapFontDataKerning[]}\n         * @readOnly\n         */\n        this.kerning = [];\n        this.distanceField = [];\n    }\n    return BitmapFontData;\n}());\n/**\n * @memberof PIXI\n * @typedef {object} IBitmapFontDataInfo\n * @property {string} face\n * @property {number} size\n */\n/**\n * @memberof PIXI\n * @typedef {object} IBitmapFontDataCommon\n * @property {number} lineHeight\n */\n/**\n * @memberof PIXI\n * @typedef {object} IBitmapFontDataPage\n * @property {number} id\n * @property {string} file\n */\n/**\n * @memberof PIXI\n * @typedef {object} IBitmapFontDataChar\n * @property {string} id\n * @property {number} page\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n * @property {number} xoffset\n * @property {number} yoffset\n * @property {number} xadvance\n */\n/**\n * @memberof PIXI\n * @typedef {object} IBitmapFontDataKerning\n * @property {number} first\n * @property {number} second\n * @property {number} amount\n */\n\n/**\n * BitmapFont format that's Text-based.\n *\n * @class\n * @private\n */\nvar TextFormat = /** @class */ (function () {\n    function TextFormat() {\n    }\n    /**\n     * Check if resource refers to txt font data.\n     *\n     * @static\n     * @private\n     * @param {any} data\n     * @return {boolean} True if resource could be treated as font data, false otherwise.\n     */\n    TextFormat.test = function (data) {\n        return typeof data === 'string' && data.indexOf('info face=') === 0;\n    };\n    /**\n     * Convert text font data to a javascript object.\n     *\n     * @static\n     * @private\n     * @param {string} txt - Raw string data to be converted\n     * @return {PIXI.BitmapFontData} Parsed font data\n     */\n    TextFormat.parse = function (txt) {\n        // Retrieve data item\n        var items = txt.match(/^[a-z]+\\s+.+$/gm);\n        var rawData = {\n            info: [],\n            common: [],\n            page: [],\n            char: [],\n            chars: [],\n            kerning: [],\n            kernings: [],\n            distanceField: [],\n        };\n        for (var i in items) {\n            // Extract item name\n            var name = items[i].match(/^[a-z]+/gm)[0];\n            // Extract item attribute list as string ex.: \"width=10\"\n            var attributeList = items[i].match(/[a-zA-Z]+=([^\\s\"']+|\"([^\"]*)\")/gm);\n            // Convert attribute list into an object\n            var itemData = {};\n            for (var i_1 in attributeList) {\n                // Split key-value pairs\n                var split = attributeList[i_1].split('=');\n                var key = split[0];\n                // Remove eventual quotes from value\n                var strValue = split[1].replace(/\"/gm, '');\n                // Try to convert value into float\n                var floatValue = parseFloat(strValue);\n                // Use string value case float value is NaN\n                var value = isNaN(floatValue) ? strValue : floatValue;\n                itemData[key] = value;\n            }\n            // Push current item to the resulting data\n            rawData[name].push(itemData);\n        }\n        var font = new BitmapFontData();\n        rawData.info.forEach(function (info) { return font.info.push({\n            face: info.face,\n            size: parseInt(info.size, 10),\n        }); });\n        rawData.common.forEach(function (common) { return font.common.push({\n            lineHeight: parseInt(common.lineHeight, 10),\n        }); });\n        rawData.page.forEach(function (page) { return font.page.push({\n            id: parseInt(page.id, 10),\n            file: page.file,\n        }); });\n        rawData.char.forEach(function (char) { return font.char.push({\n            id: parseInt(char.id, 10),\n            page: parseInt(char.page, 10),\n            x: parseInt(char.x, 10),\n            y: parseInt(char.y, 10),\n            width: parseInt(char.width, 10),\n            height: parseInt(char.height, 10),\n            xoffset: parseInt(char.xoffset, 10),\n            yoffset: parseInt(char.yoffset, 10),\n            xadvance: parseInt(char.xadvance, 10),\n        }); });\n        rawData.kerning.forEach(function (kerning) { return font.kerning.push({\n            first: parseInt(kerning.first, 10),\n            second: parseInt(kerning.second, 10),\n            amount: parseInt(kerning.amount, 10),\n        }); });\n        rawData.distanceField.forEach(function (df) { return font.distanceField.push({\n            distanceRange: parseInt(df.distanceRange, 10),\n            fieldType: df.fieldType,\n        }); });\n        return font;\n    };\n    return TextFormat;\n}());\n\n/**\n * BitmapFont format that's XML-based.\n *\n * @class\n * @private\n */\nvar XMLFormat = /** @class */ (function () {\n    function XMLFormat() {\n    }\n    /**\n     * Check if resource refers to xml font data.\n     *\n     * @static\n     * @private\n     * @param {any} data\n     * @return {boolean} True if resource could be treated as font data, false otherwise.\n     */\n    XMLFormat.test = function (data) {\n        return data instanceof XMLDocument\n            && data.getElementsByTagName('page').length\n            && data.getElementsByTagName('info')[0].getAttribute('face') !== null;\n    };\n    /**\n     * Convert the XML into BitmapFontData that we can use.\n     *\n     * @static\n     * @private\n     * @param {XMLDocument} xml\n     * @return {BitmapFontData} Data to use for BitmapFont\n     */\n    XMLFormat.parse = function (xml) {\n        var data = new BitmapFontData();\n        var info = xml.getElementsByTagName('info');\n        var common = xml.getElementsByTagName('common');\n        var page = xml.getElementsByTagName('page');\n        var char = xml.getElementsByTagName('char');\n        var kerning = xml.getElementsByTagName('kerning');\n        var distanceField = xml.getElementsByTagName('distanceField');\n        for (var i = 0; i < info.length; i++) {\n            data.info.push({\n                face: info[i].getAttribute('face'),\n                size: parseInt(info[i].getAttribute('size'), 10),\n            });\n        }\n        for (var i = 0; i < common.length; i++) {\n            data.common.push({\n                lineHeight: parseInt(common[i].getAttribute('lineHeight'), 10),\n            });\n        }\n        for (var i = 0; i < page.length; i++) {\n            data.page.push({\n                id: parseInt(page[i].getAttribute('id'), 10) || 0,\n                file: page[i].getAttribute('file'),\n            });\n        }\n        for (var i = 0; i < char.length; i++) {\n            var letter = char[i];\n            data.char.push({\n                id: parseInt(letter.getAttribute('id'), 10),\n                page: parseInt(letter.getAttribute('page'), 10) || 0,\n                x: parseInt(letter.getAttribute('x'), 10),\n                y: parseInt(letter.getAttribute('y'), 10),\n                width: parseInt(letter.getAttribute('width'), 10),\n                height: parseInt(letter.getAttribute('height'), 10),\n                xoffset: parseInt(letter.getAttribute('xoffset'), 10),\n                yoffset: parseInt(letter.getAttribute('yoffset'), 10),\n                xadvance: parseInt(letter.getAttribute('xadvance'), 10),\n            });\n        }\n        for (var i = 0; i < kerning.length; i++) {\n            data.kerning.push({\n                first: parseInt(kerning[i].getAttribute('first'), 10),\n                second: parseInt(kerning[i].getAttribute('second'), 10),\n                amount: parseInt(kerning[i].getAttribute('amount'), 10),\n            });\n        }\n        for (var i = 0; i < distanceField.length; i++) {\n            data.distanceField.push({\n                fieldType: distanceField[i].getAttribute('fieldType'),\n                distanceRange: parseInt(distanceField[i].getAttribute('distanceRange'), 10),\n            });\n        }\n        return data;\n    };\n    return XMLFormat;\n}());\n\n/**\n * BitmapFont format that's XML-based.\n *\n * @class\n * @private\n */\nvar XMLStringFormat = /** @class */ (function () {\n    function XMLStringFormat() {\n    }\n    /**\n     * Check if resource refers to text xml font data.\n     *\n     * @static\n     * @private\n     * @param {any} data\n     * @return {boolean} True if resource could be treated as font data, false otherwise.\n     */\n    XMLStringFormat.test = function (data) {\n        if (typeof data === 'string' && data.indexOf('<font>') > -1) {\n            var xml = new self.DOMParser().parseFromString(data, 'text/xml');\n            return XMLFormat.test(xml);\n        }\n        return false;\n    };\n    /**\n     * Convert the text XML into BitmapFontData that we can use.\n     *\n     * @static\n     * @private\n     * @param {string} xmlTxt\n     * @return {BitmapFontData} Data to use for BitmapFont\n     */\n    XMLStringFormat.parse = function (xmlTxt) {\n        var xml = new self.DOMParser().parseFromString(xmlTxt, 'text/xml');\n        return XMLFormat.parse(xml);\n    };\n    return XMLStringFormat;\n}());\n\n// Registered formats, maybe make this extensible in the future?\nvar formats = [\n    TextFormat,\n    XMLFormat,\n    XMLStringFormat ];\n/**\n * Auto-detect BitmapFont parsing format based on data.\n * @private\n * @param {any} data - Data to detect format\n * @return {any} Format or null\n */\nfunction autoDetectFormat(data) {\n    for (var i = 0; i < formats.length; i++) {\n        if (formats[i].test(data)) {\n            return formats[i];\n        }\n    }\n    return null;\n}\n\n// TODO: Prevent code duplication b/w generateFillStyle & Text#generateFillStyle\n/**\n * Generates the fill style. Can automatically generate a gradient based on the fill style being an array\n *\n * @private\n * @param {object} style - The style.\n * @param {string[]} lines - The lines of text.\n * @return {string|number|CanvasGradient} The fill style\n */\nfunction generateFillStyle(canvas, context, style, resolution, lines, metrics) {\n    // TODO: Can't have different types for getter and setter. The getter shouldn't have the number type as\n    //       the setter converts to string. See this thread for more details:\n    //       https://github.com/microsoft/TypeScript/issues/2521\n    var fillStyle = style.fill;\n    if (!Array.isArray(fillStyle)) {\n        return fillStyle;\n    }\n    else if (fillStyle.length === 1) {\n        return fillStyle[0];\n    }\n    // the gradient will be evenly spaced out according to how large the array is.\n    // ['#FF0000', '#00FF00', '#0000FF'] would created stops at 0.25, 0.5 and 0.75\n    var gradient;\n    // a dropshadow will enlarge the canvas and result in the gradient being\n    // generated with the incorrect dimensions\n    var dropShadowCorrection = (style.dropShadow) ? style.dropShadowDistance : 0;\n    // should also take padding into account, padding can offset the gradient\n    var padding = style.padding || 0;\n    var width = (canvas.width / resolution) - dropShadowCorrection - (padding * 2);\n    var height = (canvas.height / resolution) - dropShadowCorrection - (padding * 2);\n    // make a copy of the style settings, so we can manipulate them later\n    var fill = fillStyle.slice();\n    var fillGradientStops = style.fillGradientStops.slice();\n    // wanting to evenly distribute the fills. So an array of 4 colours should give fills of 0.25, 0.5 and 0.75\n    if (!fillGradientStops.length) {\n        var lengthPlus1 = fill.length + 1;\n        for (var i = 1; i < lengthPlus1; ++i) {\n            fillGradientStops.push(i / lengthPlus1);\n        }\n    }\n    // stop the bleeding of the last gradient on the line above to the top gradient of the this line\n    // by hard defining the first gradient colour at point 0, and last gradient colour at point 1\n    fill.unshift(fillStyle[0]);\n    fillGradientStops.unshift(0);\n    fill.push(fillStyle[fillStyle.length - 1]);\n    fillGradientStops.push(1);\n    if (style.fillGradientType === text.TEXT_GRADIENT.LINEAR_VERTICAL) {\n        // start the gradient at the top center of the canvas, and end at the bottom middle of the canvas\n        gradient = context.createLinearGradient(width / 2, padding, width / 2, height + padding);\n        // we need to repeat the gradient so that each individual line of text has the same vertical gradient effect\n        // ['#FF0000', '#00FF00', '#0000FF'] over 2 lines would create stops at 0.125, 0.25, 0.375, 0.625, 0.75, 0.875\n        // There's potential for floating point precision issues at the seams between gradient repeats.\n        // The loop below generates the stops in order, so track the last generated one to prevent\n        // floating point precision from making us go the teeniest bit backwards, resulting in\n        // the first and last colors getting swapped.\n        var lastIterationStop = 0;\n        // Actual height of the text itself, not counting spacing for lineHeight/leading/dropShadow etc\n        var textHeight = metrics.fontProperties.fontSize + style.strokeThickness;\n        // textHeight, but as a 0-1 size in global gradient stop space\n        var gradStopLineHeight = textHeight / height;\n        for (var i = 0; i < lines.length; i++) {\n            var thisLineTop = metrics.lineHeight * i;\n            for (var j = 0; j < fill.length; j++) {\n                // 0-1 stop point for the current line, multiplied to global space afterwards\n                var lineStop = 0;\n                if (typeof fillGradientStops[j] === 'number') {\n                    lineStop = fillGradientStops[j];\n                }\n                else {\n                    lineStop = j / fill.length;\n                }\n                var globalStop = (thisLineTop / height) + (lineStop * gradStopLineHeight);\n                // Prevent color stop generation going backwards from floating point imprecision\n                var clampedStop = Math.max(lastIterationStop, globalStop);\n                clampedStop = Math.min(clampedStop, 1); // Cap at 1 as well for safety's sake to avoid a possible throw.\n                gradient.addColorStop(clampedStop, fill[j]);\n                lastIterationStop = clampedStop;\n            }\n        }\n    }\n    else {\n        // start the gradient at the center left of the canvas, and end at the center right of the canvas\n        gradient = context.createLinearGradient(padding, height / 2, width + padding, height / 2);\n        // can just evenly space out the gradients in this case, as multiple lines makes no difference\n        // to an even left to right gradient\n        var totalIterations = fill.length + 1;\n        var currentIteration = 1;\n        for (var i = 0; i < fill.length; i++) {\n            var stop = void 0;\n            if (typeof fillGradientStops[i] === 'number') {\n                stop = fillGradientStops[i];\n            }\n            else {\n                stop = currentIteration / totalIterations;\n            }\n            gradient.addColorStop(stop, fill[i]);\n            currentIteration++;\n        }\n    }\n    return gradient;\n}\n\n// TODO: Prevent code duplication b/w drawGlyph & Text#updateText\n/**\n * Draws the glyph `metrics.text` on the given canvas.\n *\n * Ignored because not directly exposed.\n *\n * @ignore\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} context\n * @param {TextMetrics} metrics\n * @param {number} x\n * @param {number} y\n * @param {number} resolution\n * @param {TextStyle} style\n */\nfunction drawGlyph(canvas, context, metrics, x, y, resolution, style) {\n    var char = metrics.text;\n    var fontProperties = metrics.fontProperties;\n    context.translate(x, y);\n    context.scale(resolution, resolution);\n    var tx = style.strokeThickness / 2;\n    var ty = -(style.strokeThickness / 2);\n    context.font = style.toFontString();\n    context.lineWidth = style.strokeThickness;\n    context.textBaseline = style.textBaseline;\n    context.lineJoin = style.lineJoin;\n    context.miterLimit = style.miterLimit;\n    // set canvas text styles\n    context.fillStyle = generateFillStyle(canvas, context, style, resolution, [char], metrics);\n    context.strokeStyle = style.stroke;\n    var dropShadowColor = style.dropShadowColor;\n    var rgb = utils.hex2rgb(typeof dropShadowColor === 'number' ? dropShadowColor : utils.string2hex(dropShadowColor));\n    if (style.dropShadow) {\n        context.shadowColor = \"rgba(\" + rgb[0] * 255 + \",\" + rgb[1] * 255 + \",\" + rgb[2] * 255 + \",\" + style.dropShadowAlpha + \")\";\n        context.shadowBlur = style.dropShadowBlur;\n        context.shadowOffsetX = Math.cos(style.dropShadowAngle) * style.dropShadowDistance;\n        context.shadowOffsetY = Math.sin(style.dropShadowAngle) * style.dropShadowDistance;\n    }\n    else {\n        context.shadowColor = 'black';\n        context.shadowBlur = 0;\n        context.shadowOffsetX = 0;\n        context.shadowOffsetY = 0;\n    }\n    if (style.stroke && style.strokeThickness) {\n        context.strokeText(char, tx, ty + metrics.lineHeight - fontProperties.descent);\n    }\n    if (style.fill) {\n        context.fillText(char, tx, ty + metrics.lineHeight - fontProperties.descent);\n    }\n    context.setTransform(1, 0, 0, 1, 0, 0); // defaults needed for older browsers (e.g. Opera 29)\n    context.fillStyle = 'rgba(0, 0, 0, 0)';\n}\n\n/**\n * Ponyfill for IE because it doesn't support `Array.from`\n * @private\n */\nfunction splitTextToCharacters(text) {\n    return Array.from ? Array.from(text) : text.split('');\n}\n\n/**\n * Processes the passed character set data and returns a flattened array of all the characters.\n *\n * Ignored because not directly exposed.\n *\n * @ignore\n * @param {string | string[] | string[][] } chars\n * @returns {string[]}\n */\nfunction resolveCharacters(chars) {\n    // Split the chars string into individual characters\n    if (typeof chars === 'string') {\n        chars = [chars];\n    }\n    // Handle an array of characters+ranges\n    var result = [];\n    for (var i = 0, j = chars.length; i < j; i++) {\n        var item = chars[i];\n        // Handle range delimited by start/end chars\n        if (Array.isArray(item)) {\n            if (item.length !== 2) {\n                throw new Error(\"[BitmapFont]: Invalid character range length, expecting 2 got \" + item.length + \".\");\n            }\n            var startCode = item[0].charCodeAt(0);\n            var endCode = item[1].charCodeAt(0);\n            if (endCode < startCode) {\n                throw new Error('[BitmapFont]: Invalid character range.');\n            }\n            for (var i_1 = startCode, j_1 = endCode; i_1 <= j_1; i_1++) {\n                result.push(String.fromCharCode(i_1));\n            }\n        }\n        // Handle a character set string\n        else {\n            result.push.apply(result, splitTextToCharacters(item));\n        }\n    }\n    if (result.length === 0) {\n        throw new Error('[BitmapFont]: Empty set when resolving characters.');\n    }\n    return result;\n}\n\n/**\n * Ponyfill for IE because it doesn't support `codePointAt`\n * @private\n */\nfunction extractCharCode(str) {\n    return str.codePointAt ? str.codePointAt(0) : str.charCodeAt(0);\n}\n\n/**\n * BitmapFont represents a typeface available for use with the BitmapText class. Use the `install`\n * method for adding a font to be used.\n *\n * @memberof PIXI\n */\nvar BitmapFont = /** @class */ (function () {\n    /**\n     * @param data\n     * @param textures\n     * @param ownsTextures - Setting to `true` will destroy page textures\n     *        when the font is uninstalled.\n     */\n    function BitmapFont(data, textures, ownsTextures) {\n        var _a, _b;\n        var info = data.info[0];\n        var common = data.common[0];\n        var page = data.page[0];\n        var distanceField = data.distanceField[0];\n        var res = utils.getResolutionOfUrl(page.file);\n        var pageTextures = {};\n        this._ownsTextures = ownsTextures;\n        this.font = info.face;\n        this.size = info.size;\n        this.lineHeight = common.lineHeight / res;\n        this.chars = {};\n        this.pageTextures = pageTextures;\n        // Convert the input Texture, Textures or object\n        // into a page Texture lookup by \"id\"\n        for (var i = 0; i < data.page.length; i++) {\n            var _c = data.page[i], id = _c.id, file = _c.file;\n            pageTextures[id] = textures instanceof Array\n                ? textures[i] : textures[file];\n            // only MSDF and SDF fonts need no-premultiplied-alpha\n            if ((distanceField === null || distanceField === void 0 ? void 0 : distanceField.fieldType) && distanceField.fieldType !== 'none') {\n                pageTextures[id].baseTexture.alphaMode = constants.ALPHA_MODES.NO_PREMULTIPLIED_ALPHA;\n            }\n        }\n        // parse letters\n        for (var i = 0; i < data.char.length; i++) {\n            var _d = data.char[i], id = _d.id, page_1 = _d.page;\n            var _e = data.char[i], x = _e.x, y = _e.y, width = _e.width, height = _e.height, xoffset = _e.xoffset, yoffset = _e.yoffset, xadvance = _e.xadvance;\n            x /= res;\n            y /= res;\n            width /= res;\n            height /= res;\n            xoffset /= res;\n            yoffset /= res;\n            xadvance /= res;\n            var rect = new math.Rectangle(x + (pageTextures[page_1].frame.x / res), y + (pageTextures[page_1].frame.y / res), width, height);\n            this.chars[id] = {\n                xOffset: xoffset,\n                yOffset: yoffset,\n                xAdvance: xadvance,\n                kerning: {},\n                texture: new core.Texture(pageTextures[page_1].baseTexture, rect),\n                page: page_1,\n            };\n        }\n        // parse kernings\n        for (var i = 0; i < data.kerning.length; i++) {\n            var _f = data.kerning[i], first = _f.first, second = _f.second, amount = _f.amount;\n            first /= res;\n            second /= res;\n            amount /= res;\n            if (this.chars[second]) {\n                this.chars[second].kerning[first] = amount;\n            }\n        }\n        // Store distance field information\n        this.distanceFieldRange = distanceField === null || distanceField === void 0 ? void 0 : distanceField.distanceRange;\n        this.distanceFieldType = (_b = (_a = distanceField === null || distanceField === void 0 ? void 0 : distanceField.fieldType) === null || _a === void 0 ? void 0 : _a.toLowerCase()) !== null && _b !== void 0 ? _b : 'none';\n    }\n    /** Remove references to created glyph textures. */\n    BitmapFont.prototype.destroy = function () {\n        for (var id in this.chars) {\n            this.chars[id].texture.destroy();\n            this.chars[id].texture = null;\n        }\n        for (var id in this.pageTextures) {\n            if (this._ownsTextures) {\n                this.pageTextures[id].destroy(true);\n            }\n            this.pageTextures[id] = null;\n        }\n        // Set readonly null.\n        this.chars = null;\n        this.pageTextures = null;\n    };\n    /**\n     * Register a new bitmap font.\n     *\n     * @param data - The\n     *        characters map that could be provided as xml or raw string.\n     * @param textures - List of textures for each page.\n     * @param ownsTextures - Set to `true` to destroy page textures\n     *        when the font is uninstalled. By default fonts created with\n     *        `BitmapFont.from` or from the `BitmapFontLoader` are `true`.\n     * @return {PIXI.BitmapFont} Result font object with font, size, lineHeight\n     *         and char fields.\n     */\n    BitmapFont.install = function (data, textures, ownsTextures) {\n        var fontData;\n        if (data instanceof BitmapFontData) {\n            fontData = data;\n        }\n        else {\n            var format = autoDetectFormat(data);\n            if (!format) {\n                throw new Error('Unrecognized data format for font.');\n            }\n            fontData = format.parse(data);\n        }\n        // Single texture, convert to list\n        if (textures instanceof core.Texture) {\n            textures = [textures];\n        }\n        var font = new BitmapFont(fontData, textures, ownsTextures);\n        BitmapFont.available[font.font] = font;\n        return font;\n    };\n    /**\n     * Remove bitmap font by name.\n     *\n     * @param name - Name of the font to uninstall.\n     */\n    BitmapFont.uninstall = function (name) {\n        var font = BitmapFont.available[name];\n        if (!font) {\n            throw new Error(\"No font found named '\" + name + \"'\");\n        }\n        font.destroy();\n        delete BitmapFont.available[name];\n    };\n    /**\n     * Generates a bitmap-font for the given style and character set. This does not support\n     * kernings yet. With `style` properties, only the following non-layout properties are used:\n     *\n     * - {@link PIXI.TextStyle#dropShadow|dropShadow}\n     * - {@link PIXI.TextStyle#dropShadowDistance|dropShadowDistance}\n     * - {@link PIXI.TextStyle#dropShadowColor|dropShadowColor}\n     * - {@link PIXI.TextStyle#dropShadowBlur|dropShadowBlur}\n     * - {@link PIXI.TextStyle#dropShadowAngle|dropShadowAngle}\n     * - {@link PIXI.TextStyle#fill|fill}\n     * - {@link PIXI.TextStyle#fillGradientStops|fillGradientStops}\n     * - {@link PIXI.TextStyle#fillGradientType|fillGradientType}\n     * - {@link PIXI.TextStyle#fontFamily|fontFamily}\n     * - {@link PIXI.TextStyle#fontSize|fontSize}\n     * - {@link PIXI.TextStyle#fontVariant|fontVariant}\n     * - {@link PIXI.TextStyle#fontWeight|fontWeight}\n     * - {@link PIXI.TextStyle#lineJoin|lineJoin}\n     * - {@link PIXI.TextStyle#miterLimit|miterLimit}\n     * - {@link PIXI.TextStyle#stroke|stroke}\n     * - {@link PIXI.TextStyle#strokeThickness|strokeThickness}\n     * - {@link PIXI.TextStyle#textBaseline|textBaseline}\n     *\n     * @param name - The name of the custom font to use with BitmapText.\n     * @param style - Style options to render with BitmapFont.\n     * @param options - Setup options for font or name of the font.\n     * @param {string|string[]|string[][]} [options.chars=PIXI.BitmapFont.ALPHANUMERIC] - characters included\n     *      in the font set. You can also use ranges. For example, `[['a', 'z'], ['A', 'Z'], \"!@#$%^&*()~{}[] \"]`.\n     *      Don't forget to include spaces ' ' in your character set!\n     * @param {number} [options.resolution=1] - Render resolution for glyphs.\n     * @param {number} [options.textureWidth=512] - Optional width of atlas, smaller values to reduce memory.\n     * @param {number} [options.textureHeight=512] - Optional height of atlas, smaller values to reduce memory.\n     * @param {number} [options.padding=4] - Padding between glyphs on texture atlas.\n     * @return Font generated by style options.\n     * @example\n     * PIXI.BitmapFont.from(\"TitleFont\", {\n     *     fontFamily: \"Arial\",\n     *     fontSize: 12,\n     *     strokeThickness: 2,\n     *     fill: \"purple\"\n     * });\n     *\n     * const title = new PIXI.BitmapText(\"This is the title\", { fontName: \"TitleFont\" });\n     */\n    BitmapFont.from = function (name, textStyle, options) {\n        if (!name) {\n            throw new Error('[BitmapFont] Property `name` is required.');\n        }\n        var _a = Object.assign({}, BitmapFont.defaultOptions, options), chars = _a.chars, padding = _a.padding, resolution = _a.resolution, textureWidth = _a.textureWidth, textureHeight = _a.textureHeight;\n        var charsList = resolveCharacters(chars);\n        var style = textStyle instanceof text.TextStyle ? textStyle : new text.TextStyle(textStyle);\n        var lineWidth = textureWidth;\n        var fontData = new BitmapFontData();\n        fontData.info[0] = {\n            face: style.fontFamily,\n            size: style.fontSize,\n        };\n        fontData.common[0] = {\n            lineHeight: style.fontSize,\n        };\n        var positionX = 0;\n        var positionY = 0;\n        var canvas;\n        var context;\n        var baseTexture;\n        var maxCharHeight = 0;\n        var textures = [];\n        for (var i = 0; i < charsList.length; i++) {\n            if (!canvas) {\n                canvas = document.createElement('canvas');\n                canvas.width = textureWidth;\n                canvas.height = textureHeight;\n                context = canvas.getContext('2d');\n                baseTexture = new core.BaseTexture(canvas, { resolution: resolution });\n                textures.push(new core.Texture(baseTexture));\n                fontData.page.push({\n                    id: textures.length - 1,\n                    file: '',\n                });\n            }\n            // Measure glyph dimensions\n            var metrics = text.TextMetrics.measureText(charsList[i], style, false, canvas);\n            var width = metrics.width;\n            var height = Math.ceil(metrics.height);\n            // This is ugly - but italics are given more space so they don't overlap\n            var textureGlyphWidth = Math.ceil((style.fontStyle === 'italic' ? 2 : 1) * width);\n            // Can't fit char anymore: next canvas please!\n            if (positionY >= textureHeight - (height * resolution)) {\n                if (positionY === 0) {\n                    // We don't want user debugging an infinite loop (or do we? :)\n                    throw new Error(\"[BitmapFont] textureHeight \" + textureHeight + \"px is \"\n                        + (\"too small for \" + style.fontSize + \"px fonts\"));\n                }\n                --i;\n                // Create new atlas once current has filled up\n                canvas = null;\n                context = null;\n                baseTexture = null;\n                positionY = 0;\n                positionX = 0;\n                maxCharHeight = 0;\n                continue;\n            }\n            maxCharHeight = Math.max(height + metrics.fontProperties.descent, maxCharHeight);\n            // Wrap line once full row has been rendered\n            if ((textureGlyphWidth * resolution) + positionX >= lineWidth) {\n                --i;\n                positionY += maxCharHeight * resolution;\n                positionY = Math.ceil(positionY);\n                positionX = 0;\n                maxCharHeight = 0;\n                continue;\n            }\n            drawGlyph(canvas, context, metrics, positionX, positionY, resolution, style);\n            // Unique (numeric) ID mapping to this glyph\n            var id = extractCharCode(metrics.text);\n            // Create a texture holding just the glyph\n            fontData.char.push({\n                id: id,\n                page: textures.length - 1,\n                x: positionX / resolution,\n                y: positionY / resolution,\n                width: textureGlyphWidth,\n                height: height,\n                xoffset: 0,\n                yoffset: 0,\n                xadvance: Math.ceil(width\n                    - (style.dropShadow ? style.dropShadowDistance : 0)\n                    - (style.stroke ? style.strokeThickness : 0)),\n            });\n            positionX += (textureGlyphWidth + (2 * padding)) * resolution;\n            positionX = Math.ceil(positionX);\n        }\n        // Brute-force kerning info, this can be expensive b/c it's an O(n\u00b2),\n        // but we're using measureText which is native and fast.\n        for (var i = 0, len = charsList.length; i < len; i++) {\n            var first = charsList[i];\n            for (var j = 0; j < len; j++) {\n                var second = charsList[j];\n                var c1 = context.measureText(first).width;\n                var c2 = context.measureText(second).width;\n                var total = context.measureText(first + second).width;\n                var amount = total - (c1 + c2);\n                if (amount) {\n                    fontData.kerning.push({\n                        first: extractCharCode(first),\n                        second: extractCharCode(second),\n                        amount: amount,\n                    });\n                }\n            }\n        }\n        var font = new BitmapFont(fontData, textures, true);\n        // Make it easier to replace a font\n        if (BitmapFont.available[name] !== undefined) {\n            BitmapFont.uninstall(name);\n        }\n        BitmapFont.available[name] = font;\n        return font;\n    };\n    /**\n     * This character set includes all the letters in the alphabet (both lower- and upper- case).\n     *\n     * @type {string[][]}\n     * @example\n     * BitmapFont.from(\"ExampleFont\", style, { chars: BitmapFont.ALPHA })\n     */\n    BitmapFont.ALPHA = [['a', 'z'], ['A', 'Z'], ' '];\n    /**\n     * This character set includes all decimal digits (from 0 to 9).\n     *\n     * @type {string[][]}\n     * @example\n     * BitmapFont.from(\"ExampleFont\", style, { chars: BitmapFont.NUMERIC })\n     */\n    BitmapFont.NUMERIC = [['0', '9']];\n    /**\n     * This character set is the union of `BitmapFont.ALPHA` and `BitmapFont.NUMERIC`.\n     *\n     * @type {string[][]}\n     */\n    BitmapFont.ALPHANUMERIC = [['a', 'z'], ['A', 'Z'], ['0', '9'], ' '];\n    /**\n     * This character set consists of all the ASCII table.\n     *\n     * @member {string[][]}\n     * @see http://www.asciitable.com/\n     */\n    BitmapFont.ASCII = [[' ', '~']];\n    /**\n     * Collection of default options when using `BitmapFont.from`.\n     *\n     * @property {number} resolution=1\n     * @property {number} textureWidth=512\n     * @property {number} textureHeight=512\n     * @property {number} padding=4\n     * @property {string|string[]|string[][]} chars = PIXI.BitmapFont.ALPHANUMERIC\n     */\n    BitmapFont.defaultOptions = {\n        resolution: 1,\n        textureWidth: 512,\n        textureHeight: 512,\n        padding: 4,\n        chars: BitmapFont.ALPHANUMERIC,\n    };\n    /** Collection of available/installed fonts. */\n    BitmapFont.available = {};\n    return BitmapFont;\n}());\n\nvar msdfFrag = \"// Pixi texture info\\r\\nvarying vec2 vTextureCoord;\\r\\nuniform sampler2D uSampler;\\r\\n\\r\\n// Tint\\r\\nuniform vec4 uColor;\\r\\n\\r\\n// on 2D applications fwidth is screenScale / glyphAtlasScale * distanceFieldRange\\r\\nuniform float uFWidth;\\r\\n\\r\\nvoid main(void) {\\r\\n\\r\\n  // To stack MSDF and SDF we need a non-pre-multiplied-alpha texture.\\r\\n  vec4 texColor = texture2D(uSampler, vTextureCoord);\\r\\n\\r\\n  // MSDF\\r\\n  float median = texColor.r + texColor.g + texColor.b -\\r\\n                  min(texColor.r, min(texColor.g, texColor.b)) -\\r\\n                  max(texColor.r, max(texColor.g, texColor.b));\\r\\n  // SDF\\r\\n  median = min(median, texColor.a);\\r\\n\\r\\n  float screenPxDistance = uFWidth * (median - 0.5);\\r\\n  float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\\r\\n\\r\\n  // NPM Textures, NPM outputs\\r\\n  gl_FragColor = vec4(uColor.rgb, uColor.a * alpha);\\r\\n\\r\\n}\\r\\n\";\n\nvar msdfVert = \"// Mesh material default fragment\\r\\nattribute vec2 aVertexPosition;\\r\\nattribute vec2 aTextureCoord;\\r\\n\\r\\nuniform mat3 projectionMatrix;\\r\\nuniform mat3 translationMatrix;\\r\\nuniform mat3 uTextureMatrix;\\r\\n\\r\\nvarying vec2 vTextureCoord;\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\r\\n\\r\\n    vTextureCoord = (uTextureMatrix * vec3(aTextureCoord, 1.0)).xy;\\r\\n}\\r\\n\";\n\n// If we ever need more than two pools, please make a Dict or something better.\nvar pageMeshDataDefaultPageMeshData = [];\nvar pageMeshDataMSDFPageMeshData = [];\nvar charRenderDataPool = [];\n/**\n * A BitmapText object will create a line or multiple lines of text using bitmap font.\n *\n * The primary advantage of this class over Text is that all of your textures are pre-generated and loading,\n * meaning that rendering is fast, and changing text has no performance implications.\n *\n * Supporting character sets other than latin, such as CJK languages, may be impractical due to the number of characters.\n *\n * To split a line you can use '\\n', '\\r' or '\\r\\n' in your string.\n *\n * PixiJS can auto-generate fonts on-the-fly using BitmapFont or use fnt files provided by:\n * http://www.angelcode.com/products/bmfont/ for Windows or\n * http://www.bmglyph.com/ for Mac.\n *\n * You can also use SDF, MSDF and MTSDF BitmapFonts for vector-like scaling appearance provided by:\n * https://github.com/soimy/msdf-bmfont-xml for SDF and MSDF fnt files or\n * https://github.com/Chlumsky/msdf-atlas-gen for SDF, MSDF and MTSDF json files\n *\n * A BitmapText can only be created when the font is loaded.\n *\n * ```js\n * // in this case the font is in a file called 'desyrel.fnt'\n * let bitmapText = new PIXI.BitmapText(\"text using a fancy font!\", {\n *   fontName: \"Desyrel\",\n *   fontSize: 35,\n *   align: \"right\"\n * });\n * ```\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI\n */\nvar BitmapText = /** @class */ (function (_super) {\n    __extends(BitmapText, _super);\n    /**\n     * @param {string} text - A string that you would like the text to display.\n     * @param {object} style - The style parameters.\n     * @param {string} style.fontName - The installed BitmapFont name.\n     * @param {number} [style.fontSize] - The size of the font in pixels, e.g. 24. If undefined,\n     *.     this will default to the BitmapFont size.\n     * @param {string} [style.align='left'] - Alignment for multiline text ('left', 'center', 'right' or 'justify'),\n     *      does not affect single line text.\n     * @param {number} [style.tint=0xFFFFFF] - The tint color.\n     * @param {number} [style.letterSpacing=0] - The amount of spacing between letters.\n     * @param {number} [style.maxWidth=0] - The max width of the text before line wrapping.\n     */\n    function BitmapText(text, style) {\n        if (style === void 0) { style = {}; }\n        var _this = _super.call(this) || this;\n        _this._tint = 0xFFFFFF;\n        // Apply the defaults\n        var _a = Object.assign({}, BitmapText.styleDefaults, style), align = _a.align, tint = _a.tint, maxWidth = _a.maxWidth, letterSpacing = _a.letterSpacing, fontName = _a.fontName, fontSize = _a.fontSize;\n        if (!BitmapFont.available[fontName]) {\n            throw new Error(\"Missing BitmapFont \\\"\" + fontName + \"\\\"\");\n        }\n        /**\n         * Collection of page mesh data.\n         *\n         * @member {object}\n         * @private\n         */\n        _this._activePagesMeshData = [];\n        /**\n         * Private tracker for the width of the overall text\n         *\n         * @member {number}\n         * @private\n         */\n        _this._textWidth = 0;\n        /**\n         * Private tracker for the height of the overall text\n         *\n         * @member {number}\n         * @private\n         */\n        _this._textHeight = 0;\n        /**\n         * Private tracker for the current text align.\n         *\n         * @member {string}\n         * @private\n         */\n        _this._align = align;\n        /**\n         * Private tracker for the current tint.\n         *\n         * @member {number}\n         * @private\n         */\n        _this._tint = tint;\n        /**\n         * Private tracker for the current font name.\n         *\n         * @member {string}\n         * @private\n         */\n        _this._fontName = fontName;\n        /**\n         * Private tracker for the current font size.\n         *\n         * @member {number}\n         * @private\n         */\n        _this._fontSize = fontSize || BitmapFont.available[fontName].size;\n        /**\n         * Private tracker for the current text.\n         *\n         * @member {string}\n         * @private\n         */\n        _this._text = text;\n        /**\n         * The max width of this bitmap text in pixels. If the text provided is longer than the\n         * value provided, line breaks will be automatically inserted in the last whitespace.\n         * Disable by setting value to 0\n         *\n         * @member {number}\n         * @private\n         */\n        _this._maxWidth = maxWidth;\n        /**\n         * The max line height. This is useful when trying to use the total height of the Text,\n         * ie: when trying to vertically align. (Internally used)\n         *\n         * @member {number}\n         * @private\n         */\n        _this._maxLineHeight = 0;\n        /**\n         * Letter spacing. This is useful for setting the space between characters.\n         * @member {number}\n         * @private\n         */\n        _this._letterSpacing = letterSpacing;\n        /**\n         * Text anchor. read-only\n         *\n         * @member {PIXI.ObservablePoint}\n         * @private\n         */\n        _this._anchor = new math.ObservablePoint(function () { _this.dirty = true; }, _this, 0, 0);\n        /**\n         * If true PixiJS will Math.floor() x/y values when rendering\n         *\n         * @member {boolean}\n         * @default PIXI.settings.ROUND_PIXELS\n         */\n        _this._roundPixels = settings.settings.ROUND_PIXELS;\n        /**\n         * Set to `true` if the BitmapText needs to be redrawn.\n         *\n         * @member {boolean}\n         */\n        _this.dirty = true;\n        /**\n         * Cached char texture is destroyed when BitmapText is destroyed\n         * @member {Record<number, Texture>}\n         * @private\n         */\n        _this._textureCache = {};\n        return _this;\n    }\n    /**\n     * Renders text and updates it when needed. This should only be called\n     * if the BitmapFont is regenerated.\n     */\n    BitmapText.prototype.updateText = function () {\n        var _a;\n        var data = BitmapFont.available[this._fontName];\n        var scale = this._fontSize / data.size;\n        var pos = new math.Point();\n        var chars = [];\n        var lineWidths = [];\n        var lineSpaces = [];\n        var text = this._text.replace(/(?:\\r\\n|\\r)/g, '\\n') || ' ';\n        var charsInput = splitTextToCharacters(text);\n        var maxWidth = this._maxWidth * data.size / this._fontSize;\n        var pageMeshDataPool = data.distanceFieldType === 'none'\n            ? pageMeshDataDefaultPageMeshData : pageMeshDataMSDFPageMeshData;\n        var prevCharCode = null;\n        var lastLineWidth = 0;\n        var maxLineWidth = 0;\n        var line = 0;\n        var lastBreakPos = -1;\n        var lastBreakWidth = 0;\n        var spacesRemoved = 0;\n        var maxLineHeight = 0;\n        var spaceCount = 0;\n        for (var i = 0; i < charsInput.length; i++) {\n            var char = charsInput[i];\n            var charCode = extractCharCode(char);\n            if ((/(?:\\s)/).test(char)) {\n                lastBreakPos = i;\n                lastBreakWidth = lastLineWidth;\n                spaceCount++;\n            }\n            if (char === '\\r' || char === '\\n') {\n                lineWidths.push(lastLineWidth);\n                lineSpaces.push(-1);\n                maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n                ++line;\n                ++spacesRemoved;\n                pos.x = 0;\n                pos.y += data.lineHeight;\n                prevCharCode = null;\n                spaceCount = 0;\n                continue;\n            }\n            var charData = data.chars[charCode];\n            if (!charData) {\n                continue;\n            }\n            if (prevCharCode && charData.kerning[prevCharCode]) {\n                pos.x += charData.kerning[prevCharCode];\n            }\n            var charRenderData = charRenderDataPool.pop() || {\n                texture: core.Texture.EMPTY,\n                line: 0,\n                charCode: 0,\n                prevSpaces: 0,\n                position: new math.Point(),\n            };\n            charRenderData.texture = charData.texture;\n            charRenderData.line = line;\n            charRenderData.charCode = charCode;\n            charRenderData.position.x = pos.x + charData.xOffset + (this._letterSpacing / 2);\n            charRenderData.position.y = pos.y + charData.yOffset;\n            charRenderData.prevSpaces = spaceCount;\n            chars.push(charRenderData);\n            lastLineWidth = charRenderData.position.x + charData.texture.orig.width; // Use charRenderData position!\n            pos.x += charData.xAdvance + this._letterSpacing;\n            maxLineHeight = Math.max(maxLineHeight, (charData.yOffset + charData.texture.height));\n            prevCharCode = charCode;\n            if (lastBreakPos !== -1 && maxWidth > 0 && pos.x > maxWidth) {\n                ++spacesRemoved;\n                utils.removeItems(chars, 1 + lastBreakPos - spacesRemoved, 1 + i - lastBreakPos);\n                i = lastBreakPos;\n                lastBreakPos = -1;\n                lineWidths.push(lastBreakWidth);\n                lineSpaces.push(chars.length > 0 ? chars[chars.length - 1].prevSpaces : 0);\n                maxLineWidth = Math.max(maxLineWidth, lastBreakWidth);\n                line++;\n                pos.x = 0;\n                pos.y += data.lineHeight;\n                prevCharCode = null;\n                spaceCount = 0;\n            }\n        }\n        var lastChar = charsInput[charsInput.length - 1];\n        if (lastChar !== '\\r' && lastChar !== '\\n') {\n            if ((/(?:\\s)/).test(lastChar)) {\n                lastLineWidth = lastBreakWidth;\n            }\n            lineWidths.push(lastLineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n            lineSpaces.push(-1);\n        }\n        var lineAlignOffsets = [];\n        for (var i = 0; i <= line; i++) {\n            var alignOffset = 0;\n            if (this._align === 'right') {\n                alignOffset = maxLineWidth - lineWidths[i];\n            }\n            else if (this._align === 'center') {\n                alignOffset = (maxLineWidth - lineWidths[i]) / 2;\n            }\n            else if (this._align === 'justify') {\n                alignOffset = lineSpaces[i] < 0 ? 0 : (maxLineWidth - lineWidths[i]) / lineSpaces[i];\n            }\n            lineAlignOffsets.push(alignOffset);\n        }\n        var lenChars = chars.length;\n        var pagesMeshData = {};\n        var newPagesMeshData = [];\n        var activePagesMeshData = this._activePagesMeshData;\n        for (var i = 0; i < activePagesMeshData.length; i++) {\n            pageMeshDataPool.push(activePagesMeshData[i]);\n        }\n        for (var i = 0; i < lenChars; i++) {\n            var texture = chars[i].texture;\n            var baseTextureUid = texture.baseTexture.uid;\n            if (!pagesMeshData[baseTextureUid]) {\n                var pageMeshData = pageMeshDataPool.pop();\n                if (!pageMeshData) {\n                    var geometry = new mesh.MeshGeometry();\n                    var material = void 0;\n                    var meshBlendMode = void 0;\n                    if (data.distanceFieldType === 'none') {\n                        material = new mesh.MeshMaterial(core.Texture.EMPTY);\n                        meshBlendMode = constants.BLEND_MODES.NORMAL;\n                    }\n                    else {\n                        material = new mesh.MeshMaterial(core.Texture.EMPTY, { program: core.Program.from(msdfVert, msdfFrag), uniforms: { uFWidth: 0 } });\n                        meshBlendMode = constants.BLEND_MODES.NORMAL_NPM;\n                    }\n                    var mesh$1 = new mesh.Mesh(geometry, material);\n                    mesh$1.blendMode = meshBlendMode;\n                    pageMeshData = {\n                        index: 0,\n                        indexCount: 0,\n                        vertexCount: 0,\n                        uvsCount: 0,\n                        total: 0,\n                        mesh: mesh$1,\n                        vertices: null,\n                        uvs: null,\n                        indices: null,\n                    };\n                }\n                // reset data..\n                pageMeshData.index = 0;\n                pageMeshData.indexCount = 0;\n                pageMeshData.vertexCount = 0;\n                pageMeshData.uvsCount = 0;\n                pageMeshData.total = 0;\n                // TODO need to get page texture here somehow..\n                var _textureCache = this._textureCache;\n                _textureCache[baseTextureUid] = _textureCache[baseTextureUid] || new core.Texture(texture.baseTexture);\n                pageMeshData.mesh.texture = _textureCache[baseTextureUid];\n                pageMeshData.mesh.tint = this._tint;\n                newPagesMeshData.push(pageMeshData);\n                pagesMeshData[baseTextureUid] = pageMeshData;\n            }\n            pagesMeshData[baseTextureUid].total++;\n        }\n        // lets find any previously active pageMeshDatas that are no longer required for\n        // the updated text (if any), removed and return them to the pool.\n        for (var i = 0; i < activePagesMeshData.length; i++) {\n            if (newPagesMeshData.indexOf(activePagesMeshData[i]) === -1) {\n                this.removeChild(activePagesMeshData[i].mesh);\n            }\n        }\n        // next lets add any new meshes, that have not yet been added to this BitmapText\n        // we only add if its not already a child of this BitmapObject\n        for (var i = 0; i < newPagesMeshData.length; i++) {\n            if (newPagesMeshData[i].mesh.parent !== this) {\n                this.addChild(newPagesMeshData[i].mesh);\n            }\n        }\n        // active page mesh datas are set to be the new pages added.\n        this._activePagesMeshData = newPagesMeshData;\n        for (var i in pagesMeshData) {\n            var pageMeshData = pagesMeshData[i];\n            var total = pageMeshData.total;\n            // lets only allocate new buffers if we can fit the new text in the current ones..\n            // unless that is, we will be batching. Currently batching dose not respect the size property of mesh\n            if (!(((_a = pageMeshData.indices) === null || _a === void 0 ? void 0 : _a.length) > 6 * total) || pageMeshData.vertices.length < mesh.Mesh.BATCHABLE_SIZE * 2) {\n                pageMeshData.vertices = new Float32Array(4 * 2 * total);\n                pageMeshData.uvs = new Float32Array(4 * 2 * total);\n                pageMeshData.indices = new Uint16Array(6 * total);\n            }\n            else {\n                var total_1 = pageMeshData.total;\n                var vertices = pageMeshData.vertices;\n                // Clear the garbage at the end of the vertices buffer. This will prevent the bounds miscalculation.\n                for (var i_1 = total_1 * 4 * 2; i_1 < vertices.length; i_1++) {\n                    vertices[i_1] = 0;\n                }\n            }\n            // as a buffer maybe bigger than the current word, we set the size of the meshMaterial\n            // to match the number of letters needed\n            pageMeshData.mesh.size = 6 * total;\n        }\n        for (var i = 0; i < lenChars; i++) {\n            var char = chars[i];\n            var offset = char.position.x + (lineAlignOffsets[char.line] * (this._align === 'justify' ? char.prevSpaces : 1));\n            if (this._roundPixels) {\n                offset = Math.round(offset);\n            }\n            var xPos = offset * scale;\n            var yPos = char.position.y * scale;\n            var texture = char.texture;\n            var pageMesh = pagesMeshData[texture.baseTexture.uid];\n            var textureFrame = texture.frame;\n            var textureUvs = texture._uvs;\n            var index = pageMesh.index++;\n            pageMesh.indices[(index * 6) + 0] = 0 + (index * 4);\n            pageMesh.indices[(index * 6) + 1] = 1 + (index * 4);\n            pageMesh.indices[(index * 6) + 2] = 2 + (index * 4);\n            pageMesh.indices[(index * 6) + 3] = 0 + (index * 4);\n            pageMesh.indices[(index * 6) + 4] = 2 + (index * 4);\n            pageMesh.indices[(index * 6) + 5] = 3 + (index * 4);\n            pageMesh.vertices[(index * 8) + 0] = xPos;\n            pageMesh.vertices[(index * 8) + 1] = yPos;\n            pageMesh.vertices[(index * 8) + 2] = xPos + (textureFrame.width * scale);\n            pageMesh.vertices[(index * 8) + 3] = yPos;\n            pageMesh.vertices[(index * 8) + 4] = xPos + (textureFrame.width * scale);\n            pageMesh.vertices[(index * 8) + 5] = yPos + (textureFrame.height * scale);\n            pageMesh.vertices[(index * 8) + 6] = xPos;\n            pageMesh.vertices[(index * 8) + 7] = yPos + (textureFrame.height * scale);\n            pageMesh.uvs[(index * 8) + 0] = textureUvs.x0;\n            pageMesh.uvs[(index * 8) + 1] = textureUvs.y0;\n            pageMesh.uvs[(index * 8) + 2] = textureUvs.x1;\n            pageMesh.uvs[(index * 8) + 3] = textureUvs.y1;\n            pageMesh.uvs[(index * 8) + 4] = textureUvs.x2;\n            pageMesh.uvs[(index * 8) + 5] = textureUvs.y2;\n            pageMesh.uvs[(index * 8) + 6] = textureUvs.x3;\n            pageMesh.uvs[(index * 8) + 7] = textureUvs.y3;\n        }\n        this._textWidth = maxLineWidth * scale;\n        this._textHeight = (pos.y + data.lineHeight) * scale;\n        for (var i in pagesMeshData) {\n            var pageMeshData = pagesMeshData[i];\n            // apply anchor\n            if (this.anchor.x !== 0 || this.anchor.y !== 0) {\n                var vertexCount = 0;\n                var anchorOffsetX = this._textWidth * this.anchor.x;\n                var anchorOffsetY = this._textHeight * this.anchor.y;\n                for (var i_2 = 0; i_2 < pageMeshData.total; i_2++) {\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetX;\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetY;\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetX;\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetY;\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetX;\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetY;\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetX;\n                    pageMeshData.vertices[vertexCount++] -= anchorOffsetY;\n                }\n            }\n            this._maxLineHeight = maxLineHeight * scale;\n            var vertexBuffer = pageMeshData.mesh.geometry.getBuffer('aVertexPosition');\n            var textureBuffer = pageMeshData.mesh.geometry.getBuffer('aTextureCoord');\n            var indexBuffer = pageMeshData.mesh.geometry.getIndex();\n            vertexBuffer.data = pageMeshData.vertices;\n            textureBuffer.data = pageMeshData.uvs;\n            indexBuffer.data = pageMeshData.indices;\n            vertexBuffer.update();\n            textureBuffer.update();\n            indexBuffer.update();\n        }\n        for (var i = 0; i < chars.length; i++) {\n            charRenderDataPool.push(chars[i]);\n        }\n    };\n    /**\n     * Updates the transform of this object\n     *\n     * @private\n     */\n    BitmapText.prototype.updateTransform = function () {\n        this.validate();\n        this.containerUpdateTransform();\n    };\n    BitmapText.prototype._render = function (renderer) {\n        // Update the uniform\n        var _a = BitmapFont.available[this._fontName], distanceFieldRange = _a.distanceFieldRange, distanceFieldType = _a.distanceFieldType, size = _a.size;\n        if (distanceFieldType !== 'none') {\n            // Inject the shader code with the correct value\n            var _b = this.worldTransform, a = _b.a, b = _b.b, c = _b.c, d = _b.d;\n            var dx = Math.sqrt((a * a) + (b * b));\n            var dy = Math.sqrt((c * c) + (d * d));\n            var worldScale = (Math.abs(dx) + Math.abs(dy)) / 2;\n            var fontScale = this._fontSize / size;\n            for (var _i = 0, _c = this._activePagesMeshData; _i < _c.length; _i++) {\n                var mesh = _c[_i];\n                mesh.mesh.shader.uniforms.uFWidth = worldScale * distanceFieldRange * fontScale * renderer.resolution;\n            }\n        }\n        _super.prototype._render.call(this, renderer);\n    };\n    /**\n     * Validates text before calling parent's getLocalBounds\n     *\n     * @return {PIXI.Rectangle} The rectangular bounding area\n     */\n    BitmapText.prototype.getLocalBounds = function () {\n        this.validate();\n        return _super.prototype.getLocalBounds.call(this);\n    };\n    /**\n     * Updates text when needed\n     *\n     * @private\n     */\n    BitmapText.prototype.validate = function () {\n        if (this.dirty) {\n            this.updateText();\n            this.dirty = false;\n        }\n    };\n    Object.defineProperty(BitmapText.prototype, \"tint\", {\n        /**\n         * The tint of the BitmapText object.\n         *\n         * @member {number}\n         * @default 0xffffff\n         */\n        get: function () {\n            return this._tint;\n        },\n        set: function (value) {\n            if (this._tint === value)\n                { return; }\n            this._tint = value;\n            for (var i = 0; i < this._activePagesMeshData.length; i++) {\n                this._activePagesMeshData[i].mesh.tint = value;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"align\", {\n        /**\n         * The alignment of the BitmapText object.\n         *\n         * @member {string}\n         * @default 'left'\n         */\n        get: function () {\n            return this._align;\n        },\n        set: function (value) {\n            if (this._align !== value) {\n                this._align = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"fontName\", {\n        /**\n         * The name of the BitmapFont.\n         *\n         * @member {string}\n         */\n        get: function () {\n            return this._fontName;\n        },\n        set: function (value) {\n            if (!BitmapFont.available[value]) {\n                throw new Error(\"Missing BitmapFont \\\"\" + value + \"\\\"\");\n            }\n            if (this._fontName !== value) {\n                this._fontName = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"fontSize\", {\n        /**\n         * The size of the font to display.\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this._fontSize;\n        },\n        set: function (value) {\n            if (this._fontSize !== value) {\n                this._fontSize = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"anchor\", {\n        /**\n         * The anchor sets the origin point of the text.\n         *\n         * The default is `(0,0)`, this means the text's origin is the top left.\n         *\n         * Setting the anchor to `(0.5,0.5)` means the text's origin is centered.\n         *\n         * Setting the anchor to `(1,1)` would mean the text's origin point will be the bottom right corner.\n         *\n         * @member {PIXI.Point | number}\n         */\n        get: function () {\n            return this._anchor;\n        },\n        set: function (value) {\n            if (typeof value === 'number') {\n                this._anchor.set(value);\n            }\n            else {\n                this._anchor.copyFrom(value);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"text\", {\n        /**\n         * The text of the BitmapText object.\n         *\n         * @member {string}\n         */\n        get: function () {\n            return this._text;\n        },\n        set: function (text) {\n            text = String(text === null || text === undefined ? '' : text);\n            if (this._text === text) {\n                return;\n            }\n            this._text = text;\n            this.dirty = true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"maxWidth\", {\n        /**\n         * The max width of this bitmap text in pixels. If the text provided is longer than the\n         * value provided, line breaks will be automatically inserted in the last whitespace.\n         * Disable by setting the value to 0.\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this._maxWidth;\n        },\n        set: function (value) {\n            if (this._maxWidth === value) {\n                return;\n            }\n            this._maxWidth = value;\n            this.dirty = true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"maxLineHeight\", {\n        /**\n         * The max line height. This is useful when trying to use the total height of the Text,\n         * i.e. when trying to vertically align.\n         *\n         * @member {number}\n         * @readonly\n         */\n        get: function () {\n            this.validate();\n            return this._maxLineHeight;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"textWidth\", {\n        /**\n         * The width of the overall text, different from fontSize,\n         * which is defined in the style object.\n         *\n         * @member {number}\n         * @readonly\n         */\n        get: function () {\n            this.validate();\n            return this._textWidth;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"letterSpacing\", {\n        /**\n         * Additional space between characters.\n         *\n         * @member {number}\n         */\n        get: function () {\n            return this._letterSpacing;\n        },\n        set: function (value) {\n            if (this._letterSpacing !== value) {\n                this._letterSpacing = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"roundPixels\", {\n        /**\n         * If true PixiJS will Math.floor() x/y values when rendering, stopping pixel interpolation.\n         * Advantages can include sharper image quality (like text) and faster rendering on canvas.\n         * The main disadvantage is movement of objects may appear less smooth.\n         * To set the global default, change {@link PIXI.settings.ROUND_PIXELS}\n         *\n         * @member {boolean}\n         * @default PIXI.settings.ROUND_PIXELS\n         */\n        get: function () {\n            return this._roundPixels;\n        },\n        set: function (value) {\n            if (value !== this._roundPixels) {\n                this._roundPixels = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BitmapText.prototype, \"textHeight\", {\n        /**\n         * The height of the overall text, different from fontSize,\n         * which is defined in the style object.\n         *\n         * @member {number}\n         * @readonly\n         */\n        get: function () {\n            this.validate();\n            return this._textHeight;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BitmapText.prototype.destroy = function (options) {\n        var _textureCache = this._textureCache;\n        for (var id in _textureCache) {\n            var texture = _textureCache[id];\n            texture.destroy();\n            delete _textureCache[id];\n        }\n        this._textureCache = null;\n        _super.prototype.destroy.call(this, options);\n    };\n    BitmapText.styleDefaults = {\n        align: 'left',\n        tint: 0xFFFFFF,\n        maxWidth: 0,\n        letterSpacing: 0,\n    };\n    return BitmapText;\n}(display.Container));\n\n/**\n * {@link PIXI.Loader Loader} middleware for loading\n * bitmap-based fonts suitable for using with {@link PIXI.BitmapText}.\n * @class\n * @memberof PIXI\n * @implements PIXI.ILoaderPlugin\n */\nvar BitmapFontLoader = /** @class */ (function () {\n    function BitmapFontLoader() {\n    }\n    /**\n     * Called when the plugin is installed.\n     *\n     * @see PIXI.Loader.registerPlugin\n     */\n    BitmapFontLoader.add = function () {\n        loaders.LoaderResource.setExtensionXhrType('fnt', loaders.LoaderResource.XHR_RESPONSE_TYPE.TEXT);\n    };\n    /**\n     * Called after a resource is loaded.\n     * @see PIXI.Loader.loaderMiddleware\n     * @param {PIXI.LoaderResource} resource\n     * @param {function} next\n     */\n    BitmapFontLoader.use = function (resource, next) {\n        var format = autoDetectFormat(resource.data);\n        // Resource was not recognised as any of the expected font data format\n        if (!format) {\n            next();\n            return;\n        }\n        var baseUrl = BitmapFontLoader.getBaseUrl(this, resource);\n        var data = format.parse(resource.data);\n        var textures = {};\n        // Handle completed, when the number of textures\n        // load is the same number as references in the fnt file\n        var completed = function (page) {\n            textures[page.metadata.pageFile] = page.texture;\n            if (Object.keys(textures).length === data.page.length) {\n                resource.bitmapFont = BitmapFont.install(data, textures, true);\n                next();\n            }\n        };\n        for (var i = 0; i < data.page.length; ++i) {\n            var pageFile = data.page[i].file;\n            var url = baseUrl + pageFile;\n            var exists = false;\n            // incase the image is loaded outside\n            // using the same loader, resource will be available\n            for (var name in this.resources) {\n                var bitmapResource = this.resources[name];\n                if (bitmapResource.url === url) {\n                    bitmapResource.metadata.pageFile = pageFile;\n                    if (bitmapResource.texture) {\n                        completed(bitmapResource);\n                    }\n                    else {\n                        bitmapResource.onAfterMiddleware.add(completed);\n                    }\n                    exists = true;\n                    break;\n                }\n            }\n            // texture is not loaded, we'll attempt to add\n            // it to the load and add the texture to the list\n            if (!exists) {\n                // Standard loading options for images\n                var options = {\n                    crossOrigin: resource.crossOrigin,\n                    loadType: loaders.LoaderResource.LOAD_TYPE.IMAGE,\n                    metadata: Object.assign({ pageFile: pageFile }, resource.metadata.imageMetadata),\n                    parentResource: resource,\n                };\n                this.add(url, options, completed);\n            }\n        }\n    };\n    /**\n     * Get folder path from a resource\n     * @private\n     * @param {PIXI.Loader} loader\n     * @param {PIXI.LoaderResource} resource\n     * @return {string}\n     */\n    BitmapFontLoader.getBaseUrl = function (loader, resource) {\n        var resUrl = !resource.isDataUrl ? BitmapFontLoader.dirname(resource.url) : '';\n        if (resource.isDataUrl) {\n            if (resUrl === '.') {\n                resUrl = '';\n            }\n            if (loader.baseUrl && resUrl) {\n                // if baseurl has a trailing slash then add one to resUrl so the replace works below\n                if (loader.baseUrl.charAt(loader.baseUrl.length - 1) === '/') {\n                    resUrl += '/';\n                }\n            }\n        }\n        // remove baseUrl from resUrl\n        resUrl = resUrl.replace(loader.baseUrl, '');\n        // if there is an resUrl now, it needs a trailing slash. Ensure that it does if the string isn't empty.\n        if (resUrl && resUrl.charAt(resUrl.length - 1) !== '/') {\n            resUrl += '/';\n        }\n        return resUrl;\n    };\n    /**\n     * Replacement for NodeJS's path.dirname\n     * @private\n     * @param {string} url - Path to get directory for\n     */\n    BitmapFontLoader.dirname = function (url) {\n        var dir = url\n            .replace(/\\\\/g, '/') // convert windows notation to UNIX notation, URL-safe because it's a forbidden character\n            .replace(/\\/$/, '') // replace trailing slash\n            .replace(/\\/[^\\/]*$/, ''); // remove everything after the last\n        // File request is relative, use current directory\n        if (dir === url) {\n            return '.';\n        }\n        // Started with a slash\n        else if (dir === '') {\n            return '/';\n        }\n        return dir;\n    };\n    return BitmapFontLoader;\n}());\n\nexports.BitmapFont = BitmapFont;\nexports.BitmapFontData = BitmapFontData;\nexports.BitmapFontLoader = BitmapFontLoader;\nexports.BitmapText = BitmapText;\n//# sourceMappingURL=text-bitmap.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","autoDetectFormat","data","i","formats","length","test","splitTextToCharacters","text","Array","from","split","extractCharCode","str","codePointAt","charCodeAt","defineProperty","value","math","settings","mesh","utils","core","constants","display","loaders","setPrototypeOf","__proto__","p","hasOwnProperty","BitmapFontData","info","common","page","char","kerning","distanceField","TextFormat","TextFormat.test","indexOf","parse","TextFormat.parse","txt","items","match","rawData","chars","kernings","name","attributeList","itemData","i_1","key","strValue","replace","floatValue","parseFloat","isNaN","push","font","forEach","face","size","parseInt","lineHeight","id","file","x","y","width","height","xoffset","yoffset","xadvance","first","second","amount","df","distanceRange","fieldType","XMLFormat","XMLFormat.test","XMLDocument","getElementsByTagName","getAttribute","XMLFormat.parse","xml","letter","XMLStringFormat","XMLStringFormat.test","parseFromString","self","DOMParser","XMLStringFormat.parse","xmlTxt","BitmapFont","textures","ownsTextures","_a","_b","res","getResolutionOfUrl","pageTextures","_ownsTextures","_c","baseTexture","alphaMode","ALPHA_MODES","NO_PREMULTIPLIED_ALPHA","_d","page_1","_e","rect","Rectangle","frame","xOffset","yOffset","xAdvance","texture","Texture","_f","distanceFieldRange","distanceFieldType","toLowerCase","destroy","BitmapFont.prototype.destroy","install","BitmapFont.install","format","Error","fontData","available","uninstall","BitmapFont.uninstall","BitmapFont.from","textStyle","options","assign","defaultOptions","padding","resolution","textureWidth","textureHeight","result","j","item","isArray","startCode","endCode","j_1","String","fromCharCode","apply","style","TextStyle","fontFamily","fontSize","positionY","positionX","maxCharHeight","canvas","document","createElement","context","getContext","BaseTexture","metrics","TextMetrics","measureText","Math","ceil","textureGlyphWidth","fontStyle","max","fontProperties","descent","translate","scale","tx","strokeThickness","ty","toFontString","lineWidth","textBaseline","lineJoin","miterLimit","fillStyle","fill","dropShadowCorrection","dropShadow","dropShadowDistance","slice","fillGradientStops","lengthPlus1","unshift","fillGradientType","TEXT_GRADIENT","LINEAR_VERTICAL","gradient","createLinearGradient","lastIterationStop","gradStopLineHeight","lines","thisLineTop","clampedStop","lineStop","min","addColorStop","totalIterations","currentIteration","stop","strokeStyle","stroke","dropShadowColor","rgb","hex2rgb","string2hex","shadowColor","dropShadowAlpha","shadowBlur","dropShadowBlur","shadowOffsetX","cos","dropShadowAngle","shadowOffsetY","sin","strokeText","fillText","setTransform","len","c1","c2","undefined","ALPHA","NUMERIC","ALPHANUMERIC","ASCII","pageMeshDataDefaultPageMeshData","pageMeshDataMSDFPageMeshData","charRenderDataPool","BitmapText","_super","_this","call","_tint","styleDefaults","align","tint","maxWidth","letterSpacing","fontName","_activePagesMeshData","_textWidth","_textHeight","_align","_fontName","_fontSize","_text","_maxWidth","_maxLineHeight","_letterSpacing","_anchor","ObservablePoint","dirty","_roundPixels","ROUND_PIXELS","_textureCache","updateText","BitmapText.prototype.updateText","pos","Point","lineWidths","lineSpaces","charsInput","pageMeshDataPool","prevCharCode","lastLineWidth","maxLineWidth","line","lastBreakPos","lastBreakWidth","spacesRemoved","spaceCount","maxLineHeight","charCode","charData","charRenderData","pop","EMPTY","prevSpaces","position","orig","removeItems","lastChar","lineAlignOffsets","alignOffset","lenChars","pagesMeshData","newPagesMeshData","activePagesMeshData","baseTextureUid","uid","pageMeshData","geometry","MeshGeometry","material","MeshMaterial","meshBlendMode","BLEND_MODES","NORMAL","program","Program","msdfVert","msdfFrag","uniforms","uFWidth","NORMAL_NPM","mesh$1","Mesh","blendMode","index","indexCount","vertexCount","uvsCount","total","vertices","uvs","indices","removeChild","parent","addChild","BATCHABLE_SIZE","Float32Array","Uint16Array","offset","round","yPos","pageMesh","textureFrame","textureUvs","_uvs","xPos","x0","y0","x1","y1","x2","y2","x3","y3","anchor","i_2","anchorOffsetX","anchorOffsetY","vertexBuffer","getBuffer","textureBuffer","indexBuffer","getIndex","update","updateTransform","BitmapText.prototype.updateTransform","validate","containerUpdateTransform","_render","BitmapText.prototype._render","renderer","worldTransform","a","c","worldScale","abs","sqrt","dx","dy","fontScale","_i","shader","getLocalBounds","BitmapText.prototype.getLocalBounds","BitmapText.prototype.validate","get","set","enumerable","configurable","copyFrom","BitmapText.prototype.destroy","Container","BitmapFontLoader","add","BitmapFontLoader.add","LoaderResource","setExtensionXhrType","XHR_RESPONSE_TYPE","TEXT","use","BitmapFontLoader.use","resource","next","baseUrl","getBaseUrl","completed","metadata","pageFile","keys","bitmapFont","url","exists","resources","bitmapResource","onAfterMiddleware","crossOrigin","loadType","LOAD_TYPE","IMAGE","imageMetadata","parentResource","BitmapFontLoader.getBaseUrl","loader","resUrl","isDataUrl","dirname","charAt","BitmapFontLoader.dirname","dir"]
}
