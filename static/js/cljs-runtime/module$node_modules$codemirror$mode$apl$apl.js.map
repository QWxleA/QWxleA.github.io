{
"version":3,
"file":"module$node_modules$codemirror$mode$apl$apl.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/codemirror/mode/apl/apl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$apl$apl\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"apl\", function() {\n  var builtInOps = {\n    \".\": \"innerProduct\",\n    \"\\\\\": \"scan\",\n    \"/\": \"reduce\",\n    \"\u233f\": \"reduce1Axis\",\n    \"\u2340\": \"scan1Axis\",\n    \"\u00a8\": \"each\",\n    \"\u2363\": \"power\"\n  };\n  var builtInFuncs = {\n    \"+\": [\"conjugate\", \"add\"],\n    \"\u2212\": [\"negate\", \"subtract\"],\n    \"\u00d7\": [\"signOf\", \"multiply\"],\n    \"\u00f7\": [\"reciprocal\", \"divide\"],\n    \"\u2308\": [\"ceiling\", \"greaterOf\"],\n    \"\u230a\": [\"floor\", \"lesserOf\"],\n    \"\u2223\": [\"absolute\", \"residue\"],\n    \"\u2373\": [\"indexGenerate\", \"indexOf\"],\n    \"?\": [\"roll\", \"deal\"],\n    \"\u22c6\": [\"exponentiate\", \"toThePowerOf\"],\n    \"\u235f\": [\"naturalLog\", \"logToTheBase\"],\n    \"\u25cb\": [\"piTimes\", \"circularFuncs\"],\n    \"!\": [\"factorial\", \"binomial\"],\n    \"\u2339\": [\"matrixInverse\", \"matrixDivide\"],\n    \"<\": [null, \"lessThan\"],\n    \"\u2264\": [null, \"lessThanOrEqual\"],\n    \"=\": [null, \"equals\"],\n    \">\": [null, \"greaterThan\"],\n    \"\u2265\": [null, \"greaterThanOrEqual\"],\n    \"\u2260\": [null, \"notEqual\"],\n    \"\u2261\": [\"depth\", \"match\"],\n    \"\u2262\": [null, \"notMatch\"],\n    \"\u2208\": [\"enlist\", \"membership\"],\n    \"\u2377\": [null, \"find\"],\n    \"\u222a\": [\"unique\", \"union\"],\n    \"\u2229\": [null, \"intersection\"],\n    \"\u223c\": [\"not\", \"without\"],\n    \"\u2228\": [null, \"or\"],\n    \"\u2227\": [null, \"and\"],\n    \"\u2371\": [null, \"nor\"],\n    \"\u2372\": [null, \"nand\"],\n    \"\u2374\": [\"shapeOf\", \"reshape\"],\n    \",\": [\"ravel\", \"catenate\"],\n    \"\u236a\": [null, \"firstAxisCatenate\"],\n    \"\u233d\": [\"reverse\", \"rotate\"],\n    \"\u2296\": [\"axis1Reverse\", \"axis1Rotate\"],\n    \"\u2349\": [\"transpose\", null],\n    \"\u2191\": [\"first\", \"take\"],\n    \"\u2193\": [null, \"drop\"],\n    \"\u2282\": [\"enclose\", \"partitionWithAxis\"],\n    \"\u2283\": [\"diclose\", \"pick\"],\n    \"\u2337\": [null, \"index\"],\n    \"\u234b\": [\"gradeUp\", null],\n    \"\u2352\": [\"gradeDown\", null],\n    \"\u22a4\": [\"encode\", null],\n    \"\u22a5\": [\"decode\", null],\n    \"\u2355\": [\"format\", \"formatByExample\"],\n    \"\u234e\": [\"execute\", null],\n    \"\u22a3\": [\"stop\", \"left\"],\n    \"\u22a2\": [\"pass\", \"right\"]\n  };\n\n  var isOperator = /[\\.\\/\u233f\u2340\u00a8\u2363]/;\n  var isNiladic = /\u236c/;\n  var isFunction = /[\\+\u2212\u00d7\u00f7\u2308\u230a\u2223\u2373\\?\u22c6\u235f\u25cb!\u2339<\u2264=>\u2265\u2260\u2261\u2262\u2208\u2377\u222a\u2229\u223c\u2228\u2227\u2371\u2372\u2374,\u236a\u233d\u2296\u2349\u2191\u2193\u2282\u2283\u2337\u234b\u2352\u22a4\u22a5\u2355\u234e\u22a3\u22a2]/;\n  var isArrow = /\u2190/;\n  var isComment = /[\u235d#].*$/;\n\n  var stringEater = function(type) {\n    var prev;\n    prev = false;\n    return function(c) {\n      prev = c;\n      if (c === type) {\n        return prev === \"\\\\\";\n      }\n      return true;\n    };\n  };\n  return {\n    startState: function() {\n      return {\n        prev: false,\n        func: false,\n        op: false,\n        string: false,\n        escape: false\n      };\n    },\n    token: function(stream, state) {\n      var ch, funcName;\n      if (stream.eatSpace()) {\n        return null;\n      }\n      ch = stream.next();\n      if (ch === '\"' || ch === \"'\") {\n        stream.eatWhile(stringEater(ch));\n        stream.next();\n        state.prev = true;\n        return \"string\";\n      }\n      if (/[\\[{\\(]/.test(ch)) {\n        state.prev = false;\n        return null;\n      }\n      if (/[\\]}\\)]/.test(ch)) {\n        state.prev = true;\n        return null;\n      }\n      if (isNiladic.test(ch)) {\n        state.prev = false;\n        return \"niladic\";\n      }\n      if (/[\u00af\\d]/.test(ch)) {\n        if (state.func) {\n          state.func = false;\n          state.prev = false;\n        } else {\n          state.prev = true;\n        }\n        stream.eatWhile(/[\\w\\.]/);\n        return \"number\";\n      }\n      if (isOperator.test(ch)) {\n        return \"operator apl-\" + builtInOps[ch];\n      }\n      if (isArrow.test(ch)) {\n        return \"apl-arrow\";\n      }\n      if (isFunction.test(ch)) {\n        funcName = \"apl-\";\n        if (builtInFuncs[ch] != null) {\n          if (state.prev) {\n            funcName += builtInFuncs[ch][1];\n          } else {\n            funcName += builtInFuncs[ch][0];\n          }\n        }\n        state.func = true;\n        state.prev = false;\n        return \"function \" + funcName;\n      }\n      if (isComment.test(ch)) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      if (ch === \"\u2218\" && stream.peek() === \".\") {\n        stream.next();\n        return \"function jot-dot\";\n      }\n      stream.eatWhile(/[\\w\\$_]/);\n      state.prev = true;\n      return \"keyword\";\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/apl\", \"apl\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","builtInOps","builtInFuncs","isOperator","isNiladic","isFunction","isArrow","isComment","stringEater","type","prev","c","startState","func","op","string","escape","token","stream","state","eatSpace","ch","next","eatWhile","test","funcName","skipToEnd","peek","defineMIME"]
}
