shadow$provide.module$node_modules$chrono_node$dist$locales$pt$parsers$PTCasualTimeParser=function(global,require,module,exports){global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});const index_1=require("module$node_modules$chrono_node$dist$index");module=require("module$node_modules$chrono_node$dist$common$parsers$AbstractParserWithWordBoundary");const dayjs_1=require("module$node_modules$chrono_node$dist$utils$dayjs"),
dayjs_2=global(require("module$node_modules$dayjs$dayjs_min"));class PTCasualTimeParser extends module.AbstractParserWithWordBoundaryChecking{innerPattern(){return/(?:esta\s*)?(manha|manhã|tarde|meia-noite|meio-dia|noite)(?=\W|$)/i}innerExtract(context,match){const targetDate=dayjs_2.default(context.refDate);context=context.createParsingComponents();switch(match[1].toLowerCase()){case "tarde":context.imply("meridiem",index_1.Meridiem.PM);context.imply("hour",15);break;case "noite":context.imply("meridiem",
index_1.Meridiem.PM);context.imply("hour",22);break;case "manha":case "manhã":context.imply("meridiem",index_1.Meridiem.AM);context.imply("hour",6);break;case "meia-noite":dayjs_1.assignTheNextDay(context,targetDate);context.imply("hour",0);context.imply("minute",0);context.imply("second",0);break;case "meio-dia":context.imply("meridiem",index_1.Meridiem.AM),context.imply("hour",12)}return context}}exports.default=PTCasualTimeParser}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$pt$parsers$PTCasualTimeParser.js.map
