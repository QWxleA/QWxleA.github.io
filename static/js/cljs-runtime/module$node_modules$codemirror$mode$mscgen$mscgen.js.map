{
"version":3,
"file":"module$node_modules$codemirror$mode$mscgen$mscgen.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/codemirror/mode/mscgen/mscgen.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$mscgen$mscgen\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// mode(s) for the sequence chart dsl's mscgen, x\u00f9 and msgenny\n// For more information on mscgen, see the site of the original author:\n// http://www.mcternan.me.uk/mscgen\n//\n// This mode for mscgen and the two derivative languages were\n// originally made for use in the mscgen_js interpreter\n// (https://sverweij.github.io/mscgen_js)\n\n(function(mod) {\n  if ( typeof exports == \"object\" && typeof module == \"object\")// CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if ( typeof define == \"function\" && define.amd)// AMD\n    define([\"../../lib/codemirror\"], mod);\n  else// Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var languages = {\n    mscgen: {\n      \"keywords\" : [\"msc\"],\n      \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\"],\n      \"constants\" : [\"true\", \"false\", \"on\", \"off\"],\n      \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\"],\n      \"brackets\" : [\"\\\\{\", \"\\\\}\"], // [ and  ] are brackets too, but these get handled in with lists\n      \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\"],\n      \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\" : [\"//\", \"#\"],\n      \"operators\" : [\"=\"]\n    },\n    xu: {\n      \"keywords\" : [\"msc\", \"xu\"],\n      \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n      \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n      \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\", \"title\", \"deactivate\", \"activate\", \"activation\"],\n      \"brackets\" : [\"\\\\{\", \"\\\\}\"],  // [ and  ] are brackets too, but these get handled in with lists\n      \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n      \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\" : [\"//\", \"#\"],\n      \"operators\" : [\"=\"]\n    },\n    msgenny: {\n      \"keywords\" : null,\n      \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n      \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n      \"attributes\" : null,\n      \"brackets\" : [\"\\\\{\", \"\\\\}\"],\n      \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n      \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\" : [\"//\", \"#\"],\n      \"operators\" : [\"=\"]\n    }\n  }\n\n  CodeMirror.defineMode(\"mscgen\", function(_, modeConfig) {\n    var language = languages[modeConfig && modeConfig.language || \"mscgen\"]\n    return {\n      startState: startStateFn,\n      copyState: copyStateFn,\n      token: produceTokenFunction(language),\n      lineComment : \"#\",\n      blockCommentStart : \"/*\",\n      blockCommentEnd : \"*/\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-mscgen\", \"mscgen\");\n  CodeMirror.defineMIME(\"text/x-xu\", {name: \"mscgen\", language: \"xu\"});\n  CodeMirror.defineMIME(\"text/x-msgenny\", {name: \"mscgen\", language: \"msgenny\"});\n\n  function wordRegexpBoundary(pWords) {\n    return new RegExp(\"\\\\b(\" + pWords.join(\"|\") + \")\\\\b\", \"i\");\n  }\n\n  function wordRegexp(pWords) {\n    return new RegExp(\"(\" + pWords.join(\"|\") + \")\", \"i\");\n  }\n\n  function startStateFn() {\n    return {\n      inComment : false,\n      inString : false,\n      inAttributeList : false,\n      inScript : false\n    };\n  }\n\n  function copyStateFn(pState) {\n    return {\n      inComment : pState.inComment,\n      inString : pState.inString,\n      inAttributeList : pState.inAttributeList,\n      inScript : pState.inScript\n    };\n  }\n\n  function produceTokenFunction(pConfig) {\n\n    return function(pStream, pState) {\n      if (pStream.match(wordRegexp(pConfig.brackets), true, true)) {\n        return \"bracket\";\n      }\n      /* comments */\n      if (!pState.inComment) {\n        if (pStream.match(/\\/\\*[^\\*\\/]*/, true, true)) {\n          pState.inComment = true;\n          return \"comment\";\n        }\n        if (pStream.match(wordRegexp(pConfig.singlecomment), true, true)) {\n          pStream.skipToEnd();\n          return \"comment\";\n        }\n      }\n      if (pState.inComment) {\n        if (pStream.match(/[^\\*\\/]*\\*\\//, true, true))\n          pState.inComment = false;\n        else\n          pStream.skipToEnd();\n        return \"comment\";\n      }\n      /* strings */\n      if (!pState.inString && pStream.match(/\\\"(\\\\\\\"|[^\\\"])*/, true, true)) {\n        pState.inString = true;\n        return \"string\";\n      }\n      if (pState.inString) {\n        if (pStream.match(/[^\\\"]*\\\"/, true, true))\n          pState.inString = false;\n        else\n          pStream.skipToEnd();\n        return \"string\";\n      }\n      /* keywords & operators */\n      if (!!pConfig.keywords && pStream.match(wordRegexpBoundary(pConfig.keywords), true, true))\n        return \"keyword\";\n\n      if (pStream.match(wordRegexpBoundary(pConfig.options), true, true))\n        return \"keyword\";\n\n      if (pStream.match(wordRegexpBoundary(pConfig.arcsWords), true, true))\n        return \"keyword\";\n\n      if (pStream.match(wordRegexp(pConfig.arcsOthers), true, true))\n        return \"keyword\";\n\n      if (!!pConfig.operators && pStream.match(wordRegexp(pConfig.operators), true, true))\n        return \"operator\";\n\n      if (!!pConfig.constants && pStream.match(wordRegexp(pConfig.constants), true, true))\n        return \"variable\";\n\n      /* attribute lists */\n      if (!pConfig.inAttributeList && !!pConfig.attributes && pStream.match(/\\[/, true, true)) {\n        pConfig.inAttributeList = true;\n        return \"bracket\";\n      }\n      if (pConfig.inAttributeList) {\n        if (pConfig.attributes !== null && pStream.match(wordRegexpBoundary(pConfig.attributes), true, true)) {\n          return \"attribute\";\n        }\n        if (pStream.match(/]/, true, true)) {\n          pConfig.inAttributeList = false;\n          return \"bracket\";\n        }\n      }\n\n      pStream.next();\n      return \"base\";\n    };\n  }\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","wordRegexpBoundary","pWords","RegExp","join","wordRegexp","startStateFn","inComment","inString","inAttributeList","inScript","copyStateFn","pState","produceTokenFunction","pConfig","pStream","match","brackets","singlecomment","skipToEnd","keywords","options","arcsWords","arcsOthers","operators","constants","attributes","next","languages","mscgen","xu","msgenny","defineMode","_","modeConfig","startState","copyState","token","language","lineComment","blockCommentStart","blockCommentEnd","defineMIME","name"]
}
