{"version":3,"sources":["frontend/components/repo.cljs"],"mappings":"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","names":["rum.core/lazy-build","rum.core/build-defc","daiquiri.interpreter/interpret","frontend.components.repo/add-repo","args","temp__5718__auto__","graph-types","cljs.core.get_in","graph-types-s","clojure.string.split","cljs.core.mapv","cljs.core/keyword","cljs.core/seq","frontend.components.widgets/add-graph","daiquiri.core/create-element","attrs62009","cljs.core/map?","daiquiri.interpreter/element-attributes","daiquiri.normalize.merge_with_class","cljs.core.into_array","iter__5520__auto__","s__62012","cljs.core/LazySeq","temp__5720__auto__","cljs.core/chunked-seq?","c__5518__auto__","size__5519__auto__","cljs.core/count","b__62014","cljs.core/chunk-buffer","i__62013","map__62019","cljs.core/-nth","cljs.core/--destructure-map","cljs.core.get","cljs.core/chunk-append","attrs62020","cljs.core/chunk-cons","cljs.core/chunk","iter__62011","cljs.core/chunk-rest","map__62023","cljs.core/first","cljs.core/cons","cljs.core/rest","frontend.components.repo/repos","rum.core/reactive","repos","frontend.state/sub","p1__62004#","cljs.core.remove","cljs.core._EQ_","frontend.config/local-repo","frontend.util/distinct-by","or__5043__auto__","frontend.handler.web.nfs/supported?","frontend.mobile.util/native-platform?","frontend.ui.button","frontend.context.i18n.t","frontend.handler.page/ls-dir-files!","frontend.modules.shortcut.core/refresh!","id","url","repo","local?","frontend.config/local-db?","local-dir","frontend.config/get-local-dir","graph-name","logseq.graph-parser.text/get-graph-name-from-path","frontend.state/pub-event!","frontend.db/get-repo-path","frontend.encrypt/encrypted-db?","frontend.state.set_modal_BANG_","frontend.components.encryption/encryption-dialog","frontend.handler.repo/remove-repo!","frontend.components.repo/refresh-cb","frontend.handler.page/create-today-journal!","frontend.components.repo/check-multiple-windows?","state","frontend.util/electron?","promesa.core.bind","___28360__auto__","promesa.protocols/-promise","multiple-windows?","electron.ipc.ipc","frontend.state/get-current-repo","cljs.core/reset!","frontend.components.repo/repos-dropdown-links","current-repo","*multiple-windows?","switch-repos","repo-links","p__62035","map__62036","repo-path","frontend.db/get-repo-name","short-repo-name","e","frontend.components.repo.goog$module$goog$object.get","refresh-link","nfs-repo?","and__5041__auto__","cljs.core.not_EQ_","frontend.state/close-modal!","frontend.handler.web.nfs/refresh!","reindex-link","G__62037","new-window-link","cljs.core.concat","reitit.frontend.easy.href","cljs.core/nil?","rum.core/build-defcs","frontend.components.repo/repos-dropdown","rum.core.local","r","links","render-content","p__62042","map__62043","toggle-fn","frontend.db/get-short-repo-name","frontend.ui.icon","links-header","G__62044","frontend.util/hiccup->class","cljs.core.assoc","frontend.ui/dropdown-with-links","cljs.core/chunk-first"],"sourcesContent":["(ns frontend.components.repo\n  (:require [clojure.string :as string]\n            [frontend.components.widgets :as widgets]\n            [frontend.config :as config]\n            [frontend.context.i18n :refer [t]]\n            [frontend.db :as db]\n            [frontend.handler.page :as page-handler]\n            [frontend.handler.repo :as repo-handler]\n            [frontend.handler.web.nfs :as nfs-handler]\n            [frontend.modules.shortcut.core :as shortcut]\n            [frontend.state :as state]\n            [frontend.ui :as ui]\n            [frontend.util :as util]\n            [reitit.frontend.easy :as rfe]\n            [rum.core :as rum]\n            [frontend.mobile.util :as mobile-util]\n            [logseq.graph-parser.text :as text]\n            [promesa.core :as p]\n            [electron.ipc :as ipc]\n            [goog.object :as gobj]\n            [frontend.components.encryption :as encryption]\n            [frontend.encrypt :as e]))\n\n(rum/defc add-repo\n  [args]\n  (if-let [graph-types (get-in args [:query-params :graph-types])]\n    (let [graph-types-s (->> (string/split graph-types #\",\")\n                             (mapv keyword))]\n      (when (seq graph-types-s)\n        (widgets/add-graph :graph-types graph-types-s)))\n    (widgets/add-graph)))\n\n(rum/defc repos < rum/reactive\n  []\n  (let [repos (->> (state/sub [:me :repos])\n                   (remove #(= (:url %) config/local-repo)))\n        repos (util/distinct-by :url repos)]\n    (if (seq repos)\n      [:div#graphs\n       [:h1.title \"All Graphs\"]\n       [:p.ml-2.opacity-70\n        \"A \\\"graph\\\" in Logseq means a local directory.\"]\n\n       [:div.pl-1.content.mt-3\n        [:div.flex.flex-row.my-4\n         (when (or (nfs-handler/supported?)\n                   (mobile-util/native-platform?))\n           [:div.mr-8\n            (ui/button\n              (t :open-a-directory)\n              :on-click #(page-handler/ls-dir-files! shortcut/refresh!))])]\n        (for [{:keys [id url] :as repo} repos]\n          (let [local? (config/local-db? url)]\n            [:div.flex.justify-between.mb-4 {:key id}\n             (if local?\n               (let [local-dir (config/get-local-dir url)\n                     graph-name (text/get-graph-name-from-path local-dir)]\n                 [:a {:title local-dir\n                      :on-click #(state/pub-event! [:graph/switch url])}\n                  graph-name])\n               [:a {:target \"_blank\"\n                    :href url}\n                (db/get-repo-path url)])\n             [:div.controls\n              (when (e/encrypted-db? url)\n                [:a.control {:title \"Show encryption information about this graph\"\n                             :on-click (fn []\n                                         (state/set-modal! (encryption/encryption-dialog url)))}\n                 \"\ud83d\udd10\"])\n              [:a.text-gray-400.ml-4.font-medium.text-sm\n               {:title \"No worries, unlink this graph will clear its cache only, it does not remove your files on the disk.\"\n                :on-click (fn []\n                            (repo-handler/remove-repo! repo))}\n               \"Unlink\"]]]))]]\n      (widgets/add-graph))))\n\n(defn refresh-cb []\n  (page-handler/create-today-journal!)\n  (shortcut/refresh!))\n\n(defn- check-multiple-windows?\n  [state]\n  (when (util/electron?)\n    (p/let [multiple-windows? (ipc/ipc \"graphHasMultipleWindows\" (state/get-current-repo))]\n      (reset! (::electron-multiple-windows? state) multiple-windows?))))\n\n(defn- repos-dropdown-links [repos current-repo *multiple-windows?]\n  (let [switch-repos (remove (fn [repo] (= current-repo (:url repo))) repos) ; exclude current repo\n        repo-links (mapv\n                    (fn [{:keys [url]}]\n                      (let [repo-path (db/get-repo-name url)\n                            short-repo-name (text/get-graph-name-from-path repo-path)]\n                        {:title short-repo-name\n                         :hover-detail repo-path ;; show full path on hover\n                         :options {:class \"ml-1\"\n                                   :on-click (fn [e]\n                                               (if (gobj/get e \"shiftKey\")\n                                                 (state/pub-event! [:graph/open-new-window url])\n                                                 (state/pub-event! [:graph/switch url])))}}))\n                    switch-repos)\n        refresh-link (let [nfs-repo? (config/local-db? current-repo)]\n                       (when (and nfs-repo?\n                                  (not= current-repo config/local-repo)\n                                  (or (nfs-handler/supported?)\n                                      (mobile-util/native-platform?)))\n                         {:title (t :sync-from-local-files)\n                          :hover-detail (t :sync-from-local-files-detail)\n                          :options {:on-click\n                                    (fn []\n                                      (state/pub-event!\n                                       [:modal/show\n                                        [:div {:style {:max-width 700}}\n                                         [:p (t :sync-from-local-changes-detected)]\n                                         (ui/button\n                                          (t :yes)\n                                          :autoFocus \"on\"\n                                          :large? true\n                                          :on-click (fn []\n                                                      (state/close-modal!)\n                                                      (nfs-handler/refresh! (state/get-current-repo) refresh-cb)))]]))}}))\n        reindex-link {:title        (t :re-index)\n                      :hover-detail (t :re-index-detail)\n                      :options (cond->\n                                {:on-click\n                                 (fn []\n                                   (state/pub-event! [:graph/ask-for-re-index *multiple-windows?]))})}\n        new-window-link (when (util/electron?)\n                          {:title        (t :open-new-window)\n                           :options {:on-click #(state/pub-event! [:graph/open-new-window nil])}})]\n    (->>\n     (concat repo-links\n             [(when (seq repo-links) {:hr true})\n              {:title (t :new-graph) :options {:on-click #(page-handler/ls-dir-files! shortcut/refresh!)}}\n              {:title (t :all-graphs) :options {:href (rfe/href :repos)}}\n              refresh-link\n              reindex-link\n              new-window-link])\n     (remove nil?))))\n\n(rum/defcs repos-dropdown < rum/reactive\n  (rum/local false ::electron-multiple-windows?)\n  [state]\n  (let [multiple-windows? (::electron-multiple-windows? state)]\n    (when-let [current-repo (state/sub :git/current-repo)]\n      (let [repos (state/sub [:me :repos])\n            repos (remove (fn [r] (= config/local-repo (:url r))) repos)\n            links (repos-dropdown-links repos current-repo multiple-windows?)\n            render-content (fn [{:keys [toggle-fn]}]\n                             (let [repo-path (db/get-repo-name current-repo)\n                                   short-repo-name (db/get-short-repo-name repo-path)]\n                               [:a.item.group.flex.items-center.px-2.py-2.text-sm.font-medium.rounded-md\n                                {:on-click (fn []\n                                             (check-multiple-windows? state)\n                                             (toggle-fn))\n                                 :title repo-path} ;; show full path on hover\n                                (ui/icon \"database mr-3\" {:style {:font-size 20} :id \"database-icon\"})\n                                [:div.graphs\n                                 [:span#repo-switch.block.pr-2.whitespace-nowrap\n                                  [:span [:span#repo-name.font-medium short-repo-name]]\n                                  [:span.dropdown-caret.ml-2 {:style {:border-top-color \"#6b7280\"}}]]]]))\n            links-header (cond->\n                          {:modal-class (util/hiccup->class\n                                         \"origin-top-right.absolute.left-0.mt-2.rounded-md.shadow-lg\")}\n                           (> (count repos) 1) ; show switch to if there are multiple repos\n                           (assoc :links-header [:div.font-medium.text-sm.opacity-60.px-4.pt-2\n                                                 \"Switch to:\"]))]\n        (when (seq repos)\n          (ui/dropdown-with-links render-content links links-header))))))\n"]}