{
"version":3,
"file":"goog.ui.synthetickeyboardevent.js",
"lineCount":22,
"mappings":"AAMAA,IAAKC,CAAAA,OAAL,CAAa,gCAAb,CAAA;AAEAD,IAAKE,CAAAA,OAAL,CAAa,mBAAb,CAAA;AACAF,IAAKE,CAAAA,OAAL,CAAa,2BAAb,CAAA;AAqBAF,IAAKG,CAAAA,EAAGC,CAAAA,sBAAR,GAAiCC,QAAQ,CACrCC,IADqC,EAC/BC,OAD+B,EACtBC,QADsB,EACZC,MADY,EACJC,OADI,EACKC,OADL,EACcC,MADd,EACsBC,gBADtB,EAErCC,iBAFqC,CAElB;AAErBd,MAAKG,CAAAA,EAAGC,CAAAA,sBAAuBW,CAAAA,IAA/B,CAAoC,IAApC,EAA0C,aAA1C,EAAyDT,IAAzD,CAAA;AAGA,MAAKU,CAAAA,KAAL,GACkBT,CADL,IAAIP,IAAKG,CAAAA,EAAGc,CAAAA,iBAAkBC,CAAAA,OAA9B,EACKX,EAAAA,OADL,CACaA,OADb,CAEKC,CAAAA,QAFL,CAEcA,QAFd,CAGKC,CAAAA,MAHL,CAGYA,MAHZ,CAIKC,CAAAA,OAJL,CAIaA,OAJb,CAKKC,CAAAA,OALL,CAKaA,OALb,CAMKC,CAAAA,MANL,CAMYA,MANZ,CAOKO,CAAAA,UAPL,CAOgBP,MAPhB,CAQKC,CAAAA,gBARL,CAQsBA,gBARtB,CASKC,CAAAA,iBATL,CASuBA,iBATvB,CAUKM,CAAAA,KAVL,EAAb;AALqB,CAFvB;AAmBApB,IAAKqB,CAAAA,QAAL,CAAcrB,IAAKG,CAAAA,EAAGC,CAAAA,sBAAtB,EAA8CJ,IAAKsB,CAAAA,MAAOC,CAAAA,KAA1D,CAAA;AAOAvB,IAAKG,CAAAA,EAAGC,CAAAA,sBAAuBoB,CAAAA,SAAUC,CAAAA,OAAzC,GAAmDC,QAAQ,EAAG;AAE5D,SAAO,IAAKV,CAAAA,KAAZ;AAF4D,CAA9D;AAkBAhB,IAAKG,CAAAA,EAAGC,CAAAA,sBAAuBuB,CAAAA,aAA/B,GAA+CC,QAAQ,CACnDrB,OADmD,EAC1CC,QAD0C,EAChCC,MADgC,EACxBC,OADwB,EACfC,OADe,EACNC,MADM,EACEC,gBADF,EAEnDC,iBAFmD,CAEhC;AAErB,SAAO,IAAId,IAAKG,CAAAA,EAAGC,CAAAA,sBAAZ,CACHJ,IAAKG,CAAAA,EAAGC,CAAAA,sBAAuByB,CAAAA,IAAKC,CAAAA,OADjC,EAC0CvB,OAD1C,EACmDC,QADnD,EAC6DC,MAD7D,EAEHC,OAFG,EAEMC,OAFN,EAEeC,MAFf,EAEuBC,gBAFvB,EAEyCC,iBAFzC,CAAP;AAFqB,CAFvB;AAsBAd,IAAKG,CAAAA,EAAGC,CAAAA,sBAAuB2B,CAAAA,WAA/B,GAA6CC,QAAQ,CACjDzB,OADiD,EACxCC,QADwC,EAC9BC,MAD8B,EACtBC,OADsB,EACbC,OADa,EACJC,MADI,EACIC,gBADJ,EAEjDC,iBAFiD,CAE9B;AAErB,SAAO,IAAId,IAAKG,CAAAA,EAAGC,CAAAA,sBAAZ,CACHJ,IAAKG,CAAAA,EAAGC,CAAAA,sBAAuByB,CAAAA,IAAKI,CAAAA,KADjC,EACwC1B,OADxC,EACiDC,QADjD,EAC2DC,MAD3D,EAEHC,OAFG,EAEMC,OAFN,EAEeC,MAFf,EAEuBC,gBAFvB,EAEyCC,iBAFzC,CAAP;AAFqB,CAFvB;AAsBAd,IAAKG,CAAAA,EAAGC,CAAAA,sBAAuB8B,CAAAA,cAA/B,GAAgDC,QAAQ,CACpD5B,OADoD,EAC3CC,QAD2C,EACjCC,MADiC,EACzBC,OADyB,EAChBC,OADgB,EACPC,MADO,EACCC,gBADD,EAEpDC,iBAFoD,CAEjC;AAErB,SAAO,IAAId,IAAKG,CAAAA,EAAGC,CAAAA,sBAAZ,CACHJ,IAAKG,CAAAA,EAAGC,CAAAA,sBAAuByB,CAAAA,IAAKO,CAAAA,QADjC,EAC2C7B,OAD3C,EACoDC,QADpD,EAC8DC,MAD9D,EAEHC,OAFG,EAEMC,OAFN,EAEeC,MAFf,EAEuBC,gBAFvB,EAEyCC,iBAFzC,CAAP;AAFqB,CAFvB;AAcAd,IAAKG,CAAAA,EAAGC,CAAAA,sBAAuByB,CAAAA,IAA/B,GAAsC,CACpCC,QAAS,mBAD2B,EAEpCG,MAAO,iBAF6B,EAGpCG,SAAU,oBAH0B,CAAtC;;",
"sources":["goog/ui/synthetickeyboardevent.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\ngoog.provide('goog.ui.SyntheticKeyboardEvent');\n\ngoog.require('goog.events.Event');\ngoog.require('goog.ui.KeyboardEventData');\n\n\n\n/**\n * Synthetic keyboard event that can be handled by `KeyboardShortcutHandler`.\n *\n * Prefer using the available `createKeyUp`, `createKeyDown`, `createKeyPress`\n * helpers over using this constructor.\n * @param {!goog.ui.SyntheticKeyboardEvent.Type} type\n * @param {number} keyCode\n * @param {boolean} shiftKey\n * @param {boolean} altKey\n * @param {boolean} ctrlKey\n * @param {boolean} metaKey\n * @param {!Node} target\n * @param {function(): void} preventDefaultFn\n * @param {function(): void} stopPropagationFn\n * @extends {goog.events.Event}\n * @constructor @struct @final\n */\ngoog.ui.SyntheticKeyboardEvent = function(\n    type, keyCode, shiftKey, altKey, ctrlKey, metaKey, target, preventDefaultFn,\n    stopPropagationFn) {\n  'use strict';\n  goog.ui.SyntheticKeyboardEvent.base(this, 'constructor', type);\n\n  /** @private @const {!goog.ui.KeyboardEventData} */\n  this.data_ = new goog.ui.KeyboardEventData.Builder()\n                   .keyCode(keyCode)\n                   .shiftKey(shiftKey)\n                   .altKey(altKey)\n                   .ctrlKey(ctrlKey)\n                   .metaKey(metaKey)\n                   .target(target)\n                   .rootTarget(target)\n                   .preventDefaultFn(preventDefaultFn)\n                   .stopPropagationFn(stopPropagationFn)\n                   .build();\n};\ngoog.inherits(goog.ui.SyntheticKeyboardEvent, goog.events.Event);\n\n\n/**\n * @return {!goog.ui.KeyboardEventData}\n * @package\n */\ngoog.ui.SyntheticKeyboardEvent.prototype.getData = function() {\n  'use strict';\n  return this.data_;\n};\n\n\n/**\n * Creates a synthetic keydown event.\n * @param {number} keyCode\n * @param {boolean} shiftKey\n * @param {boolean} altKey\n * @param {boolean} ctrlKey\n * @param {boolean} metaKey\n * @param {!Node} target\n * @param {function(): void} preventDefaultFn\n * @param {function(): void} stopPropagationFn\n * @return {!goog.ui.SyntheticKeyboardEvent}\n */\ngoog.ui.SyntheticKeyboardEvent.createKeyDown = function(\n    keyCode, shiftKey, altKey, ctrlKey, metaKey, target, preventDefaultFn,\n    stopPropagationFn) {\n  'use strict';\n  return new goog.ui.SyntheticKeyboardEvent(\n      goog.ui.SyntheticKeyboardEvent.Type.KEYDOWN, keyCode, shiftKey, altKey,\n      ctrlKey, metaKey, target, preventDefaultFn, stopPropagationFn);\n};\n\n\n/**\n * Creates a synthetic keyup event.\n * @param {number} keyCode\n * @param {boolean} shiftKey\n * @param {boolean} altKey\n * @param {boolean} ctrlKey\n * @param {boolean} metaKey\n * @param {!Node} target\n * @param {function(): void} preventDefaultFn\n * @param {function(): void} stopPropagationFn\n * @return {!goog.ui.SyntheticKeyboardEvent}\n */\ngoog.ui.SyntheticKeyboardEvent.createKeyUp = function(\n    keyCode, shiftKey, altKey, ctrlKey, metaKey, target, preventDefaultFn,\n    stopPropagationFn) {\n  'use strict';\n  return new goog.ui.SyntheticKeyboardEvent(\n      goog.ui.SyntheticKeyboardEvent.Type.KEYUP, keyCode, shiftKey, altKey,\n      ctrlKey, metaKey, target, preventDefaultFn, stopPropagationFn);\n};\n\n\n/**\n * Creates a synthetic keypress event.\n * @param {number} keyCode\n * @param {boolean} shiftKey\n * @param {boolean} altKey\n * @param {boolean} ctrlKey\n * @param {boolean} metaKey\n * @param {!Node} target\n * @param {function(): void} preventDefaultFn\n * @param {function(): void} stopPropagationFn\n * @return {!goog.ui.SyntheticKeyboardEvent}\n */\ngoog.ui.SyntheticKeyboardEvent.createKeyPress = function(\n    keyCode, shiftKey, altKey, ctrlKey, metaKey, target, preventDefaultFn,\n    stopPropagationFn) {\n  'use strict';\n  return new goog.ui.SyntheticKeyboardEvent(\n      goog.ui.SyntheticKeyboardEvent.Type.KEYPRESS, keyCode, shiftKey, altKey,\n      ctrlKey, metaKey, target, preventDefaultFn, stopPropagationFn);\n};\n\n\n/**\n * Synthetic event types.\n * @enum {string}\n */\ngoog.ui.SyntheticKeyboardEvent.Type = {\n  KEYDOWN: 'synthetic-keydown',\n  KEYUP: 'synthetic-keyup',\n  KEYPRESS: 'synthetic-keypress'\n};\n"],
"names":["goog","provide","require","ui","SyntheticKeyboardEvent","goog.ui.SyntheticKeyboardEvent","type","keyCode","shiftKey","altKey","ctrlKey","metaKey","target","preventDefaultFn","stopPropagationFn","base","data_","KeyboardEventData","Builder","rootTarget","build","inherits","events","Event","prototype","getData","goog.ui.SyntheticKeyboardEvent.prototype.getData","createKeyDown","goog.ui.SyntheticKeyboardEvent.createKeyDown","Type","KEYDOWN","createKeyUp","goog.ui.SyntheticKeyboardEvent.createKeyUp","KEYUP","createKeyPress","goog.ui.SyntheticKeyboardEvent.createKeyPress","KEYPRESS"]
}
