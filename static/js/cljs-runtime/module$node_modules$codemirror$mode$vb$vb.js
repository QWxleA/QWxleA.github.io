shadow$provide.module$node_modules$codemirror$mode$vb$vb=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)})(function(CodeMirror){CodeMirror.defineMode("vb",function(conf,parserConf){function wordRegexp(words){return new RegExp("^(("+words.join(")|(")+"))\\b","i")}function tokenBase(stream,state){if(stream.eatSpace())return null;
if("'"===stream.peek())return stream.skipToEnd(),"comment";if(stream.match(/^((&H)|(&O))?[0-9\.a-f]/i,!1)){var floatLiteral=!1;stream.match(/^\d*\.\d+F?/i)?floatLiteral=!0:stream.match(/^\d+\.\d*F?/)?floatLiteral=!0:stream.match(/^\.\d+F?/)&&(floatLiteral=!0);if(floatLiteral)return stream.eat(/J/i),"number";floatLiteral=!1;stream.match(/^&H[0-9a-f]+/i)?floatLiteral=!0:stream.match(/^&O[0-7]+/i)?floatLiteral=!0:stream.match(/^[1-9]\d*F?/)?(stream.eat(/J/i),floatLiteral=!0):stream.match(/^0(?![\dx])/i)&&
(floatLiteral=!0);if(floatLiteral)return stream.eat(/L/i),"number"}if(stream.match('"'))return state.tokenize=tokenStringFactory(stream.current()),state.tokenize(stream,state);if(stream.match(tripleDelimiters)||stream.match(doubleDelimiters))return null;if(stream.match(doubleOperators)||stream.match(singleOperators)||stream.match(wordOperators))return"operator";if(stream.match(singleDelimiters))return null;if(stream.match(doOpening))return state.currentIndent++,state.doInCurrentLine=!0,"keyword";
if(stream.match(opening))return state.doInCurrentLine?state.doInCurrentLine=!1:state.currentIndent++,"keyword";if(stream.match(middle))return"keyword";if(stream.match(doubleClosing))return state.currentIndent--,state.currentIndent--,"keyword";if(stream.match(closing))return state.currentIndent--,"keyword";if(stream.match(types)||stream.match(keywords))return"keyword";if(stream.match(identifiers))return"variable";stream.next();return"error"}function tokenStringFactory(delimiter){var singleline=1==
delimiter.length;return function(stream,state){for(;!stream.eol();){stream.eatWhile(/[^'"]/);if(stream.match(delimiter))return state.tokenize=tokenBase,"string";stream.eat(/['"]/)}if(singleline){if(parserConf.singleLineStringErrors)return"error";state.tokenize=tokenBase}return"string"}}var singleOperators=RegExp("^[\\+\\-\\*/%\x26\\\\|\\^~\x3c\x3e!]"),singleDelimiters=RegExp("^[\\(\\)\\[\\]\\{\\}@,:`\x3d;\\.]"),doubleOperators=RegExp("^((\x3d\x3d)|(\x3c\x3e)|(\x3c\x3d)|(\x3e\x3d)|(\x3c\x3e)|(\x3c\x3c)|(\x3e\x3e)|(//)|(\\*\\*))"),
doubleDelimiters=RegExp("^((\\+\x3d)|(\\-\x3d)|(\\*\x3d)|(%\x3d)|(/\x3d)|(\x26\x3d)|(\\|\x3d)|(\\^\x3d))"),tripleDelimiters=RegExp("^((//\x3d)|(\x3e\x3e\x3d)|(\x3c\x3c\x3d)|(\\*\\*\x3d))"),identifiers=RegExp("^[_A-Za-z][_A-Za-z0-9]*"),openingKeywords="class module sub enum select while if function get set property try structure synclock using with".split(" "),middleKeywords=["else","elseif","case","catch","finally"],endKeywords=["next","loop"],operatorKeywords="and andalso or orelse xor in not is isnot like".split(" "),
wordOperators=wordRegexp(operatorKeywords),commonKeywords="#const #else #elseif #end #if #region addhandler addressof alias as byref byval cbool cbyte cchar cdate cdbl cdec cint clng cobj compare const continue csbyte cshort csng cstr cuint culng cushort declare default delegate dim directcast each erase error event exit explicit false for friend gettype goto handles implements imports infer inherits interface isfalse istrue lib me mod mustinherit mustoverride my mybase myclass namespace narrowing new nothing notinheritable notoverridable of off on operator option optional out overloads overridable overrides paramarray partial private protected public raiseevent readonly redim removehandler resume return shadows shared static step stop strict then throw to true trycast typeof until until when widening withevents writeonly".split(" "),
commontypes="object boolean char string byte sbyte short ushort int16 uint16 integer uinteger int32 uint32 long ulong int64 uint64 decimal single double float date datetime intptr uintptr".split(" "),keywords=wordRegexp(commonKeywords),types=wordRegexp(commontypes),opening=wordRegexp(openingKeywords),middle=wordRegexp(middleKeywords),closing=wordRegexp(endKeywords),doubleClosing=wordRegexp(["end"]),doOpening=wordRegexp(["do"]);CodeMirror.registerHelper("hintWords","vb",openingKeywords.concat(middleKeywords).concat(endKeywords).concat(operatorKeywords).concat(commonKeywords).concat(commontypes));
return{electricChars:"dDpPtTfFeE ",startState:function(){return{tokenize:tokenBase,lastToken:null,currentIndent:0,nextLineIndent:0,doInCurrentLine:!1}},token:function(stream,state){stream.sol()&&(state.currentIndent+=state.nextLineIndent,state.nextLineIndent=0,state.doInCurrentLine=0);var style=state.tokenize(stream,state);var current=stream.current();if("."===current)style=state.tokenize(stream,state),style="variable"===style?"variable":"error";else{var delimiter_index="[({".indexOf(current);-1!==
delimiter_index&&state.currentIndent++;delimiter_index="])}".indexOf(current);-1!==delimiter_index&&state.currentIndent--}state.lastToken={style,content:stream.current()};return style},indent:function(state,textAfter){textAfter=textAfter.replace(/^\s+|\s+$/g,"");return textAfter.match(closing)||textAfter.match(doubleClosing)||textAfter.match(middle)?conf.indentUnit*(state.currentIndent-1):0>state.currentIndent?0:state.currentIndent*conf.indentUnit},lineComment:"'"}});CodeMirror.defineMIME("text/x-vb",
"vb")})}
//# sourceMappingURL=module$node_modules$codemirror$mode$vb$vb.js.map
