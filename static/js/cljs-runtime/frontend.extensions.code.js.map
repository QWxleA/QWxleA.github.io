{"version":3,"sources":["frontend/extensions/code.cljs"],"mappings":"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","names":["frontend.extensions.code/from-textarea","frontend.extensions.code.goog$module$goog$object.get","js/module$node_modules$codemirror$lib$codemirror","frontend.extensions.code/textarea-ref-name","frontend.extensions.code/codemirror-ref-name","frontend.extensions.code/extra-codemirror-options","cljs.core.get","frontend.state.get_config","frontend.extensions.code/save-file-or-block!","editor","textarea","config","state","value","default-value","cljs.core.not_EQ_","map__63674","cljs.core/--destructure-map","block","G__63675","frontend.db/pull","content","start_pos","end_pos","cljs.core/deref","offset","raw-content","logseq.graph-parser.utf8/encode","prefix","logseq.graph-parser.utf8/decode","surfix","new-content","clojure.string/blank?","frontend.state.set_edit_content_BANG_","frontend.state/get-edit-input-id","frontend.handler.editor.save_block_if_changed_BANG_","vec__63676","cljs.core.nth","path","frontend.db/get-file","_","id","G__63679","goog.dom/getElement","clojure.string/trim","frontend.handler.file/alter-file","frontend.state/get-current-repo","frontend.extensions.code/save-file-or-block-when-blur-or-esc!","frontend.state/set-block-component-editing-mode!","var_args","G__63681","frontend.extensions.code/text->cm-mode","js/Error","text","frontend.extensions.code.text__GT_cm_mode","by","mode","clojure.string/lower-case","find-fn-name","G__63682","cljs.core/Keyword","find-fn","cm-mode","frontend.extensions.code/render!","vec__63683","attr","_code","theme","default-open?","and__5041__auto__","frontend.state/state","cljs.core._EQ_","frontend.state/get-edit-block","cljs.core.get_in","frontend.state/set-state!","original-mode","lisp-like?","cljs.core/contains?","default-cm-options","cm-options","cljs.core.merge","cm","frontend.extensions.code.goog$module$goog$object.set","temp__5720__auto__","block-id","G__63686","frontend.handler.editor.edit_block_BANG_","frontend.config/publishing?","G__63687","G__63688","cljs.core/clj->js","textarea-ref","rum.core/ref-node","element","_cm","_e","new-code","cljs.core/reset!","frontend.extensions.calc/eval-lines","e","frontend.util/stop","frontend.state/clear-selection!","cljs.core.into","G__63689","frontend.db/get-block-by-uuid","frontend.state.set_editing_BANG_","frontend.extensions.code/load-and-render!","editor-atom","rum.core/lazy-build","rum.core/build-defcs","attrs63690","daiquiri.core/create-element","cljs.core/map?","daiquiri.interpreter/element-attributes","daiquiri.normalize.merge_with_class","attrs63691","daiquiri.interpreter/interpret","attrs63692","frontend.extensions.code/editor","rum.core/reactive","vec__63693","code","options","cljs.core.assoc","cljs.core.atom","cljs.core/last","_config","_theme","_options","frontend.extensions.calc/results","frontend.commands/handle-step","p__63696","vec__63697","block-uuid","frontend.state/clear-edit!","js/setTimeout","block-node","frontend.util/get-first-block-by-id","codemirror-ref"],"sourcesContent":["(ns frontend.extensions.code\n  (:require [clojure.string :as string]\n            [\"codemirror\" :as cm]\n            [\"codemirror/addon/edit/closebrackets\"]\n            [\"codemirror/addon/edit/matchbrackets\"]\n            [\"codemirror/addon/selection/active-line\"]\n            [\"codemirror/mode/apl/apl\"]\n            [\"codemirror/mode/asciiarmor/asciiarmor\"]\n            [\"codemirror/mode/asn.1/asn.1\"]\n            [\"codemirror/mode/asterisk/asterisk\"]\n            [\"codemirror/mode/brainfuck/brainfuck\"]\n            [\"codemirror/mode/clike/clike\"]\n            [\"codemirror/mode/clojure/clojure\"]\n            [\"codemirror/mode/cmake/cmake\"]\n            [\"codemirror/mode/cobol/cobol\"]\n            [\"codemirror/mode/coffeescript/coffeescript\"]\n            [\"codemirror/mode/commonlisp/commonlisp\"]\n            [\"codemirror/mode/crystal/crystal\"]\n            [\"codemirror/mode/css/css\"]\n            [\"codemirror/mode/cypher/cypher\"]\n            [\"codemirror/mode/d/d\"]\n            [\"codemirror/mode/dart/dart\"]\n            [\"codemirror/mode/diff/diff\"]\n            [\"codemirror/mode/django/django\"]\n            [\"codemirror/mode/dockerfile/dockerfile\"]\n            [\"codemirror/mode/dtd/dtd\"]\n            [\"codemirror/mode/dylan/dylan\"]\n            [\"codemirror/mode/ebnf/ebnf\"]\n            [\"codemirror/mode/ecl/ecl\"]\n            [\"codemirror/mode/eiffel/eiffel\"]\n            [\"codemirror/mode/elm/elm\"]\n            [\"codemirror/mode/erlang/erlang\"]\n            [\"codemirror/mode/factor/factor\"]\n            [\"codemirror/mode/fcl/fcl\"]\n            [\"codemirror/mode/forth/forth\"]\n            [\"codemirror/mode/fortran/fortran\"]\n            [\"codemirror/mode/gas/gas\"]\n            [\"codemirror/mode/gfm/gfm\"]\n            [\"codemirror/mode/gherkin/gherkin\"]\n            [\"codemirror/mode/go/go\"]\n            [\"codemirror/mode/groovy/groovy\"]\n            [\"codemirror/mode/haml/haml\"]\n            [\"codemirror/mode/handlebars/handlebars\"]\n            [\"codemirror/mode/haskell-literate/haskell-literate\"]\n            [\"codemirror/mode/haskell/haskell\"]\n            [\"codemirror/mode/haxe/haxe\"]\n            [\"codemirror/mode/htmlembedded/htmlembedded\"]\n            [\"codemirror/mode/htmlmixed/htmlmixed\"]\n            [\"codemirror/mode/http/http\"]\n            [\"codemirror/mode/idl/idl\"]\n            [\"codemirror/mode/javascript/javascript\"]\n            [\"codemirror/mode/jinja2/jinja2\"]\n            [\"codemirror/mode/jsx/jsx\"]\n            [\"codemirror/mode/julia/julia\"]\n            [\"codemirror/mode/livescript/livescript\"]\n            [\"codemirror/mode/lua/lua\"]\n            [\"codemirror/mode/markdown/markdown\"]\n            [\"codemirror/mode/mathematica/mathematica\"]\n            [\"codemirror/mode/mbox/mbox\"]\n            [\"codemirror/mode/meta\"]\n            [\"codemirror/mode/mirc/mirc\"]\n            [\"codemirror/mode/mllike/mllike\"]\n            [\"codemirror/mode/modelica/modelica\"]\n            [\"codemirror/mode/mscgen/mscgen\"]\n            [\"codemirror/mode/mumps/mumps\"]\n            [\"codemirror/mode/nginx/nginx\"]\n            [\"codemirror/mode/nsis/nsis\"]\n            [\"codemirror/mode/ntriples/ntriples\"]\n            [\"codemirror/mode/octave/octave\"]\n            [\"codemirror/mode/oz/oz\"]\n            [\"codemirror/mode/pascal/pascal\"]\n            [\"codemirror/mode/pegjs/pegjs\"]\n            [\"codemirror/mode/perl/perl\"]\n            [\"codemirror/mode/php/php\"]\n            [\"codemirror/mode/pig/pig\"]\n            [\"codemirror/mode/powershell/powershell\"]\n            [\"codemirror/mode/properties/properties\"]\n            [\"codemirror/mode/protobuf/protobuf\"]\n            [\"codemirror/mode/pug/pug\"]\n            [\"codemirror/mode/puppet/puppet\"]\n            [\"codemirror/mode/python/python\"]\n            [\"codemirror/mode/q/q\"]\n            [\"codemirror/mode/r/r\"]\n            [\"codemirror/mode/rpm/rpm\"]\n            [\"codemirror/mode/rst/rst\"]\n            [\"codemirror/mode/ruby/ruby\"]\n            [\"codemirror/mode/rust/rust\"]\n            [\"codemirror/mode/sas/sas\"]\n            [\"codemirror/mode/sass/sass\"]\n            [\"codemirror/mode/scheme/scheme\"]\n            [\"codemirror/mode/shell/shell\"]\n            [\"codemirror/mode/sieve/sieve\"]\n            [\"codemirror/mode/slim/slim\"]\n            [\"codemirror/mode/smalltalk/smalltalk\"]\n            [\"codemirror/mode/smarty/smarty\"]\n            [\"codemirror/mode/solr/solr\"]\n            [\"codemirror/mode/soy/soy\"]\n            [\"codemirror/mode/sparql/sparql\"]\n            [\"codemirror/mode/spreadsheet/spreadsheet\"]\n            [\"codemirror/mode/sql/sql\"]\n            [\"codemirror/mode/stex/stex\"]\n            [\"codemirror/mode/stylus/stylus\"]\n            [\"codemirror/mode/swift/swift\"]\n            [\"codemirror/mode/tcl/tcl\"]\n            [\"codemirror/mode/textile/textile\"]\n            [\"codemirror/mode/tiddlywiki/tiddlywiki\"]\n            [\"codemirror/mode/tiki/tiki\"]\n            [\"codemirror/mode/toml/toml\"]\n            [\"codemirror/mode/tornado/tornado\"]\n            [\"codemirror/mode/troff/troff\"]\n            [\"codemirror/mode/ttcn-cfg/ttcn-cfg\"]\n            [\"codemirror/mode/ttcn/ttcn\"]\n            [\"codemirror/mode/turtle/turtle\"]\n            [\"codemirror/mode/twig/twig\"]\n            [\"codemirror/mode/vb/vb\"]\n            [\"codemirror/mode/vbscript/vbscript\"]\n            [\"codemirror/mode/velocity/velocity\"]\n            [\"codemirror/mode/verilog/verilog\"]\n            [\"codemirror/mode/vhdl/vhdl\"]\n            [\"codemirror/mode/vue/vue\"]\n            [\"codemirror/mode/wast/wast\"]\n            [\"codemirror/mode/webidl/webidl\"]\n            [\"codemirror/mode/xml/xml\"]\n            [\"codemirror/mode/xquery/xquery\"]\n            [\"codemirror/mode/yacas/yacas\"]\n            [\"codemirror/mode/yaml-frontmatter/yaml-frontmatter\"]\n            [\"codemirror/mode/yaml/yaml\"]\n            [\"codemirror/mode/z80/z80\"]\n            [frontend.commands :as commands]\n            [frontend.db :as db]\n            [frontend.extensions.calc :as calc]\n            [frontend.handler.editor :as editor-handler]\n            [frontend.handler.file :as file-handler]\n            [frontend.state :as state]\n            [logseq.graph-parser.utf8 :as utf8]\n            [frontend.util :as util]\n            [frontend.config :as config]\n            [goog.dom :as gdom]\n            [goog.object :as gobj]\n            [rum.core :as rum]))\n\n;; codemirror\n\n(def from-textarea (gobj/get cm \"fromTextArea\"))\n\n(def textarea-ref-name \"textarea\")\n(def codemirror-ref-name \"codemirror-instance\")\n\n(defn- extra-codemirror-options []\n  (get (state/get-config)\n       :editor/extra-codemirror-options {}))\n\n(defn- save-file-or-block!\n  [editor textarea config state]\n  (.save editor)\n  (let [value (gobj/get textarea \"value\")\n        default-value (gobj/get textarea \"defaultValue\")]\n    (when (not= value default-value)\n      (cond\n        (:block/uuid config)\n        (let [block (db/pull [:block/uuid (:block/uuid config)])\n              content (:block/content block)\n              {:keys [start_pos end_pos]} (:pos_meta @(:code-options state))\n              offset (if (:block/pre-block? block) 0 2)\n              raw-content (utf8/encode content) ;; NOTE: :pos_meta is based on byte position\n              prefix (utf8/decode (.slice raw-content 0 (- start_pos offset)))\n              surfix (utf8/decode (.slice raw-content (- end_pos offset)))\n              new-content (if (string/blank? value)\n                            (str prefix surfix)\n                            (str prefix value \"\\n\" surfix))]\n          (state/set-edit-content! (state/get-edit-input-id) new-content)\n          (editor-handler/save-block-if-changed! block new-content))\n\n        (:file-path config)\n        (let [path (:file-path config)\n              content (db/get-file path)\n              [_ id _ _ _] (:rum/args state)\n              value (some-> (gdom/getElement id)\n                            (gobj/get \"value\"))]\n          (when (and\n                 (not (string/blank? value))\n                 (not= (string/trim value) (string/trim content)))\n            (file-handler/alter-file (state/get-current-repo)\n                                     path\n                                     (str (string/trim value) \"\\n\")\n                                     {:re-render-root? true})))\n\n        :else\n        nil))))\n\n(defn- save-file-or-block-when-blur-or-esc!\n  [editor textarea config state]\n  (state/set-block-component-editing-mode! false)\n  (save-file-or-block! editor textarea config state))\n\n(defn- text->cm-mode\n  ([text]\n   (text->cm-mode text :name))\n  ([text by]\n   (when text\n     (let [mode (string/lower-case text)\n           find-fn-name (case by\n                          :name \"findModeByName\"\n                          :ext \"findModeByExtension\"\n                          :file-name \"findModeByFileName\"\n                          \"findModeByName\")\n           find-fn (gobj/get cm find-fn-name)\n           cm-mode (find-fn mode)]\n       (if cm-mode\n         (.-mime cm-mode)\n         mode)))))\n\n(defn render!\n  [state]\n  (let [[config id attr _code theme] (:rum/args state)\n        default-open? (and (:editor/code-mode? @state/state)\n                           (= (:block/uuid (state/get-edit-block))\n                              (get-in config [:block :block/uuid])))\n        _ (state/set-state! :editor/code-mode? false)\n        original-mode (get attr :data-lang)\n        mode (if (:file? config)\n               (text->cm-mode original-mode :ext) ;; ref: src/main/frontend/components/file.cljs\n               (text->cm-mode original-mode :name))\n        lisp-like? (contains? #{\"scheme\" \"lisp\" \"clojure\" \"edn\"} mode)\n        textarea (gdom/getElement id)\n        default-cm-options {:theme (str \"solarized \" theme)\n                            :autoCloseBrackets true\n                            :lineNumbers true\n                            :matchBrackets lisp-like?\n                            :styleActiveLine true}\n        cm-options (merge default-cm-options\n                          (extra-codemirror-options)\n                          {:mode mode\n                           :tabindex -1 ;; do not accept TAB-in, since TAB is bind globally\n                           :extraKeys #js {\"Esc\" (fn [cm]\n                                                   ;; Avoid reentrancy\n                                                   (gobj/set cm \"escPressed\" true)\n                                                   (save-file-or-block-when-blur-or-esc! cm textarea config state)\n                                                   (when-let [block-id (:block/uuid config)]\n                                                     (let [block (db/pull [:block/uuid block-id])]\n                                                       (editor-handler/edit-block! block :max block-id))))}}\n                          (when config/publishing?\n                            {:readOnly true\n                             :cursorBlinkRate -1}))\n        editor (when textarea\n                 (from-textarea textarea (clj->js cm-options)))]\n    (when editor\n      (let [textarea-ref (rum/ref-node state textarea-ref-name)\n            element (.getWrapperElement editor)]\n        (gobj/set textarea-ref codemirror-ref-name editor)\n        (when (= mode \"calc\")\n          (.on editor \"change\" (fn [_cm _e]\n                                 (let [new-code (.getValue editor)]\n                                   (reset! (:calc-atom state) (calc/eval-lines new-code))))))\n        (.on editor \"blur\" (fn [cm e]\n                             (when e (util/stop e))\n                             (when-not (gobj/get cm \"escPressed\")\n                               (save-file-or-block-when-blur-or-esc! editor textarea config state))\n                             (state/set-block-component-editing-mode! false)))\n        (.on editor \"focus\" (fn [_e]\n                              (state/set-block-component-editing-mode! true)))\n        (.addEventListener element \"mousedown\"\n                           (fn [e]\n                             (util/stop e)\n                             (state/clear-selection!)\n                             (when-let [block (and (:block/uuid config) (into {} (db/get-block-by-uuid (:block/uuid config))))]\n                               (state/set-editing! id (.getValue editor) block nil false))))\n        (.addEventListener element \"touchstart\"\n                           (fn [e]\n                             (.stopPropagation e)))\n        (.save editor)\n        (.refresh editor)\n        (when default-open?\n          (.focus editor))))\n    editor))\n\n(defn- load-and-render!\n  [state]\n  (let [editor-atom (:editor-atom state)]\n    (when-not @editor-atom\n      (let [editor (render! state)]\n        (reset! editor-atom editor)))))\n\n(rum/defcs editor < rum/reactive\n  {:init (fn [state]\n           (let [[_ _ _ code _ options] (:rum/args state)]\n             (assoc state\n                    :editor-atom (atom nil)\n                    :calc-atom (atom (calc/eval-lines code))\n                    :code-options (atom options))))\n   :did-mount (fn [state]\n                (load-and-render! state)\n                state)\n   :did-update (fn [state]\n                 (reset! (:code-options state) (last (:rum/args state)))\n                 state)\n   }\n  [state _config id attr code _theme _options]\n  [:div.extensions__code\n   (when-let [mode (:data-lang attr)]\n     (when-not (= mode \"calc\")\n       [:div.extensions__code-lang\n        (string/lower-case mode)]))\n   [:div.code-editor.flex.flex-1.flex-row.w-full\n    [:textarea (merge {:id id\n                       ;; Expose the textarea associated with the CodeMirror instance via\n                       ;; ref so that we can autofocus into the CodeMirror instance later.\n                       :ref textarea-ref-name\n                       :default-value code} attr)]\n    (when (= (:data-lang attr) \"calc\")\n      (calc/results (:calc-atom state)))]])\n\n;; Focus into the CodeMirror editor rather than the normal \"raw\" editor\n(defmethod commands/handle-step :codemirror/focus [[_]]\n  ;; This requestAnimationFrame is necessary because, for some reason, when you\n  ;; type /calculate and then click the \"Calculate\" command in the dropdown\n  ;; *with your mouse* (but not when you do so via your keyboard with the\n  ;; arrow + enter keys!), React doesn't re-render before the :codemirror/focus\n  ;; command kicks off. As a result, you get an error saying that the node\n  ;; you're trying to focus doesn't yet exist. Adding the requestAnimationFrame\n  ;; ensures that the React component re-renders before the :codemirror/focus\n  ;; command is run. It's not elegant... open to suggestions for how to fix it!\n  (let [block (state/get-edit-block)\n        block-uuid (:block/uuid block)]\n    (state/clear-edit!)\n    (js/setTimeout\n     (fn []\n       (let [block-node (util/get-first-block-by-id block-uuid)\n             textarea-ref (.querySelector block-node \"textarea\")]\n         (when-let [codemirror-ref (gobj/get textarea-ref codemirror-ref-name)]\n           (.focus codemirror-ref))))\n     100)))\n"]}