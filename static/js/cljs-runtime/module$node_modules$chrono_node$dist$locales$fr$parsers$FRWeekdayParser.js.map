{
"version":3,
"file":"module$node_modules$chrono_node$dist$locales$fr$parsers$FRWeekdayParser.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,uEAAA,CAA4F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEpIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,OAAMC,YAAcN,OAAA,CAAQ,2DAAR,CACdO,OAAAA,CAAYP,OAAA,CAAQ,oDAAR,CACZQ,OAAAA,CAAmCR,OAAA,CAAQ,oFAAR,CACzC,OAAMS,QAAUT,OAAA,CAAQ,wDAAR,CAAhB;AACMU,QAAU,IAAIC,MAAJ,CAAW,yCAAX,CAEZ,IAAIJ,MAAUK,CAAAA,eAAV,CAA0BN,WAAYO,CAAAA,kBAAtC,CAAJ,GAFY,CAGZ,yEAHY,CAKK,GALL,CAQhB,MAAMC,gBAAN,QAA8BN,OAAiCO,CAAAA,sCAA/D,CACIC,YAAY,EAAG,CACX,MAAON,QADI,CAGfO,YAAY,CAACC,OAAD,CAAUC,KAAV,CAAiB,CACzB,IAAMC,UAAYD,KAAA,CAPJE,CAOI,CAAqBC,CAAAA,WAArB,EACZC,UAAAA,CAASjB,WAAYO,CAAAA,kBAAZ,CAA+BO,SAA/B,CACf,IAAeI,IAAAA,EAAf,GAAID,SAAJ,CACI,MAAO,KAEPE,MAAAA,CAASN,KAAA,CAXCO,CAWD,CAEbD,MAAA,CAAgBH,CADPG,KACOH,EADG,EACHA,EAAAA,WAAP,EACT;IAAIK,SAAW,IACD,UAAd,EAAIF,KAAJ,CACIE,QADJ,CACe,MADf,CAGmB,UAHnB,EAGSF,KAHT,GAIIE,QAJJ,CAIe,MAJf,CAMMC,MAAAA,CAAOnB,OAAQoB,CAAAA,cAAR,CAAuBX,OAAQY,CAAAA,OAA/B,CAAwCP,SAAxC,CAAgDI,QAAhD,CACb,OAAOT,QACFa,CAAAA,uBADE,EAEFC,CAAAA,MAFE,CAEK,SAFL,CAEgBT,SAFhB,CAGFU,CAAAA,KAHE,CAGI,KAHJ,CAGWL,KAAKA,CAAAA,IAAL,EAHX,CAIFK,CAAAA,KAJE,CAII,OAJJ,CAIaL,KAAKM,CAAAA,KAAL,EAJb,CAI4B,CAJ5B,CAKFD,CAAAA,KALE,CAKI,MALJ,CAKYL,KAAKO,CAAAA,IAAL,EALZ,CAjBkB,CAJjC,CA6BAjC,OAAQkC,CAAAA,OAAR,CAAkBtB,eA5CkH;",
"sources":["node_modules/chrono-node/dist/locales/fr/parsers/FRWeekdayParser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$locales$fr$parsers$FRWeekdayParser\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst pattern_1 = require(\"../../../utils/pattern\");\nconst AbstractParserWithWordBoundary_1 = require(\"../../../common/parsers/AbstractParserWithWordBoundary\");\nconst weeks_1 = require(\"../../../calculation/weeks\");\nconst PATTERN = new RegExp(\"(?:(?:\\\\,|\\\\(|\\\\\uff08)\\\\s*)?\" +\n    \"(?:(?:ce)\\\\s*)?\" +\n    `(${pattern_1.matchAnyPattern(constants_1.WEEKDAY_DICTIONARY)})` +\n    \"(?:\\\\s*(?:\\\\,|\\\\)|\\\\\uff09))?\" +\n    \"(?:\\\\s*(dernier|prochain)\\\\s*)?\" +\n    \"(?=\\\\W|\\\\d|$)\", \"i\");\nconst WEEKDAY_GROUP = 1;\nconst POSTFIX_GROUP = 2;\nclass FRWeekdayParser extends AbstractParserWithWordBoundary_1.AbstractParserWithWordBoundaryChecking {\n    innerPattern() {\n        return PATTERN;\n    }\n    innerExtract(context, match) {\n        const dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        const offset = constants_1.WEEKDAY_DICTIONARY[dayOfWeek];\n        if (offset === undefined) {\n            return null;\n        }\n        let suffix = match[POSTFIX_GROUP];\n        suffix = suffix || \"\";\n        suffix = suffix.toLowerCase();\n        let modifier = null;\n        if (suffix == \"dernier\") {\n            modifier = \"last\";\n        }\n        else if (suffix == \"prochain\") {\n            modifier = \"next\";\n        }\n        const date = weeks_1.toDayJSWeekday(context.refDate, offset, modifier);\n        return context\n            .createParsingComponents()\n            .assign(\"weekday\", offset)\n            .imply(\"day\", date.date())\n            .imply(\"month\", date.month() + 1)\n            .imply(\"year\", date.year());\n    }\n}\nexports.default = FRWeekdayParser;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","constants_1","pattern_1","AbstractParserWithWordBoundary_1","weeks_1","PATTERN","RegExp","matchAnyPattern","WEEKDAY_DICTIONARY","FRWeekdayParser","AbstractParserWithWordBoundaryChecking","innerPattern","innerExtract","context","match","dayOfWeek","WEEKDAY_GROUP","toLowerCase","offset","undefined","suffix","POSTFIX_GROUP","modifier","date","toDayJSWeekday","refDate","createParsingComponents","assign","imply","month","year","default"]
}
