{
"version":3,
"file":"module$node_modules$chrono_node$dist$common$refiners$ExtractTimezoneAbbrRefiner.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/chrono-node/dist/common/refiners/ExtractTimezoneAbbrRefiner.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$common$refiners$ExtractTimezoneAbbrRefiner\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TIMEZONE_NAME_PATTERN = new RegExp(\"^\\\\s*\\\\(?([A-Z]{2,4})\\\\)?(?=\\\\W|$)\", \"i\");\nconst DEFAULT_TIMEZONE_ABBR_MAP = {\n    ACDT: 630,\n    ACST: 570,\n    ADT: -180,\n    AEDT: 660,\n    AEST: 600,\n    AFT: 270,\n    AKDT: -480,\n    AKST: -540,\n    ALMT: 360,\n    AMST: -180,\n    AMT: -240,\n    ANAST: 720,\n    ANAT: 720,\n    AQTT: 300,\n    ART: -180,\n    AST: -240,\n    AWDT: 540,\n    AWST: 480,\n    AZOST: 0,\n    AZOT: -60,\n    AZST: 300,\n    AZT: 240,\n    BNT: 480,\n    BOT: -240,\n    BRST: -120,\n    BRT: -180,\n    BST: 60,\n    BTT: 360,\n    CAST: 480,\n    CAT: 120,\n    CCT: 390,\n    CDT: -300,\n    CEST: 120,\n    CET: 60,\n    CHADT: 825,\n    CHAST: 765,\n    CKT: -600,\n    CLST: -180,\n    CLT: -240,\n    COT: -300,\n    CST: -360,\n    CVT: -60,\n    CXT: 420,\n    ChST: 600,\n    DAVT: 420,\n    EASST: -300,\n    EAST: -360,\n    EAT: 180,\n    ECT: -300,\n    EDT: -240,\n    EEST: 180,\n    EET: 120,\n    EGST: 0,\n    EGT: -60,\n    EST: -300,\n    ET: -300,\n    FJST: 780,\n    FJT: 720,\n    FKST: -180,\n    FKT: -240,\n    FNT: -120,\n    GALT: -360,\n    GAMT: -540,\n    GET: 240,\n    GFT: -180,\n    GILT: 720,\n    GMT: 0,\n    GST: 240,\n    GYT: -240,\n    HAA: -180,\n    HAC: -300,\n    HADT: -540,\n    HAE: -240,\n    HAP: -420,\n    HAR: -360,\n    HAST: -600,\n    HAT: -90,\n    HAY: -480,\n    HKT: 480,\n    HLV: -210,\n    HNA: -240,\n    HNC: -360,\n    HNE: -300,\n    HNP: -480,\n    HNR: -420,\n    HNT: -150,\n    HNY: -540,\n    HOVT: 420,\n    ICT: 420,\n    IDT: 180,\n    IOT: 360,\n    IRDT: 270,\n    IRKST: 540,\n    IRKT: 540,\n    IRST: 210,\n    IST: 330,\n    JST: 540,\n    KGT: 360,\n    KRAST: 480,\n    KRAT: 480,\n    KST: 540,\n    KUYT: 240,\n    LHDT: 660,\n    LHST: 630,\n    LINT: 840,\n    MAGST: 720,\n    MAGT: 720,\n    MART: -510,\n    MAWT: 300,\n    MDT: -360,\n    MESZ: 120,\n    MEZ: 60,\n    MHT: 720,\n    MMT: 390,\n    MSD: 240,\n    MSK: 240,\n    MST: -420,\n    MUT: 240,\n    MVT: 300,\n    MYT: 480,\n    NCT: 660,\n    NDT: -90,\n    NFT: 690,\n    NOVST: 420,\n    NOVT: 360,\n    NPT: 345,\n    NST: -150,\n    NUT: -660,\n    NZDT: 780,\n    NZST: 720,\n    OMSST: 420,\n    OMST: 420,\n    PDT: -420,\n    PET: -300,\n    PETST: 720,\n    PETT: 720,\n    PGT: 600,\n    PHOT: 780,\n    PHT: 480,\n    PKT: 300,\n    PMDT: -120,\n    PMST: -180,\n    PONT: 660,\n    PST: -480,\n    PT: -480,\n    PWT: 540,\n    PYST: -180,\n    PYT: -240,\n    RET: 240,\n    SAMT: 240,\n    SAST: 120,\n    SBT: 660,\n    SCT: 240,\n    SGT: 480,\n    SRT: -180,\n    SST: -660,\n    TAHT: -600,\n    TFT: 300,\n    TJT: 300,\n    TKT: 780,\n    TLT: 540,\n    TMT: 300,\n    TVT: 720,\n    ULAT: 480,\n    UTC: 0,\n    UYST: -120,\n    UYT: -180,\n    UZT: 300,\n    VET: -210,\n    VLAST: 660,\n    VLAT: 660,\n    VUT: 660,\n    WAST: 120,\n    WAT: 60,\n    WEST: 60,\n    WESZ: 60,\n    WET: 0,\n    WEZ: 0,\n    WFT: 720,\n    WGST: -120,\n    WGT: -180,\n    WIB: 420,\n    WIT: 540,\n    WITA: 480,\n    WST: 780,\n    WT: 0,\n    YAKST: 600,\n    YAKT: 600,\n    YAPT: 600,\n    YEKST: 360,\n    YEKT: 360,\n};\nclass ExtractTimezoneAbbrRefiner {\n    constructor(timezoneOverrides) {\n        this.timezone = Object.assign(Object.assign({}, DEFAULT_TIMEZONE_ABBR_MAP), timezoneOverrides);\n    }\n    refine(context, results) {\n        var _a;\n        const timezoneOverrides = (_a = context.option.timezones) !== null && _a !== void 0 ? _a : {};\n        results.forEach((result) => {\n            var _a, _b;\n            const suffix = context.text.substring(result.index + result.text.length);\n            const match = TIMEZONE_NAME_PATTERN.exec(suffix);\n            if (!match) {\n                return;\n            }\n            const timezoneAbbr = match[1].toUpperCase();\n            const extractedTimezoneOffset = (_b = (_a = timezoneOverrides[timezoneAbbr]) !== null && _a !== void 0 ? _a : this.timezone[timezoneAbbr]) !== null && _b !== void 0 ? _b : null;\n            if (extractedTimezoneOffset === null) {\n                return;\n            }\n            context.debug(() => {\n                console.log(`Extracting timezone: '${timezoneAbbr}' into : ${extractedTimezoneOffset}`);\n            });\n            const currentTimezoneOffset = result.start.get(\"timezoneOffset\");\n            if (currentTimezoneOffset !== null && extractedTimezoneOffset != currentTimezoneOffset) {\n                return;\n            }\n            result.text += match[0];\n            if (!result.start.isCertain(\"timezoneOffset\")) {\n                result.start.assign(\"timezoneOffset\", extractedTimezoneOffset);\n            }\n            if (result.end != null && !result.end.isCertain(\"timezoneOffset\")) {\n                result.end.assign(\"timezoneOffset\", extractedTimezoneOffset);\n            }\n        });\n        return results;\n    }\n}\nexports.default = ExtractTimezoneAbbrRefiner;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","TIMEZONE_NAME_PATTERN","RegExp","DEFAULT_TIMEZONE_ABBR_MAP","ACDT","ACST","ADT","AEDT","AEST","AFT","AKDT","AKST","ALMT","AMST","AMT","ANAST","ANAT","AQTT","ART","AST","AWDT","AWST","AZOST","AZOT","AZST","AZT","BNT","BOT","BRST","BRT","BST","BTT","CAST","CAT","CCT","CDT","CEST","CET","CHADT","CHAST","CKT","CLST","CLT","COT","CST","CVT","CXT","ChST","DAVT","EASST","EAST","EAT","ECT","EDT","EEST","EET","EGST","EGT","EST","ET","FJST","FJT","FKST","FKT","FNT","GALT","GAMT","GET","GFT","GILT","GMT","GST","GYT","HAA","HAC","HADT","HAE","HAP","HAR","HAST","HAT","HAY","HKT","HLV","HNA","HNC","HNE","HNP","HNR","HNT","HNY","HOVT","ICT","IDT","IOT","IRDT","IRKST","IRKT","IRST","IST","JST","KGT","KRAST","KRAT","KST","KUYT","LHDT","LHST","LINT","MAGST","MAGT","MART","MAWT","MDT","MESZ","MEZ","MHT","MMT","MSD","MSK","MST","MUT","MVT","MYT","NCT","NDT","NFT","NOVST","NOVT","NPT","NST","NUT","NZDT","NZST","OMSST","OMST","PDT","PET","PETST","PETT","PGT","PHOT","PHT","PKT","PMDT","PMST","PONT","PST","PT","PWT","PYST","PYT","RET","SAMT","SAST","SBT","SCT","SGT","SRT","SST","TAHT","TFT","TJT","TKT","TLT","TMT","TVT","ULAT","UTC","UYST","UYT","UZT","VET","VLAST","VLAT","VUT","WAST","WAT","WEST","WESZ","WET","WEZ","WFT","WGST","WGT","WIB","WIT","WITA","WST","WT","YAKST","YAKT","YAPT","YEKST","YEKT","ExtractTimezoneAbbrRefiner","constructor","timezoneOverrides","timezone","assign","refine","context","results","_a","option","timezones","forEach","result","_b","suffix","text","substring","index","length","match","exec","timezoneAbbr","toUpperCase","extractedTimezoneOffset","debug","console","log","currentTimezoneOffset","start","get","isCertain","end","default"]
}
