shadow$provide.module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeUnitAgoFormatParser=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});const constants_1=require("module$node_modules$chrono_node$dist$locales$en$constants"),results_1=require("module$node_modules$chrono_node$dist$results");global=require("module$node_modules$chrono_node$dist$common$parsers$AbstractParserWithWordBoundary");const timeunits_1=require("module$node_modules$chrono_node$dist$utils$timeunits"),
PATTERN=new RegExp("("+constants_1.TIME_UNITS_PATTERN+")(?:ago|before|earlier)(?\x3d(?:\\W|$))","i"),STRICT_PATTERN=new RegExp("("+constants_1.TIME_UNITS_PATTERN+")ago(?\x3d(?:\\W|$))","i");class ENTimeUnitAgoFormatParser extends global.AbstractParserWithWordBoundaryChecking{constructor(strictMode){super();this.strictMode=strictMode}innerPattern(){return this.strictMode?STRICT_PATTERN:PATTERN}innerExtract(context,match){match=constants_1.parseTimeUnits(match[1]);match=timeunits_1.reverseTimeUnits(match);
return results_1.ParsingComponents.createRelativeFromRefDate(context.refDate,match)}}exports.default=ENTimeUnitAgoFormatParser}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeUnitAgoFormatParser.js.map
