{
"version":3,
"file":"module$node_modules$codemirror$mode$slim$slim.js",
"lineCount":23,
"mappings":"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",
"sources":["node_modules/codemirror/mode/slim/slim.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$slim$slim\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = { html: htmlMode, ruby: rubyMode };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\", // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\", // no highlighting so far\n      creole: \"text/x-creole\", // no highlighting so far\n      wiki: \"text/x-wiki\", // no highlighting so far\n      mediawiki: \"text/x-mediawiki\", // no highlighting so far\n      rdoc: \"text/x-rdoc\", // no highlighting so far\n      builder: \"text/x-builder\", // no highlighting so far\n      nokogiri: \"text/x-nokogiri\", // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n    var embeddedRegexp = function(map){\n      var arr = [];\n      for(var key in map) arr.push(key);\n      return new RegExp(\"^(\"+arr.join('|')+\"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\"+nameStartChar+\"](?::[\"+nameChar+\"]|[\"+nameChar+\"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function(stream, state) {\n        state.tokenize = tokenize;\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n        return state.tokenize(stream, state);\n      };\n      return function(stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function commaContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n    function startRubySplat(tokenize) {\n      var rubyState;\n      var runSplat = function(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n          stream.next();\n        }\n        return ruby(stream, state);\n      };\n      return function(stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n      return html(stream, state);\n    }\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function(stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset, // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n      stream.next();\n      return null;\n    }\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n      return attributeWrapper(stream, state);\n    }\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n      var factory = CodeMirror.modes[query];\n      if (factory) {\n        return factory(config, {name: query});\n      }\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n\n      state.subMode = subMode;\n      state.subState = subState;\n\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n      return slimClass(stream, state);\n    }\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n      return slimClass(stream, state);\n    }\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n      return slimAttribute(stream, state);\n    }\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n      return slimContent(stream, state);\n    }\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      }\n      // should never happen, because of forward lookup\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^\\/$/)) { // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n      if (stream.match(/^:/)) { // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n\n      blankLine: function(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n\n      innerMode: function(state) {\n        if (state.subMode) return {state: state.subState, mode: state.subMode};\n        return {state: state, mode: mode};\n      }\n\n      //indent: function(state) {\n      //  return state.indented;\n      //}\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","config","backup","pos","tokenize","style","restore","stream","state","continueLine","column","stack","parent","indented","line","finishContinue","lineContinuable","match","eol","current","backUp","commaContinuable","rubyInQuote","endQuote","peek","ch","rubyState","length","next","ruby","startRubySplat","runSplat","context","prev","eatSpace","startState","rubyMode","token","html","htmlMode","htmlState","cur","idx","search","pat","offset","startHtmlLine","lastTokenize","startHtmlMode","comment","skipToEnd","attributeWrapper","eat","wrappedAttributeNameRegexp","attributeWrapperAssign","attributeWrapperValue","readQuoted","sub","subStream","StringStream","string","slice","tabSize","start","lastColumnPos","lastColumnValue","subMode","subState","firstSub","doctypeLine","_state","startLine","m","embeddedRegexp","mode","modes","hasOwnProperty","query","embedded","spec","mimeModes","getMode","factory","name","slimTag","slim","startOfLine","slimTagExtras","nameRegexp","slimClass","classIdRegexp","classNameRegexp","slimAttribute","closing","RegExp","$1","attributeNameRegexp","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","quote","embed","unescaped","nextTokenize","fresh","escaped","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","map","arr","key","push","join","styleMap","last","copyState","sol","indentation","blankLine","innerMode","defineMIME"]
}
