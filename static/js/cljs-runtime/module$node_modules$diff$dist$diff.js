shadow$provide.module$node_modules$diff$dist$diff=function(global$jscomp$0,require,module,exports$jscomp$0){(function(global,factory){"object"===typeof exports$jscomp$0&&"undefined"!==typeof module?factory(exports$jscomp$0):"function"===typeof define&&define.amd?define(["exports"],factory):(global=global||self,factory(global.Diff={}))})(this,function(exports){function Diff(){}function buildValues(diff,components,newString,oldString,useLongestToken){for(var componentPos=0,componentLen=components.length,
newPos=0,oldPos=0;componentPos<componentLen;componentPos++){var component=components[componentPos];if(component.removed)component.value=diff.join(oldString.slice(oldPos,oldPos+component.count)),oldPos+=component.count,componentPos&&components[componentPos-1].added&&(component=components[componentPos-1],components[componentPos-1]=components[componentPos],components[componentPos]=component);else{if(!component.added&&useLongestToken){var value$jscomp$0=newString.slice(newPos,newPos+component.count);
value$jscomp$0=value$jscomp$0.map(function(value,i){i=oldString[oldPos+i];return i.length>value.length?i:value});component.value=diff.join(value$jscomp$0)}else component.value=diff.join(newString.slice(newPos,newPos+component.count));newPos+=component.count;component.added||(oldPos+=component.count)}}newString=components[componentLen-1];1<componentLen&&"string"===typeof newString.value&&(newString.added||newString.removed)&&diff.equals("",newString.value)&&(components[componentLen-2].value+=newString.value,
components.pop());return components}function generateOptions(options,defaults){if("function"===typeof options)defaults.callback=options;else if(options)for(var name in options)options.hasOwnProperty(name)&&(defaults[name]=options[name]);return defaults}function diffLines(oldStr,newStr,callback){return lineDiff.diff(oldStr,newStr,callback)}function _typeof(obj$jscomp$0){"@babel/helpers - typeof";_typeof="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(obj){return typeof obj}:
function(obj){return obj&&"function"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj};return _typeof(obj$jscomp$0)}function _toConsumableArray(arr){var JSCompiler_inline_result=Array.isArray(arr)?_arrayLikeToArray(arr):void 0;JSCompiler_inline_result||(JSCompiler_inline_result="undefined"!==typeof Symbol&&Symbol.iterator in Object(arr)?Array.from(arr):void 0);if(!JSCompiler_inline_result)a:{if(arr){if("string"===typeof arr){JSCompiler_inline_result=_arrayLikeToArray(arr,
void 0);break a}JSCompiler_inline_result=Object.prototype.toString.call(arr).slice(8,-1);"Object"===JSCompiler_inline_result&&arr.constructor&&(JSCompiler_inline_result=arr.constructor.name);if("Map"===JSCompiler_inline_result||"Set"===JSCompiler_inline_result){JSCompiler_inline_result=Array.from(arr);break a}if("Arguments"===JSCompiler_inline_result||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(JSCompiler_inline_result)){JSCompiler_inline_result=_arrayLikeToArray(arr,void 0);break a}}JSCompiler_inline_result=
void 0}if(!(arr=JSCompiler_inline_result))throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");return arr}function _arrayLikeToArray(arr,len){if(null==len||len>arr.length)len=arr.length;for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function canonicalize(obj,stack,replacementStack,replacer,key){stack=stack||[];replacementStack=replacementStack||[];replacer&&(obj=replacer(key,obj));
var i;for(i=0;i<stack.length;i+=1)if(stack[i]===obj)return replacementStack[i];if("[object Array]"===objectPrototypeToString.call(obj)){stack.push(obj);var canonicalizedObj=Array(obj.length);replacementStack.push(canonicalizedObj);for(i=0;i<obj.length;i+=1)canonicalizedObj[i]=canonicalize(obj[i],stack,replacementStack,replacer,key);stack.pop();replacementStack.pop();return canonicalizedObj}obj&&obj.toJSON&&(obj=obj.toJSON());if("object"===_typeof(obj)&&null!==obj){stack.push(obj);canonicalizedObj=
{};replacementStack.push(canonicalizedObj);key=[];for(var _key in obj)obj.hasOwnProperty(_key)&&key.push(_key);key.sort();for(i=0;i<key.length;i+=1)_key=key[i],canonicalizedObj[_key]=canonicalize(obj[_key],stack,replacementStack,replacer,_key);stack.pop();replacementStack.pop()}else canonicalizedObj=obj;return canonicalizedObj}function parsePatch(uniDiff){function parseIndex(){var index={};for(list.push(index);i<diffstr.length;){var line=diffstr[i];if(/^(\-\-\-|\+\+\+|@@)\s/.test(line))break;if(line=
/^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(line))index.index=line[1];i++}parseFileHeader(index);parseFileHeader(index);for(index.hunks=[];i<diffstr.length&&(line=diffstr[i],!/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(line));)if(/^@@/.test(line)){line=index.hunks;var JSCompiler_temp_const=line.push,chunkHeaderIndex=i,chunkHeader=diffstr[i++].split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/);chunkHeader={oldStart:+chunkHeader[1],oldLines:"undefined"===typeof chunkHeader[2]?1:+chunkHeader[2],newStart:+chunkHeader[3],
newLines:"undefined"===typeof chunkHeader[4]?1:+chunkHeader[4],lines:[],linedelimiters:[]};0===chunkHeader.oldLines&&(chunkHeader.oldStart+=1);0===chunkHeader.newLines&&(chunkHeader.newStart+=1);for(var addCount=0,removeCount=0;i<diffstr.length&&!(0===diffstr[i].indexOf("--- ")&&i+2<diffstr.length&&0===diffstr[i+1].indexOf("+++ ")&&0===diffstr[i+2].indexOf("@@"));i++){var operation=0==diffstr[i].length&&i!=diffstr.length-1?" ":diffstr[i][0];if("+"===operation||"-"===operation||" "===operation||"\\"===
operation)chunkHeader.lines.push(diffstr[i]),chunkHeader.linedelimiters.push(delimiters[i]||"\n"),"+"===operation?addCount++:"-"===operation?removeCount++:" "===operation&&(addCount++,removeCount++);else break}addCount||1!==chunkHeader.newLines||(chunkHeader.newLines=0);removeCount||1!==chunkHeader.oldLines||(chunkHeader.oldLines=0);if(options.strict){if(addCount!==chunkHeader.newLines)throw Error("Added line count did not match for hunk at line "+(chunkHeaderIndex+1));if(removeCount!==chunkHeader.oldLines)throw Error("Removed line count did not match for hunk at line "+
(chunkHeaderIndex+1));}JSCompiler_temp_const.call(line,chunkHeader)}else{if(line&&options.strict)throw Error("Unknown line "+(i+1)+" "+JSON.stringify(line));i++}}function parseFileHeader(index){var fileHeader=/^(---|\+\+\+)\s+(.*)$/.exec(diffstr[i]);if(fileHeader){var keyPrefix="---"===fileHeader[1]?"old":"new";fileHeader=fileHeader[2].split("\t",2);var fileName=fileHeader[0].replace(/\\\\/g,"\\");/^".*"$/.test(fileName)&&(fileName=fileName.substr(1,fileName.length-2));index[keyPrefix+"FileName"]=
fileName;index[keyPrefix+"Header"]=(fileHeader[1]||"").trim();i++}}for(var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},diffstr=uniDiff.split(/\r\n|[\n\v\f\r\x85]/),delimiters=uniDiff.match(/\r\n|[\n\v\f\r\x85]/g)||[],list=[],i=0;i<diffstr.length;)parseIndex();return list}function distanceIterator(start,minLine,maxLine){var wantForward=!0,backwardExhausted=!1,forwardExhausted=!1,localOffset=1;return function iterator(){if(wantForward&&!forwardExhausted){backwardExhausted?localOffset++:
wantForward=!1;if(start+localOffset<=maxLine)return localOffset;forwardExhausted=!0}if(!backwardExhausted){forwardExhausted||(wantForward=!0);if(minLine<=start-localOffset)return-localOffset++;backwardExhausted=!0;return iterator()}}}function applyPatch(source,uniDiff){function hunkFits(hunk,toPos){for(var j=0;j<hunk.lines.length;j++){var line=hunk.lines[j],operation=0<line.length?line[0]:" ";line=0<line.length?line.substr(1):line;if(" "===operation||"-"===operation){if(!compareLine(toPos+1,lines[toPos],
operation,line)&&(errorCount++,errorCount>fuzzFactor))return!1;toPos++}}return!0}var options=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};"string"===typeof uniDiff&&(uniDiff=parsePatch(uniDiff));if(Array.isArray(uniDiff)){if(1<uniDiff.length)throw Error("applyPatch only works with a single input.");uniDiff=uniDiff[0]}var lines=source.split(/\r\n|[\n\v\f\r\x85]/),delimiters=source.match(/\r\n|[\n\v\f\r\x85]/g)||[],hunks=uniDiff.hunks,compareLine=options.compareLine||function(lineNumber,
line,operation,patchContent){return line===patchContent},errorCount=0,fuzzFactor=options.fuzzFactor||0,minLine=0;options=0;for(var removeEOFNL,addEOFNL,i=0;i<hunks.length;i++){var hunk$jscomp$0=hunks[i],localOffset=0,toPos=options+hunk$jscomp$0.oldStart-1;for(minLine=distanceIterator(toPos,minLine,lines.length-hunk$jscomp$0.oldLines);void 0!==localOffset;localOffset=minLine())if(hunkFits(hunk$jscomp$0,toPos+localOffset)){hunk$jscomp$0.offset=options+=localOffset;break}if(void 0===localOffset)return!1;
minLine=hunk$jscomp$0.offset+hunk$jscomp$0.oldStart+hunk$jscomp$0.oldLines}for(i=options=0;i<hunks.length;i++)for(hunk$jscomp$0=hunks[i],localOffset=hunk$jscomp$0.oldStart+hunk$jscomp$0.offset+options-1,options+=hunk$jscomp$0.newLines-hunk$jscomp$0.oldLines,toPos=0;toPos<hunk$jscomp$0.lines.length;toPos++){var line$jscomp$0=hunk$jscomp$0.lines[toPos];minLine=0<line$jscomp$0.length?line$jscomp$0[0]:" ";line$jscomp$0=0<line$jscomp$0.length?line$jscomp$0.substr(1):line$jscomp$0;var delimiter=hunk$jscomp$0.linedelimiters[toPos];
" "===minLine?localOffset++:"-"===minLine?(lines.splice(localOffset,1),delimiters.splice(localOffset,1)):"+"===minLine?(lines.splice(localOffset,0,line$jscomp$0),delimiters.splice(localOffset,0,delimiter),localOffset++):"\\"===minLine&&(minLine=hunk$jscomp$0.lines[toPos-1]?hunk$jscomp$0.lines[toPos-1][0]:null,"+"===minLine?removeEOFNL=!0:"-"===minLine&&(addEOFNL=!0))}if(removeEOFNL)for(;!lines[lines.length-1];)lines.pop(),delimiters.pop();else addEOFNL&&(lines.push(""),delimiters.push("\n"));for(hunks=
0;hunks<lines.length-1;hunks++)lines[hunks]+=delimiters[hunks];return lines.join("")}function structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){function contextLines(lines){return lines.map(function(entry){return" "+entry})}options||={};"undefined"===typeof options.context&&(options.context=4);var diff=diffLines(oldStr,newStr,options);diff.push({value:"",lines:[]});for(var hunks=[],oldRangeStart=0,newRangeStart=0,curRange=[],oldLine=1,newLine=1,_loop=function(i){var current=
diff[i],lines=current.lines||current.value.replace(/\n$/,"").split("\n");current.lines=lines;if(current.added||current.removed){var _curRange;oldRangeStart||(i=diff[i-1],oldRangeStart=oldLine,newRangeStart=newLine,i&&(curRange=0<options.context?contextLines(i.lines.slice(-options.context)):[],oldRangeStart-=curRange.length,newRangeStart-=curRange.length));(_curRange=curRange).push.apply(_curRange,_toConsumableArray(lines.map(function(entry){return(current.added?"+":"-")+entry})));current.added?newLine+=
lines.length:oldLine+=lines.length}else{if(oldRangeStart)if(lines.length<=2*options.context&&i<diff.length-2){var _curRange2;(_curRange2=curRange).push.apply(_curRange2,_toConsumableArray(contextLines(lines)))}else{var _curRange3;_curRange=Math.min(lines.length,options.context);(_curRange3=curRange).push.apply(_curRange3,_toConsumableArray(contextLines(lines.slice(0,_curRange))));_curRange={oldStart:oldRangeStart,oldLines:oldLine-oldRangeStart+_curRange,newStart:newRangeStart,newLines:newLine-newRangeStart+
_curRange,lines:curRange};i>=diff.length-2&&lines.length<=options.context&&(i=/\n$/.test(oldStr),_curRange3=/\n$/.test(newStr),_curRange2=0==lines.length&&curRange.length>_curRange.oldLines,!i&&_curRange2&&0<oldStr.length&&curRange.splice(_curRange.oldLines,0,"\\ No newline at end of file"),(i||_curRange2)&&_curRange3||curRange.push("\\ No newline at end of file"));hunks.push(_curRange);newRangeStart=oldRangeStart=0;curRange=[]}oldLine+=lines.length;newLine+=lines.length}},i$jscomp$0=0;i$jscomp$0<
diff.length;i$jscomp$0++)_loop(i$jscomp$0);return{oldFileName,newFileName,oldHeader,newHeader,hunks}}function createTwoFilesPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){oldFileName=structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options);newFileName=[];oldFileName.oldFileName==oldFileName.newFileName&&newFileName.push("Index: "+oldFileName.oldFileName);newFileName.push("\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d");
newFileName.push("--- "+oldFileName.oldFileName+("undefined"===typeof oldFileName.oldHeader?"":"\t"+oldFileName.oldHeader));newFileName.push("+++ "+oldFileName.newFileName+("undefined"===typeof oldFileName.newHeader?"":"\t"+oldFileName.newHeader));for(oldStr=0;oldStr<oldFileName.hunks.length;oldStr++)newStr=oldFileName.hunks[oldStr],0===newStr.oldLines&&--newStr.oldStart,0===newStr.newLines&&--newStr.newStart,newFileName.push("@@ -"+newStr.oldStart+","+newStr.oldLines+" +"+newStr.newStart+","+newStr.newLines+
" @@"),newFileName.push.apply(newFileName,newStr.lines);return newFileName.join("\n")+"\n"}function arrayStartsWith(array,start){if(start.length>array.length)return!1;for(var i=0;i<start.length;i++)if(start[i]!==array[i])return!1;return!0}function loadPatch(param,base){if("string"===typeof param){if(/^@@/m.test(param)||/^Index:/m.test(param))return parsePatch(param)[0];if(!base)throw Error("Must provide a base reference or pass in a patch");return structuredPatch(void 0,void 0,base,param)}return param}
function selectField(index,mine,theirs){if(mine===theirs)return mine;index.conflict=!0;return{mine,theirs}}function cloneHunk(hunk,offset){return{oldStart:hunk.oldStart,oldLines:hunk.oldLines,newStart:hunk.newStart+offset,newLines:hunk.newLines,lines:hunk.lines}}function removal(hunk,mine,their,swap){mine=collectChange(mine);for(var changes=[],merged=[],matchIndex=0,contextChanges=!1,conflicted=!1;matchIndex<mine.length&&their.index<their.lines.length;){var change=their.lines[their.index],match=mine[matchIndex];
if("+"===match[0])break;contextChanges=contextChanges||" "!==change[0];merged.push(match);matchIndex++;if("+"===change[0])for(conflicted=!0;"+"===change[0];)changes.push(change),change=their.lines[++their.index];match.substr(1)===change.substr(1)?(changes.push(change),their.index++):conflicted=!0}"+"===(mine[matchIndex]||"")[0]&&contextChanges&&(conflicted=!0);if(conflicted)their=changes;else{for(;matchIndex<mine.length;)merged.push(mine[matchIndex++]);their={merged,changes}}if(their.merged){var _hunk$lines6;
(_hunk$lines6=hunk.lines).push.apply(_hunk$lines6,_toConsumableArray(their.merged))}else conflict(hunk,swap?their:mine,swap?mine:their)}function conflict(hunk,mine,their){hunk.conflict=!0;hunk.lines.push({conflict:!0,mine,theirs:their})}function insertLeading(hunk,insert,their){for(;insert.offset<their.offset&&insert.index<insert.lines.length;){var line=insert.lines[insert.index++];hunk.lines.push(line);insert.offset++}}function insertTrailing(hunk,insert){for(;insert.index<insert.lines.length;){var line=
insert.lines[insert.index++];hunk.lines.push(line)}}function collectChange(state){for(var ret=[],operation=state.lines[state.index][0];state.index<state.lines.length;){var line=state.lines[state.index];"-"===operation&&"+"===line[0]&&(operation="+");if(operation===line[0])ret.push(line),state.index++;else break}return ret}function allRemoves(changes){return changes.reduce(function(prev,change){return prev&&"-"===change[0]},!0)}function skipRemoveSuperset(state,removeChanges,delta){for(var i=0;i<delta;i++){var changeContent=
removeChanges[removeChanges.length-delta+i].substr(1);if(state.lines[state.index+i]!==" "+changeContent)return!1}state.index+=delta;return!0}function calcOldNewLineCount(lines){var oldLines=0,newLines=0;lines.forEach(function(line){if("string"!==typeof line){var myCount=calcOldNewLineCount(line.mine);line=calcOldNewLineCount(line.theirs);void 0!==oldLines&&(oldLines=myCount.oldLines===line.oldLines?oldLines+myCount.oldLines:void 0);void 0!==newLines&&(newLines=myCount.newLines===line.newLines?newLines+
myCount.newLines:void 0)}else void 0===newLines||"+"!==line[0]&&" "!==line[0]||newLines++,void 0===oldLines||"-"!==line[0]&&" "!==line[0]||oldLines++});return{oldLines,newLines}}Diff.prototype={diff:function(oldString,newString){function done(value){return callback?(setTimeout(function(){callback(void 0,value)},0),!0):value}function execEditLength(){for(var diagonalPath=-1*editLength;diagonalPath<=editLength;diagonalPath+=2){var basePath=bestPath[diagonalPath-1];var removePath=bestPath[diagonalPath+
1],_oldPos=(removePath?removePath.newPos:0)-diagonalPath;basePath&&(bestPath[diagonalPath-1]=void 0);var canAdd=basePath&&basePath.newPos+1<newLen;_oldPos=removePath&&0<=_oldPos&&_oldPos<oldLen;if(canAdd||_oldPos){!canAdd||_oldPos&&basePath.newPos<removePath.newPos?(basePath={newPos:removePath.newPos,components:removePath.components.slice(0)},self.pushComponent(basePath.components,void 0,!0)):(basePath.newPos++,self.pushComponent(basePath.components,!0,void 0));_oldPos=self.extractCommon(basePath,
newString,oldString,diagonalPath);if(basePath.newPos+1>=newLen&&_oldPos+1>=oldLen)return done(buildValues(self,basePath.components,newString,oldString,self.useLongestToken));bestPath[diagonalPath]=basePath}else bestPath[diagonalPath]=void 0}editLength++}var options=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},callback=options.callback;"function"===typeof options&&(callback=options,options={});this.options=options;var self=this;oldString=this.castInput(oldString);newString=this.castInput(newString);
oldString=this.removeEmpty(this.tokenize(oldString));newString=this.removeEmpty(this.tokenize(newString));var newLen=newString.length,oldLen=oldString.length,editLength=1,maxEditLength=newLen+oldLen,bestPath=[{newPos:-1,components:[]}];options=this.extractCommon(bestPath[0],newString,oldString,0);if(bestPath[0].newPos+1>=newLen&&options+1>=oldLen)return done([{value:this.join(newString),count:newString.length}]);if(callback)(function exec(){setTimeout(function(){if(editLength>maxEditLength)return callback();
execEditLength()||exec()},0)})();else for(;editLength<=maxEditLength;)if(options=execEditLength())return options},pushComponent:function(components,added,removed){var last=components[components.length-1];last&&last.added===added&&last.removed===removed?components[components.length-1]={count:last.count+1,added,removed}:components.push({count:1,added,removed})},extractCommon:function(basePath,newString,oldString,diagonalPath){var newLen=newString.length,oldLen=oldString.length,newPos=basePath.newPos;
diagonalPath=newPos-diagonalPath;for(var commonCount=0;newPos+1<newLen&&diagonalPath+1<oldLen&&this.equals(newString[newPos+1],oldString[diagonalPath+1]);)newPos++,diagonalPath++,commonCount++;commonCount&&basePath.components.push({count:commonCount});basePath.newPos=newPos;return diagonalPath},equals:function(left,right){return this.options.comparator?this.options.comparator(left,right):left===right||this.options.ignoreCase&&left.toLowerCase()===right.toLowerCase()},removeEmpty:function(array){for(var ret=
[],i=0;i<array.length;i++)array[i]&&ret.push(array[i]);return ret},castInput:function(value){return value},tokenize:function(value){return value.split("")},join:function(chars){return chars.join("")}};var characterDiff=new Diff,extendedWordChars=/^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/,reWhitespace=/\S/,wordDiff=new Diff;wordDiff.equals=function(left,right){this.options.ignoreCase&&(left=left.toLowerCase(),right=right.toLowerCase());return left===right||this.options.ignoreWhitespace&&
!reWhitespace.test(left)&&!reWhitespace.test(right)};wordDiff.tokenize=function(value){value=value.split(/([^\S\r\n]+|[()[\]{}'"\r\n]|\b)/);for(var i=0;i<value.length-1;i++)!value[i+1]&&value[i+2]&&extendedWordChars.test(value[i])&&extendedWordChars.test(value[i+2])&&(value[i]+=value[i+2],value.splice(i+1,2),i--);return value};var lineDiff=new Diff;lineDiff.tokenize=function(value){var retLines=[];value=value.split(/(\n|\r\n)/);value[value.length-1]||value.pop();for(var i=0;i<value.length;i++){var line=
value[i];i%2&&!this.options.newlineIsToken?retLines[retLines.length-1]+=line:(this.options.ignoreWhitespace&&(line=line.trim()),retLines.push(line))}return retLines};var sentenceDiff=new Diff;sentenceDiff.tokenize=function(value){return value.split(/(\S.+?[.!?])(?=\s+|$)/)};var cssDiff=new Diff;cssDiff.tokenize=function(value){return value.split(/([{}:;,]|\s+)/)};var objectPrototypeToString=Object.prototype.toString,jsonDiff=new Diff;jsonDiff.useLongestToken=!0;jsonDiff.tokenize=lineDiff.tokenize;
jsonDiff.castInput=function(value){var _this$options=this.options,undefinedReplacement=_this$options.undefinedReplacement;_this$options=_this$options.stringifyReplacer;_this$options=void 0===_this$options?function(k,v){return"undefined"===typeof v?undefinedReplacement:v}:_this$options;return"string"===typeof value?value:JSON.stringify(canonicalize(value,null,null,_this$options),_this$options,"  ")};jsonDiff.equals=function(left,right){return Diff.prototype.equals.call(jsonDiff,left.replace(/,([\r\n])/g,
"$1"),right.replace(/,([\r\n])/g,"$1"))};var arrayDiff=new Diff;arrayDiff.tokenize=function(value){return value.slice()};arrayDiff.join=arrayDiff.removeEmpty=function(value){return value};exports.Diff=Diff;exports.applyPatch=applyPatch;exports.applyPatches=function(uniDiff,options){function processIndex(){var index=uniDiff[currentIndex++];if(!index)return options.complete();options.loadFile(index,function(err$jscomp$0,data){if(err$jscomp$0)return options.complete(err$jscomp$0);err$jscomp$0=applyPatch(data,
index,options);options.patched(index,err$jscomp$0,function(err){if(err)return options.complete(err);processIndex()})})}"string"===typeof uniDiff&&(uniDiff=parsePatch(uniDiff));var currentIndex=0;processIndex()};exports.canonicalize=canonicalize;exports.convertChangesToDMP=function(changes){for(var ret=[],change,operation,i=0;i<changes.length;i++)change=changes[i],operation=change.added?1:change.removed?-1:0,ret.push([operation,change.value]);return ret};exports.convertChangesToXML=function(changes){for(var ret=
[],i=0;i<changes.length;i++){var change=changes[i];change.added?ret.push("\x3cins\x3e"):change.removed&&ret.push("\x3cdel\x3e");var JSCompiler_temp_const=ret,JSCompiler_temp_const$jscomp$0=JSCompiler_temp_const.push;var n=change.value.replace(/&/g,"\x26amp;");n=n.replace(/</g,"\x26lt;");n=n.replace(/>/g,"\x26gt;");n=n.replace(/"/g,"\x26quot;");JSCompiler_temp_const$jscomp$0.call(JSCompiler_temp_const,n);change.added?ret.push("\x3c/ins\x3e"):change.removed&&ret.push("\x3c/del\x3e")}return ret.join("")};
exports.createPatch=function(fileName,oldStr,newStr,oldHeader,newHeader,options){return createTwoFilesPatch(fileName,fileName,oldStr,newStr,oldHeader,newHeader,options)};exports.createTwoFilesPatch=createTwoFilesPatch;exports.diffArrays=function(oldArr,newArr,callback){return arrayDiff.diff(oldArr,newArr,callback)};exports.diffChars=function(oldStr,newStr,options){return characterDiff.diff(oldStr,newStr,options)};exports.diffCss=function(oldStr,newStr,callback){return cssDiff.diff(oldStr,newStr,callback)};
exports.diffJson=function(oldObj,newObj,options){return jsonDiff.diff(oldObj,newObj,options)};exports.diffLines=diffLines;exports.diffSentences=function(oldStr,newStr,callback){return sentenceDiff.diff(oldStr,newStr,callback)};exports.diffTrimmedLines=function(oldStr,newStr,callback){callback=generateOptions(callback,{ignoreWhitespace:!0});return lineDiff.diff(oldStr,newStr,callback)};exports.diffWords=function(oldStr,newStr,options){options=generateOptions(options,{ignoreWhitespace:!0});return wordDiff.diff(oldStr,
newStr,options)};exports.diffWordsWithSpace=function(oldStr,newStr,options){return wordDiff.diff(oldStr,newStr,options)};exports.merge=function(mine,theirs,base){mine=loadPatch(mine,base);theirs=loadPatch(theirs,base);base={};if(mine.index||theirs.index)base.index=mine.index||theirs.index;if(mine.newFileName||theirs.newFileName)mine.newFileName&&mine.newFileName!==mine.oldFileName?theirs.newFileName&&theirs.newFileName!==theirs.oldFileName?(base.oldFileName=selectField(base,mine.oldFileName,theirs.oldFileName),
base.newFileName=selectField(base,mine.newFileName,theirs.newFileName),base.oldHeader=selectField(base,mine.oldHeader,theirs.oldHeader),base.newHeader=selectField(base,mine.newHeader,theirs.newHeader)):(base.oldFileName=mine.oldFileName,base.newFileName=mine.newFileName,base.oldHeader=mine.oldHeader,base.newHeader=mine.newHeader):(base.oldFileName=theirs.oldFileName||mine.oldFileName,base.newFileName=theirs.newFileName||mine.newFileName,base.oldHeader=theirs.oldHeader||mine.oldHeader,base.newHeader=
theirs.newHeader||mine.newHeader);base.hunks=[];for(var mineIndex=0,theirsIndex=0,mineOffset=0,theirsOffset=0;mineIndex<mine.hunks.length||theirsIndex<theirs.hunks.length;){var mineCurrent=mine.hunks[mineIndex]||{oldStart:Infinity},theirsCurrent=theirs.hunks[theirsIndex]||{oldStart:Infinity};if(mineCurrent.oldStart<theirsCurrent.oldStart&&mineCurrent.oldStart+mineCurrent.oldLines<theirsCurrent.oldStart)base.hunks.push(cloneHunk(mineCurrent,mineOffset)),mineIndex++,theirsOffset+=mineCurrent.newLines-
mineCurrent.oldLines;else if(theirsCurrent.oldStart<mineCurrent.oldStart&&theirsCurrent.oldStart+theirsCurrent.oldLines<mineCurrent.oldStart)base.hunks.push(cloneHunk(theirsCurrent,theirsOffset)),theirsIndex++,mineOffset+=theirsCurrent.newLines-theirsCurrent.oldLines;else{var mergedHunk={oldStart:Math.min(mineCurrent.oldStart,theirsCurrent.oldStart),oldLines:0,newStart:Math.min(mineCurrent.newStart+mineOffset,theirsCurrent.oldStart+theirsOffset),newLines:0,lines:[]},hunk=mergedHunk;mineCurrent={offset:mineCurrent.oldStart,
lines:mineCurrent.lines,index:0};theirsCurrent={offset:theirsCurrent.oldStart,lines:theirsCurrent.lines,index:0};insertLeading(hunk,mineCurrent,theirsCurrent);for(insertLeading(hunk,theirsCurrent,mineCurrent);mineCurrent.index<mineCurrent.lines.length&&theirsCurrent.index<theirsCurrent.lines.length;){var mineCurrent$jscomp$0=mineCurrent.lines[mineCurrent.index],theirCurrent=theirsCurrent.lines[theirsCurrent.index];if("-"!==mineCurrent$jscomp$0[0]&&"+"!==mineCurrent$jscomp$0[0]||"-"!==theirCurrent[0]&&
"+"!==theirCurrent[0])if("+"===mineCurrent$jscomp$0[0]&&" "===theirCurrent[0]){var _hunk$lines;(_hunk$lines=hunk.lines).push.apply(_hunk$lines,_toConsumableArray(collectChange(mineCurrent)))}else if("+"===theirCurrent[0]&&" "===mineCurrent$jscomp$0[0]){var _hunk$lines2;(_hunk$lines2=hunk.lines).push.apply(_hunk$lines2,_toConsumableArray(collectChange(theirsCurrent)))}else"-"===mineCurrent$jscomp$0[0]&&" "===theirCurrent[0]?removal(hunk,mineCurrent,theirsCurrent):"-"===theirCurrent[0]&&" "===mineCurrent$jscomp$0[0]?
removal(hunk,theirsCurrent,mineCurrent,!0):mineCurrent$jscomp$0===theirCurrent?(hunk.lines.push(mineCurrent$jscomp$0),mineCurrent.index++,theirsCurrent.index++):conflict(hunk,collectChange(mineCurrent),collectChange(theirsCurrent));else a:{mineCurrent$jscomp$0=void 0;var JSCompiler_inline_result,_hunk$lines3=JSCompiler_inline_result=void 0;theirCurrent=hunk;var mine$jscomp$0=mineCurrent,their=theirsCurrent,myChanges=collectChange(mine$jscomp$0),theirChanges=collectChange(their);if(allRemoves(myChanges)&&
allRemoves(theirChanges)){if(arrayStartsWith(myChanges,theirChanges)&&skipRemoveSuperset(their,myChanges,myChanges.length-theirChanges.length)){(_hunk$lines3=theirCurrent.lines).push.apply(_hunk$lines3,_toConsumableArray(myChanges));break a}if(arrayStartsWith(theirChanges,myChanges)&&skipRemoveSuperset(mine$jscomp$0,theirChanges,theirChanges.length-myChanges.length)){(JSCompiler_inline_result=theirCurrent.lines).push.apply(JSCompiler_inline_result,_toConsumableArray(theirChanges));break a}}else if(JSCompiler_inline_result=
myChanges.length!==theirChanges.length?!1:arrayStartsWith(myChanges,theirChanges),JSCompiler_inline_result){(mineCurrent$jscomp$0=theirCurrent.lines).push.apply(mineCurrent$jscomp$0,_toConsumableArray(myChanges));break a}conflict(theirCurrent,myChanges,theirChanges)}}insertTrailing(hunk,mineCurrent);insertTrailing(hunk,theirsCurrent);theirsCurrent=calcOldNewLineCount(hunk.lines);mineCurrent=theirsCurrent.oldLines;theirsCurrent=theirsCurrent.newLines;void 0!==mineCurrent?hunk.oldLines=mineCurrent:
delete hunk.oldLines;void 0!==theirsCurrent?hunk.newLines=theirsCurrent:delete hunk.newLines;theirsIndex++;mineIndex++;base.hunks.push(mergedHunk)}}return base};exports.parsePatch=parsePatch;exports.structuredPatch=structuredPatch;Object.defineProperty(exports,"__esModule",{value:!0})})}
//# sourceMappingURL=module$node_modules$diff$dist$diff.js.map
