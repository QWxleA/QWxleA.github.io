shadow$provide.module$node_modules$$capacitor$haptics$dist$plugin_cjs=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});global=require("module$node_modules$$capacitor$core$dist$index_cjs");exports.ImpactStyle=void 0;(function(ImpactStyle){ImpactStyle.Heavy="HEAVY";ImpactStyle.Medium="MEDIUM";ImpactStyle.Light="LIGHT"})(exports.ImpactStyle||(exports.ImpactStyle={}));exports.NotificationType=void 0;(function(NotificationType){NotificationType.Success="SUCCESS";
NotificationType.Warning="WARNING";NotificationType.Error="ERROR"})(exports.NotificationType||(exports.NotificationType={}));require=exports.NotificationType;module=exports.ImpactStyle;const Haptics=global.registerPlugin("Haptics",{web:()=>Promise.resolve().then(function(){return web}).then(m=>new m.HapticsWeb)});class HapticsWeb extends global.WebPlugin{constructor(){super(...arguments);this.selectionStarted=!1}async impact(options){options=this.patternForImpact(null===options||void 0===options?
void 0:options.style);this.vibrateWithPattern(options)}async notification(options){options=this.patternForNotification(null===options||void 0===options?void 0:options.type);this.vibrateWithPattern(options)}async vibrate(options){this.vibrateWithPattern([(null===options||void 0===options?void 0:options.duration)||300])}async selectionStart(){this.selectionStarted=!0}async selectionChanged(){this.selectionStarted&&this.vibrateWithPattern([70])}async selectionEnd(){this.selectionStarted=!1}patternForImpact(style=
exports.ImpactStyle.Heavy){return style===exports.ImpactStyle.Medium?[43]:style===exports.ImpactStyle.Light?[20]:[61]}patternForNotification(type=exports.NotificationType.Success){return type===exports.NotificationType.Warning?[30,40,30,50,60]:type===exports.NotificationType.Error?[27,45,50]:[35,65,21]}vibrateWithPattern(pattern){if(navigator.vibrate)navigator.vibrate(pattern);else throw this.unavailable("Browser does not support the vibrate API");}}var web=Object.freeze({__proto__:null,HapticsWeb});
exports.Haptics=Haptics;exports.HapticsImpactStyle=module;exports.HapticsNotificationType=require}
//# sourceMappingURL=module$node_modules$$capacitor$haptics$dist$plugin_cjs.js.map
