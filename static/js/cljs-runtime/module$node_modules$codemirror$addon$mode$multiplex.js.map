{
"version":3,
"file":"module$node_modules$codemirror$addon$mode$multiplex.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/codemirror/addon/mode/multiplex.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$addon$mode$multiplex\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.multiplexingMode = function(outer /*, others */) {\n  // Others should be {open, close, mode [, delimStyle] [, innerStyle]} objects\n  var others = Array.prototype.slice.call(arguments, 1);\n\n  function indexOf(string, pattern, from, returnEnd) {\n    if (typeof pattern == \"string\") {\n      var found = string.indexOf(pattern, from);\n      return returnEnd && found > -1 ? found + pattern.length : found;\n    }\n    var m = pattern.exec(from ? string.slice(from) : string);\n    return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n  }\n\n  return {\n    startState: function() {\n      return {\n        outer: CodeMirror.startState(outer),\n        innerActive: null,\n        inner: null\n      };\n    },\n\n    copyState: function(state) {\n      return {\n        outer: CodeMirror.copyState(outer, state.outer),\n        innerActive: state.innerActive,\n        inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner)\n      };\n    },\n\n    token: function(stream, state) {\n      if (!state.innerActive) {\n        var cutOff = Infinity, oldContent = stream.string;\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          var found = indexOf(oldContent, other.open, stream.pos);\n          if (found == stream.pos) {\n            if (!other.parseDelimiters) stream.match(other.open);\n            state.innerActive = other;\n\n            // Get the outer indent, making sure to handle CodeMirror.Pass\n            var outerIndent = 0;\n            if (outer.indent) {\n              var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n              if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n            }\n\n            state.inner = CodeMirror.startState(other.mode, outerIndent);\n            return other.delimStyle && (other.delimStyle + \" \" + other.delimStyle + \"-open\");\n          } else if (found != -1 && found < cutOff) {\n            cutOff = found;\n          }\n        }\n        if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n        var outerToken = outer.token(stream, state.outer);\n        if (cutOff != Infinity) stream.string = oldContent;\n        return outerToken;\n      } else {\n        var curInner = state.innerActive, oldContent = stream.string;\n        if (!curInner.close && stream.sol()) {\n          state.innerActive = state.inner = null;\n          return this.token(stream, state);\n        }\n        var found = curInner.close ? indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n        if (found == stream.pos && !curInner.parseDelimiters) {\n          stream.match(curInner.close);\n          state.innerActive = state.inner = null;\n          return curInner.delimStyle && (curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\");\n        }\n        if (found > -1) stream.string = oldContent.slice(0, found);\n        var innerToken = curInner.mode.token(stream, state.inner);\n        if (found > -1) stream.string = oldContent;\n\n        if (found == stream.pos && curInner.parseDelimiters)\n          state.innerActive = state.inner = null;\n\n        if (curInner.innerStyle) {\n          if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;\n          else innerToken = curInner.innerStyle;\n        }\n\n        return innerToken;\n      }\n    },\n\n    indent: function(state, textAfter, line) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (!mode.indent) return CodeMirror.Pass;\n      return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n    },\n\n    blankLine: function(state) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (mode.blankLine) {\n        mode.blankLine(state.innerActive ? state.inner : state.outer);\n      }\n      if (!state.innerActive) {\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          if (other.open === \"\\n\") {\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n          }\n        }\n      } else if (state.innerActive.close === \"\\n\") {\n        state.innerActive = state.inner = null;\n      }\n    },\n\n    electricChars: outer.electricChars,\n\n    innerMode: function(state) {\n      return state.inner ? {state: state.inner, mode: state.innerActive.mode} : {state: state.outer, mode: outer};\n    }\n  };\n};\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","multiplexingMode","CodeMirror.multiplexingMode","outer","indexOf","string","pattern","from","returnEnd","found","length","m","exec","slice","index","others","Array","prototype","call","arguments","startState","innerActive","inner","copyState","state","mode","token","stream","curInner","oldContent","close","sol","pos","parseDelimiters","match","delimStyle","innerToken","innerStyle","cutOff","Infinity","i","other","open","outerIndent","indent","possibleOuterIndent","Pass","outerToken","textAfter","line","blankLine","electricChars","innerMode"]
}
