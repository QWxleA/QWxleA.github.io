{
"version":3,
"file":"module$node_modules$codemirror$mode$erlang$erlang.js",
"lineCount":20,
"mappings":"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",
"sources":["node_modules/codemirror/mode/erlang/erlang.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$erlang$erlang\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*jshint unused:true, eqnull:true, curly:true, bitwise:true */\n/*jshint undef:true, latedef:true, trailing:true */\n/*global CodeMirror:true */\n\n// erlang mode.\n// tokenizer -> token types -> CodeMirror styles\n// tokenizer maintains a parse stack\n// indenter uses the parse stack\n\n// TODO indenter:\n//   bit syntax\n//   old guard/bif/conversion clashes (e.g. \"float/1\")\n//   type/spec/opaque\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMIME(\"text/x-erlang\", \"erlang\");\n\nCodeMirror.defineMode(\"erlang\", function(cmCfg) {\n  \"use strict\";\n\n/////////////////////////////////////////////////////////////////////////////\n// constants\n\n  var typeWords = [\n    \"-type\", \"-spec\", \"-export_type\", \"-opaque\"];\n\n  var keywordWords = [\n    \"after\",\"begin\",\"catch\",\"case\",\"cond\",\"end\",\"fun\",\"if\",\n    \"let\",\"of\",\"query\",\"receive\",\"try\",\"when\"];\n\n  var separatorRE    = /[\\->,;]/;\n  var separatorWords = [\n    \"->\",\";\",\",\"];\n\n  var operatorAtomWords = [\n    \"and\",\"andalso\",\"band\",\"bnot\",\"bor\",\"bsl\",\"bsr\",\"bxor\",\n    \"div\",\"not\",\"or\",\"orelse\",\"rem\",\"xor\"];\n\n  var operatorSymbolRE    = /[\\+\\-\\*\\/<>=\\|:!]/;\n  var operatorSymbolWords = [\n    \"=\",\"+\",\"-\",\"*\",\"/\",\">\",\">=\",\"<\",\"=<\",\"=:=\",\"==\",\"=/=\",\"/=\",\"||\",\"<-\",\"!\"];\n\n  var openParenRE    = /[<\\(\\[\\{]/;\n  var openParenWords = [\n    \"<<\",\"(\",\"[\",\"{\"];\n\n  var closeParenRE    = /[>\\)\\]\\}]/;\n  var closeParenWords = [\n    \"}\",\"]\",\")\",\">>\"];\n\n  var guardWords = [\n    \"is_atom\",\"is_binary\",\"is_bitstring\",\"is_boolean\",\"is_float\",\n    \"is_function\",\"is_integer\",\"is_list\",\"is_number\",\"is_pid\",\n    \"is_port\",\"is_record\",\"is_reference\",\"is_tuple\",\n    \"atom\",\"binary\",\"bitstring\",\"boolean\",\"function\",\"integer\",\"list\",\n    \"number\",\"pid\",\"port\",\"record\",\"reference\",\"tuple\"];\n\n  var bifWords = [\n    \"abs\",\"adler32\",\"adler32_combine\",\"alive\",\"apply\",\"atom_to_binary\",\n    \"atom_to_list\",\"binary_to_atom\",\"binary_to_existing_atom\",\n    \"binary_to_list\",\"binary_to_term\",\"bit_size\",\"bitstring_to_list\",\n    \"byte_size\",\"check_process_code\",\"contact_binary\",\"crc32\",\n    \"crc32_combine\",\"date\",\"decode_packet\",\"delete_module\",\n    \"disconnect_node\",\"element\",\"erase\",\"exit\",\"float\",\"float_to_list\",\n    \"garbage_collect\",\"get\",\"get_keys\",\"group_leader\",\"halt\",\"hd\",\n    \"integer_to_list\",\"internal_bif\",\"iolist_size\",\"iolist_to_binary\",\n    \"is_alive\",\"is_atom\",\"is_binary\",\"is_bitstring\",\"is_boolean\",\n    \"is_float\",\"is_function\",\"is_integer\",\"is_list\",\"is_number\",\"is_pid\",\n    \"is_port\",\"is_process_alive\",\"is_record\",\"is_reference\",\"is_tuple\",\n    \"length\",\"link\",\"list_to_atom\",\"list_to_binary\",\"list_to_bitstring\",\n    \"list_to_existing_atom\",\"list_to_float\",\"list_to_integer\",\n    \"list_to_pid\",\"list_to_tuple\",\"load_module\",\"make_ref\",\"module_loaded\",\n    \"monitor_node\",\"node\",\"node_link\",\"node_unlink\",\"nodes\",\"notalive\",\n    \"now\",\"open_port\",\"pid_to_list\",\"port_close\",\"port_command\",\n    \"port_connect\",\"port_control\",\"pre_loaded\",\"process_flag\",\n    \"process_info\",\"processes\",\"purge_module\",\"put\",\"register\",\n    \"registered\",\"round\",\"self\",\"setelement\",\"size\",\"spawn\",\"spawn_link\",\n    \"spawn_monitor\",\"spawn_opt\",\"split_binary\",\"statistics\",\n    \"term_to_binary\",\"time\",\"throw\",\"tl\",\"trunc\",\"tuple_size\",\n    \"tuple_to_list\",\"unlink\",\"unregister\",\"whereis\"];\n\n// upper case: [A-Z] [\u00d8-\u00de] [\u00c0-\u00d6]\n// lower case: [a-z] [\u00df-\u00f6] [\u00f8-\u00ff]\n  var anumRE       = /[\\w@\u00d8-\u00de\u00c0-\u00d6\u00df-\u00f6\u00f8-\u00ff]/;\n  var escapesRE    =\n    /[0-7]{1,3}|[bdefnrstv\\\\\"']|\\^[a-zA-Z]|x[0-9a-zA-Z]{2}|x{[0-9a-zA-Z]+}/;\n\n/////////////////////////////////////////////////////////////////////////////\n// tokenizer\n\n  function tokenizer(stream,state) {\n    // in multi-line string\n    if (state.in_string) {\n      state.in_string = (!doubleQuote(stream));\n      return rval(state,stream,\"string\");\n    }\n\n    // in multi-line atom\n    if (state.in_atom) {\n      state.in_atom = (!singleQuote(stream));\n      return rval(state,stream,\"atom\");\n    }\n\n    // whitespace\n    if (stream.eatSpace()) {\n      return rval(state,stream,\"whitespace\");\n    }\n\n    // attributes and type specs\n    if (!peekToken(state) &&\n        stream.match(/-\\s*[a-z\u00df-\u00f6\u00f8-\u00ff][\\w\u00d8-\u00de\u00c0-\u00d6\u00df-\u00f6\u00f8-\u00ff]*/)) {\n      if (is_member(stream.current(),typeWords)) {\n        return rval(state,stream,\"type\");\n      }else{\n        return rval(state,stream,\"attribute\");\n      }\n    }\n\n    var ch = stream.next();\n\n    // comment\n    if (ch == '%') {\n      stream.skipToEnd();\n      return rval(state,stream,\"comment\");\n    }\n\n    // colon\n    if (ch == \":\") {\n      return rval(state,stream,\"colon\");\n    }\n\n    // macro\n    if (ch == '?') {\n      stream.eatSpace();\n      stream.eatWhile(anumRE);\n      return rval(state,stream,\"macro\");\n    }\n\n    // record\n    if (ch == \"#\") {\n      stream.eatSpace();\n      stream.eatWhile(anumRE);\n      return rval(state,stream,\"record\");\n    }\n\n    // dollar escape\n    if (ch == \"$\") {\n      if (stream.next() == \"\\\\\" && !stream.match(escapesRE)) {\n        return rval(state,stream,\"error\");\n      }\n      return rval(state,stream,\"number\");\n    }\n\n    // dot\n    if (ch == \".\") {\n      return rval(state,stream,\"dot\");\n    }\n\n    // quoted atom\n    if (ch == '\\'') {\n      if (!(state.in_atom = (!singleQuote(stream)))) {\n        if (stream.match(/\\s*\\/\\s*[0-9]/,false)) {\n          stream.match(/\\s*\\/\\s*[0-9]/,true);\n          return rval(state,stream,\"fun\");      // 'f'/0 style fun\n        }\n        if (stream.match(/\\s*\\(/,false) || stream.match(/\\s*:/,false)) {\n          return rval(state,stream,\"function\");\n        }\n      }\n      return rval(state,stream,\"atom\");\n    }\n\n    // string\n    if (ch == '\"') {\n      state.in_string = (!doubleQuote(stream));\n      return rval(state,stream,\"string\");\n    }\n\n    // variable\n    if (/[A-Z_\u00d8-\u00de\u00c0-\u00d6]/.test(ch)) {\n      stream.eatWhile(anumRE);\n      return rval(state,stream,\"variable\");\n    }\n\n    // atom/keyword/BIF/function\n    if (/[a-z_\u00df-\u00f6\u00f8-\u00ff]/.test(ch)) {\n      stream.eatWhile(anumRE);\n\n      if (stream.match(/\\s*\\/\\s*[0-9]/,false)) {\n        stream.match(/\\s*\\/\\s*[0-9]/,true);\n        return rval(state,stream,\"fun\");      // f/0 style fun\n      }\n\n      var w = stream.current();\n\n      if (is_member(w,keywordWords)) {\n        return rval(state,stream,\"keyword\");\n      }else if (is_member(w,operatorAtomWords)) {\n        return rval(state,stream,\"operator\");\n      }else if (stream.match(/\\s*\\(/,false)) {\n        // 'put' and 'erlang:put' are bifs, 'foo:put' is not\n        if (is_member(w,bifWords) &&\n            ((peekToken(state).token != \":\") ||\n             (peekToken(state,2).token == \"erlang\"))) {\n          return rval(state,stream,\"builtin\");\n        }else if (is_member(w,guardWords)) {\n          return rval(state,stream,\"guard\");\n        }else{\n          return rval(state,stream,\"function\");\n        }\n      }else if (lookahead(stream) == \":\") {\n        if (w == \"erlang\") {\n          return rval(state,stream,\"builtin\");\n        } else {\n          return rval(state,stream,\"function\");\n        }\n      }else if (is_member(w,[\"true\",\"false\"])) {\n        return rval(state,stream,\"boolean\");\n      }else{\n        return rval(state,stream,\"atom\");\n      }\n    }\n\n    // number\n    var digitRE      = /[0-9]/;\n    var radixRE      = /[0-9a-zA-Z]/;         // 36#zZ style int\n    if (digitRE.test(ch)) {\n      stream.eatWhile(digitRE);\n      if (stream.eat('#')) {                // 36#aZ  style integer\n        if (!stream.eatWhile(radixRE)) {\n          stream.backUp(1);                 //\"36#\" - syntax error\n        }\n      } else if (stream.eat('.')) {       // float\n        if (!stream.eatWhile(digitRE)) {\n          stream.backUp(1);        // \"3.\" - probably end of function\n        } else {\n          if (stream.eat(/[eE]/)) {        // float with exponent\n            if (stream.eat(/[-+]/)) {\n              if (!stream.eatWhile(digitRE)) {\n                stream.backUp(2);            // \"2e-\" - syntax error\n              }\n            } else {\n              if (!stream.eatWhile(digitRE)) {\n                stream.backUp(1);            // \"2e\" - syntax error\n              }\n            }\n          }\n        }\n      }\n      return rval(state,stream,\"number\");   // normal integer\n    }\n\n    // open parens\n    if (nongreedy(stream,openParenRE,openParenWords)) {\n      return rval(state,stream,\"open_paren\");\n    }\n\n    // close parens\n    if (nongreedy(stream,closeParenRE,closeParenWords)) {\n      return rval(state,stream,\"close_paren\");\n    }\n\n    // separators\n    if (greedy(stream,separatorRE,separatorWords)) {\n      return rval(state,stream,\"separator\");\n    }\n\n    // operators\n    if (greedy(stream,operatorSymbolRE,operatorSymbolWords)) {\n      return rval(state,stream,\"operator\");\n    }\n\n    return rval(state,stream,null);\n  }\n\n/////////////////////////////////////////////////////////////////////////////\n// utilities\n  function nongreedy(stream,re,words) {\n    if (stream.current().length == 1 && re.test(stream.current())) {\n      stream.backUp(1);\n      while (re.test(stream.peek())) {\n        stream.next();\n        if (is_member(stream.current(),words)) {\n          return true;\n        }\n      }\n      stream.backUp(stream.current().length-1);\n    }\n    return false;\n  }\n\n  function greedy(stream,re,words) {\n    if (stream.current().length == 1 && re.test(stream.current())) {\n      while (re.test(stream.peek())) {\n        stream.next();\n      }\n      while (0 < stream.current().length) {\n        if (is_member(stream.current(),words)) {\n          return true;\n        }else{\n          stream.backUp(1);\n        }\n      }\n      stream.next();\n    }\n    return false;\n  }\n\n  function doubleQuote(stream) {\n    return quote(stream, '\"', '\\\\');\n  }\n\n  function singleQuote(stream) {\n    return quote(stream,'\\'','\\\\');\n  }\n\n  function quote(stream,quoteChar,escapeChar) {\n    while (!stream.eol()) {\n      var ch = stream.next();\n      if (ch == quoteChar) {\n        return true;\n      }else if (ch == escapeChar) {\n        stream.next();\n      }\n    }\n    return false;\n  }\n\n  function lookahead(stream) {\n    var m = stream.match(/([\\n\\s]+|%[^\\n]*\\n)*(.)/,false);\n    return m ? m.pop() : \"\";\n  }\n\n  function is_member(element,list) {\n    return (-1 < list.indexOf(element));\n  }\n\n  function rval(state,stream,type) {\n\n    // parse stack\n    pushToken(state,realToken(type,stream));\n\n    // map erlang token type to CodeMirror style class\n    //     erlang             -> CodeMirror tag\n    switch (type) {\n      case \"atom\":        return \"atom\";\n      case \"attribute\":   return \"attribute\";\n      case \"boolean\":     return \"atom\";\n      case \"builtin\":     return \"builtin\";\n      case \"close_paren\": return null;\n      case \"colon\":       return null;\n      case \"comment\":     return \"comment\";\n      case \"dot\":         return null;\n      case \"error\":       return \"error\";\n      case \"fun\":         return \"meta\";\n      case \"function\":    return \"tag\";\n      case \"guard\":       return \"property\";\n      case \"keyword\":     return \"keyword\";\n      case \"macro\":       return \"variable-2\";\n      case \"number\":      return \"number\";\n      case \"open_paren\":  return null;\n      case \"operator\":    return \"operator\";\n      case \"record\":      return \"bracket\";\n      case \"separator\":   return null;\n      case \"string\":      return \"string\";\n      case \"type\":        return \"def\";\n      case \"variable\":    return \"variable\";\n      default:            return null;\n    }\n  }\n\n  function aToken(tok,col,ind,typ) {\n    return {token:  tok,\n            column: col,\n            indent: ind,\n            type:   typ};\n  }\n\n  function realToken(type,stream) {\n    return aToken(stream.current(),\n                 stream.column(),\n                 stream.indentation(),\n                 type);\n  }\n\n  function fakeToken(type) {\n    return aToken(type,0,0,type);\n  }\n\n  function peekToken(state,depth) {\n    var len = state.tokenStack.length;\n    var dep = (depth ? depth : 1);\n\n    if (len < dep) {\n      return false;\n    }else{\n      return state.tokenStack[len-dep];\n    }\n  }\n\n  function pushToken(state,token) {\n\n    if (!(token.type == \"comment\" || token.type == \"whitespace\")) {\n      state.tokenStack = maybe_drop_pre(state.tokenStack,token);\n      state.tokenStack = maybe_drop_post(state.tokenStack);\n    }\n  }\n\n  function maybe_drop_pre(s,token) {\n    var last = s.length-1;\n\n    if (0 < last && s[last].type === \"record\" && token.type === \"dot\") {\n      s.pop();\n    }else if (0 < last && s[last].type === \"group\") {\n      s.pop();\n      s.push(token);\n    }else{\n      s.push(token);\n    }\n    return s;\n  }\n\n  function maybe_drop_post(s) {\n    if (!s.length) return s\n    var last = s.length-1;\n\n    if (s[last].type === \"dot\") {\n      return [];\n    }\n    if (last > 1 && s[last].type === \"fun\" && s[last-1].token === \"fun\") {\n      return s.slice(0,last-1);\n    }\n    switch (s[last].token) {\n      case \"}\":    return d(s,{g:[\"{\"]});\n      case \"]\":    return d(s,{i:[\"[\"]});\n      case \")\":    return d(s,{i:[\"(\"]});\n      case \">>\":   return d(s,{i:[\"<<\"]});\n      case \"end\":  return d(s,{i:[\"begin\",\"case\",\"fun\",\"if\",\"receive\",\"try\"]});\n      case \",\":    return d(s,{e:[\"begin\",\"try\",\"when\",\"->\",\n                                  \",\",\"(\",\"[\",\"{\",\"<<\"]});\n      case \"->\":   return d(s,{r:[\"when\"],\n                               m:[\"try\",\"if\",\"case\",\"receive\"]});\n      case \";\":    return d(s,{E:[\"case\",\"fun\",\"if\",\"receive\",\"try\",\"when\"]});\n      case \"catch\":return d(s,{e:[\"try\"]});\n      case \"of\":   return d(s,{e:[\"case\"]});\n      case \"after\":return d(s,{e:[\"receive\",\"try\"]});\n      default:     return s;\n    }\n  }\n\n  function d(stack,tt) {\n    // stack is a stack of Token objects.\n    // tt is an object; {type:tokens}\n    // type is a char, tokens is a list of token strings.\n    // The function returns (possibly truncated) stack.\n    // It will descend the stack, looking for a Token such that Token.token\n    //  is a member of tokens. If it does not find that, it will normally (but\n    //  see \"E\" below) return stack. If it does find a match, it will remove\n    //  all the Tokens between the top and the matched Token.\n    // If type is \"m\", that is all it does.\n    // If type is \"i\", it will also remove the matched Token and the top Token.\n    // If type is \"g\", like \"i\", but add a fake \"group\" token at the top.\n    // If type is \"r\", it will remove the matched Token, but not the top Token.\n    // If type is \"e\", it will keep the matched Token but not the top Token.\n    // If type is \"E\", it behaves as for type \"e\", except if there is no match,\n    //  in which case it will return an empty stack.\n\n    for (var type in tt) {\n      var len = stack.length-1;\n      var tokens = tt[type];\n      for (var i = len-1; -1 < i ; i--) {\n        if (is_member(stack[i].token,tokens)) {\n          var ss = stack.slice(0,i);\n          switch (type) {\n              case \"m\": return ss.concat(stack[i]).concat(stack[len]);\n              case \"r\": return ss.concat(stack[len]);\n              case \"i\": return ss;\n              case \"g\": return ss.concat(fakeToken(\"group\"));\n              case \"E\": return ss.concat(stack[i]);\n              case \"e\": return ss.concat(stack[i]);\n          }\n        }\n      }\n    }\n    return (type == \"E\" ? [] : stack);\n  }\n\n/////////////////////////////////////////////////////////////////////////////\n// indenter\n\n  function indenter(state,textAfter) {\n    var t;\n    var unit = cmCfg.indentUnit;\n    var wordAfter = wordafter(textAfter);\n    var currT = peekToken(state,1);\n    var prevT = peekToken(state,2);\n\n    if (state.in_string || state.in_atom) {\n      return CodeMirror.Pass;\n    }else if (!prevT) {\n      return 0;\n    }else if (currT.token == \"when\") {\n      return currT.column+unit;\n    }else if (wordAfter === \"when\" && prevT.type === \"function\") {\n      return prevT.indent+unit;\n    }else if (wordAfter === \"(\" && currT.token === \"fun\") {\n      return  currT.column+3;\n    }else if (wordAfter === \"catch\" && (t = getToken(state,[\"try\"]))) {\n      return t.column;\n    }else if (is_member(wordAfter,[\"end\",\"after\",\"of\"])) {\n      t = getToken(state,[\"begin\",\"case\",\"fun\",\"if\",\"receive\",\"try\"]);\n      return t ? t.column : CodeMirror.Pass;\n    }else if (is_member(wordAfter,closeParenWords)) {\n      t = getToken(state,openParenWords);\n      return t ? t.column : CodeMirror.Pass;\n    }else if (is_member(currT.token,[\",\",\"|\",\"||\"]) ||\n              is_member(wordAfter,[\",\",\"|\",\"||\"])) {\n      t = postcommaToken(state);\n      return t ? t.column+t.token.length : unit;\n    }else if (currT.token == \"->\") {\n      if (is_member(prevT.token, [\"receive\",\"case\",\"if\",\"try\"])) {\n        return prevT.column+unit+unit;\n      }else{\n        return prevT.column+unit;\n      }\n    }else if (is_member(currT.token,openParenWords)) {\n      return currT.column+currT.token.length;\n    }else{\n      t = defaultToken(state);\n      return truthy(t) ? t.column+unit : 0;\n    }\n  }\n\n  function wordafter(str) {\n    var m = str.match(/,|[a-z]+|\\}|\\]|\\)|>>|\\|+|\\(/);\n\n    return truthy(m) && (m.index === 0) ? m[0] : \"\";\n  }\n\n  function postcommaToken(state) {\n    var objs = state.tokenStack.slice(0,-1);\n    var i = getTokenIndex(objs,\"type\",[\"open_paren\"]);\n\n    return truthy(objs[i]) ? objs[i] : false;\n  }\n\n  function defaultToken(state) {\n    var objs = state.tokenStack;\n    var stop = getTokenIndex(objs,\"type\",[\"open_paren\",\"separator\",\"keyword\"]);\n    var oper = getTokenIndex(objs,\"type\",[\"operator\"]);\n\n    if (truthy(stop) && truthy(oper) && stop < oper) {\n      return objs[stop+1];\n    } else if (truthy(stop)) {\n      return objs[stop];\n    } else {\n      return false;\n    }\n  }\n\n  function getToken(state,tokens) {\n    var objs = state.tokenStack;\n    var i = getTokenIndex(objs,\"token\",tokens);\n\n    return truthy(objs[i]) ? objs[i] : false;\n  }\n\n  function getTokenIndex(objs,propname,propvals) {\n\n    for (var i = objs.length-1; -1 < i ; i--) {\n      if (is_member(objs[i][propname],propvals)) {\n        return i;\n      }\n    }\n    return false;\n  }\n\n  function truthy(x) {\n    return (x !== false) && (x != null);\n  }\n\n/////////////////////////////////////////////////////////////////////////////\n// this object defines the mode\n\n  return {\n    startState:\n      function() {\n        return {tokenStack: [],\n                in_string:  false,\n                in_atom:    false};\n      },\n\n    token:\n      function(stream, state) {\n        return tokenizer(stream, state);\n      },\n\n    indent:\n      function(state, textAfter) {\n        return indenter(state,textAfter);\n      },\n\n    lineComment: \"%\"\n  };\n});\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMIME","defineMode","cmCfg","tokenizer","stream","state","in_string","quote","rval","in_atom","eatSpace","peekToken","match","is_member","current","typeWords","ch","next","skipToEnd","eatWhile","anumRE","escapesRE","test","w","keywordWords","operatorAtomWords","bifWords","token","guardWords","m","pop","digitRE","radixRE","eat","backUp","nongreedy","openParenRE","openParenWords","closeParenRE","closeParenWords","greedy","separatorRE","separatorWords","operatorSymbolRE","operatorSymbolWords","re","words","length","peek","quoteChar","escapeChar","eol","element","list","indexOf","type","column","indentation","tok","col","indent","ind","tokenStack","last","s","push","maybe_drop_post","depth","len","dep","slice","d","g","i","e","r","E","stack","tt","tokens","ss","concat","indenter","textAfter","t","unit","indentUnit","truthy","index","currT","prevT","Pass","wordAfter","getToken","objs","getTokenIndex","stop","oper","propname","propvals","x","startState","lineComment"]
}
