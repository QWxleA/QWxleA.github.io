{
"version":3,
"file":"module$node_modules$jszip$lib$reader$readerFor.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3G,IAAIC,MAAQH,OAAA,CAAQ,qCAAR,CAAZ,CACII,QAAUJ,OAAA,CAAQ,uCAAR,CADd,CAEIK,YAAcL,OAAA,CAAQ,kDAAR,CAFlB,CAGIM,aAAeN,OAAA,CAAQ,mDAAR,CAHnB,CAIIO,iBAAmBP,OAAA,CAAQ,uDAAR,CAJvB,CAKIQ,iBAAmBR,OAAA,CAAQ,uDAAR,CAOvBC;MAAOC,CAAAA,OAAP,CAAiBO,QAAS,CAACC,IAAD,CAAO,CAC7B,IAAIC,KAAOR,KAAMS,CAAAA,SAAN,CAAgBF,IAAhB,CACXP,MAAMU,CAAAA,YAAN,CAAmBF,IAAnB,CACA,OAAa,QAAb,GAAIA,IAAJ,EAA0BP,OAAQU,CAAAA,UAAlC,CAGa,YAAb,GAAIH,IAAJ,CACW,IAAIJ,gBAAJ,CAAqBG,IAArB,CADX,CAGIN,OAAQU,CAAAA,UAAZ,CACW,IAAIN,gBAAJ,CAAqBL,KAAMY,CAAAA,WAAN,CAAkB,YAAlB,CAAgCL,IAAhC,CAArB,CADX,CAGO,IAAIL,WAAJ,CAAgBF,KAAMY,CAAAA,WAAN,CAAkB,OAAlB,CAA2BL,IAA3B,CAAhB,CATP,CACW,IAAIJ,YAAJ,CAAiBI,IAAjB,CAJkB,CAf0E;",
"sources":["node_modules/jszip/lib/reader/readerFor.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jszip$lib$reader$readerFor\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('../utils');\nvar support = require('../support');\nvar ArrayReader = require('./ArrayReader');\nvar StringReader = require('./StringReader');\nvar NodeBufferReader = require('./NodeBufferReader');\nvar Uint8ArrayReader = require('./Uint8ArrayReader');\n\n/**\n * Create a reader adapted to the data.\n * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data to read.\n * @return {DataReader} the data reader.\n */\nmodule.exports = function (data) {\n    var type = utils.getTypeOf(data);\n    utils.checkSupport(type);\n    if (type === \"string\" && !support.uint8array) {\n        return new StringReader(data);\n    }\n    if (type === \"nodebuffer\") {\n        return new NodeBufferReader(data);\n    }\n    if (support.uint8array) {\n        return new Uint8ArrayReader(utils.transformTo(\"uint8array\", data));\n    }\n    return new ArrayReader(utils.transformTo(\"array\", data));\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","utils","support","ArrayReader","StringReader","NodeBufferReader","Uint8ArrayReader","module.exports","data","type","getTypeOf","checkSupport","uint8array","transformTo"]
}
