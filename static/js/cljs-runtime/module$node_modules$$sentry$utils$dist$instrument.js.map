{
"version":3,
"file":"module$node_modules$$sentry$utils$dist$instrument.js",
"lineCount":18,
"mappings":"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",
"sources":["node_modules/@sentry/utils/dist/instrument.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$utils$dist$instrument\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar env_1 = require(\"./env\");\nvar global_1 = require(\"./global\");\nvar is_1 = require(\"./is\");\nvar logger_1 = require(\"./logger\");\nvar object_1 = require(\"./object\");\nvar stacktrace_1 = require(\"./stacktrace\");\nvar supports_1 = require(\"./supports\");\nvar global = global_1.getGlobalObject();\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\nvar handlers = {};\nvar instrumented = {};\n/** Instruments given API */\nfunction instrument(type) {\n    if (instrumented[type]) {\n        return;\n    }\n    instrumented[type] = true;\n    switch (type) {\n        case 'console':\n            instrumentConsole();\n            break;\n        case 'dom':\n            instrumentDOM();\n            break;\n        case 'xhr':\n            instrumentXHR();\n            break;\n        case 'fetch':\n            instrumentFetch();\n            break;\n        case 'history':\n            instrumentHistory();\n            break;\n        case 'error':\n            instrumentError();\n            break;\n        case 'unhandledrejection':\n            instrumentUnhandledRejection();\n            break;\n        default:\n            logger_1.logger.warn('unknown instrumentation type:', type);\n    }\n}\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n    handlers[type] = handlers[type] || [];\n    handlers[type].push(callback);\n    instrument(type);\n}\nexports.addInstrumentationHandler = addInstrumentationHandler;\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n    var e_1, _a;\n    if (!type || !handlers[type]) {\n        return;\n    }\n    try {\n        for (var _b = tslib_1.__values(handlers[type] || []), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var handler = _c.value;\n            try {\n                handler(data);\n            }\n            catch (e) {\n                if (env_1.isDebugBuild()) {\n                    logger_1.logger.error(\"Error while triggering instrumentation handler.\\nType: \" + type + \"\\nName: \" + stacktrace_1.getFunctionName(handler) + \"\\nError:\", e);\n                }\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n/** JSDoc */\nfunction instrumentConsole() {\n    if (!('console' in global)) {\n        return;\n    }\n    ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n        if (!(level in global.console)) {\n            return;\n        }\n        object_1.fill(global.console, level, function (originalConsoleMethod) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                triggerHandlers('console', { args: args, level: level });\n                // this fails for some browsers. :(\n                if (originalConsoleMethod) {\n                    originalConsoleMethod.apply(global.console, args);\n                }\n            };\n        });\n    });\n}\n/** JSDoc */\nfunction instrumentFetch() {\n    if (!supports_1.supportsNativeFetch()) {\n        return;\n    }\n    object_1.fill(global, 'fetch', function (originalFetch) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var handlerData = {\n                args: args,\n                fetchData: {\n                    method: getFetchMethod(args),\n                    url: getFetchUrl(args),\n                },\n                startTimestamp: Date.now(),\n            };\n            triggerHandlers('fetch', tslib_1.__assign({}, handlerData));\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            return originalFetch.apply(global, args).then(function (response) {\n                triggerHandlers('fetch', tslib_1.__assign(tslib_1.__assign({}, handlerData), { endTimestamp: Date.now(), response: response }));\n                return response;\n            }, function (error) {\n                triggerHandlers('fetch', tslib_1.__assign(tslib_1.__assign({}, handlerData), { endTimestamp: Date.now(), error: error }));\n                // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n                //       it means the sentry.javascript SDK caught an error invoking your application code.\n                //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n                throw error;\n            });\n        };\n    });\n}\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs) {\n    if (fetchArgs === void 0) { fetchArgs = []; }\n    if ('Request' in global && is_1.isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n        return String(fetchArgs[0].method).toUpperCase();\n    }\n    if (fetchArgs[1] && fetchArgs[1].method) {\n        return String(fetchArgs[1].method).toUpperCase();\n    }\n    return 'GET';\n}\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs) {\n    if (fetchArgs === void 0) { fetchArgs = []; }\n    if (typeof fetchArgs[0] === 'string') {\n        return fetchArgs[0];\n    }\n    if ('Request' in global && is_1.isInstanceOf(fetchArgs[0], Request)) {\n        return fetchArgs[0].url;\n    }\n    return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n/** JSDoc */\nfunction instrumentXHR() {\n    if (!('XMLHttpRequest' in global)) {\n        return;\n    }\n    var xhrproto = XMLHttpRequest.prototype;\n    object_1.fill(xhrproto, 'open', function (originalOpen) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var xhr = this;\n            var url = args[1];\n            var xhrInfo = (xhr.__sentry_xhr__ = {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                method: is_1.isString(args[0]) ? args[0].toUpperCase() : args[0],\n                url: args[1],\n            });\n            // if Sentry key appears in URL, don't capture it as a request\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (is_1.isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n                xhr.__sentry_own_request__ = true;\n            }\n            var onreadystatechangeHandler = function () {\n                if (xhr.readyState === 4) {\n                    try {\n                        // touching statusCode in some platforms throws\n                        // an exception\n                        xhrInfo.status_code = xhr.status;\n                    }\n                    catch (e) {\n                        /* do nothing */\n                    }\n                    triggerHandlers('xhr', {\n                        args: args,\n                        endTimestamp: Date.now(),\n                        startTimestamp: Date.now(),\n                        xhr: xhr,\n                    });\n                }\n            };\n            if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n                object_1.fill(xhr, 'onreadystatechange', function (original) {\n                    return function () {\n                        var readyStateArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            readyStateArgs[_i] = arguments[_i];\n                        }\n                        onreadystatechangeHandler();\n                        return original.apply(xhr, readyStateArgs);\n                    };\n                });\n            }\n            else {\n                xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n            }\n            return originalOpen.apply(xhr, args);\n        };\n    });\n    object_1.fill(xhrproto, 'send', function (originalSend) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this.__sentry_xhr__ && args[0] !== undefined) {\n                this.__sentry_xhr__.body = args[0];\n            }\n            triggerHandlers('xhr', {\n                args: args,\n                startTimestamp: Date.now(),\n                xhr: this,\n            });\n            return originalSend.apply(this, args);\n        };\n    });\n}\nvar lastHref;\n/** JSDoc */\nfunction instrumentHistory() {\n    if (!supports_1.supportsHistory()) {\n        return;\n    }\n    var oldOnPopState = global.onpopstate;\n    global.onpopstate = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var to = global.location.href;\n        // keep track of the current URL state, as we always receive only the updated state\n        var from = lastHref;\n        lastHref = to;\n        triggerHandlers('history', {\n            from: from,\n            to: to,\n        });\n        if (oldOnPopState) {\n            // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n            // https://github.com/getsentry/sentry-javascript/issues/3344\n            // https://github.com/bugsnag/bugsnag-js/issues/469\n            try {\n                return oldOnPopState.apply(this, args);\n            }\n            catch (_oO) {\n                // no-empty\n            }\n        }\n    };\n    /** @hidden */\n    function historyReplacementFunction(originalHistoryFunction) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var url = args.length > 2 ? args[2] : undefined;\n            if (url) {\n                // coerce to string (this is what pushState does)\n                var from = lastHref;\n                var to = String(url);\n                // keep track of the current URL state, as we always receive only the updated state\n                lastHref = to;\n                triggerHandlers('history', {\n                    from: from,\n                    to: to,\n                });\n            }\n            return originalHistoryFunction.apply(this, args);\n        };\n    }\n    object_1.fill(global.history, 'pushState', historyReplacementFunction);\n    object_1.fill(global.history, 'replaceState', historyReplacementFunction);\n}\nvar debounceDuration = 1000;\nvar debounceTimerID;\nvar lastCapturedEvent;\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n    // If there was no previous event, it should always be swapped for the new one.\n    if (!previous) {\n        return true;\n    }\n    // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n    if (previous.type !== current.type) {\n        return true;\n    }\n    try {\n        // If both events have the same type, it's still possible that actions were performed on different targets.\n        // e.g. 2 clicks on different buttons.\n        if (previous.target !== current.target) {\n            return true;\n        }\n    }\n    catch (e) {\n        // just accessing `target` property can throw an exception in some rare circumstances\n        // see: https://github.com/getsentry/sentry-javascript/issues/838\n    }\n    // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n    // to which an event listener was attached), we treat them as the same action, as we want to capture\n    // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n    return false;\n}\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n    // We are only interested in filtering `keypress` events for now.\n    if (event.type !== 'keypress') {\n        return false;\n    }\n    try {\n        var target = event.target;\n        if (!target || !target.tagName) {\n            return true;\n        }\n        // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n        // e.g.tabbing through elements, hotkeys, etc.\n        if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n            return false;\n        }\n    }\n    catch (e) {\n        // just accessing `target` property can throw an exception in some rare circumstances\n        // see: https://github.com/getsentry/sentry-javascript/issues/838\n    }\n    return true;\n}\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener) {\n    if (globalListener === void 0) { globalListener = false; }\n    return function (event) {\n        // It's possible this handler might trigger multiple times for the same\n        // event (e.g. event propagation through node ancestors).\n        // Ignore if we've already captured that event.\n        if (!event || lastCapturedEvent === event) {\n            return;\n        }\n        // We always want to skip _some_ events.\n        if (shouldSkipDOMEvent(event)) {\n            return;\n        }\n        var name = event.type === 'keypress' ? 'input' : event.type;\n        // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n        if (debounceTimerID === undefined) {\n            handler({\n                event: event,\n                name: name,\n                global: globalListener,\n            });\n            lastCapturedEvent = event;\n        }\n        // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n        // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n        else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n            handler({\n                event: event,\n                name: name,\n                global: globalListener,\n            });\n            lastCapturedEvent = event;\n        }\n        // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n        clearTimeout(debounceTimerID);\n        debounceTimerID = global.setTimeout(function () {\n            debounceTimerID = undefined;\n        }, debounceDuration);\n    };\n}\n/** JSDoc */\nfunction instrumentDOM() {\n    if (!('document' in global)) {\n        return;\n    }\n    // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n    // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n    // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n    var triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n    var globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n    global.document.addEventListener('click', globalDOMEventHandler, false);\n    global.document.addEventListener('keypress', globalDOMEventHandler, false);\n    // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n    // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n    // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n    // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n    // guaranteed to fire at least once.)\n    ['EventTarget', 'Node'].forEach(function (target) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        var proto = global[target] && global[target].prototype;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        object_1.fill(proto, 'addEventListener', function (originalAddEventListener) {\n            return function (type, listener, options) {\n                if (type === 'click' || type == 'keypress') {\n                    try {\n                        var el = this;\n                        var handlers_1 = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n                        var handlerForType = (handlers_1[type] = handlers_1[type] || { refCount: 0 });\n                        if (!handlerForType.handler) {\n                            var handler = makeDOMEventHandler(triggerDOMHandler);\n                            handlerForType.handler = handler;\n                            originalAddEventListener.call(this, type, handler, options);\n                        }\n                        handlerForType.refCount += 1;\n                    }\n                    catch (e) {\n                        // Accessing dom properties is always fragile.\n                        // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n                    }\n                }\n                return originalAddEventListener.call(this, type, listener, options);\n            };\n        });\n        object_1.fill(proto, 'removeEventListener', function (originalRemoveEventListener) {\n            return function (type, listener, options) {\n                if (type === 'click' || type == 'keypress') {\n                    try {\n                        var el = this;\n                        var handlers_2 = el.__sentry_instrumentation_handlers__ || {};\n                        var handlerForType = handlers_2[type];\n                        if (handlerForType) {\n                            handlerForType.refCount -= 1;\n                            // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                            if (handlerForType.refCount <= 0) {\n                                originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                                handlerForType.handler = undefined;\n                                delete handlers_2[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                            }\n                            // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                            if (Object.keys(handlers_2).length === 0) {\n                                delete el.__sentry_instrumentation_handlers__;\n                            }\n                        }\n                    }\n                    catch (e) {\n                        // Accessing dom properties is always fragile.\n                        // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n                    }\n                }\n                return originalRemoveEventListener.call(this, type, listener, options);\n            };\n        });\n    });\n}\nvar _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n    _oldOnErrorHandler = global.onerror;\n    global.onerror = function (msg, url, line, column, error) {\n        triggerHandlers('error', {\n            column: column,\n            error: error,\n            line: line,\n            msg: msg,\n            url: url,\n        });\n        if (_oldOnErrorHandler) {\n            // eslint-disable-next-line prefer-rest-params\n            return _oldOnErrorHandler.apply(this, arguments);\n        }\n        return false;\n    };\n}\nvar _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n    _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n    global.onunhandledrejection = function (e) {\n        triggerHandlers('unhandledrejection', e);\n        if (_oldOnUnhandledRejectionHandler) {\n            // eslint-disable-next-line prefer-rest-params\n            return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n        }\n        return true;\n    };\n}\n//# sourceMappingURL=instrument.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","triggerHandlers","type","data","_a","handlers","_b","tslib_1","__values","_c","next","done","handler","value","e","env_1","isDebugBuild","logger_1","logger","error","stacktrace_1","getFunctionName","e_1_1","e_1","return","call","instrumentConsole","forEach","level","console","object_1","fill","originalConsoleMethod","args","_i","arguments","length","apply","instrumentFetch","supports_1","supportsNativeFetch","originalFetch","handlerData","fetchData","method","getFetchMethod","url","getFetchUrl","startTimestamp","Date","now","__assign","then","response","endTimestamp","fetchArgs","is_1","isInstanceOf","Request","String","toUpperCase","instrumentXHR","xhrproto","XMLHttpRequest","prototype","originalOpen","xhr","xhrInfo","__sentry_xhr__","isString","match","__sentry_own_request__","onreadystatechangeHandler","readyState","status_code","status","onreadystatechange","original","readyStateArgs","addEventListener","originalSend","undefined","body","instrumentHistory","historyReplacementFunction","originalHistoryFunction","from","lastHref","to","supportsHistory","oldOnPopState","onpopstate","global.onpopstate","location","href","_oO","history","shouldSkipDOMEvent","event","target","tagName","isContentEditable","makeDOMEventHandler","globalListener","lastCapturedEvent","name","debounceTimerID","clearTimeout","setTimeout","debounceDuration","instrumentDOM","triggerDOMHandler","bind","globalDOMEventHandler","document","proto","hasOwnProperty","originalAddEventListener","listener","options","handlers_1","el","__sentry_instrumentation_handlers__","handlerForType","refCount","originalRemoveEventListener","handlers_2","Object","keys","instrumentError","_oldOnErrorHandler","onerror","global.onerror","msg","line","column","instrumentUnhandledRejection","_oldOnUnhandledRejectionHandler","onunhandledrejection","global.onunhandledrejection","defineProperty","global_1","getGlobalObject","instrumented","addInstrumentationHandler","callback","push","warn"]
}
