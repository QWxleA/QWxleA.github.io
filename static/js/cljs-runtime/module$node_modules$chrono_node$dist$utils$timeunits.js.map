{
"version":3,
"file":"module$node_modules$chrono_node$dist$utils$timeunits.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEjHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,mBAAR,CAA8BJ,OAAQK,CAAAA,gBAAtC,CAAyD,IAAK,EAQ9DL,QAAQK,CAAAA,gBAAR,CAPAA,QAAyB,CAACC,SAAD,CAAY,CACjC,MAAMC,SAAW,EACjB,KAAK,MAAMC,GAAX,GAAkBF,UAAlB,CACIC,QAAA,CAASC,GAAT,CAAA,CAAgB,CAACF,SAAA,CAAUE,GAAV,CAErB,OAAOD,SAL0B,CA0BrCP,QAAQI,CAAAA,mBAAR,CAlBAA,QAA4B,CAACK,UAAD,CAAaH,SAAb,CAAwB,CAChD,MAAMI,OAASD,UAAWE,CAAAA,KAAX,EACXC,WAAAA,CAAOH,UAAWI,CAAAA,KAAX,EACX,KAAK,MAAML,GAAX,GAAkBF,UAAlB,CACIM,UAAA;AAAOA,UAAKE,CAAAA,GAAL,CAASR,SAAA,CAAUE,GAAV,CAAT,CAAyBA,GAAzB,CAEX,IAAI,KAAJ,EAAaF,UAAb,EAA0B,GAA1B,EAAiCA,UAAjC,EAA8C,MAA9C,EAAwDA,UAAxD,EAAqE,OAArE,EAAgFA,UAAhF,EAA6F,MAA7F,EAAuGA,UAAvG,CACII,MAAOK,CAAAA,KAAP,CAAa,KAAb,CAAoBH,UAAKA,CAAAA,IAAL,EAApB,CAEA,CADAF,MAAOK,CAAAA,KAAP,CAAa,OAAb,CAAsBH,UAAKI,CAAAA,KAAL,EAAtB,CAAqC,CAArC,CACA,CAAAN,MAAOK,CAAAA,KAAP,CAAa,MAAb,CAAqBH,UAAKK,CAAAA,IAAL,EAArB,CAEJ,IAAI,QAAJ,EAAgBX,UAAhB,EAA6B,QAA7B,EAAyCA,UAAzC,EAAsD,MAAtD,EAAgEA,UAAhE,CACII,MAAOK,CAAAA,KAAP,CAAa,QAAb,CAAuBH,UAAKM,CAAAA,MAAL,EAAvB,CAEA,CADAR,MAAOK,CAAAA,KAAP,CAAa,QAAb,CAAuBH,UAAKO,CAAAA,MAAL,EAAvB,CACA,CAAAT,MAAOK,CAAAA,KAAP,CAAa,MAAb,CAAqBH,UAAKQ,CAAAA,IAAL,EAArB,CAEJ,OAAOV,OAhByC,CAZ6D;",
"sources":["node_modules/chrono-node/dist/utils/timeunits.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$utils$timeunits\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addImpliedTimeUnits = exports.reverseTimeUnits = void 0;\nfunction reverseTimeUnits(timeUnits) {\n    const reversed = {};\n    for (const key in timeUnits) {\n        reversed[key] = -timeUnits[key];\n    }\n    return reversed;\n}\nexports.reverseTimeUnits = reverseTimeUnits;\nfunction addImpliedTimeUnits(components, timeUnits) {\n    const output = components.clone();\n    let date = components.dayjs();\n    for (const key in timeUnits) {\n        date = date.add(timeUnits[key], key);\n    }\n    if (\"day\" in timeUnits || \"d\" in timeUnits || \"week\" in timeUnits || \"month\" in timeUnits || \"year\" in timeUnits) {\n        output.imply(\"day\", date.date());\n        output.imply(\"month\", date.month() + 1);\n        output.imply(\"year\", date.year());\n    }\n    if (\"second\" in timeUnits || \"minute\" in timeUnits || \"hour\" in timeUnits) {\n        output.imply(\"second\", date.second());\n        output.imply(\"minute\", date.minute());\n        output.imply(\"hour\", date.hour());\n    }\n    return output;\n}\nexports.addImpliedTimeUnits = addImpliedTimeUnits;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","addImpliedTimeUnits","reverseTimeUnits","timeUnits","reversed","key","components","output","clone","date","dayjs","add","imply","month","year","second","minute","hour"]
}
