{
"version":3,
"file":"module$node_modules$codemirror$mode$crystal$crystal.js",
"lineCount":16,
"mappings":"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",
"sources":["node_modules/codemirror/mode/crystal/crystal.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$crystal$crystal\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"crystal\", function(config) {\n    function wordRegExp(words, end) {\n      return new RegExp((end ? \"\" : \"^\") + \"(?:\" + words.join(\"|\") + \")\" + (end ? \"$\" : \"\\\\b\"));\n    }\n\n    function chain(tokenize, stream, state) {\n      state.tokenize.push(tokenize);\n      return tokenize(stream, state);\n    }\n\n    var operators = /^(?:[-+/%|&^]|\\*\\*?|[<>]{2})/;\n    var conditionalOperators = /^(?:[=!]~|===|<=>|[<>=!]=?|[|&]{2}|~)/;\n    var indexingOperators = /^(?:\\[\\][?=]?)/;\n    var anotherOperators = /^(?:\\.(?:\\.{2})?|->|[?:])/;\n    var idents = /^[a-z_\\u009F-\\uFFFF][a-zA-Z0-9_\\u009F-\\uFFFF]*/;\n    var types = /^[A-Z_\\u009F-\\uFFFF][a-zA-Z0-9_\\u009F-\\uFFFF]*/;\n    var keywords = wordRegExp([\n      \"abstract\", \"alias\", \"as\", \"asm\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"do\",\n      \"else\", \"elsif\", \"end\", \"ensure\", \"enum\", \"extend\", \"for\", \"fun\", \"if\",\n      \"include\", \"instance_sizeof\", \"lib\", \"macro\", \"module\", \"next\", \"of\", \"out\", \"pointerof\",\n      \"private\", \"protected\", \"rescue\", \"return\", \"require\", \"select\", \"sizeof\", \"struct\",\n      \"super\", \"then\", \"type\", \"typeof\", \"uninitialized\", \"union\", \"unless\", \"until\", \"when\", \"while\", \"with\",\n      \"yield\", \"__DIR__\", \"__END_LINE__\", \"__FILE__\", \"__LINE__\"\n    ]);\n    var atomWords = wordRegExp([\"true\", \"false\", \"nil\", \"self\"]);\n    var indentKeywordsArray = [\n      \"def\", \"fun\", \"macro\",\n      \"class\", \"module\", \"struct\", \"lib\", \"enum\", \"union\",\n      \"do\", \"for\"\n    ];\n    var indentKeywords = wordRegExp(indentKeywordsArray);\n    var indentExpressionKeywordsArray = [\"if\", \"unless\", \"case\", \"while\", \"until\", \"begin\", \"then\"];\n    var indentExpressionKeywords = wordRegExp(indentExpressionKeywordsArray);\n    var dedentKeywordsArray = [\"end\", \"else\", \"elsif\", \"rescue\", \"ensure\"];\n    var dedentKeywords = wordRegExp(dedentKeywordsArray);\n    var dedentPunctualsArray = [\"\\\\)\", \"\\\\}\", \"\\\\]\"];\n    var dedentPunctuals = new RegExp(\"^(?:\" + dedentPunctualsArray.join(\"|\") + \")$\");\n    var nextTokenizer = {\n      \"def\": tokenFollowIdent, \"fun\": tokenFollowIdent, \"macro\": tokenMacroDef,\n      \"class\": tokenFollowType, \"module\": tokenFollowType, \"struct\": tokenFollowType,\n      \"lib\": tokenFollowType, \"enum\": tokenFollowType, \"union\": tokenFollowType\n    };\n    var matching = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\", \"<\": \">\"};\n\n    function tokenBase(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      // Macros\n      if (state.lastToken != \"\\\\\" && stream.match(\"{%\", false)) {\n        return chain(tokenMacro(\"%\", \"%\"), stream, state);\n      }\n\n      if (state.lastToken != \"\\\\\" && stream.match(\"{{\", false)) {\n        return chain(tokenMacro(\"{\", \"}\"), stream, state);\n      }\n\n      // Comments\n      if (stream.peek() == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      // Variables and keywords\n      var matched;\n      if (stream.match(idents)) {\n        stream.eat(/[?!]/);\n\n        matched = stream.current();\n        if (stream.eat(\":\")) {\n          return \"atom\";\n        } else if (state.lastToken == \".\") {\n          return \"property\";\n        } else if (keywords.test(matched)) {\n          if (indentKeywords.test(matched)) {\n            if (!(matched == \"fun\" && state.blocks.indexOf(\"lib\") >= 0) && !(matched == \"def\" && state.lastToken == \"abstract\")) {\n              state.blocks.push(matched);\n              state.currentIndent += 1;\n            }\n          } else if ((state.lastStyle == \"operator\" || !state.lastStyle) && indentExpressionKeywords.test(matched)) {\n            state.blocks.push(matched);\n            state.currentIndent += 1;\n          } else if (matched == \"end\") {\n            state.blocks.pop();\n            state.currentIndent -= 1;\n          }\n\n          if (nextTokenizer.hasOwnProperty(matched)) {\n            state.tokenize.push(nextTokenizer[matched]);\n          }\n\n          return \"keyword\";\n        } else if (atomWords.test(matched)) {\n          return \"atom\";\n        }\n\n        return \"variable\";\n      }\n\n      // Class variables and instance variables\n      // or attributes\n      if (stream.eat(\"@\")) {\n        if (stream.peek() == \"[\") {\n          return chain(tokenNest(\"[\", \"]\", \"meta\"), stream, state);\n        }\n\n        stream.eat(\"@\");\n        stream.match(idents) || stream.match(types);\n        return \"variable-2\";\n      }\n\n      // Constants and types\n      if (stream.match(types)) {\n        return \"tag\";\n      }\n\n      // Symbols or ':' operator\n      if (stream.eat(\":\")) {\n        if (stream.eat(\"\\\"\")) {\n          return chain(tokenQuote(\"\\\"\", \"atom\", false), stream, state);\n        } else if (stream.match(idents) || stream.match(types) ||\n                   stream.match(operators) || stream.match(conditionalOperators) || stream.match(indexingOperators)) {\n          return \"atom\";\n        }\n        stream.eat(\":\");\n        return \"operator\";\n      }\n\n      // Strings\n      if (stream.eat(\"\\\"\")) {\n        return chain(tokenQuote(\"\\\"\", \"string\", true), stream, state);\n      }\n\n      // Strings or regexps or macro variables or '%' operator\n      if (stream.peek() == \"%\") {\n        var style = \"string\";\n        var embed = true;\n        var delim;\n\n        if (stream.match(\"%r\")) {\n          // Regexps\n          style = \"string-2\";\n          delim = stream.next();\n        } else if (stream.match(\"%w\")) {\n          embed = false;\n          delim = stream.next();\n        } else if (stream.match(\"%q\")) {\n          embed = false;\n          delim = stream.next();\n        } else {\n          if(delim = stream.match(/^%([^\\w\\s=])/)) {\n            delim = delim[1];\n          } else if (stream.match(/^%[a-zA-Z0-9_\\u009F-\\uFFFF]*/)) {\n            // Macro variables\n            return \"meta\";\n          } else {\n            // '%' operator\n            return \"operator\";\n          }\n        }\n\n        if (matching.hasOwnProperty(delim)) {\n          delim = matching[delim];\n        }\n        return chain(tokenQuote(delim, style, embed), stream, state);\n      }\n\n      // Here Docs\n      if (matched = stream.match(/^<<-('?)([A-Z]\\w*)\\1/)) {\n        return chain(tokenHereDoc(matched[2], !matched[1]), stream, state)\n      }\n\n      // Characters\n      if (stream.eat(\"'\")) {\n        stream.match(/^(?:[^']|\\\\(?:[befnrtv0'\"]|[0-7]{3}|u(?:[0-9a-fA-F]{4}|\\{[0-9a-fA-F]{1,6}\\})))/);\n        stream.eat(\"'\");\n        return \"atom\";\n      }\n\n      // Numbers\n      if (stream.eat(\"0\")) {\n        if (stream.eat(\"x\")) {\n          stream.match(/^[0-9a-fA-F]+/);\n        } else if (stream.eat(\"o\")) {\n          stream.match(/^[0-7]+/);\n        } else if (stream.eat(\"b\")) {\n          stream.match(/^[01]+/);\n        }\n        return \"number\";\n      }\n\n      if (stream.eat(/^\\d/)) {\n        stream.match(/^\\d*(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/);\n        return \"number\";\n      }\n\n      // Operators\n      if (stream.match(operators)) {\n        stream.eat(\"=\"); // Operators can follow assign symbol.\n        return \"operator\";\n      }\n\n      if (stream.match(conditionalOperators) || stream.match(anotherOperators)) {\n        return \"operator\";\n      }\n\n      // Parens and braces\n      if (matched = stream.match(/[({[]/, false)) {\n        matched = matched[0];\n        return chain(tokenNest(matched, matching[matched], null), stream, state);\n      }\n\n      // Escapes\n      if (stream.eat(\"\\\\\")) {\n        stream.next();\n        return \"meta\";\n      }\n\n      stream.next();\n      return null;\n    }\n\n    function tokenNest(begin, end, style, started) {\n      return function (stream, state) {\n        if (!started && stream.match(begin)) {\n          state.tokenize[state.tokenize.length - 1] = tokenNest(begin, end, style, true);\n          state.currentIndent += 1;\n          return style;\n        }\n\n        var nextStyle = tokenBase(stream, state);\n        if (stream.current() === end) {\n          state.tokenize.pop();\n          state.currentIndent -= 1;\n          nextStyle = style;\n        }\n\n        return nextStyle;\n      };\n    }\n\n    function tokenMacro(begin, end, started) {\n      return function (stream, state) {\n        if (!started && stream.match(\"{\" + begin)) {\n          state.currentIndent += 1;\n          state.tokenize[state.tokenize.length - 1] = tokenMacro(begin, end, true);\n          return \"meta\";\n        }\n\n        if (stream.match(end + \"}\")) {\n          state.currentIndent -= 1;\n          state.tokenize.pop();\n          return \"meta\";\n        }\n\n        return tokenBase(stream, state);\n      };\n    }\n\n    function tokenMacroDef(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var matched;\n      if (matched = stream.match(idents)) {\n        if (matched == \"def\") {\n          return \"keyword\";\n        }\n        stream.eat(/[?!]/);\n      }\n\n      state.tokenize.pop();\n      return \"def\";\n    }\n\n    function tokenFollowIdent(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      if (stream.match(idents)) {\n        stream.eat(/[!?]/);\n      } else {\n        stream.match(operators) || stream.match(conditionalOperators) || stream.match(indexingOperators);\n      }\n      state.tokenize.pop();\n      return \"def\";\n    }\n\n    function tokenFollowType(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      stream.match(types);\n      state.tokenize.pop();\n      return \"def\";\n    }\n\n    function tokenQuote(end, style, embed) {\n      return function (stream, state) {\n        var escaped = false;\n\n        while (stream.peek()) {\n          if (!escaped) {\n            if (stream.match(\"{%\", false)) {\n              state.tokenize.push(tokenMacro(\"%\", \"%\"));\n              return style;\n            }\n\n            if (stream.match(\"{{\", false)) {\n              state.tokenize.push(tokenMacro(\"{\", \"}\"));\n              return style;\n            }\n\n            if (embed && stream.match(\"#{\", false)) {\n              state.tokenize.push(tokenNest(\"#{\", \"}\", \"meta\"));\n              return style;\n            }\n\n            var ch = stream.next();\n\n            if (ch == end) {\n              state.tokenize.pop();\n              return style;\n            }\n\n            escaped = embed && ch == \"\\\\\";\n          } else {\n            stream.next();\n            escaped = false;\n          }\n        }\n\n        return style;\n      };\n    }\n\n    function tokenHereDoc(phrase, embed) {\n      return function (stream, state) {\n        if (stream.sol()) {\n          stream.eatSpace()\n          if (stream.match(phrase)) {\n            state.tokenize.pop();\n            return \"string\";\n          }\n        }\n\n        var escaped = false;\n        while (stream.peek()) {\n          if (!escaped) {\n            if (stream.match(\"{%\", false)) {\n              state.tokenize.push(tokenMacro(\"%\", \"%\"));\n              return \"string\";\n            }\n\n            if (stream.match(\"{{\", false)) {\n              state.tokenize.push(tokenMacro(\"{\", \"}\"));\n              return \"string\";\n            }\n\n            if (embed && stream.match(\"#{\", false)) {\n              state.tokenize.push(tokenNest(\"#{\", \"}\", \"meta\"));\n              return \"string\";\n            }\n\n            escaped = embed && stream.next() == \"\\\\\";\n          } else {\n            stream.next();\n            escaped = false;\n          }\n        }\n\n        return \"string\";\n      }\n    }\n\n    return {\n      startState: function () {\n        return {\n          tokenize: [tokenBase],\n          currentIndent: 0,\n          lastToken: null,\n          lastStyle: null,\n          blocks: []\n        };\n      },\n\n      token: function (stream, state) {\n        var style = state.tokenize[state.tokenize.length - 1](stream, state);\n        var token = stream.current();\n\n        if (style && style != \"comment\") {\n          state.lastToken = token;\n          state.lastStyle = style;\n        }\n\n        return style;\n      },\n\n      indent: function (state, textAfter) {\n        textAfter = textAfter.replace(/^\\s*(?:\\{%)?\\s*|\\s*(?:%\\})?\\s*$/g, \"\");\n\n        if (dedentKeywords.test(textAfter) || dedentPunctuals.test(textAfter)) {\n          return config.indentUnit * (state.currentIndent - 1);\n        }\n\n        return config.indentUnit * state.currentIndent;\n      },\n\n      fold: \"indent\",\n      electricInput: wordRegExp(dedentPunctualsArray.concat(dedentKeywordsArray), true),\n      lineComment: '#'\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-crystal\", \"crystal\");\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","config","wordRegExp","words","end","RegExp","join","chain","tokenize","stream","state","push","tokenBase","eatSpace","lastToken","match","tokenMacro","peek","skipToEnd","idents","eat","matched","current","keywords","test","indentKeywords","blocks","indexOf","currentIndent","lastStyle","indentExpressionKeywords","pop","nextTokenizer","hasOwnProperty","atomWords","tokenNest","types","tokenQuote","operators","conditionalOperators","indexingOperators","style","embed","delim","next","matching","tokenHereDoc","anotherOperators","begin","started","length","nextStyle","tokenFollowIdent","tokenFollowType","escaped","ch","phrase","sol","indentKeywordsArray","indentExpressionKeywordsArray","dedentKeywordsArray","dedentKeywords","dedentPunctualsArray","dedentPunctuals","tokenMacroDef","startState","token","indent","textAfter","replace","indentUnit","fold","electricInput","concat","lineComment","defineMIME"]
}
