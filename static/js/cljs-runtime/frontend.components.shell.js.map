{"version":3,"sources":["frontend/components/shell.cljs"],"mappings":";AASA,GAAA,QAAAA,qCAAAC,gDAAAC,sDAAAC;AAAA;AAAA,AAAA,AAASC,0CAAS,6CAAA,7CAACC;;AACnB,GAAA,QAAAL,qCAAAC,gDAAAC,sDAAAI;AAAA;AAAA,AAAA,AAASC,iDAAU,6CAAA,7CAACF;;AAEpB,wCAAA,xCAAOG;AAAP,AAEE,qEAAA,rEAACC,sBAAOF;;2DAEP,AAAAG,gDAAA,KAAA,WAAAC,3HAGA,OAACM;AAHD,AAAA,OAAAP,kPAAA,WAAQG,7MAAE,yFAAA,KAAA,5FAAU,4BAAA,AAAAC,5BAACC,4CAAeX,gDACxB,yCAAA,AAAAU,zCAACE,yDAA4BZ;AADzC,AAAA,OAAAQ,2BAAA,AAEE,qEAAA,rEAACH,sBAAOF;;IACC;AAAA,AAAO,4EAAA,rEAACE,sBAAOF;;;AAE7B,kCAAA,AAAAW,oBAAAC,qBAAA,3EAAWU,sFAKRG;AALH,AAAA,AAAA,IAMQG,iBAAS,AAACC,eAAU7B;AAN5B,AAAA,OAAAa,6BAAA,MAAA,aAAA,iBAAA,CAAA,AAAAA,6BAAA,MAAA,KAAA,CAAA,AAAAA,6BAAA,MAAA,KAAA,CAAA,AAAAA,6BAAA,MAAA,KAAA,CAAA,AAAAA,6BAAA,KAAA,aAAA,SAAA,CAAA,kBAAA,AAAAA,6BAAA,MAAA,aAAA,oDAAA,CAAA,AAAAA,6BAAA,QAAA,MAAA,0BAAA,8DAAA,+BAAA,AAAAC,5EAgBwBgB,sGAEF,WAAKC;AAAL,AACE,OAAC7B,sBAAOL,wCAAS,AAACmC,qBAAYD;gBAnBtD,6DAAA,UAAA,iBAAAhB,aAqBO,wDAAA,wDAAA,hHAACkB,6KAA0BhC;AArBlC,AAAA,OAAAY,6BAAA,MAAA,EAAA,AAAAG,qBAAAD,aAAA,AAAAE,wCAAA,AAAAC,2HAAA,2CAAA,wDAAA,mFAAA,OAAA,WAAA,+BAAAH,kBAAA,aAAA,+BAAA,EAAA,AAAAC,qBAAAD,aAAA,CAAA,iBAAAI,aAuBQ,kCAAA,wBAAA,xCAAMS,gBACJ,oBAAA,pBAACM;AAxBX,AAAA,OAAArB,6BAAA,MAAA,EAAA,AAAAG,qBAAAG,aAAA,AAAAF,wCAAA,AAAAC,2HAAA,2CAAA,wDAAA,mFAAA,uBAAAC,kBAAA,aAAA,SAAA,EAAA,AAAAH,qBAAAG,aAAA,KAAA,CAAA,AAAAC,+BAAAD;MAAA,CAAA,AAAAC,+BAAAL,YAAA,iBAAAM,aAuBQ,kCAAA,wBAAA,xCAAMO,gBACJ,oBAAA,pBAACM;AAxBX,AAAA,OAAArB,6BAAA,MAAA,EAAA,AAAAG,qBAAAK,aAAA,AAAAJ,wCAAA,AAAAC,2HAAA,2CAAA,wDAAA,mFAAA,uBAAAG,kBAAA,aAAA,SAAA,EAAA,AAAAL,qBAAAK,aAAA,KAAA,CAAA,AAAAD,+BAAAC;;;GAAA,mFAAmBE,kBACjB,AAACC,0DACA,WAAKC;AAAL,AACE,6HAAA,tHAACC,8DAAgBD,qHACU,WAAKE;AAAL,AAAa,OAAC1B;;YAJ9C","names":["js/frontend","js/frontend.components","js/frontend.components.shell","js/frontend.components.shell.*command","frontend.components.shell/*command","cljs.core.atom","js/frontend.components.shell.*loading?","frontend.components.shell/*loading?","frontend.components.shell/run-command","cljs.core/reset!","promesa.core.bind","___42626__auto__","promesa.protocols/-promise","_","cljs.core/deref","clojure.string/blank?","frontend.handler.shell/run-command!","promesa.core.finally$","rum.core/lazy-build","rum.core/build-defcs","daiquiri.core/create-element","rum.core/mark-sync-update","attrs70655","cljs.core/map?","daiquiri.interpreter/element-attributes","daiquiri.normalize.merge_with_class","attrs70659","daiquiri.interpreter/interpret","attrs70663","frontend.components.shell/shell","rum.core/reactive","frontend.mixins.event_mixin","state","frontend.mixins.on_enter","_state","loading?","rum.core/react","frontend.util/stop-propagation","e","frontend.util/evalue","frontend.ui.button","frontend.ui/loading"],"sourcesContent":["(ns frontend.components.shell\n  (:require [rum.core :as rum]\n            [frontend.ui :as ui]\n            [frontend.util :as util]\n            [frontend.handler.shell :as shell-handler]\n            [clojure.string :as string]\n            [frontend.mixins :as mixins]\n            [promesa.core :as p]))\n\n(defonce *command (atom \"\"))\n(defonce *loading? (atom nil))\n\n(defn- run-command\n  []\n  (reset! *loading? true)\n  (->\n   (p/let [_ (when-not (string/blank? @*command)\n               (shell-handler/run-command! @*command))]\n     (reset! *loading? false))\n   (p/finally (fn [] (reset! *loading? false)))))\n\n(rum/defcs shell < rum/reactive\n  (mixins/event-mixin\n   (fn [state]\n     (mixins/on-enter state\n                      :on-enter (fn [_state] (run-command)))))\n  [state]\n  (let [loading? (rum/react *loading?)]\n    [:div.flex.flex-col\n     [:div\n      [:div\n       [:div\n        [:h1.title\n         \"Input command\"]\n        [:div.mt-4.mb-4.relative.rounded-md.shadow-sm.max-w-xs\n         [:input#run-command.form-input.font-mono.block.w-full.sm:text-sm.sm:leading-5\n          {:autoFocus true\n           :on-key-down util/stop-propagation\n           :placeholder \"git commit -m ...\"\n           :on-change (fn [e]\n                        (reset! *command (util/evalue e)))}]]]]\n      [:div.flex.flex-row.items-center\n       (ui/button \"Run\" :on-click run-command)\n       [:div.ml-4\n        (when loading?\n          (ui/loading \"\"))]]]]))\n"]}