{"version":3,"sources":["frontend/spec/storage.cljc"],"mappings":";AAKA,AAAAA,yBAAA,AAAA,yGAAA,AAAA,2EAAmBC;AACnB,AAAAD,yBAAA,AAAA,kIAAA,AAAA,2EAAgCC;AAChC,AAAAD,yBAAA,AAAA,mIAAA,AAAA,iFAAgCE;AAChC,AAAAF,yBAAA,AAAA,gIAAA,AAAA,kFAA+BG;AAC/B,AAAAH,yBAAA,AAAA,2DAAA,AAAA,iFAAiBE;AACjB,AAAAF,yBAAA,AAAA,0EAAA,AAAA,kFAAyBG;AACzB,AAAAH,yBAAA,AAAA,uHAAA,AAAA,kFAA0BG;AAC1B,AAAAH,yBAAA,AAAA,4HAAA,AAAA,kFAA6BG;AAC7B,AAAAH,yBAAA,AAAA,gIAAA,AAAA,kFAA+BG;AAC/B,AAAAH,yBAAA,AAAA,2HAAA,AAAA,iFAA6BE;AAC7B,AAAAF,yBAAA,AAAA,4EAAA,AAAA,2EAA0BC;AAC1B,AAAAD,yBAAA,AAAA,sFAAA,AAAA,iFAA+BE;AAC/B,AAAAF,yBAAA,AAAA,qHAAA,AAAA,uLAA0B,AAAAI,yDAAA,AAAA,+EAAA,2CAAA,6FAAA,AAAA,KAAA,oFAAA,WAAAC,jQAAWJ;AAAX,AAAA,OAAAK,sBAAAD;GAAA,8FAAA,KAAA,0FAAA,AAAA,+LAAA;AAC1B,AAAAL,yBAAA,AAAA,kEAAA,AAAA,kFAAqBG;AACrB,AAAAH,yBAAA,AAAA,yEAAA,AAAA,iFAAyBE;AACzB,AAAAF,yBAAA,AAAA,0HAAA,AAAA,iFAA4BE;AAC5B,AAAAF,yBAAA,AAAA,mHAAA,AAAA,iFAAwBE;AACxB,AAAAF,yBAAA,AAAA,sEAAA,AAAA,kFAAuBG;AACvB,AAAAH,yBAAA,AAAA,kFAAA,AAAA,kFAA6BG;AAC7B,AAAAH,yBAAA,AAAA,gHAAA,AAAA,iFAA4CE;AAC5C,AAAAF,yBAAA,AAAA,qHAAA,AAAA,2EAA8CO;AAU9C,AAAAP,yBAAA,AAAA,iHAAA,AAAA,u2EAEE,AAAAQ,8BAAA,wCAAA,yDAAA,wDAAA,kDAAA,iEAAA,8DAAA,6DAAA,8DAAA,mDAAA,4DAAA,+DAAA,gEAAA,qDAAA,AAAA,KAAA,AAAA,ysEAAA,KAAA,mFAAA,WAAAC;AAAA,AAAA,OAAAR,qBAAAQ;WAAA,WAAAA;AAAA,AAAA,OAAAR,qBAAAQ;GAAA,AAAA,qsDAAA,AAAA,iCAAA,AAAA,KAAA,AAAA,iCAAA,AAAA,ysEAAA,AAAA,8cAAA,AAAA","names":["cljs.spec.alpha/def-impl","cljs.core/map?","cljs.core/string?","cljs.core/boolean?","cljs.spec.alpha.every_impl","G__71000","cljs.core/coll?","cljs.core/set?","cljs.spec.alpha/map-spec-impl","G__71004"],"sourcesContent":["(ns ^:bb-compatible frontend.spec.storage\n  \"Specs for frontend.storage\"\n  #?(:cljs (:require [cljs.spec.alpha :as s])\n     :default (:require [clojure.spec.alpha :as s])))\n\n(s/def ::db-schema map?)\n(s/def ::ls-right-sidebar-state map?)\n(s/def ::ls-right-sidebar-width string?)\n(s/def ::ls-left-sidebar-open? boolean?)\n(s/def :ui/theme string?)\n(s/def :ui/system-theme? boolean?)\n(s/def ::lsp-core-enabled boolean?)\n(s/def ::instrument-disabled boolean?)\n(s/def ::ls-pdf-area-is-dashed boolean?)\n(s/def ::ls-pdf-viewer-theme string?)\n(s/def :zotero/api-key-v2 map?)\n(s/def :zotero/setting-profile string?)\n(s/def ::commands-history (s/coll-of map?))\n(s/def :ui/wide-mode boolean?)\n(s/def :git/current-repo string?)\n(s/def ::preferred-language string?)\n(s/def ::developer-mode string?) ;; Funny string boolean\n(s/def :document/mode? boolean?)\n(s/def :ui/shortcut-tooltip? boolean?)\n(s/def :copy/export-block-text-indent-style string?)\n(s/def :copy/export-block-text-remove-options set?)\n;; Dynamic keys which aren't as easily validated:\n;; :ls-pdf-last-page-*\n;; :ls-js-allowed-*\n\n;; Validates items that are stored in local storage. The validation is approximate here\n;; e.g. we don't validate deeply into maps and collections.\n;; The namespacing is inconsistent for this map. Sometimes we use keys without\n;; namespaces and sometimes use orphaned namespaces. It would've been better\n;; if all keys were namespaced with a unique name like this one\n(s/def ::local-storage\n  ;; All these keys are optional since we usually only validate one key at a time\n  (s/keys\n   :opt-un [::db-schema\n            ::ls-right-sidebar-state\n            ::ls-right-sidebar-width\n            ::ls-left-sidebar-open?\n            :ui/theme\n            :ui/system-theme?\n            ::lsp-core-enabled\n            ::instrument-disabled\n            ::ls-pdf-area-is-dashed\n            ::ls-pdf-viewer-theme\n            :zotero/api-key-v2\n            :zotero/setting-profile\n            ::commands-history\n            :ui/wide-mode\n            :git/current-repo\n            ::preferred-language\n            ::developer-mode\n            :document/mode?\n            :ui/shortcut-tooltip?\n            :copy/export-block-text-indent-style\n            :copy/export-block-text-remove-options]))\n"]}