{
"version":3,
"file":"module$node_modules$fs_extra$lib$ensure$symlink.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/fs-extra/lib/ensure/symlink.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fs_extra$lib$ensure$symlink\"] = function(global,require,module,exports) {\n'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst _mkdirs = require('../mkdirs')\nconst mkdirs = _mkdirs.mkdirs\nconst mkdirsSync = _mkdirs.mkdirsSync\n\nconst _symlinkPaths = require('./symlink-paths')\nconst symlinkPaths = _symlinkPaths.symlinkPaths\nconst symlinkPathsSync = _symlinkPaths.symlinkPathsSync\n\nconst _symlinkType = require('./symlink-type')\nconst symlinkType = _symlinkType.symlinkType\nconst symlinkTypeSync = _symlinkType.symlinkTypeSync\n\nconst pathExists = require('../path-exists').pathExists\n\nfunction createSymlink (srcpath, dstpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err)\n    if (destinationExists) return callback(null)\n    symlinkPaths(srcpath, dstpath, (err, relative) => {\n      if (err) return callback(err)\n      srcpath = relative.toDst\n      symlinkType(relative.toCwd, type, (err, type) => {\n        if (err) return callback(err)\n        const dir = path.dirname(dstpath)\n        pathExists(dir, (err, dirExists) => {\n          if (err) return callback(err)\n          if (dirExists) return fs.symlink(srcpath, dstpath, type, callback)\n          mkdirs(dir, err => {\n            if (err) return callback(err)\n            fs.symlink(srcpath, dstpath, type, callback)\n          })\n        })\n      })\n    })\n  })\n}\n\nfunction createSymlinkSync (srcpath, dstpath, type) {\n  const destinationExists = fs.existsSync(dstpath)\n  if (destinationExists) return undefined\n\n  const relative = symlinkPathsSync(srcpath, dstpath)\n  srcpath = relative.toDst\n  type = symlinkTypeSync(relative.toCwd, type)\n  const dir = path.dirname(dstpath)\n  const exists = fs.existsSync(dir)\n  if (exists) return fs.symlinkSync(srcpath, dstpath, type)\n  mkdirsSync(dir)\n  return fs.symlinkSync(srcpath, dstpath, type)\n}\n\nmodule.exports = {\n  createSymlink: u(createSymlink),\n  createSymlinkSync\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","u","fromCallback","path","fs","_mkdirs","mkdirs","mkdirsSync","_symlinkPaths","symlinkPaths","symlinkPathsSync","_symlinkType","symlinkType","symlinkTypeSync","pathExists","createSymlink","srcpath","dstpath","type","callback","err","destinationExists","relative","toDst","toCwd","dir","dirname","dirExists","symlink","createSymlinkSync","existsSync","exists","symlinkSync"]
}
