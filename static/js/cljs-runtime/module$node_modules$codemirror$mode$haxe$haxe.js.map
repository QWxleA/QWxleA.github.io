{
"version":3,
"file":"module$node_modules$codemirror$mode$haxe$haxe.js",
"lineCount":26,
"mappings":"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",
"sources":["node_modules/codemirror/mode/haxe/haxe.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$haxe$haxe\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"haxe\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit;\n\n  // Tokenizer\n\n  function kw(type) {return {type: type, style: \"keyword\"};}\n  var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\");\n  var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"}, attribute = {type:\"attribute\", style: \"attribute\"};\n  var type = kw(\"typedef\");\n  var keywords = {\n    \"if\": A, \"while\": A, \"else\": B, \"do\": B, \"try\": B,\n    \"return\": C, \"break\": C, \"continue\": C, \"new\": C, \"throw\": C,\n    \"var\": kw(\"var\"), \"inline\":attribute, \"static\": attribute, \"using\":kw(\"import\"),\n    \"public\": attribute, \"private\": attribute, \"cast\": kw(\"cast\"), \"import\": kw(\"import\"), \"macro\": kw(\"macro\"),\n    \"function\": kw(\"function\"), \"catch\": kw(\"catch\"), \"untyped\": kw(\"untyped\"), \"callback\": kw(\"cb\"),\n    \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n    \"in\": operator, \"never\": kw(\"property_access\"), \"trace\":kw(\"trace\"),\n    \"class\": type, \"abstract\":type, \"enum\":type, \"interface\":type, \"typedef\":type, \"extends\":type, \"implements\":type, \"dynamic\":type,\n    \"true\": atom, \"false\": atom, \"null\": atom\n  };\n\n  var isOperatorChar = /[+\\-*&%=<>!?|]/;\n\n  function chain(stream, state, f) {\n    state.tokenize = f;\n    return f(stream, state);\n  }\n\n  function toUnescaped(stream, end) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (next == end && !escaped)\n        return true;\n      escaped = !escaped && next == \"\\\\\";\n    }\n  }\n\n  // Used as scratch variables to communicate multiple values without\n  // consing up tons of objects.\n  var type, content;\n  function ret(tp, style, cont) {\n    type = tp; content = cont;\n    return style;\n  }\n\n  function haxeTokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      return chain(stream, state, haxeTokenString(ch));\n    } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      return ret(ch);\n    } else if (ch == \"0\" && stream.eat(/x/i)) {\n      stream.eatWhile(/[\\da-f]/i);\n      return ret(\"number\", \"number\");\n    } else if (/\\d/.test(ch) || ch == \"-\" && stream.eat(/\\d/)) {\n      stream.match(/^\\d*(?:\\.\\d*(?!\\.))?(?:[eE][+\\-]?\\d+)?/);\n      return ret(\"number\", \"number\");\n    } else if (state.reAllowed && (ch == \"~\" && stream.eat(/\\//))) {\n      toUnescaped(stream, \"/\");\n      stream.eatWhile(/[gimsu]/);\n      return ret(\"regexp\", \"string-2\");\n    } else if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        return chain(stream, state, haxeTokenComment);\n      } else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return ret(\"comment\", \"comment\");\n      } else {\n        stream.eatWhile(isOperatorChar);\n        return ret(\"operator\", null, stream.current());\n      }\n    } else if (ch == \"#\") {\n        stream.skipToEnd();\n        return ret(\"conditional\", \"meta\");\n    } else if (ch == \"@\") {\n      stream.eat(/:/);\n      stream.eatWhile(/[\\w_]/);\n      return ret (\"metadata\", \"meta\");\n    } else if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return ret(\"operator\", null, stream.current());\n    } else {\n      var word;\n      if(/[A-Z]/.test(ch)) {\n        stream.eatWhile(/[\\w_<>]/);\n        word = stream.current();\n        return ret(\"type\", \"variable-3\", word);\n      } else {\n        stream.eatWhile(/[\\w_]/);\n        var word = stream.current(), known = keywords.propertyIsEnumerable(word) && keywords[word];\n        return (known && state.kwAllowed) ? ret(known.type, known.style, word) :\n                       ret(\"variable\", \"variable\", word);\n      }\n    }\n  }\n\n  function haxeTokenString(quote) {\n    return function(stream, state) {\n      if (toUnescaped(stream, quote))\n        state.tokenize = haxeTokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function haxeTokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = haxeTokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  // Parser\n\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true};\n\n  function HaxeLexical(indented, column, type, align, prev, info) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.prev = prev;\n    this.info = info;\n    if (align != null) this.align = align;\n  }\n\n  function inScope(state, varname) {\n    for (var v = state.localVars; v; v = v.next)\n      if (v.name == varname) return true;\n  }\n\n  function parseHaxe(state, style, type, content, stream) {\n    var cc = state.cc;\n    // Communicate our context to the combinators.\n    // (Less wasteful than consing up a hundred closures on every call.)\n    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc;\n\n    if (!state.lexical.hasOwnProperty(\"align\"))\n      state.lexical.align = true;\n\n    while(true) {\n      var combinator = cc.length ? cc.pop() : statement;\n      if (combinator(type, content)) {\n        while(cc.length && cc[cc.length - 1].lex)\n          cc.pop()();\n        if (cx.marked) return cx.marked;\n        if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\n        if (type == \"variable\" && imported(state, content)) return \"variable-3\";\n        return style;\n      }\n    }\n  }\n\n  function imported(state, typename) {\n    if (/[a-z]/.test(typename.charAt(0)))\n      return false;\n    var len = state.importedtypes.length;\n    for (var i = 0; i<len; i++)\n      if(state.importedtypes[i]==typename) return true;\n  }\n\n  function registerimport(importname) {\n    var state = cx.state;\n    for (var t = state.importedtypes; t; t = t.next)\n      if(t.name == importname) return;\n    state.importedtypes = { name: importname, next: state.importedtypes };\n  }\n  // Combinator utils\n\n  var cx = {state: null, column: null, marked: null, cc: null};\n  function pass() {\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n  }\n  function cont() {\n    pass.apply(null, arguments);\n    return true;\n  }\n  function inList(name, list) {\n    for (var v = list; v; v = v.next)\n      if (v.name == name) return true;\n    return false;\n  }\n  function register(varname) {\n    var state = cx.state;\n    if (state.context) {\n      cx.marked = \"def\";\n      if (inList(varname, state.localVars)) return;\n      state.localVars = {name: varname, next: state.localVars};\n    } else if (state.globalVars) {\n      if (inList(varname, state.globalVars)) return;\n      state.globalVars = {name: varname, next: state.globalVars};\n    }\n  }\n\n  // Combinators\n\n  var defaultVars = {name: \"this\", next: null};\n  function pushcontext() {\n    if (!cx.state.context) cx.state.localVars = defaultVars;\n    cx.state.context = {prev: cx.state.context, vars: cx.state.localVars};\n  }\n  function popcontext() {\n    cx.state.localVars = cx.state.context.vars;\n    cx.state.context = cx.state.context.prev;\n  }\n  popcontext.lex = true;\n  function pushlex(type, info) {\n    var result = function() {\n      var state = cx.state;\n      state.lexical = new HaxeLexical(state.indented, cx.stream.column(), type, null, state.lexical, info);\n    };\n    result.lex = true;\n    return result;\n  }\n  function poplex() {\n    var state = cx.state;\n    if (state.lexical.prev) {\n      if (state.lexical.type == \")\")\n        state.indented = state.lexical.indented;\n      state.lexical = state.lexical.prev;\n    }\n  }\n  poplex.lex = true;\n\n  function expect(wanted) {\n    function f(type) {\n      if (type == wanted) return cont();\n      else if (wanted == \";\") return pass();\n      else return cont(f);\n    }\n    return f;\n  }\n\n  function statement(type) {\n    if (type == \"@\") return cont(metadef);\n    if (type == \"var\") return cont(pushlex(\"vardef\"), vardef1, expect(\";\"), poplex);\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), expression, statement, poplex);\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n    if (type == \"{\") return cont(pushlex(\"}\"), pushcontext, block, poplex, popcontext);\n    if (type == \";\") return cont();\n    if (type == \"attribute\") return cont(maybeattribute);\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"for\") return cont(pushlex(\"form\"), expect(\"(\"), pushlex(\")\"), forspec1, expect(\")\"),\n                                   poplex, statement, poplex);\n    if (type == \"variable\") return cont(pushlex(\"stat\"), maybelabel);\n    if (type == \"switch\") return cont(pushlex(\"form\"), expression, pushlex(\"}\", \"switch\"), expect(\"{\"),\n                                      block, poplex, poplex);\n    if (type == \"case\") return cont(expression, expect(\":\"));\n    if (type == \"default\") return cont(expect(\":\"));\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, expect(\"(\"), funarg, expect(\")\"),\n                                     statement, poplex, popcontext);\n    if (type == \"import\") return cont(importdef, expect(\";\"));\n    if (type == \"typedef\") return cont(typedef);\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n  }\n  function expression(type) {\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeoperator);\n    if (type == \"type\" ) return cont(maybeoperator);\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"keyword c\") return cont(maybeexpression);\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeoperator);\n    if (type == \"operator\") return cont(expression);\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(maybeexpression, \"]\"), poplex, maybeoperator);\n    if (type == \"{\") return cont(pushlex(\"}\"), commasep(objprop, \"}\"), poplex, maybeoperator);\n    return cont();\n  }\n  function maybeexpression(type) {\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\n    return pass(expression);\n  }\n\n  function maybeoperator(type, value) {\n    if (type == \"operator\" && /\\+\\+|--/.test(value)) return cont(maybeoperator);\n    if (type == \"operator\" || type == \":\") return cont(expression);\n    if (type == \";\") return;\n    if (type == \"(\") return cont(pushlex(\")\"), commasep(expression, \")\"), poplex, maybeoperator);\n    if (type == \".\") return cont(property, maybeoperator);\n    if (type == \"[\") return cont(pushlex(\"]\"), expression, expect(\"]\"), poplex, maybeoperator);\n  }\n\n  function maybeattribute(type) {\n    if (type == \"attribute\") return cont(maybeattribute);\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"var\") return cont(vardef1);\n  }\n\n  function metadef(type) {\n    if(type == \":\") return cont(metadef);\n    if(type == \"variable\") return cont(metadef);\n    if(type == \"(\") return cont(pushlex(\")\"), commasep(metaargs, \")\"), poplex, statement);\n  }\n  function metaargs(type) {\n    if(type == \"variable\") return cont();\n  }\n\n  function importdef (type, value) {\n    if(type == \"variable\" && /[A-Z]/.test(value.charAt(0))) { registerimport(value); return cont(); }\n    else if(type == \"variable\" || type == \"property\" || type == \".\" || value == \"*\") return cont(importdef);\n  }\n\n  function typedef (type, value)\n  {\n    if(type == \"variable\" && /[A-Z]/.test(value.charAt(0))) { registerimport(value); return cont(); }\n    else if (type == \"type\" && /[A-Z]/.test(value.charAt(0))) { return cont(); }\n  }\n\n  function maybelabel(type) {\n    if (type == \":\") return cont(poplex, statement);\n    return pass(maybeoperator, expect(\";\"), poplex);\n  }\n  function property(type) {\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\n  }\n  function objprop(type) {\n    if (type == \"variable\") cx.marked = \"property\";\n    if (atomicTypes.hasOwnProperty(type)) return cont(expect(\":\"), expression);\n  }\n  function commasep(what, end) {\n    function proceed(type) {\n      if (type == \",\") return cont(what, proceed);\n      if (type == end) return cont();\n      return cont(expect(end));\n    }\n    return function(type) {\n      if (type == end) return cont();\n      else return pass(what, proceed);\n    };\n  }\n  function block(type) {\n    if (type == \"}\") return cont();\n    return pass(statement, block);\n  }\n  function vardef1(type, value) {\n    if (type == \"variable\"){register(value); return cont(typeuse, vardef2);}\n    return cont();\n  }\n  function vardef2(type, value) {\n    if (value == \"=\") return cont(expression, vardef2);\n    if (type == \",\") return cont(vardef1);\n  }\n  function forspec1(type, value) {\n    if (type == \"variable\") {\n      register(value);\n      return cont(forin, expression)\n    } else {\n      return pass()\n    }\n  }\n  function forin(_type, value) {\n    if (value == \"in\") return cont();\n  }\n  function functiondef(type, value) {\n    //function names starting with upper-case letters are recognised as types, so cludging them together here.\n    if (type == \"variable\" || type == \"type\") {register(value); return cont(functiondef);}\n    if (value == \"new\") return cont(functiondef);\n    if (type == \"(\") return cont(pushlex(\")\"), pushcontext, commasep(funarg, \")\"), poplex, typeuse, statement, popcontext);\n  }\n  function typeuse(type) {\n    if(type == \":\") return cont(typestring);\n  }\n  function typestring(type) {\n    if(type == \"type\") return cont();\n    if(type == \"variable\") return cont();\n    if(type == \"{\") return cont(pushlex(\"}\"), commasep(typeprop, \"}\"), poplex);\n  }\n  function typeprop(type) {\n    if(type == \"variable\") return cont(typeuse);\n  }\n  function funarg(type, value) {\n    if (type == \"variable\") {register(value); return cont(typeuse);}\n  }\n\n  // Interface\n  return {\n    startState: function(basecolumn) {\n      var defaulttypes = [\"Int\", \"Float\", \"String\", \"Void\", \"Std\", \"Bool\", \"Dynamic\", \"Array\"];\n      var state = {\n        tokenize: haxeTokenBase,\n        reAllowed: true,\n        kwAllowed: true,\n        cc: [],\n        lexical: new HaxeLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\n        localVars: parserConfig.localVars,\n        importedtypes: defaulttypes,\n        context: parserConfig.localVars && {vars: parserConfig.localVars},\n        indented: 0\n      };\n      if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n        state.globalVars = parserConfig.globalVars;\n      return state;\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (!state.lexical.hasOwnProperty(\"align\"))\n          state.lexical.align = false;\n        state.indented = stream.indentation();\n      }\n      if (stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (type == \"comment\") return style;\n      state.reAllowed = !!(type == \"operator\" || type == \"keyword c\" || type.match(/^[\\[{}\\(,;:]$/));\n      state.kwAllowed = type != '.';\n      return parseHaxe(state, style, type, content, stream);\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != haxeTokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical;\n      if (lexical.type == \"stat\" && firstChar == \"}\") lexical = lexical.prev;\n      var type = lexical.type, closing = firstChar == type;\n      if (type == \"vardef\") return lexical.indented + 4;\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n      else if (type == \"stat\" || type == \"form\") return lexical.indented + indentUnit;\n      else if (lexical.info == \"switch\" && !closing)\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n      else return lexical.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-haxe\", \"haxe\");\n\nCodeMirror.defineMode(\"hxml\", function () {\n\n  return {\n    startState: function () {\n      return {\n        define: false,\n        inString: false\n      };\n    },\n    token: function (stream, state) {\n      var ch = stream.peek();\n      var sol = stream.sol();\n\n      ///* comments */\n      if (ch == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      if (sol && ch == \"-\") {\n        var style = \"variable-2\";\n\n        stream.eat(/-/);\n\n        if (stream.peek() == \"-\") {\n          stream.eat(/-/);\n          style = \"keyword a\";\n        }\n\n        if (stream.peek() == \"D\") {\n          stream.eat(/[D]/);\n          style = \"keyword c\";\n          state.define = true;\n        }\n\n        stream.eatWhile(/[A-Z]/i);\n        return style;\n      }\n\n      var ch = stream.peek();\n\n      if (state.inString == false && ch == \"'\") {\n        state.inString = true;\n        stream.next();\n      }\n\n      if (state.inString == true) {\n        if (stream.skipTo(\"'\")) {\n\n        } else {\n          stream.skipToEnd();\n        }\n\n        if (stream.peek() == \"'\") {\n          stream.next();\n          state.inString = false;\n        }\n\n        return \"string\";\n      }\n\n      stream.next();\n      return null;\n    },\n    lineComment: \"#\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-hxml\", \"hxml\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","config","parserConfig","kw","type","style","toUnescaped","stream","end","escaped","next","ret","tp","cont","content","haxeTokenBase","state","ch","haxeTokenString","tokenize","f","test","eat","eatWhile","match","reAllowed","haxeTokenComment","skipToEnd","isOperatorChar","current","word","known","keywords","propertyIsEnumerable","kwAllowed","quote","maybeEnd","HaxeLexical","indented","column","align","prev","info","registerimport","importname","cx","t","importedtypes","name","pass","i","arguments","length","cc","push","apply","inList","list","v","register","varname","context","marked","localVars","globalVars","pushcontext","defaultVars","vars","popcontext","pushlex","result","lexical","lex","poplex","expect","wanted","statement","metadef","vardef1","expression","block","maybeattribute","functiondef","forspec1","maybelabel","funarg","importdef","typedef","atomicTypes","hasOwnProperty","maybeoperator","maybeexpression","commasep","objprop","value","property","metaargs","charAt","what","proceed","typeuse","vardef2","forin","_type","typestring","typeprop","indentUnit","A","B","C","operator","atom","attribute","startState","basecolumn","defaulttypes","token","sol","indentation","eatSpace","combinator","pop","typename","len","indent","textAfter","firstChar","closing","electricChars","blockCommentStart","blockCommentEnd","lineComment","defineMIME","inString","peek","skipTo"]
}
