{"version":3,"sources":["frontend/mobile/core.cljs"],"mappings":";;;AAcA,gCAAA,hCAAOA;AAAP,AAEE,IAAMC,OAAK,AAACC;AAAZ,AACE,gHAAA,zGAACC,gIAA+BF;;AASpC,kCAAA,lCAAMG;AAAN,AAGE,oBAAM,AAACC;AAAP,AACE,mEAAA,aAAA,hFAAcC;AAAd,AACe,IAAMC,OAAKC;AAAX,AACE,GAAM,AAAO,mHAAA,+FAAA,2FAAA,AAAA,3RACE,AAACC,+CACD,2CAAA,3CAACC,oEAED,AAACC,uCACD,AAACC,wDAED,AAACC,sCACD,AAACC;;AARhB,AAYE,GAAI,kDAAA,hDAAI,qCAAA,rCAACC,gCAAkBR,kBACnB,qCAAA,rCAACQ,gCAAkBR,eACnB,GAAK,oCAAA,pCAACS,+BAAiBT;AAC7B,OAAUD;;AACV,OAACW;;;AAhBL;;;;AAHnB;;AAqBA,oBAAM,AAACC;AAAP,AACE,AAAClB;;AACD,AAAqBmB;;AAErB,mEAAA,nEAAcb,gFACA,WAASc;AAAT,AACE,IAAAC,qBAAe,AAAOD;AAAtB,AAAA,oBAAAC;AAAA,AAAA,UAAAA,NAAWC;AAAX,AAEE,GAAM,sCAAA,tCAACC,kCAAoBD;AAA3B,AACE,IAAME,aAAW,KAAAC,IAASH;IACpBI,OAAK,4BAAA,5BAAM,AAAgBF;AADjC,AAEE,OAACG,qCAA4BD;;AAHjC;;;AAFF;;;;AAOhB,2CAAA,3CAAcP,mDACA,WAAKS;AAAL,AACE,mBAAA,ZAACC,2BAAoBD;;;AAfvC;;AAiBA,oBAAM,AAACE;AAAP,AACE,4CAAA,5CAAcC,sDACA,WAAKH;AAAL,AACE,sCAAA,mFAAA,lHAACI,oMAAwCJ;;;AAEzD,wBAAA,YAAA,pCAAmBK;AAAnB,AACoB,iEAAA,1DAACC;;;AAErB,mEAAA,nEAAc5B,oFACA,WAAS6B;AAAT,AACE,oBAAM,AAACC;AAAP,AACE,IAAMC,mBAAW,AAAYF;AAA7B,AACE,oBAAME;AAAN,AACE,OAACC;;AADH;;;AAFJ;;;;AAKhB,+BAAA,qBAAA,7CAAmBL;AAAnB,AACoB,OAACM;;;AAhBvB","names":["frontend.mobile.core/ios-init","path","frontend.fs.capacitor-fs/iOS-ensure-documents!","cljs.core.println","frontend.mobile.core/init!","frontend.mobile.util/native-android?","js/module$node_modules$$capacitor$app$dist$plugin_cjs.App","href","js/window.location.href","frontend.state/get-left-sidebar-open?","frontend.state/set-left-sidebar-open!","frontend.state/settings-open?","frontend.state/close-settings!","frontend.state/modal-opened?","frontend.state/close-modal!","clojure.string/ends-with?","clojure.string/includes?","js/window.history.back","frontend.mobile.util/native-ios?","frontend.mobile.util/file-sync","data","temp__5720__auto__","url","clojure.string/starts-with?","parsed-url","js/URL","code","frontend.handler.user/login-callback","event","js/console.log","frontend.mobile.util/is-native-platform?","frontend.mobile.util/fs-watcher","frontend.state/pub-event!","js/window","frontend.util.scroll_to_top","state","frontend.state/get-current-repo","is-active?","frontend.handler.editor.save_current_block_BANG_","frontend.mobile.intent/handle-received"],"sourcesContent":["(ns frontend.mobile.core\n  (:require [frontend.mobile.util :as mobile-util]\n            [frontend.state :as state]\n            [\"@capacitor/app\" :refer [^js App]]\n            ;; [\"@capacitor/keyboard\" :refer [^js Keyboard]]\n            #_:clj-kondo/ignore\n            [\"@capacitor/status-bar\" :refer [^js StatusBar]]\n            [frontend.mobile.intent :as intent]\n            [clojure.string :as string]\n            [frontend.fs.capacitor-fs :as fs]\n            [frontend.handler.editor :as editor-handler]\n            [frontend.handler.user :as user-handler]\n            [frontend.util :as util]))\n\n(defn- ios-init\n  []\n  (let [path (fs/iOS-ensure-documents!)]\n    (println \"iOS container path: \" path))\n\n  ;; Keyboard watcher\n  ;; (.addListener Keyboard \"keyboardWillShow\"\n  ;;               #(state/pub-event! [:mobile/keyboard-will-show]))\n  ;; (.addListener Keyboard \"keyboardDidShow\"\n  ;;               #(state/pub-event! [:mobile/keyboard-did-show]))\n  )\n\n(defn init!\n  []\n  ;; patch back navigation\n  (when (mobile-util/native-android?)\n    (.addListener App \"backButton\"\n                  #(let [href js/window.location.href]\n                     (when (true? (cond\n                                    (state/get-left-sidebar-open?)\n                                    (state/set-left-sidebar-open! false)\n\n                                    (state/settings-open?)\n                                    (state/close-settings!)\n\n                                    (state/modal-opened?)\n                                    (state/close-modal!)\n\n                                    :else true))\n\n                       (if (or (string/ends-with? href \"#/\")\n                               (string/ends-with? href \"/\")\n                               (not (string/includes? href \"#/\")))\n                         (.exitApp App)\n                         (js/window.history.back))))))\n\n  (when (mobile-util/native-ios?)\n    (ios-init)\n    (.removeAllListeners mobile-util/file-sync)\n\n    (.addListener App \"appUrlOpen\"\n                  (fn [^js data]\n                    (when-let [url (.-url data)]\n                      ;; TODO: handler other logseq:// URLs\n                      (when (string/starts-with? url \"logseq://auth-callback\")\n                        (let [parsed-url (js/URL. url)\n                              code (.get (.-searchParams parsed-url) \"code\")]\n                          (user-handler/login-callback code))))))\n\n    (.addListener mobile-util/file-sync \"debug\"\n                  (fn [event]\n                    (js/console.log \"\ud83d\udd04\" event))))\n\n  (when (mobile-util/is-native-platform?)\n    (.addListener mobile-util/fs-watcher \"watcher\"\n                  (fn [event]\n                    (state/pub-event! [:file-watcher/changed event])))\n\n    (.addEventListener js/window \"statusTap\"\n                       #(util/scroll-to-top true))\n\n    (.addListener App \"appStateChange\"\n                  (fn [^js state]\n                    (when (state/get-current-repo)\n                      (let [is-active? (.-isActive state)]\n                        (when is-active?\n                          (editor-handler/save-current-block!))))))\n\n    (.addEventListener js/window \"sendIntentReceived\"\n                       #(intent/handle-received))))\n"]}