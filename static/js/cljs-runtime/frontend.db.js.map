{"version":3,"sources":["frontend/db.cljs"],"mappings":"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","names":["frontend.db.conn/conns","frontend.db.conn/get-repo-path","frontend.db.conn/get-repo-name","frontend.db.conn/get-short-repo-name","frontend.db.conn/datascript-db","frontend.db.conn/get-db","frontend.db.conn/me-tx","frontend.db.conn/remove-conn!","frontend.db.utils/date->int","frontend.db.utils/db->json","frontend.db.utils/db->edn-str","frontend.db.utils/db->string","frontend.db.utils/get-max-tx-id","frontend.db.utils/get-tx-id","frontend.db.utils/group-by-page","frontend.db.utils/seq-flatten","frontend.db.utils/string->db","frontend.db.utils/entity","frontend.db.utils/pull","frontend.db.utils/pull-many","frontend.db.utils/transact!","frontend.db.utils/get-key-value","frontend.db.model/blocks-count","frontend.db.model/blocks-count-cache","frontend.db.model/clean-export!","frontend.db.model/delete-blocks","frontend.db.model/get-pre-block","frontend.db.model/delete-file!","frontend.db.model/delete-file-blocks!","frontend.db.model/delete-page-blocks","frontend.db.model/delete-file-pages!","frontend.db.model/delete-file-tx","frontend.db.model/delete-files","frontend.db.model/delete-pages-by-files","frontend.db.model/filter-only-public-pages-and-blocks","frontend.db.model/get-all-block-contents","frontend.db.model/get-all-tagged-pages","frontend.db.model/get-all-templates","frontend.db.model/get-block-and-children","frontend.db.model/get-block-by-uuid","frontend.db.model/get-block-children","frontend.db.model/sort-by-left","frontend.db.model/get-block-parent","frontend.db.model/get-block-parents","frontend.db.model/parents-collapsed?","frontend.db.model/get-block-referenced-blocks","frontend.db.model/get-block-children-ids","frontend.db.model/get-block-immediate-children","frontend.db.model/get-block-page","frontend.db.model/get-blocks-contents","frontend.db.model/get-custom-css","frontend.db.model/get-date-scheduled-or-deadlines","frontend.db.model/get-db-type","frontend.db.model/get-file-blocks","frontend.db.model/get-file-contents","frontend.db.model/get-file-last-modified-at","frontend.db.model/get-file","frontend.db.model/get-file-page","frontend.db.model/get-file-page-id","frontend.db.model/file-exists?","frontend.db.model/get-file-pages","frontend.db.model/get-files","frontend.db.model/get-files-blocks","frontend.db.model/get-files-full","frontend.db.model/get-journals-length","frontend.db.model/get-latest-journals","frontend.db.model/get-matched-blocks","frontend.db.model/get-page","frontend.db.model/get-page-alias","frontend.db.model/get-page-alias-names","frontend.db.model/get-paginated-blocks","frontend.db.model/get-page-linked-refs-refed-pages","frontend.db.model/get-page-blocks-count","frontend.db.model/get-page-blocks-no-cache","frontend.db.model/get-page-file","frontend.db.model/get-page-format","frontend.db.model/get-page-properties","frontend.db.model/get-page-referenced-blocks","frontend.db.model/get-page-referenced-pages","frontend.db.model/get-page-unlinked-references","frontend.db.model/get-page-referenced-blocks-no-cache","frontend.db.model/get-all-pages","frontend.db.model/get-pages","frontend.db.model/get-pages-relation","frontend.db.model/get-pages-that-mentioned-page","frontend.db.model/get-public-pages","frontend.db.model/get-tag-pages","frontend.db.model/journal-page?","frontend.db.model/page-alias-set","frontend.db.model/pull-block","frontend.db.model/set-file-last-modified-at!","frontend.db.model/transact-files-db!","frontend.db.model/page-empty?","frontend.db.model/page-exists?","frontend.db.model/page-empty-or-dummy?","frontend.db.model/get-alias-source-page","frontend.db.model/set-file-content!","frontend.db.model/has-children?","frontend.db.model/get-namespace-pages","frontend.db.model/get-all-namespace-relation","frontend.db.model/get-pages-by-name-partition","frontend.db.react/get-current-page","frontend.db.react/set-key-value","frontend.db.react/remove-key!","frontend.db.react/remove-q!","frontend.db.react/remove-query-component!","frontend.db.react/add-q!","frontend.db.react/add-query-component!","frontend.db.react/clear-query-state!","frontend.db.react/clear-query-state-without-refs-and-embeds!","frontend.db.react/kv","frontend.db.react/q","frontend.db.react/query-state","frontend.db.react/query-components","frontend.db.react/query-entity-in-component","frontend.db.react/remove-custom-query!","frontend.db.react/set-new-result!","frontend.db.react/sub-key-value","frontend.db.react/refresh!","frontend.db.query-custom/custom-query","frontend.db.query-react/react-query","frontend.db.query-react/custom-query-result-transform","frontend.db.default/built-in-pages-names","frontend.db.default/built-in-pages","frontend.db/conns","frontend.db/get-repo-path","frontend.db/get-repo-name","frontend.db/get-short-repo-name","frontend.db/datascript-db","frontend.db/get-db","frontend.db/me-tx","frontend.db/remove-conn!","frontend.db/date->int","frontend.db/db->json","frontend.db/db->edn-str","frontend.db/db->string","frontend.db/get-max-tx-id","frontend.db/get-tx-id","frontend.db/group-by-page","frontend.db/seq-flatten","frontend.db/string->db","frontend.db/entity","frontend.db/pull","frontend.db/pull-many","frontend.db/transact!","frontend.db/get-key-value","frontend.db/blocks-count","frontend.db/blocks-count-cache","frontend.db/clean-export!","frontend.db/delete-blocks","frontend.db/get-pre-block","frontend.db/delete-file!","frontend.db/delete-file-blocks!","frontend.db/delete-page-blocks","frontend.db/delete-file-pages!","frontend.db/delete-file-tx","frontend.db/delete-files","frontend.db/delete-pages-by-files","frontend.db/filter-only-public-pages-and-blocks","frontend.db/get-all-block-contents","frontend.db/get-all-tagged-pages","frontend.db/get-all-templates","frontend.db/get-block-and-children","frontend.db/get-block-by-uuid","frontend.db/get-block-children","frontend.db/sort-by-left","frontend.db/get-block-parent","frontend.db/get-block-parents","frontend.db/parents-collapsed?","frontend.db/get-block-referenced-blocks","frontend.db/get-block-children-ids","frontend.db/get-block-immediate-children","frontend.db/get-block-page","frontend.db/get-blocks-contents","frontend.db/get-custom-css","frontend.db/get-date-scheduled-or-deadlines","frontend.db/get-db-type","frontend.db/get-file-blocks","frontend.db/get-file-contents","frontend.db/get-file-last-modified-at","frontend.db/get-file","frontend.db/get-file-page","frontend.db/get-file-page-id","frontend.db/file-exists?","frontend.db/get-file-pages","frontend.db/get-files","frontend.db/get-files-blocks","frontend.db/get-files-full","frontend.db/get-journals-length","frontend.db/get-latest-journals","frontend.db/get-matched-blocks","frontend.db/get-page","frontend.db/get-page-alias","frontend.db/get-page-alias-names","frontend.db/get-paginated-blocks","frontend.db/get-page-linked-refs-refed-pages","frontend.db/get-page-blocks-count","frontend.db/get-page-blocks-no-cache","frontend.db/get-page-file","frontend.db/get-page-format","frontend.db/get-page-properties","frontend.db/get-page-referenced-blocks","frontend.db/get-page-referenced-pages","frontend.db/get-page-unlinked-references","frontend.db/get-page-referenced-blocks-no-cache","frontend.db/get-all-pages","frontend.db/get-pages","frontend.db/get-pages-relation","frontend.db/get-pages-that-mentioned-page","frontend.db/get-public-pages","frontend.db/get-tag-pages","frontend.db/journal-page?","frontend.db/page-alias-set","frontend.db/pull-block","frontend.db/set-file-last-modified-at!","frontend.db/transact-files-db!","frontend.db/page-empty?","frontend.db/page-exists?","frontend.db/page-empty-or-dummy?","frontend.db/get-alias-source-page","frontend.db/set-file-content!","frontend.db/has-children?","frontend.db/get-namespace-pages","frontend.db/get-all-namespace-relation","frontend.db/get-pages-by-name-partition","frontend.db/get-current-page","frontend.db/set-key-value","frontend.db/remove-key!","frontend.db/remove-q!","frontend.db/remove-query-component!","frontend.db/add-q!","frontend.db/add-query-component!","frontend.db/clear-query-state!","frontend.db/clear-query-state-without-refs-and-embeds!","frontend.db/kv","frontend.db/q","frontend.db/query-state","frontend.db/query-components","frontend.db/query-entity-in-component","frontend.db/remove-custom-query!","frontend.db/set-new-result!","frontend.db/sub-key-value","frontend.db/refresh!","frontend.db/custom-query","frontend.db/react-query","frontend.db/custom-query-result-transform","frontend.db/built-in-pages-names","frontend.db/built-in-pages","frontend.db/get-schema-version","db","G__43569","G__43570","datascript.core/q","frontend.db/old-schema?","v","cljs.core/integer?","frontend.db-schema/version","frontend.db/persist!","repo","key","db-str","promesa.core.bind","___28360__auto__","promesa.protocols/-promise","_","frontend.db.persist/save-graph!","js/frontend","js/frontend.db","js/frontend.db.persistent-jobs","frontend.db/persistent-jobs","cljs.core.atom","frontend.db/clear-repo-persistent-job!","temp__5720__auto__","old-job","cljs.core/deref","cljs.core.get","js/clearTimeout","frontend.db/persist-if-idle!","job","js/setTimeout","and__5041__auto__","frontend.state/input-idle?","frontend.state/db-idle?","cljs.core.swap_BANG_","cljs.core/assoc","frontend.db/*db-listener","frontend.db/repo-listen-to-tx!","conn","datascript.core.listen_BANG_","tx-report","frontend.config/publishing?","cljs.core/not","frontend.util/electron?","graph-has-other-window?","electron.ipc.ipc","G__43571","frontend.state/set-last-transact-time!","frontend.util/time-ms","db-listener","frontend.db/listen-and-persist!","var_args","G__43573","frontend.db/start-db-conn!","js/Error","me","frontend.db.start_db_conn_BANG_","option","frontend.db.conn.start_BANG_","cljs.core.assoc","frontend.db/restore-graph!","db-name","db-conn","datascript.core.create_conn","frontend.db-schema/schema","stored","frontend.db.persist/get-serialized-graph","stored-db","e43574","_e","js/console.warn","datascript.core/empty-db","attached-db","datascript.core/db-with","cljs.core.concat","frontend.db.migrate/migrate","frontend.db.conn/reset-conn!","datascript.core.transact_BANG_","p__43575","map__43576","cljs.core/--destructure-map","frontend.db/restore!","repos","_old-db-schema","restore-config-handler","or__5043__auto__","frontend.state/get-current-repo","cljs.core/first","frontend.db/run-batch-txs!","chan","frontend.state/get-db-batch-txs-chan","c__27595__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__27596__auto__","switch__27572__auto__","state_43585","state_val_43586","statearr-43587","cljs.core.async.impl.ioc-helpers/take!","inst_43583","cljs.core.async.impl.ioc-helpers/return-chan","inst_43579","inst_43580","statearr-43588","statearr-43589","statearr-43590","state-machine__27573__auto__","ret-value__27574__auto__","result__27575__auto__","cljs.core/keyword-identical?","ex__27576__auto__","e43591","statearr-43592","cljs.core/seq","statearr-43593","state__27597__auto__","statearr-43594","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","frontend.db/new-block-id","datascript.core.squuid"],"sourcesContent":["(ns frontend.db\n  (:require [clojure.core.async :as async]\n            [datascript.core :as d]\n            [frontend.db-schema :as db-schema]\n            [frontend.db.conn :as conn]\n            [frontend.db.default :as default-db]\n            [frontend.db.model]\n            [frontend.db.query-custom]\n            [frontend.db.query-react]\n            [frontend.db.react :as react]\n            [frontend.db.utils]\n            [frontend.db.persist :as db-persist]\n            [frontend.db.migrate :as db-migrate]\n            [frontend.namespaces :refer [import-vars]]\n            [frontend.state :as state]\n            [frontend.config :as config]\n            [frontend.util :as util]\n            [promesa.core :as p]\n            [electron.ipc :as ipc]))\n\n(import-vars\n [frontend.db.conn\n  ;; TODO: remove later\n  conns\n  get-repo-path\n  get-repo-name\n  get-short-repo-name\n  datascript-db\n  get-db\n  me-tx\n  remove-conn!]\n\n [frontend.db.utils\n  date->int db->json db->edn-str db->string get-max-tx-id get-tx-id\n  group-by-page seq-flatten\n  string->db\n\n  entity pull pull-many transact! get-key-value]\n\n [frontend.db.model\n  blocks-count blocks-count-cache clean-export! delete-blocks get-pre-block\n  delete-file! delete-file-blocks! delete-page-blocks delete-file-pages! delete-file-tx delete-files delete-pages-by-files\n  filter-only-public-pages-and-blocks get-all-block-contents get-all-tagged-pages\n  get-all-templates get-block-and-children get-block-by-uuid get-block-children sort-by-left\n  get-block-parent get-block-parents parents-collapsed? get-block-referenced-blocks\n  get-block-children-ids get-block-immediate-children get-block-page\n  get-blocks-contents get-custom-css\n  get-date-scheduled-or-deadlines get-db-type\n  get-file-blocks get-file-contents get-file-last-modified-at get-file get-file-page get-file-page-id file-exists?\n  get-file-pages get-files get-files-blocks get-files-full get-journals-length\n  get-latest-journals get-matched-blocks get-page get-page-alias get-page-alias-names get-paginated-blocks get-page-linked-refs-refed-pages\n  get-page-blocks-count get-page-blocks-no-cache get-page-file get-page-format get-page-properties\n  get-page-referenced-blocks get-page-referenced-pages get-page-unlinked-references get-page-referenced-blocks-no-cache\n  get-all-pages get-pages get-pages-relation get-pages-that-mentioned-page get-public-pages get-tag-pages\n  journal-page? page-alias-set pull-block\n  set-file-last-modified-at! transact-files-db! page-empty? page-exists? page-empty-or-dummy? get-alias-source-page\n  set-file-content! has-children? get-namespace-pages get-all-namespace-relation get-pages-by-name-partition]\n\n [frontend.db.react\n  get-current-page set-key-value\n  remove-key! remove-q! remove-query-component! add-q! add-query-component! clear-query-state!\n  clear-query-state-without-refs-and-embeds! kv q\n  query-state query-components query-entity-in-component remove-custom-query! set-new-result! sub-key-value refresh!]\n\n [frontend.db.query-custom\n  custom-query]\n\n [frontend.db.query-react\n  react-query custom-query-result-transform]\n\n [frontend.db.default built-in-pages-names built-in-pages])\n\n(defn get-schema-version [db]\n  (d/q\n    '[:find ?v .\n      :where\n      [_ :schema/version ?v]]\n    db))\n\n(defn old-schema?\n  [db]\n  (let [v (get-schema-version db)]\n    (if (integer? v)\n      (> db-schema/version v)\n      ;; backward compatibility\n      true)))\n\n;; persisting DBs between page reloads\n(defn persist! [repo]\n  (let [key (datascript-db repo)\n        db (get-db repo)]\n    (when db\n      (let [db-str (if db (db->string db) \"\")]\n        (p/let [_ (db-persist/save-graph! key db-str)])))))\n\n(defonce persistent-jobs (atom {}))\n\n(defn clear-repo-persistent-job!\n  [repo]\n  (when-let [old-job (get @persistent-jobs repo)]\n    (js/clearTimeout old-job)))\n\n(defn persist-if-idle!\n  [repo]\n  (clear-repo-persistent-job! repo)\n  (let [job (js/setTimeout\n             (fn []\n               (if (and (state/input-idle? repo)\n                        (state/db-idle? repo))\n                 (persist! repo)\n                 ;; (state/set-db-persisted! repo true)\n\n                 (persist-if-idle! repo)))\n             3000)]\n    (swap! persistent-jobs assoc repo job)))\n\n;; only save when user's idle\n\n(def *db-listener (atom nil))\n\n(defn- repo-listen-to-tx!\n  [repo conn]\n  (d/listen! conn :persistence\n             (fn [tx-report]\n               ;; reactive components\n               (react/refresh! repo tx-report)\n\n               (when (and\n                      (not config/publishing?)\n                      (not (:new-graph? (:tx-meta tx-report)))) ; skip initial txs\n                 (if (util/electron?)\n                   (when-not (:dbsync? (:tx-meta tx-report))\n                     ;; sync with other windows if needed\n                     (p/let [graph-has-other-window? (ipc/ipc \"graphHasOtherWindow\" repo)]\n                       (when graph-has-other-window?\n                         (ipc/ipc \"dbsync\" repo {:data (db->string (:tx-data tx-report))}))))\n                   (do\n                     (state/set-last-transact-time! repo (util/time-ms))\n                     (persist-if-idle! repo)))\n\n                 (when-let [db-listener @*db-listener]\n                   (db-listener repo tx-report))))))\n\n(defn listen-and-persist!\n  [repo]\n  (when-let [conn (get-db repo false)]\n    (repo-listen-to-tx! repo conn)))\n\n(defn start-db-conn!\n  ([me repo]\n   (start-db-conn! me repo {}))\n  ([me repo option]\n   (conn/start! me repo\n                (assoc option\n                       :listen-handler listen-and-persist!))))\n\n(defn restore-graph!\n  \"Restore db from serialized db cache, and swap into the current db status\"\n  [repo me]\n  (p/let [db-name (datascript-db repo)\n          db-conn (d/create-conn db-schema/schema)\n          _ (swap! conns assoc db-name db-conn)\n          stored (db-persist/get-serialized-graph db-name)\n          _ (when stored\n              (let [stored-db (try (string->db stored)\n                                   (catch js/Error _e\n                                     (js/console.warn \"Invalid graph cache\")\n                                     (d/empty-db db-schema/schema)))\n                    attached-db (d/db-with stored-db (concat\n                                                      [(me-tx stored-db me)]\n                                                      default-db/built-in-pages)) ;; TODO bug overriding uuids?\n                    db (if (old-schema? attached-db)\n                         (db-migrate/migrate attached-db)\n                         attached-db)]\n                (conn/reset-conn! db-conn db)))]\n    (d/transact! db-conn [{:schema/version db-schema/version}])))\n\n(defn restore!\n  [{:keys [repos] :as me} _old-db-schema restore-config-handler]\n  (let [repo (or (state/get-current-repo) (:url (first repos)))]\n    (when repo\n      (p/let [_ (restore-graph! repo me)]\n        (restore-config-handler repo)\n        (listen-and-persist! repo)))))\n\n(defn run-batch-txs!\n  []\n  (let [chan (state/get-db-batch-txs-chan)]\n    (async/go-loop []\n      (let [f (async/<! chan)]\n        (f))\n      (recur))\n    chan))\n\n(defn new-block-id\n  []\n  (d/squuid))\n"]}