{
"version":3,
"file":"module$node_modules$codemirror$mode$toml$toml.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/codemirror/mode/toml/toml.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$toml$toml\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"toml\", function () {\n  return {\n    startState: function () {\n      return {\n        inString: false,\n        stringType: \"\",\n        lhs: true,\n        inArray: 0\n      };\n    },\n    token: function (stream, state) {\n      //check for state changes\n      if (!state.inString && ((stream.peek() == '\"') || (stream.peek() == \"'\"))) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.inString = true; // Update state\n      }\n      if (stream.sol() && state.inArray === 0) {\n        state.lhs = true;\n      }\n      //return state\n      if (state.inString) {\n        while (state.inString && !stream.eol()) {\n          if (stream.peek() === state.stringType) {\n            stream.next(); // Skip quote\n            state.inString = false; // Clear flag\n          } else if (stream.peek() === '\\\\') {\n            stream.next();\n            stream.next();\n          } else {\n            stream.match(/^.[^\\\\\\\"\\']*/);\n          }\n        }\n        return state.lhs ? \"property string\" : \"string\"; // Token style\n      } else if (state.inArray && stream.peek() === ']') {\n        stream.next();\n        state.inArray--;\n        return 'bracket';\n      } else if (state.lhs && stream.peek() === '[' && stream.skipTo(']')) {\n        stream.next();//skip closing ]\n        // array of objects has an extra open & close []\n        if (stream.peek() === ']') stream.next();\n        return \"atom\";\n      } else if (stream.peek() === \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (stream.eatSpace()) {\n        return null;\n      } else if (state.lhs && stream.eatWhile(function (c) { return c != '=' && c != ' '; })) {\n        return \"property\";\n      } else if (state.lhs && stream.peek() === \"=\") {\n        stream.next();\n        state.lhs = false;\n        return null;\n      } else if (!state.lhs && stream.match(/^\\d\\d\\d\\d[\\d\\-\\:\\.T]*Z/)) {\n        return 'atom'; //date\n      } else if (!state.lhs && (stream.match('true') || stream.match('false'))) {\n        return 'atom';\n      } else if (!state.lhs && stream.peek() === '[') {\n        state.inArray++;\n        stream.next();\n        return 'bracket';\n      } else if (!state.lhs && stream.match(/^\\-?\\d+(?:\\.\\d+)?/)) {\n        return 'number';\n      } else if (!stream.eatSpace()) {\n        stream.next();\n      }\n      return null;\n    }\n  };\n});\n\nCodeMirror.defineMIME('text/x-toml', 'toml');\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","startState","inString","stringType","lhs","inArray","token","stream","state","peek","next","sol","eol","match","skipTo","skipToEnd","eatSpace","eatWhile","c","defineMIME"]
}
