shadow$provide.module$node_modules$jszip$lib$stream$StreamHelper=function(global,require,module,exports){function concat(type,dataArray){var i,index=0,totalLength=0;for(i=0;i<dataArray.length;i++)totalLength+=dataArray[i].length;switch(type){case "string":return dataArray.join("");case "array":return Array.prototype.concat.apply([],dataArray);case "uint8array":type=new Uint8Array(totalLength);for(i=0;i<dataArray.length;i++)type.set(dataArray[i],index),index+=dataArray[i].length;return type;case "nodebuffer":return Buffer.concat(dataArray);
default:throw Error("concat : unsupported type '"+type+"'");}}function accumulate(helper,updateCallback){return new external.Promise(function(resolve,reject){var dataArray=[],chunkType=helper._internalType,resultType=helper._outputType,mimeType=helper._mimeType;helper.on("data",function(data,meta){dataArray.push(data);updateCallback&&updateCallback(meta)}).on("error",function(err){dataArray=[];reject(err)}).on("end",function(){try{a:{var content=concat(chunkType,dataArray);switch(resultType){case "blob":var result=
utils.newBlob(utils.transformTo("arraybuffer",content),mimeType);break a;case "base64":result=base64.encode(content);break a;default:result=utils.transformTo(resultType,content)}}resolve(result)}catch(e){reject(e)}dataArray=[]}).resume()})}function StreamHelper(worker,outputType,mimeType){var internalType=outputType;switch(outputType){case "blob":case "arraybuffer":internalType="uint8array";break;case "base64":internalType="string"}try{this._internalType=internalType,this._outputType=outputType,this._mimeType=
mimeType,utils.checkSupport(internalType),this._worker=worker.pipe(new ConvertWorker(internalType)),worker.lock()}catch(e){this._worker=new GenericWorker("error"),this._worker.error(e)}}var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";var utils=require("module$node_modules$jszip$lib$utils"),ConvertWorker=require("module$node_modules$jszip$lib$stream$ConvertWorker"),GenericWorker=require("module$node_modules$jszip$lib$stream$GenericWorker"),base64=require("module$node_modules$jszip$lib$base64");
global=require("module$node_modules$jszip$lib$support");var external=require("module$node_modules$jszip$lib$external"),NodejsStreamOutputAdapter=null;if(global.nodestream)try{NodejsStreamOutputAdapter=require("module$node_modules$jszip$lib$nodejs$NodejsStreamOutputAdapter")}catch(e){}StreamHelper.prototype={accumulate:function(updateCb){return accumulate(this,updateCb)},on:function(evt,fn){var self=this;if("data"===evt)this._worker.on(evt,function(chunk){fn.call(self,chunk.data,chunk.meta)});else this._worker.on(evt,
function(){utils.delay(fn,arguments,self)});return this},resume:function(){utils.delay(this._worker.resume,[],this._worker);return this},pause:function(){this._worker.pause();return this},toNodejsStream:function(updateCb){utils.checkSupport("nodestream");if("nodebuffer"!==this._outputType)throw Error(this._outputType+" is not supported by this method");return new NodejsStreamOutputAdapter(this,{objectMode:"nodebuffer"!==this._outputType},updateCb)}};module.exports=StreamHelper}
//# sourceMappingURL=module$node_modules$jszip$lib$stream$StreamHelper.js.map
