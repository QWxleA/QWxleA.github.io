{
"version":3,
"file":"module$node_modules$codemirror$mode$gfm$gfm.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/codemirror/mode/gfm/gfm.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$gfm$gfm\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../markdown/markdown\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../markdown/markdown\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar urlRE = /^((?:(?:aaas?|about|acap|adiumxtra|af[ps]|aim|apt|attachment|aw|beshare|bitcoin|bolo|callto|cap|chrome(?:-extension)?|cid|coap|com-eventbrite-attendee|content|crid|cvs|data|dav|dict|dlna-(?:playcontainer|playsingle)|dns|doi|dtn|dvb|ed2k|facetime|feed|file|finger|fish|ftp|geo|gg|git|gizmoproject|go|gopher|gtalk|h323|hcp|https?|iax|icap|icon|im|imap|info|ipn|ipp|irc[6s]?|iris(?:\\.beep|\\.lwz|\\.xpc|\\.xpcs)?|itms|jar|javascript|jms|keyparc|lastfm|ldaps?|magnet|mailto|maps|market|message|mid|mms|ms-help|msnim|msrps?|mtqp|mumble|mupdate|mvn|news|nfs|nih?|nntp|notes|oid|opaquelocktoken|palm|paparazzi|platform|pop|pres|proxy|psyc|query|res(?:ource)?|rmi|rsync|rtmp|rtsp|secondlife|service|session|sftp|sgn|shttp|sieve|sips?|skype|sm[bs]|snmp|soap\\.beeps?|soldat|spotify|ssh|steam|svn|tag|teamspeak|tel(?:net)?|tftp|things|thismessage|tip|tn3270|tv|udp|unreal|urn|ut2004|vemmi|ventrilo|view-source|webcal|wss?|wtai|wyciwyg|xcon(?:-userid)?|xfire|xmlrpc\\.beeps?|xmpp|xri|ymsgr|z39\\.50[rs]?):(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]|\\([^\\s()<>]*\\))+(?:\\([^\\s()<>]*\\)|[^\\s`*!()\\[\\]{};:'\".,<>?\u00ab\u00bb\u201c\u201d\u2018\u2019]))/i\n\nCodeMirror.defineMode(\"gfm\", function(config, modeConfig) {\n  var codeDepth = 0;\n  function blankLine(state) {\n    state.code = false;\n    return null;\n  }\n  var gfmOverlay = {\n    startState: function() {\n      return {\n        code: false,\n        codeBlock: false,\n        ateSpace: false\n      };\n    },\n    copyState: function(s) {\n      return {\n        code: s.code,\n        codeBlock: s.codeBlock,\n        ateSpace: s.ateSpace\n      };\n    },\n    token: function(stream, state) {\n      state.combineTokens = null;\n\n      // Hack to prevent formatting override inside code blocks (block and inline)\n      if (state.codeBlock) {\n        if (stream.match(/^```+/)) {\n          state.codeBlock = false;\n          return null;\n        }\n        stream.skipToEnd();\n        return null;\n      }\n      if (stream.sol()) {\n        state.code = false;\n      }\n      if (stream.sol() && stream.match(/^```+/)) {\n        stream.skipToEnd();\n        state.codeBlock = true;\n        return null;\n      }\n      // If this block is changed, it may need to be updated in Markdown mode\n      if (stream.peek() === '`') {\n        stream.next();\n        var before = stream.pos;\n        stream.eatWhile('`');\n        var difference = 1 + stream.pos - before;\n        if (!state.code) {\n          codeDepth = difference;\n          state.code = true;\n        } else {\n          if (difference === codeDepth) { // Must be exact\n            state.code = false;\n          }\n        }\n        return null;\n      } else if (state.code) {\n        stream.next();\n        return null;\n      }\n      // Check if space. If so, links can be formatted later on\n      if (stream.eatSpace()) {\n        state.ateSpace = true;\n        return null;\n      }\n      if (stream.sol() || state.ateSpace) {\n        state.ateSpace = false;\n        if (modeConfig.gitHubSpice !== false) {\n          if(stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+@)?(?=.{0,6}\\d)(?:[a-f0-9]{7,40}\\b)/)) {\n            // User/Project@SHA\n            // User@SHA\n            // SHA\n            state.combineTokens = true;\n            return \"link\";\n          } else if (stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+)?#[0-9]+\\b/)) {\n            // User/Project#Num\n            // User#Num\n            // #Num\n            state.combineTokens = true;\n            return \"link\";\n          }\n        }\n      }\n      if (stream.match(urlRE) &&\n          stream.string.slice(stream.start - 2, stream.start) != \"](\" &&\n          (stream.start == 0 || /\\W/.test(stream.string.charAt(stream.start - 1)))) {\n        // URLs\n        // Taken from http://daringfireball.net/2010/07/improved_regex_for_matching_urls\n        // And then (issue #1160) simplified to make it not crash the Chrome Regexp engine\n        // And then limited url schemes to the CommonMark list, so foo:bar isn't matched as a URL\n        state.combineTokens = true;\n        return \"link\";\n      }\n      stream.next();\n      return null;\n    },\n    blankLine: blankLine\n  };\n\n  var markdownConfig = {\n    taskLists: true,\n    strikethrough: true,\n    emoji: true\n  };\n  for (var attr in modeConfig) {\n    markdownConfig[attr] = modeConfig[attr];\n  }\n  markdownConfig.name = \"markdown\";\n  return CodeMirror.overlayMode(CodeMirror.getMode(config, markdownConfig), gfmOverlay);\n\n}, \"markdown\");\n\n  CodeMirror.defineMIME(\"text/x-gfm\", \"gfm\");\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","urlRE","defineMode","config","modeConfig","codeDepth","markdownConfig","taskLists","strikethrough","emoji","attr","name","overlayMode","getMode","gfmOverlay","startState","code","codeBlock","ateSpace","copyState","s","token","stream","state","combineTokens","match","skipToEnd","sol","peek","next","before","pos","eatWhile","difference","eatSpace","gitHubSpice","string","slice","start","test","charAt","blankLine","defineMIME"]
}
