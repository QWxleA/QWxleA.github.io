shadow$provide.module$node_modules$jszip$lib$utils=function(global,require,module,exports){function identity(input){return input}function stringToArrayLike(str,array){for(var i=0;i<str.length;++i)array[i]=str.charCodeAt(i)&255;return array}function arrayLikeToString(array){var chunk=65536,type=exports.getTypeOf(array),canUseApply=!0;"uint8array"===type?canUseApply=arrayToStringHelper.applyCanBeUsed.uint8array:"nodebuffer"===type&&(canUseApply=arrayToStringHelper.applyCanBeUsed.nodebuffer);if(canUseApply)for(;1<
chunk;)try{return arrayToStringHelper.stringifyByChunk(array,type,chunk)}catch(e){chunk=Math.floor(chunk/2)}return arrayToStringHelper.stringifyByChar(array)}function arrayLikeToArrayLike(arrayFrom,arrayTo){for(var i=0;i<arrayFrom.length;i++)arrayTo[i]=arrayFrom[i];return arrayTo}var support=require("module$node_modules$jszip$lib$support"),base64=require("module$node_modules$jszip$lib$base64"),nodejsUtils=require("module$node_modules$jszip$lib$nodejsUtils"),setImmediate=require("module$node_modules$set_immediate_shim$index"),
external=require("module$node_modules$jszip$lib$external");exports.newBlob=function(part,type){exports.checkSupport("blob");try{return new Blob([part],{type})}catch(e$jscomp$0){try{var builder=new (self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);builder.append(part);return builder.getBlob(type)}catch(e){throw Error("Bug : can't construct the Blob.");}}};try{var JSCompiler_inline_result=support.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(e){JSCompiler_inline_result=
!1}global=JSCompiler_inline_result;try{var JSCompiler_inline_result$jscomp$0=support.nodebuffer&&1===String.fromCharCode.apply(null,nodejsUtils.allocBuffer(1)).length}catch(e){JSCompiler_inline_result$jscomp$0=!1}var arrayToStringHelper={stringifyByChunk:function(array,type,chunk){var result=[],k=0,len=array.length;if(len<=chunk)return String.fromCharCode.apply(null,array);for(;k<len;)"array"===type||"nodebuffer"===type?result.push(String.fromCharCode.apply(null,array.slice(k,Math.min(k+chunk,len)))):
result.push(String.fromCharCode.apply(null,array.subarray(k,Math.min(k+chunk,len)))),k+=chunk;return result.join("")},stringifyByChar:function(array){for(var resultStr="",i=0;i<array.length;i++)resultStr+=String.fromCharCode(array[i]);return resultStr},applyCanBeUsed:{uint8array:global,nodebuffer:JSCompiler_inline_result$jscomp$0}};exports.applyFromCharCode=arrayLikeToString;var transform={};transform.string={string:identity,array:function(input){return stringToArrayLike(input,Array(input.length))},
arraybuffer:function(input){return transform.string.uint8array(input).buffer},uint8array:function(input){return stringToArrayLike(input,new Uint8Array(input.length))},nodebuffer:function(input){return stringToArrayLike(input,nodejsUtils.allocBuffer(input.length))}};transform.array={string:arrayLikeToString,array:identity,arraybuffer:function(input){return(new Uint8Array(input)).buffer},uint8array:function(input){return new Uint8Array(input)},nodebuffer:function(input){return nodejsUtils.newBufferFrom(input)}};
transform.arraybuffer={string:function(input){return arrayLikeToString(new Uint8Array(input))},array:function(input){return arrayLikeToArrayLike(new Uint8Array(input),Array(input.byteLength))},arraybuffer:identity,uint8array:function(input){return new Uint8Array(input)},nodebuffer:function(input){return nodejsUtils.newBufferFrom(new Uint8Array(input))}};transform.uint8array={string:arrayLikeToString,array:function(input){return arrayLikeToArrayLike(input,Array(input.length))},arraybuffer:function(input){return input.buffer},
uint8array:identity,nodebuffer:function(input){return nodejsUtils.newBufferFrom(input)}};transform.nodebuffer={string:arrayLikeToString,array:function(input){return arrayLikeToArrayLike(input,Array(input.length))},arraybuffer:function(input){return transform.nodebuffer.uint8array(input).buffer},uint8array:function(input){return arrayLikeToArrayLike(input,new Uint8Array(input.length))},nodebuffer:identity};exports.transformTo=function(outputType,input){input||="";if(!outputType)return input;exports.checkSupport(outputType);
var inputType=exports.getTypeOf(input);return transform[inputType][outputType](input)};exports.getTypeOf=function(input){if("string"===typeof input)return"string";if("[object Array]"===Object.prototype.toString.call(input))return"array";if(support.nodebuffer&&nodejsUtils.isBuffer(input))return"nodebuffer";if(support.uint8array&&input instanceof Uint8Array)return"uint8array";if(support.arraybuffer&&input instanceof ArrayBuffer)return"arraybuffer"};exports.checkSupport=function(type){if(!support[type.toLowerCase()])throw Error(type+
" is not supported by this platform");};exports.MAX_VALUE_16BITS=65535;exports.MAX_VALUE_32BITS=-1;exports.pretty=function(str){var res="",i;for(i=0;i<(str||"").length;i++){var code=str.charCodeAt(i);res+="\\x"+(16>code?"0":"")+code.toString(16).toUpperCase()}return res};exports.delay=function(callback,args,self){setImmediate(function(){callback.apply(self||null,args||[])})};exports.inherits=function(ctor,superCtor){var Obj=function(){};Obj.prototype=superCtor.prototype;ctor.prototype=new Obj};exports.extend=
function(){var result={},i,attr;for(i=0;i<arguments.length;i++)for(attr in arguments[i])arguments[i].hasOwnProperty(attr)&&"undefined"===typeof result[attr]&&(result[attr]=arguments[i][attr]);return result};exports.prepareContent=function(name,inputData,isBinary,isOptimizedBinaryString,isBase64){return external.Promise.resolve(inputData).then(function(data){return support.blob&&(data instanceof Blob||-1!==["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(data)))&&"undefined"!==
typeof FileReader?new external.Promise(function(resolve,reject){var reader=new FileReader;reader.onload=function(e){resolve(e.target.result)};reader.onerror=function(e){reject(e.target.error)};reader.readAsArrayBuffer(data)}):data}).then(function(data){var dataType=exports.getTypeOf(data);if(!dataType)return external.Promise.reject(Error("Can't read the data of '"+name+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"));"arraybuffer"===dataType?data=exports.transformTo("uint8array",
data):"string"===dataType&&(isBase64?data=base64.decode(data):isBinary&&!0!==isOptimizedBinaryString&&(dataType=support.uint8array?new Uint8Array(data.length):Array(data.length),data=stringToArrayLike(data,dataType)));return data})}}
//# sourceMappingURL=module$node_modules$jszip$lib$utils.js.map
