{"version":3,"sources":["frontend/components/git.cljs"],"mappings":";AASA,qDAAA,AAAAA,oBAAAC,qBAAA,9FAAWG,yGAGRE;AAHH,AAAA,AAAA,IAIQC,WAAS,kDAAA,lDAACC,4CAAIF;IACdG,QAAM,kDAAA,lDAACD,4CAAIF;AALnB,AAAA,OAAAJ,6BAAA,MAAA,aAAA,aAAA,CAAA,AAAAA,6BAAA,MAAA,aAAA,gBAAA,CAAA,0GAAA,AAAAA,6BAAA,MAAA,aAAA,0BAAA,CAAA,AAAAA,6BAAA,MAAA,aAAA,yCAAA,CAAA,AAAAA,6BAAA,KAAA,MAAA,6BAAA,yBAAA,CAAA,uBAAA,AAAAA,6BAAA,QAAA,aAAA,gBAAA,AAAAC,0BAekB,WAAKO;AAAL,AACE,OAACC,sBAAOJ,SAAS,AAACK,qBAAYF;gBAhBlD,6DAAA,IAAA,AAAAR,6BAAA,MAAA,aAAA,0BAAA,CAAA,AAAAA,6BAAA,MAAA,aAAA,yCAAA,CAAA,AAAAA,6BAAA,KAAA,MAAA,6BAAA,yBAAA,CAAA,4BAAA,AAAAA,6BAAA,QAAA,YAAA,AAAAC,0BAwBkB,WAAKO;AAAL,AACE,OAACC,sBAAOF,MAAM,AAACG,qBAAYF;gBAzB/C,wDAAA,IAAA,AAAAR,6BAAA,MAAA,aAAA,4CAAA,CAAA,AAAAA,6BAAA,OAAA,aAAA,sDAAA,CAAA,AAAAA,6BAAA,SAAA,QAAA,mBA+BmB;AAAA,AACE,mBAAA,AAAAW,fAAMN,+BAAUA;gBAAhB,AAAAM,ZACMJ,4BAAOA;AADb,AAEE,GAAM,EAAK,GAAK,AAACK,4BAAcP,qBACpB,GAAK,AAACO,4BAAcL;AAD/B,AAEE,OAACM,kDAAiCR,aAASE;;AAF7C;;eAlCvB,8SAAA,CAAA;GAAA,0YAAA,vTACE,6CAAA,GAAA,hDAACJ,0JACD,6CAAA,GAAA,hDAACA;AAqCH,gDAAA,AAAAL,oBAAAgB,oBAAA,xFAAUK,mGACPC,KAAKC,KAAKC;AADb,AAAA,AAAA,OAAAtB,6BAAA,MAAA,SAAA,SAAA,mBAAA,sBAAA,CAAA,AAAAA,6BAAA,MAAA,aAAA,kBAAA,4OAAA,iBAAAe,5PAGwB,6CAAKK,kDAAK,0DAAA,1DAACG,oHAAoBF,sDAC9CC;AAJT,AAAA,OAAAtB,6BAAA,MAAA,EAAA,AAAAgB,qBAAAD,aAAA,AAAAE,wCAAAF,YAAA,MAAA,EAAA,AAAAC,qBAAAD,aAAA,KAAA,CAAA,AAAAG,+BAAAH;KAAA,AAAAG,+BAKG,wDAAA,2DAAA,nHAACM,gLACW;AAAA,AACE,uFAAA,2CAAA,4EAAA,KAAA,qEAAA,jRAACC,iCAAgB,AAACC,kCACDN,KACAE;;GATlC,KAAA","names":["rum.core/lazy-build","rum.core/build-defcs","daiquiri.core/create-element","rum.core/mark-sync-update","frontend.components.git/set-git-username-and-email","rum.core.local","state","username","cljs.core.get","email","e","cljs.core/reset!","frontend.util/evalue","cljs.core/deref","clojure.string/blank?","frontend.handler.shell/set-git-username-and-email","rum.core/build-defc","attrs60505","cljs.core/map?","daiquiri.interpreter/element-attributes","daiquiri.interpreter/interpret","frontend.components.git/file-specific-version","path","hash","content","frontend.util.format","frontend.ui.button","frontend.handler.file/alter-file","frontend.state/get-current-repo"],"sourcesContent":["(ns frontend.components.git\n  (:require [rum.core :as rum]\n            [frontend.ui :as ui]\n            [frontend.util :as util]\n            [clojure.string :as string]\n            [frontend.handler.shell :as shell]\n            [frontend.handler.file :as file]\n            [frontend.state :as state]))\n\n(rum/defcs set-git-username-and-email <\n  (rum/local \"\" ::username)\n  (rum/local \"\" ::email)\n  [state]\n  (let [username (get state ::username)\n        email (get state ::email)]\n    [:div.container\n     [:div.text-lg.mb-4 \"Git requires to setup your username and email address to commit, both of them will be stored locally.\"]\n     [:div.sm:flex.sm:items-start\n      [:div.mt-3.text-center.sm:mt-0.sm:text-left\n       [:h3#modal-headline.leading-6.font-medium\n        \"Your username:\"]]]\n\n     [:input.form-input.block.w-full.sm:text-sm.sm:leading-5.my-2.mb-4\n      {:auto-focus true\n       :on-change (fn [e]\n                    (reset! username (util/evalue e)))}]\n\n     [:div.sm:flex.sm:items-start\n      [:div.mt-3.text-center.sm:mt-0.sm:text-left\n       [:h3#modal-headline.leading-6.font-medium\n        \"Your email address:\"]]]\n\n     [:input.form-input.block.w-full.sm:text-sm.sm:leading-5.my-2\n      {:on-change (fn [e]\n                    (reset! email (util/evalue e)))}]\n\n     [:div.mt-5.sm:mt-4.sm:flex.sm:flex-row-reverse\n      [:span.flex.w-full.rounded-md.shadow-sm.sm:ml-3.sm:w-auto\n       [:button.inline-flex.justify-center.w-full.rounded-md.border.border-transparent.px-4.py-2.bg-indigo-600.text-base.leading-6.font-medium.text-white.shadow-sm.hover:bg-indigo-500.focus:outline-none.focus:border-indigo-700.focus:shadow-outline-indigo.transition.ease-in-out.duration-150.sm:text-sm.sm:leading-5\n        {:type \"button\"\n         :on-click (fn []\n                     (let [username @username\n                           email @email]\n                       (when (and (not (string/blank? username))\n                                  (not (string/blank? email)))\n                         (shell/set-git-username-and-email username email))))}\n        \"Submit\"]]]]))\n\n(rum/defc file-specific-version\n  [path hash content]\n  [:div.w-full.sm:max-w-lg {:style {:width 700}}\n   [:div.font-bold.mb-4 (str path (util/format \" (%s)\" hash)) ]\n   [:pre content]\n   (ui/button \"Revert\"\n     :on-click (fn []\n                 (file/alter-file (state/get-current-repo)\n                                  path\n                                  content\n                                  {:re-render-root? true\n                                   :skip-compare? true})))])\n"]}