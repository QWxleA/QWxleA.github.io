shadow$provide.module$node_modules$chrono_node$dist$chrono=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.ParsingContext=exports.Chrono=void 0;const results_1=require("module$node_modules$chrono_node$dist$results"),en_1=require("module$node_modules$chrono_node$dist$locales$en$index");class Chrono{constructor(configuration){configuration=configuration||en_1.createCasualConfiguration();this.parsers=[...configuration.parsers];this.refiners=[...configuration.refiners]}clone(){return new Chrono({parsers:[...this.parsers],
refiners:[...this.refiners]})}parseDate(text,referenceDate,option){text=this.parse(text,referenceDate,option);return 0<text.length?text[0].start.date():null}parse(text,referenceDate,option){const context=new ParsingContext(text,referenceDate||new Date,option||{});let results=[];this.parsers.forEach(parser=>{parser=Chrono.executeParser(context,parser);results=results.concat(parser)});results.sort((a,b)=>a.index-b.index);this.refiners.forEach(function(refiner){results=refiner.refine(context,results)});
return results}static executeParser(context,parser){const results=[],pattern=parser.pattern(context),originalText=context.text;var remainingText=context.text;let match=pattern.exec(remainingText);for(;match;){remainingText=match.index+originalText.length-remainingText.length;match.index=remainingText;const result=parser.extract(context,match);if(!result){remainingText=originalText.substring(match.index+1);match=pattern.exec(remainingText);continue}let parsedResult=null;result instanceof results_1.ParsingResult?
parsedResult=result:result instanceof results_1.ParsingComponents?(parsedResult=context.createParsingResult(match.index,match[0]),parsedResult.start=result):parsedResult=context.createParsingResult(match.index,match[0],result);context.debug(()=>console.log(`${parser.constructor.name} extracted result ${parsedResult}`));results.push(parsedResult);remainingText=originalText.substring(remainingText+parsedResult.text.length);match=pattern.exec(remainingText)}return results}}exports.Chrono=Chrono;class ParsingContext{constructor(text,
refDate,option){this.text=text;this.refDate=refDate;this.option=option}createParsingComponents(components){return new results_1.ParsingComponents(this.refDate,components)}createParsingResult(index,textOrEndIndex,startComponents,endComponents){textOrEndIndex="string"===typeof textOrEndIndex?textOrEndIndex:this.text.substring(index,textOrEndIndex);startComponents=startComponents?this.createParsingComponents(startComponents):null;endComponents=endComponents?this.createParsingComponents(endComponents):
null;return new results_1.ParsingResult(this.refDate,index,textOrEndIndex,startComponents,endComponents)}debug(block){this.option.debug&&(this.option.debug instanceof Function?this.option.debug(block):this.option.debug.debug(block))}}exports.ParsingContext=ParsingContext}
//# sourceMappingURL=module$node_modules$chrono_node$dist$chrono.js.map
