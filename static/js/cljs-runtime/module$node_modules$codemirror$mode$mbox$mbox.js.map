{
"version":3,
"file":"module$node_modules$codemirror$mode$mbox$mbox.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/codemirror/mode/mbox/mbox.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$mbox$mbox\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar rfc2822 = [\n  \"From\", \"Sender\", \"Reply-To\", \"To\", \"Cc\", \"Bcc\", \"Message-ID\",\n  \"In-Reply-To\", \"References\", \"Resent-From\", \"Resent-Sender\", \"Resent-To\",\n  \"Resent-Cc\", \"Resent-Bcc\", \"Resent-Message-ID\", \"Return-Path\", \"Received\"\n];\nvar rfc2822NoEmail = [\n  \"Date\", \"Subject\", \"Comments\", \"Keywords\", \"Resent-Date\"\n];\n\nCodeMirror.registerHelper(\"hintWords\", \"mbox\", rfc2822.concat(rfc2822NoEmail));\n\nvar whitespace = /^[ \\t]/;\nvar separator = /^From /; // See RFC 4155\nvar rfc2822Header = new RegExp(\"^(\" + rfc2822.join(\"|\") + \"): \");\nvar rfc2822HeaderNoEmail = new RegExp(\"^(\" + rfc2822NoEmail.join(\"|\") + \"): \");\nvar header = /^[^:]+:/; // Optional fields defined in RFC 2822\nvar email = /^[^ ]+@[^ ]+/;\nvar untilEmail = /^.*?(?=[^ ]+?@[^ ]+)/;\nvar bracketedEmail = /^<.*?>/;\nvar untilBracketedEmail = /^.*?(?=<.*>)/;\n\nfunction styleForHeader(header) {\n  if (header === \"Subject\") return \"header\";\n  return \"string\";\n}\n\nfunction readToken(stream, state) {\n  if (stream.sol()) {\n    // From last line\n    state.inSeparator = false;\n    if (state.inHeader && stream.match(whitespace)) {\n      // Header folding\n      return null;\n    } else {\n      state.inHeader = false;\n      state.header = null;\n    }\n\n    if (stream.match(separator)) {\n      state.inHeaders = true;\n      state.inSeparator = true;\n      return \"atom\";\n    }\n\n    var match;\n    var emailPermitted = false;\n    if ((match = stream.match(rfc2822HeaderNoEmail)) ||\n        (emailPermitted = true) && (match = stream.match(rfc2822Header))) {\n      state.inHeaders = true;\n      state.inHeader = true;\n      state.emailPermitted = emailPermitted;\n      state.header = match[1];\n      return \"atom\";\n    }\n\n    // Use vim's heuristics: recognize custom headers only if the line is in a\n    // block of legitimate headers.\n    if (state.inHeaders && (match = stream.match(header))) {\n      state.inHeader = true;\n      state.emailPermitted = true;\n      state.header = match[1];\n      return \"atom\";\n    }\n\n    state.inHeaders = false;\n    stream.skipToEnd();\n    return null;\n  }\n\n  if (state.inSeparator) {\n    if (stream.match(email)) return \"link\";\n    if (stream.match(untilEmail)) return \"atom\";\n    stream.skipToEnd();\n    return \"atom\";\n  }\n\n  if (state.inHeader) {\n    var style = styleForHeader(state.header);\n\n    if (state.emailPermitted) {\n      if (stream.match(bracketedEmail)) return style + \" link\";\n      if (stream.match(untilBracketedEmail)) return style;\n    }\n    stream.skipToEnd();\n    return style;\n  }\n\n  stream.skipToEnd();\n  return null;\n};\n\nCodeMirror.defineMode(\"mbox\", function() {\n  return {\n    startState: function() {\n      return {\n        // Is in a mbox separator\n        inSeparator: false,\n        // Is in a mail header\n        inHeader: false,\n        // If bracketed email is permitted. Only applicable when inHeader\n        emailPermitted: false,\n        // Name of current header\n        header: null,\n        // Is in a region of mail headers\n        inHeaders: false\n      };\n    },\n    token: readToken,\n    blankLine: function(state) {\n      state.inHeaders = state.inSeparator = state.inHeader = false;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"application/mbox\", \"mbox\");\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","readToken","stream","state","sol","inSeparator","inHeader","match","whitespace","header","separator","inHeaders","emailPermitted","rfc2822HeaderNoEmail","rfc2822Header","skipToEnd","email","untilEmail","bracketedEmail","style","untilBracketedEmail","rfc2822","rfc2822NoEmail","registerHelper","concat","RegExp","join","defineMode","startState","token","blankLine","defineMIME"]
}
