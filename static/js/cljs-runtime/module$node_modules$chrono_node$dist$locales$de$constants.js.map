{
"version":3,
"file":"module$node_modules$chrono_node$dist$locales$de$constants.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/chrono-node/dist/locales/de/constants.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$locales$de$constants\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseTimeUnits = exports.TIME_UNITS_PATTERN = exports.parseYear = exports.YEAR_PATTERN = exports.parseNumberPattern = exports.NUMBER_PATTERN = exports.TIME_UNIT_DICTIONARY = exports.INTEGER_WORD_DICTIONARY = exports.MONTH_DICTIONARY = exports.WEEKDAY_DICTIONARY = void 0;\nconst pattern_1 = require(\"../../utils/pattern\");\nconst years_1 = require(\"../../calculation/years\");\nexports.WEEKDAY_DICTIONARY = {\n    \"sonntag\": 0,\n    \"so\": 0,\n    \"montag\": 1,\n    \"mo\": 1,\n    \"dienstag\": 2,\n    \"di\": 2,\n    \"mittwoch\": 3,\n    \"mi\": 3,\n    \"donnerstag\": 4,\n    \"do\": 4,\n    \"freitag\": 5,\n    \"fr\": 5,\n    \"samstag\": 6,\n    \"sa\": 6,\n};\nexports.MONTH_DICTIONARY = {\n    \"januar\": 1,\n    \"jan\": 1,\n    \"jan.\": 1,\n    \"februar\": 2,\n    \"feb\": 2,\n    \"feb.\": 2,\n    \"m\u00e4rz\": 3,\n    \"maerz\": 3,\n    \"m\u00e4r\": 3,\n    \"m\u00e4r.\": 3,\n    \"mrz\": 3,\n    \"mrz.\": 3,\n    \"april\": 4,\n    \"apr\": 4,\n    \"apr.\": 4,\n    \"mai\": 5,\n    \"juni\": 6,\n    \"jun\": 6,\n    \"jun.\": 6,\n    \"juli\": 7,\n    \"jul\": 7,\n    \"jul.\": 7,\n    \"august\": 8,\n    \"aug\": 8,\n    \"aug.\": 8,\n    \"september\": 9,\n    \"sep\": 9,\n    \"sep.\": 9,\n    \"sept\": 9,\n    \"sept.\": 9,\n    \"oktober\": 10,\n    \"okt\": 10,\n    \"okt.\": 10,\n    \"november\": 11,\n    \"nov\": 11,\n    \"nov.\": 11,\n    \"dezember\": 12,\n    \"dez\": 12,\n    \"dez.\": 12,\n};\nexports.INTEGER_WORD_DICTIONARY = {\n    \"eins\": 1,\n    \"zwei\": 2,\n    \"drei\": 3,\n    \"vier\": 4,\n    \"f\u00fcnf\": 5,\n    \"fuenf\": 5,\n    \"sechs\": 6,\n    \"sieben\": 7,\n    \"acht\": 8,\n    \"neun\": 9,\n    \"zehn\": 10,\n    \"elf\": 11,\n    \"zw\u00f6lf\": 12,\n    \"zwoelf\": 12,\n};\nexports.TIME_UNIT_DICTIONARY = {\n    sec: \"second\",\n    second: \"second\",\n    seconds: \"second\",\n    min: \"minute\",\n    mins: \"minute\",\n    minute: \"minute\",\n    minutes: \"minute\",\n    h: \"hour\",\n    hr: \"hour\",\n    hrs: \"hour\",\n    hour: \"hour\",\n    hours: \"hour\",\n    day: \"d\",\n    days: \"d\",\n    week: \"week\",\n    weeks: \"week\",\n    month: \"month\",\n    months: \"month\",\n    y: \"year\",\n    yr: \"year\",\n    year: \"year\",\n    years: \"year\",\n};\nexports.NUMBER_PATTERN = `(?:${pattern_1.matchAnyPattern(exports.INTEGER_WORD_DICTIONARY)}|[0-9]+|[0-9]+\\\\.[0-9]+|half(?:\\\\s*an?)?|an?(?:\\\\s*few)?|few|several|a?\\\\s*couple\\\\s*(?:of)?)`;\nfunction parseNumberPattern(match) {\n    const num = match.toLowerCase();\n    if (exports.INTEGER_WORD_DICTIONARY[num] !== undefined) {\n        return exports.INTEGER_WORD_DICTIONARY[num];\n    }\n    else if (num === \"a\" || num === \"an\") {\n        return 1;\n    }\n    else if (num.match(/few/)) {\n        return 3;\n    }\n    else if (num.match(/half/)) {\n        return 0.5;\n    }\n    else if (num.match(/couple/)) {\n        return 2;\n    }\n    else if (num.match(/several/)) {\n        return 7;\n    }\n    return parseFloat(num);\n}\nexports.parseNumberPattern = parseNumberPattern;\nexports.YEAR_PATTERN = `(?:[0-9]{1,4}(?:\\\\s*[vn]\\\\.?\\\\s*C(?:hr)?\\\\.?)?)`;\nfunction parseYear(match) {\n    if (/v/i.test(match)) {\n        return -parseInt(match.replace(/[^0-9]+/gi, \"\"));\n    }\n    if (/n/i.test(match)) {\n        return parseInt(match.replace(/[^0-9]+/gi, \"\"));\n    }\n    const rawYearNumber = parseInt(match);\n    return years_1.findMostLikelyADYear(rawYearNumber);\n}\nexports.parseYear = parseYear;\nconst SINGLE_TIME_UNIT_PATTERN = `(${exports.NUMBER_PATTERN})\\\\s{0,5}(${pattern_1.matchAnyPattern(exports.TIME_UNIT_DICTIONARY)})\\\\s{0,5}`;\nconst SINGLE_TIME_UNIT_REGEX = new RegExp(SINGLE_TIME_UNIT_PATTERN, \"i\");\nexports.TIME_UNITS_PATTERN = pattern_1.repeatedTimeunitPattern(\"\", SINGLE_TIME_UNIT_PATTERN);\nfunction parseTimeUnits(timeunitText) {\n    const fragments = {};\n    let remainingText = timeunitText;\n    let match = SINGLE_TIME_UNIT_REGEX.exec(remainingText);\n    while (match) {\n        collectDateTimeFragment(fragments, match);\n        remainingText = remainingText.substring(match[0].length);\n        match = SINGLE_TIME_UNIT_REGEX.exec(remainingText);\n    }\n    return fragments;\n}\nexports.parseTimeUnits = parseTimeUnits;\nfunction collectDateTimeFragment(fragments, match) {\n    const num = parseNumberPattern(match[1]);\n    const unit = exports.TIME_UNIT_DICTIONARY[match[2].toLowerCase()];\n    fragments[unit] = num;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","parseNumberPattern","match","num","toLowerCase","undefined","INTEGER_WORD_DICTIONARY","parseFloat","Object","defineProperty","value","parseTimeUnits","TIME_UNITS_PATTERN","parseYear","YEAR_PATTERN","NUMBER_PATTERN","TIME_UNIT_DICTIONARY","MONTH_DICTIONARY","WEEKDAY_DICTIONARY","pattern_1","years_1","sec","second","seconds","min","mins","minute","minutes","h","hr","hrs","hour","hours","day","days","week","weeks","month","months","y","yr","year","years","matchAnyPattern","test","parseInt","replace","rawYearNumber","findMostLikelyADYear","SINGLE_TIME_UNIT_PATTERN","SINGLE_TIME_UNIT_REGEX","RegExp","repeatedTimeunitPattern","timeunitText","fragments","exec","remainingText","unit","substring","length"]
}
