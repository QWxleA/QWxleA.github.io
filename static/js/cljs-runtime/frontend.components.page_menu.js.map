{"version":3,"sources":["frontend/components/page_menu.cljs"],"mappings":"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","names":["frontend.components.page-menu/delete-page!","page-name","frontend.handler.page/delete!","frontend.handler.notification.show_BANG_","frontend.state/close-modal!","frontend.handler.route.redirect_to_home_BANG_","frontend.components.page-menu/delete-page-dialog","close-fn","frontend.ui.icon","frontend.context.i18n.t","frontend.components.page-menu/page-menu","temp__5720__auto__","or__5043__auto__","frontend.state/get-current-page","frontend.util/page-name-sanity-lc","repo","frontend.state/sub","page","G__59819","G__59820","frontend.db/entity","page-original-name","block?","and__5041__auto__","frontend.util/uuid-string?","contents?","cljs.core._EQ_","properties","public?","favorites","frontend.state/sub-graph-config","favorited?","cljs.core/contains?","cljs.core/set","cljs.core.map","developer-mode?","file-path","frontend.util/electron?","frontend.handler.page.get_page_file_path","_","cljs.core/not","frontend.handler.page/unfavorite-page!","frontend.handler.page/favorite-page!","frontend.mobile.util/native-platform?","frontend.state/sidebar-add-block!","js/window.apis.showItemInFolder","js/window.apis.openPath","frontend.util.copy_to_clipboard_BANG_","frontend.util.url.get_logseq_graph_page_url","frontend.state.set_modal_BANG_","frontend.components.export/export-blocks","frontend.handler.page/update-public-attribute!","frontend.handler.shell/get-file-latest-git-log","frontend.handler.user/logged-in?","frontend.handler.file-sync/hiding-login&file-sync","graph-uuid","frontend.handler.file-sync/get-current-graph-uuid","frontend.handler.file-sync/list-file-versions","electron.ipc.ipc","frontend.config/get-local-dir","frontend.handler.plugin/lsp-enabled?","iter__5520__auto__","s__59827","cljs.core/LazySeq","cljs.core/seq","cljs.core/chunked-seq?","c__5518__auto__","size__5519__auto__","cljs.core/count","b__59829","cljs.core/chunk-buffer","i__59828","vec__59830","cljs.core/-nth","cljs.core.nth","map__59833","cljs.core/--destructure-map","cljs.core.get","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__59826","cljs.core/chunk-rest","vec__59834","cljs.core/first","map__59837","cljs.core/cons","cljs.core/rest","label","cmd","action","pid","frontend.state/get-plugins-commands-with-type","frontend.commands/exec-plugin-simple-command!","cljs.core.assoc","page-data","sb__5687__auto__","goog.string/StringBuffer","*print-newline*-orig-val__59838","cljs.core/*print-newline*","*print-fn*-orig-val__59839","cljs.core/*print-fn*","*print-newline*-temp-val__59840","*print-fn*-temp-val__59841","x__5688__auto__","cljs.pprint.pprint","G__59842","frontend.db/pull","cljs.core.println","frontend.ui.button","js/navigator.clipboard","cljs.core/flatten","cljs.core.remove","cljs.core/nil?","cljs.core/chunk-first"],"sourcesContent":["(ns frontend.components.page-menu\n  (:require [cljs.pprint :as pprint]\n            [frontend.commands :as commands]\n            [frontend.components.export :as export]\n            [frontend.context.i18n :refer [t]]\n            [frontend.db :as db]\n            [frontend.handler.notification :as notification]\n            [frontend.handler.page :as page-handler]\n            [frontend.handler.route :as route-handler]\n            [frontend.state :as state]\n            [frontend.ui :as ui]\n            [frontend.util :as util]\n            [frontend.util.url :as url-util]\n            [frontend.handler.shell :as shell]\n            [frontend.handler.plugin :as plugin-handler]\n            [frontend.mobile.util :as mobile-util]\n            [electron.ipc :as ipc]\n            [frontend.config :as config]\n            [frontend.handler.user :as user-handler]\n            [frontend.handler.file-sync :as file-sync-handler]))\n\n(defn- delete-page!\n  [page-name]\n  (page-handler/delete! page-name\n                        (fn []\n                          (notification/show! (str \"Page \" page-name \" was deleted successfully!\")\n                                              :success)))\n  (state/close-modal!)\n  (route-handler/redirect-to-home!))\n\n(defn delete-page-dialog\n  [page-name]\n  (fn [close-fn]\n    [:div\n     [:div.sm:flex.items-center\n      [:div.mx-auto.flex-shrink-0.flex.items-center.justify-center.h-12.w-12.rounded-full.bg-red-100.sm:mx-0.sm:h-10.sm:w-10\n       [:span.text-red-600.text-xl\n        (ui/icon \"alert-triangle\")]]\n      [:div.mt-3.text-center.sm:mt-0.sm:ml-4.sm:text-left\n       [:h3#modal-headline.text-lg.leading-6.font-medium\n        (t :page/delete-confirmation)]]]\n\n     [:div.mt-5.sm:mt-4.sm:flex.sm:flex-row-reverse\n      [:span.flex.w-full.rounded-md.shadow-sm.sm:ml-3.sm:w-auto\n       [:button.inline-flex.justify-center.w-full.rounded-md.border.border-transparent.px-4.py-2.bg-indigo-600.text-base.leading-6.font-medium.text-white.shadow-sm.hover:bg-indigo-500.focus:outline-none.focus:border-indigo-700.focus:shadow-outline-indigo.transition.ease-in-out.duration-150.sm:text-sm.sm:leading-5\n        {:type \"button\"\n         :class \"ui__modal-enter\"\n         :on-click (fn []\n                     (delete-page! page-name))}\n        (t :yes)]]\n      [:span.mt-3.flex.w-full.rounded-md.shadow-sm.sm:mt-0.sm:w-auto\n       [:button.inline-flex.justify-center.w-full.rounded-md.border.border-gray-300.px-4.py-2.bg-white.text-base.leading-6.font-medium.text-gray-700.shadow-sm.hover:text-gray-500.focus:outline-none.focus:border-blue-300.focus:shadow-outline-blue.transition.ease-in-out.duration-150.sm:text-sm.sm:leading-5\n        {:type \"button\"\n         :on-click close-fn}\n        (t :cancel)]]]]))\n\n(defn ^:large-vars/cleanup-todo page-menu\n  [page-name]\n  (when-let [page-name (or\n                        page-name\n                        (state/get-current-page))]\n    (let [page-name (util/page-name-sanity-lc page-name)\n          repo (state/sub :git/current-repo)\n          page (db/entity repo [:block/name page-name])\n          page-original-name (:block/original-name page)\n          block? (and page (util/uuid-string? page-name))\n          contents? (= page-name \"contents\")\n          properties (:block/properties page)\n          public? (true? (:public properties))\n          favorites (:favorites (state/sub-graph-config))\n          favorited? (contains? (set (map util/page-name-sanity-lc favorites))\n                                page-name)\n          developer-mode? (state/sub [:ui/developer-mode?])\n          file-path (when (util/electron?) (page-handler/get-page-file-path))\n          _ (state/sub :auth/id-token)]\n      (when (and page (not block?))\n        (->>\n         [{:title   (if favorited?\n                      (t :page/unfavorite)\n                      (t :page/add-to-favorites))\n           :options {:on-click\n                     (fn []\n                       (if favorited?\n                         (page-handler/unfavorite-page! page-original-name)\n                         (page-handler/favorite-page! page-original-name)))}}\n\n          (when-not (mobile-util/native-platform?)\n            {:title (t :page/presentation-mode)\n             :options {:on-click (fn []\n                                   (state/sidebar-add-block!\n                                    repo\n                                    (:db/id page)\n                                    :page-presentation))}})\n\n          ;; TODO: In the future, we'd like to extract file-related actions\n          ;; (such as open-in-finder & open-with-default-app) into a sub-menu of\n          ;; this one. However this component doesn't yet exist. PRs are welcome!\n          ;; Details: https://github.com/logseq/logseq/pull/3003#issuecomment-952820676\n          (when file-path\n            [{:title   (t :page/open-in-finder)\n              :options {:on-click #(js/window.apis.showItemInFolder file-path)}}\n             {:title   (t :page/open-with-default-app)\n              :options {:on-click #(js/window.apis.openPath file-path)}}])\n\n          (when (or (util/electron?)\n                    (mobile-util/native-platform?))\n            {:title   (t :page/copy-page-url)\n             :options {:on-click #(util/copy-to-clipboard!\n                                   (url-util/get-logseq-graph-page-url nil repo page-original-name))}})\n\n          (when-not contents?\n            {:title   (t :page/delete)\n             :options {:on-click #(state/set-modal! (delete-page-dialog page-name))}})\n\n          (when (state/get-current-page)\n            {:title   (t :export-page)\n             :options {:on-click #(state/set-modal!\n                                   (fn []\n                                     (export/export-blocks [(:block/uuid page)])))}})\n\n          (when (util/electron?)\n            {:title   (t (if public? :page/make-private :page/make-public))\n             :options {:on-click\n                       (fn []\n                         (page-handler/update-public-attribute!\n                          page-name\n                          (if public? false true))\n                         (state/close-modal!))}})\n\n          (when (util/electron?)\n            {:title   (t :page/version-history)\n             :options {:on-click\n                       (fn []\n                         (shell/get-file-latest-git-log page 100))}})\n          (when (and (user-handler/logged-in?) (not file-sync-handler/hiding-login&file-sync))\n            (when-let [graph-uuid (file-sync-handler/get-current-graph-uuid)]\n              {:title (t :page/file-sync-versions)\n               :options {:on-click #(file-sync-handler/list-file-versions graph-uuid page)}}))\n\n          (when (and (util/electron?) file-path)\n            {:title   (t :page/open-backup-directory)\n             :options {:on-click\n                       (fn []\n                         (ipc/ipc \"openFileBackupDir\" (config/get-local-dir repo) file-path))}})\n\n          (when plugin-handler/lsp-enabled?\n            (for [[_ {:keys [label] :as cmd} action pid] (state/get-plugins-commands-with-type :page-menu-item)]\n              {:title label\n               :options {:on-click #(commands/exec-plugin-simple-command!\n                                     pid (assoc cmd :page page-name) action)}}))\n\n          (when developer-mode?\n            {:title   \"(Dev) Show page data\"\n             :options {:on-click (fn []\n                                   (let [page-data (with-out-str (pprint/pprint (db/pull (:db/id page))))]\n                                     (println page-data)\n                                     (notification/show!\n                                      [:div\n                                       [:pre.code page-data]\n                                       [:br]\n                                       (ui/button\n                                        \"Copy to clipboard\"\n                                        :on-click #(.writeText js/navigator.clipboard page-data))]\n                                      :success\n                                      false)))}})]\n         (flatten)\n         (remove nil?))))))\n"]}