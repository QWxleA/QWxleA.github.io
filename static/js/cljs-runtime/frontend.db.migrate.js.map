{"version":3,"sources":["frontend/db/migrate.cljs"],"mappings":";AAGA,2CAAA,3CAAMA,8FACHC;AADH,AAEE,IAAAC,WAAA,AAAA;IAAAC,WAMEF;AANF,AAAA,0GAAAC,SAAAC,wCAAAD,SAAAC,5JAACC,kDAAAA,qEAAAA;;AAQH,8BAAA,9BAAMC,oEACHJ;AADH,AAEE,oBAAMA;AAAN,AACE,IAAMK,mBAAiB,AAACN,yCAAqBC;AAA7C,AACE,GAAI,AAACM,cAAID;AACP,IAAME,UAAQ,AAACC,4CAAI,WAAKC;AAAL,AAAA,kDAAA,wDAAA,0EAAA,7EAAiBA;GACkBJ;AADtD,AAEE,OAACK,wBAAUV,GAAGO;;AAChBP;;;AANN","names":["frontend.db.migrate/get-collapsed-blocks","db","G__88092","G__88093","datascript.core/q","frontend.db.migrate/migrate","collapsed-blocks","cljs.core/seq","tx-data","cljs.core.map","id","datascript.core/db-with"],"sourcesContent":["(ns frontend.db.migrate\n  (:require [datascript.core :as d]))\n\n(defn get-collapsed-blocks\n  [db]\n  (d/q\n    '[:find [?b ...]\n      :where\n      [?b :block/properties ?properties]\n      [(get ?properties :collapsed) ?collapsed]\n      [(= true ?collapsed)]]\n    db))\n\n(defn migrate\n  [db]\n  (when db\n    (let [collapsed-blocks (get-collapsed-blocks db)]\n      (if (seq collapsed-blocks)\n        (let [tx-data (map (fn [id] {:db/id id\n                                     :block/collapsed? true}) collapsed-blocks)]\n          (d/db-with db tx-data))\n        db))))\n"]}