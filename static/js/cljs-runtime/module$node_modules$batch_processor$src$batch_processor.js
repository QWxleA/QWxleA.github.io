shadow$provide.module$node_modules$batch_processor$src$batch_processor=function(global,require,module,exports){function Batch(){var batch={},size=0,topLevel=0,bottomLevel=0;return{add:function(level,fn){fn||(fn=level,level=0);level>topLevel?topLevel=level:level<bottomLevel&&(bottomLevel=level);batch[level]||(batch[level]=[]);batch[level].push(fn);size++},process:function(){for(var level=bottomLevel;level<=topLevel;level++)for(var fns=batch[level],i=0;i<fns.length;i++)(0,fns[i])()},size:function(){return size}}}
var utils=require("module$node_modules$batch_processor$src$utils");module.exports=function(options){function processBatch(){for(isProcessing=!0;batch.size();){var processingBatch=batch;batch=Batch();processingBatch.process()}isProcessing=!1}options=options||{};var reporter=options.reporter,asyncProcess=utils.getOption(options,"async",!0),autoProcess=utils.getOption(options,"auto",!0);autoProcess&&!asyncProcess&&(reporter&&reporter.warn("Invalid options combination. auto\x3dtrue and async\x3dfalse is invalid. Setting async\x3dtrue."),
asyncProcess=!0);var batch=Batch(),asyncFrameHandler,isProcessing=!1;return{add:function(level,fn){!isProcessing&&autoProcess&&asyncProcess&&0===batch.size()&&(asyncFrameHandler=setTimeout(processBatch,0));batch.add(level,fn)},force:function(localAsyncProcess){isProcessing||(void 0===localAsyncProcess&&(localAsyncProcess=asyncProcess),asyncFrameHandler&&(clearTimeout(asyncFrameHandler),asyncFrameHandler=null),localAsyncProcess?asyncFrameHandler=setTimeout(processBatch,0):processBatch())}}}}
//# sourceMappingURL=module$node_modules$batch_processor$src$batch_processor.js.map
