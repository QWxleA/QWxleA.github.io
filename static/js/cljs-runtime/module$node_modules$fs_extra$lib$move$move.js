shadow$provide.module$node_modules$fs_extra$lib$move$move=function(global,require,module,exports){function doRename(src,dest,overwrite,cb){if(overwrite)return remove(dest,err=>err?cb(err):rename(src,dest,overwrite,cb));pathExists(dest,(err,destExists)=>err?cb(err):destExists?cb(Error("dest already exists.")):rename(src,dest,overwrite,cb))}function rename(src,dest,overwrite,cb){fs.rename(src,dest,err=>err?"EXDEV"!==err.code?cb(err):moveAcrossDevice(src,dest,overwrite,cb):cb())}function moveAcrossDevice(src,
dest,overwrite,cb){copy(src,dest,{overwrite,errorOnExist:!0},err=>err?cb(err):remove(src,cb))}const fs=require("module$node_modules$graceful_fs$graceful_fs"),path=require("module$node_modules$path_browserify$index"),copy=require("module$node_modules$fs_extra$lib$copy$index").copy,remove=require("module$node_modules$fs_extra$lib$remove$index").remove,mkdirp=require("module$node_modules$fs_extra$lib$mkdirs$index").mkdirp,pathExists=require("module$node_modules$fs_extra$lib$path_exists$index").pathExists,
stat=require("module$node_modules$fs_extra$lib$util$stat");module.exports=function(src,dest,opts,cb){"function"===typeof opts&&(cb=opts,opts={});const overwrite=opts.overwrite||opts.clobber||!1;stat.checkPaths(src,dest,"move",(err$jscomp$1,stats)=>{if(err$jscomp$1)return cb(err$jscomp$1);({srcStat:err$jscomp$1}=stats);stat.checkParentPaths(src,err$jscomp$1,dest,"move",err$jscomp$0=>{if(err$jscomp$0)return cb(err$jscomp$0);mkdirp(path.dirname(dest),err=>err?cb(err):doRename(src,dest,overwrite,cb))})})}}
//# sourceMappingURL=module$node_modules$fs_extra$lib$move$move.js.map
