{"version":3,"sources":["frontend/components/shortcut.cljs"],"mappings":"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","names":["rum.core/lazy-build","rum.core/build-defcs","daiquiri.core/create-element","attrs62513","cljs.core/map?","daiquiri.interpreter/element-attributes","daiquiri.interpreter/interpret","attrs62505","daiquiri.normalize.merge_with_class","attrs62498","frontend.components.shortcut/customize-shortcut-dialog-inner","rum.core.local","frontend.modules.shortcut.core/record!","state","k","action-name","current-binding","keypress","keyboard-shortcut","cljs.core/deref","cljs.core._EQ_","frontend.ui/render-keyboard-shortcut","clojure.string/trim","clojure.string/lower-case","clojure.string.split","frontend.modules.shortcut.data-helper/remove-shortcut","frontend.modules.shortcut.core/refresh!","cljs.core.swap_BANG_","frontend.ui.button","frontend.state/close-modal!","cljs.core/reset!","frontend.modules.shortcut.data-helper/binding-for-storage","frontend.components.shortcut/customize-shortcut-dialog","displayed-binding","_","rum.core/build-defc","attrs62515","attrs62516","frontend.components.shortcut/shortcut-col","binding","configurable?","conflict?","frontend.modules.shortcut.data-helper/potential-conflict?","frontend.modules.shortcut.data-helper/binding-for-display","disabled?","clojure.string/includes?","cljs.core/not","frontend.state.set_modal_BANG_","attrs62530","attrs62527","frontend.components.shortcut/shortcut-table","rum.core/reactive","name","shortcut-config","rum.core/cursor-in","frontend.state/state","frontend.state/get-current-repo","rum.core/react","frontend.context.i18n.t","cljs.core.map","p__62531","vec__62532","cljs.core.nth","map__62535","cljs.core/--destructure-map","cljs.core.get","frontend.modules.shortcut.data-helper/decorate-namespace","frontend.modules.shortcut.data-helper/binding-by-category","attrs62536","attrs62537","attrs62538","attrs62548","attrs62554","attrs62570","attrs62577","attrs62578","attrs62583","attrs62586","frontend.components.shortcut/trigger-table","frontend.components.shortcut/markdown-and-orgmode-syntax","list","preferred-format","frontend.state.get_preferred_format","title","G__62599","cljs.core/Keyword","js/Error","learn-more","G__62608","raw","G__62616","rendered","frontend.extensions.latex/latex","frontend.extensions.highlight/highlight","attrs62630","frontend.components.shortcut/shortcut"],"sourcesContent":["(ns frontend.components.shortcut\n  (:require [clojure.string :as str]\n            [frontend.context.i18n :refer [t]]\n            [frontend.modules.shortcut.core :as shortcut]\n            [frontend.modules.shortcut.data-helper :as dh]\n            [frontend.state :as state]\n            [frontend.ui :as ui]\n            [frontend.extensions.latex :as latex]\n            [frontend.extensions.highlight :as highlight]\n            [rum.core :as rum]))\n\n(rum/defcs customize-shortcut-dialog-inner <\n  (rum/local \"\")\n  (shortcut/record!)\n  [state k action-name current-binding]\n  (let [keypress (:rum/local state)\n        keyboard-shortcut (if (= \"\" @keypress) current-binding @keypress)]\n    [:div\n     [:div\n      [:p.mb-4 \"Press any sequence of keys to set the shortcut for the \" [:b action-name] \" action.\"]\n      [:p.mb-4.mt-4\n       (ui/render-keyboard-shortcut (-> keyboard-shortcut\n                                        (str/trim)\n                                        (str/lower-case)\n                                        (str/split  #\" |\\+\")))\n       \" \"\n       [:a.text-sm\n        {:style {:margin-left \"12px\"}\n         :on-click (fn []\n                     (dh/remove-shortcut k)\n                     (shortcut/refresh!)\n                     (swap! keypress (fn [] \"\")) ;; Clear local state\n                     )}\n        \"Reset\"]]]\n     [:div.cancel-save-buttons.text-right.mt-4\n      (ui/button \"Save\" :on-click state/close-modal!)\n      [:a.ml-4\n       {:on-click (fn []\n                    (reset! keypress (dh/binding-for-storage current-binding))\n                    (state/close-modal!))} \"Cancel\"]]]))\n\n(defn customize-shortcut-dialog [k action-name displayed-binding]\n  (fn [_]\n    (customize-shortcut-dialog-inner k action-name displayed-binding)))\n\n(rum/defc shortcut-col [k binding configurable? action-name]\n  (let [conflict?         (dh/potential-conflict? k)\n        displayed-binding (dh/binding-for-display k binding)\n        disabled?         (clojure.string/includes? displayed-binding \"system default\")]\n    (if (not configurable?)\n      [:td.text-right displayed-binding]\n      [:td.text-right\n       (ui/button\n        displayed-binding\n        :class \"text-sm p-1\"\n        :style {:cursor (if disabled? \"not-allowed\" \"pointer\")}\n        :title (if conflict?\n                 \"Shortcut conflict!\"\n                 (if disabled? \"Cannot override system default\" \"Click to modify\"))\n        :background (if conflict? \"pink\" (when disabled? \"gray\"))\n        :on-click (when-not disabled?\n                    #(state/set-modal! (customize-shortcut-dialog k action-name displayed-binding))))])))\n\n(rum/defc shortcut-table < rum/reactive\n  ([name]\n   (shortcut-table name false))\n  ([name configurable?]\n   (let [shortcut-config (rum/cursor-in\n                          state/state\n                          [:config (state/get-current-repo) :shortcuts])\n         _ (rum/react shortcut-config)]\n     [:div\n      [:table\n       [:thead\n        [:tr\n         [:th.text-left [:b (t name)]]\n         [:th.text-right]]]\n       [:tbody\n        (map (fn [[k {:keys [binding]}]]\n               [:tr {:key k}\n                [:td.text-left (t (dh/decorate-namespace k))]\n                (shortcut-col k binding configurable? (t (dh/decorate-namespace k)))])\n          (dh/binding-by-category name))]]])))\n\n(rum/defc trigger-table []\n  [:table\n   [:thead\n    [:tr\n     [:th.text-left [:b (t :help/shortcuts-triggers)]]\n     [:th.text-right [:b (t :help/shortcut)]]]]\n   [:tbody\n    [:tr\n     [:td.text-left (t :help/slash-autocomplete)]\n     [:td.text-right [:code \"/\"]]]\n    [:tr\n     [:td.text-left (t :help/block-content-autocomplete)]\n     [:td.text-right [:code \"<\"]]]\n    [:tr\n     [:td.text-left (t :help/reference-autocomplete)]\n     [:td.text-right [:code \"[[]]\"]]]\n    [:tr\n     [:td.text-left (t :help/block-reference)]\n     [:td.text-right [:code \"(())\"]]]\n    [:tr\n     [:td.text-left (t :command.editor/open-link-in-sidebar)]\n     [:td.text-right (ui/render-keyboard-shortcut [\"shift\" \"click\"])]]\n    [:tr\n     [:td.text-left (t :help/context-menu)]\n     [:td.text-right (ui/render-keyboard-shortcut [\"right\" \"click\"])]]]])\n\n(defn markdown-and-orgmode-syntax []\n  (let [list [:bold :italics :del :mark :latex :code :link :pre :img]\n\n        preferred-format (state/get-preferred-format) ; markdown/org\n\n        title (case preferred-format\n                :markdown (t :help/markdown-syntax)\n                :org (t :help/org-mode-syntax))\n\n        learn-more (case preferred-format\n                     :markdown \"https://www.markdownguide.org/basic-syntax\"\n                     :org \"https://orgmode.org/worg/dev/org-syntax.html\")\n\n        raw (case preferred-format\n              :markdown {:bold (str \"**\" (t :bold) \"**\")\n                         :italics (str \"_\" (t :italics) \"_\")\n                         :link \"[Link](https://www.example.com)\"\n                         :del (str \"~~\" (t :strikethrough) \"~~\")\n                         :mark (str \"^^\" (t :highlight) \"^^\")\n                         :latex \"$$E = mc^2$$\"\n                         :code (str \"`\" (t :code) \"`\")\n                         :pre \"```clojure\\n  (println \\\"Hello world!\\\")\\n```\"\n                         :img \"![image](https://asset.logseq.com/static/img/logo.png)\"}\n              :org {:bold (str \"*\" (t :bold) \"*\")\n                    :italics (str \"/\" (t :italics) \"/\")\n                    :del (str \"+\" (t :strikethrough) \"+\")\n                    :pre [:pre \"#+BEGIN_SRC clojure\\n  (println \\\"Hello world!\\\")\\n#+END_SRC\"]\n                    :link \"[[https://www.example.com][Link]]\"\n                    :mark (str \"^^\" (t :highlight) \"^^\")\n                    :latex \"$$E = mc^2$$\"\n                    :code \"~Code~\"\n                    :img \"[[https://asset.logseq.com/static/img/logo.png][image]]\"})\n\n        rendered {:italics [:i (t :italics)]\n                  :bold [:b (t :bold)]\n                  :link [:a {:href \"https://www.example.com\"} \"Link\"]\n                  :del [:del (t :strikethrough)]\n                  :mark [:mark (t :highlight)]\n                  :latex (latex/latex \"help-latex\" \"E = mc^2\" true false)\n                  :code [:code (t :code)]\n                  :pre (highlight/highlight \"help-highlight\" {:data-lang \"clojure\"} \"(println \\\"Hello world!\\\")\")\n                  :img [:img {:style {:float \"right\" :width 32 :height 32}\n                              :src \"https://asset.logseq.com/static/img/logo.png\"\n                              :alt \"image\"}]}]\n\n    [:table\n     [:thead\n      [:tr\n       [:th.text-left [:b title]]\n       [:th.text-right [:a {:href learn-more} \"Learn more \u2192\"]]]]\n     [:tbody\n      (map (fn [name]\n             [:tr\n              [:td.text-left [(if (= :pre name) :pre :code) (get raw name)]]\n              [:td.text-right (get rendered name)]])\n        list)]]))\n\n(rum/defc shortcut\n  []\n  [:div\n   [:h1.title (t :help/shortcut-page-title)]\n   (trigger-table)\n   (markdown-and-orgmode-syntax)\n   (shortcut-table :shortcut.category/basics true)\n   (shortcut-table :shortcut.category/navigating true)\n   (shortcut-table :shortcut.category/block-editing true)\n   (shortcut-table :shortcut.category/block-command-editing true)\n   (shortcut-table :shortcut.category/block-selection true)\n   (shortcut-table :shortcut.category/formatting true)\n   (shortcut-table :shortcut.category/toggle true)\n   (shortcut-table :shortcut.category/others true)])\n"]}