{
"version":3,
"file":"module$node_modules$codemirror$mode$dylan$dylan.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/codemirror/mode/dylan/dylan.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$dylan$dylan\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction forEach(arr, f) {\n  for (var i = 0; i < arr.length; i++) f(arr[i], i)\n}\nfunction some(arr, f) {\n  for (var i = 0; i < arr.length; i++) if (f(arr[i], i)) return true\n  return false\n}\n\nCodeMirror.defineMode(\"dylan\", function(_config) {\n  // Words\n  var words = {\n    // Words that introduce unnamed definitions like \"define interface\"\n    unnamedDefinition: [\"interface\"],\n\n    // Words that introduce simple named definitions like \"define library\"\n    namedDefinition: [\"module\", \"library\", \"macro\",\n                      \"C-struct\", \"C-union\",\n                      \"C-function\", \"C-callable-wrapper\"\n                     ],\n\n    // Words that introduce type definitions like \"define class\".\n    // These are also parameterized like \"define method\" and are\n    // appended to otherParameterizedDefinitionWords\n    typeParameterizedDefinition: [\"class\", \"C-subtype\", \"C-mapped-subtype\"],\n\n    // Words that introduce trickier definitions like \"define method\".\n    // These require special definitions to be added to startExpressions\n    otherParameterizedDefinition: [\"method\", \"function\",\n                                   \"C-variable\", \"C-address\"\n                                  ],\n\n    // Words that introduce module constant definitions.\n    // These must also be simple definitions and are\n    // appended to otherSimpleDefinitionWords\n    constantSimpleDefinition: [\"constant\"],\n\n    // Words that introduce module variable definitions.\n    // These must also be simple definitions and are\n    // appended to otherSimpleDefinitionWords\n    variableSimpleDefinition: [\"variable\"],\n\n    // Other words that introduce simple definitions\n    // (without implicit bodies).\n    otherSimpleDefinition: [\"generic\", \"domain\",\n                            \"C-pointer-type\",\n                            \"table\"\n                           ],\n\n    // Words that begin statements with implicit bodies.\n    statement: [\"if\", \"block\", \"begin\", \"method\", \"case\",\n                \"for\", \"select\", \"when\", \"unless\", \"until\",\n                \"while\", \"iterate\", \"profiling\", \"dynamic-bind\"\n               ],\n\n    // Patterns that act as separators in compound statements.\n    // This may include any general pattern that must be indented\n    // specially.\n    separator: [\"finally\", \"exception\", \"cleanup\", \"else\",\n                \"elseif\", \"afterwards\"\n               ],\n\n    // Keywords that do not require special indentation handling,\n    // but which should be highlighted\n    other: [\"above\", \"below\", \"by\", \"from\", \"handler\", \"in\",\n            \"instance\", \"let\", \"local\", \"otherwise\", \"slot\",\n            \"subclass\", \"then\", \"to\", \"keyed-by\", \"virtual\"\n           ],\n\n    // Condition signaling function calls\n    signalingCalls: [\"signal\", \"error\", \"cerror\",\n                     \"break\", \"check-type\", \"abort\"\n                    ]\n  };\n\n  words[\"otherDefinition\"] =\n    words[\"unnamedDefinition\"]\n    .concat(words[\"namedDefinition\"])\n    .concat(words[\"otherParameterizedDefinition\"]);\n\n  words[\"definition\"] =\n    words[\"typeParameterizedDefinition\"]\n    .concat(words[\"otherDefinition\"]);\n\n  words[\"parameterizedDefinition\"] =\n    words[\"typeParameterizedDefinition\"]\n    .concat(words[\"otherParameterizedDefinition\"]);\n\n  words[\"simpleDefinition\"] =\n    words[\"constantSimpleDefinition\"]\n    .concat(words[\"variableSimpleDefinition\"])\n    .concat(words[\"otherSimpleDefinition\"]);\n\n  words[\"keyword\"] =\n    words[\"statement\"]\n    .concat(words[\"separator\"])\n    .concat(words[\"other\"]);\n\n  // Patterns\n  var symbolPattern = \"[-_a-zA-Z?!*@<>$%]+\";\n  var symbol = new RegExp(\"^\" + symbolPattern);\n  var patterns = {\n    // Symbols with special syntax\n    symbolKeyword: symbolPattern + \":\",\n    symbolClass: \"<\" + symbolPattern + \">\",\n    symbolGlobal: \"\\\\*\" + symbolPattern + \"\\\\*\",\n    symbolConstant: \"\\\\$\" + symbolPattern\n  };\n  var patternStyles = {\n    symbolKeyword: \"atom\",\n    symbolClass: \"tag\",\n    symbolGlobal: \"variable-2\",\n    symbolConstant: \"variable-3\"\n  };\n\n  // Compile all patterns to regular expressions\n  for (var patternName in patterns)\n    if (patterns.hasOwnProperty(patternName))\n      patterns[patternName] = new RegExp(\"^\" + patterns[patternName]);\n\n  // Names beginning \"with-\" and \"without-\" are commonly\n  // used as statement macro\n  patterns[\"keyword\"] = [/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];\n\n  var styles = {};\n  styles[\"keyword\"] = \"keyword\";\n  styles[\"definition\"] = \"def\";\n  styles[\"simpleDefinition\"] = \"def\";\n  styles[\"signalingCalls\"] = \"builtin\";\n\n  // protected words lookup table\n  var wordLookup = {};\n  var styleLookup = {};\n\n  forEach([\n    \"keyword\",\n    \"definition\",\n    \"simpleDefinition\",\n    \"signalingCalls\"\n  ], function(type) {\n    forEach(words[type], function(word) {\n      wordLookup[word] = type;\n      styleLookup[word] = styles[type];\n    });\n  });\n\n\n  function chain(stream, state, f) {\n    state.tokenize = f;\n    return f(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    // String\n    var ch = stream.peek();\n    if (ch == \"'\" || ch == '\"') {\n      stream.next();\n      return chain(stream, state, tokenString(ch, \"string\"));\n    }\n    // Comment\n    else if (ch == \"/\") {\n      stream.next();\n      if (stream.eat(\"*\")) {\n        return chain(stream, state, tokenComment);\n      } else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      stream.backUp(1);\n    }\n    // Decimal\n    else if (/[+\\-\\d\\.]/.test(ch)) {\n      if (stream.match(/^[+-]?[0-9]*\\.[0-9]*([esdx][+-]?[0-9]+)?/i) ||\n          stream.match(/^[+-]?[0-9]+([esdx][+-]?[0-9]+)/i) ||\n          stream.match(/^[+-]?\\d+/)) {\n        return \"number\";\n      }\n    }\n    // Hash\n    else if (ch == \"#\") {\n      stream.next();\n      // Symbol with string syntax\n      ch = stream.peek();\n      if (ch == '\"') {\n        stream.next();\n        return chain(stream, state, tokenString('\"', \"string\"));\n      }\n      // Binary number\n      else if (ch == \"b\") {\n        stream.next();\n        stream.eatWhile(/[01]/);\n        return \"number\";\n      }\n      // Hex number\n      else if (ch == \"x\") {\n        stream.next();\n        stream.eatWhile(/[\\da-f]/i);\n        return \"number\";\n      }\n      // Octal number\n      else if (ch == \"o\") {\n        stream.next();\n        stream.eatWhile(/[0-7]/);\n        return \"number\";\n      }\n      // Token concatenation in macros\n      else if (ch == '#') {\n        stream.next();\n        return \"punctuation\";\n      }\n      // Sequence literals\n      else if ((ch == '[') || (ch == '(')) {\n        stream.next();\n        return \"bracket\";\n      // Hash symbol\n      } else if (stream.match(/f|t|all-keys|include|key|next|rest/i)) {\n        return \"atom\";\n      } else {\n        stream.eatWhile(/[-a-zA-Z]/);\n        return \"error\";\n      }\n    } else if (ch == \"~\") {\n      stream.next();\n      ch = stream.peek();\n      if (ch == \"=\") {\n        stream.next();\n        ch = stream.peek();\n        if (ch == \"=\") {\n          stream.next();\n          return \"operator\";\n        }\n        return \"operator\";\n      }\n      return \"operator\";\n    } else if (ch == \":\") {\n      stream.next();\n      ch = stream.peek();\n      if (ch == \"=\") {\n        stream.next();\n        return \"operator\";\n      } else if (ch == \":\") {\n        stream.next();\n        return \"punctuation\";\n      }\n    } else if (\"[](){}\".indexOf(ch) != -1) {\n      stream.next();\n      return \"bracket\";\n    } else if (\".,\".indexOf(ch) != -1) {\n      stream.next();\n      return \"punctuation\";\n    } else if (stream.match(\"end\")) {\n      return \"keyword\";\n    }\n    for (var name in patterns) {\n      if (patterns.hasOwnProperty(name)) {\n        var pattern = patterns[name];\n        if ((pattern instanceof Array && some(pattern, function(p) {\n          return stream.match(p);\n        })) || stream.match(pattern))\n          return patternStyles[name];\n      }\n    }\n    if (/[+\\-*\\/^=<>&|]/.test(ch)) {\n      stream.next();\n      return \"operator\";\n    }\n    if (stream.match(\"define\")) {\n      return \"def\";\n    } else {\n      stream.eatWhile(/[\\w\\-]/);\n      // Keyword\n      if (wordLookup.hasOwnProperty(stream.current())) {\n        return styleLookup[stream.current()];\n      } else if (stream.current().match(symbol)) {\n        return \"variable\";\n      } else {\n        stream.next();\n        return \"variable-2\";\n      }\n    }\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, maybeNested = false, nestedCount = 0, ch;\n    while ((ch = stream.next())) {\n      if (ch == \"/\" && maybeEnd) {\n        if (nestedCount > 0) {\n          nestedCount--;\n        } else {\n          state.tokenize = tokenBase;\n          break;\n        }\n      } else if (ch == \"*\" && maybeNested) {\n        nestedCount++;\n      }\n      maybeEnd = (ch == \"*\");\n      maybeNested = (ch == \"/\");\n    }\n    return \"comment\";\n  }\n\n  function tokenString(quote, style) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {\n          end = true;\n          break;\n        }\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !escaped) {\n        state.tokenize = tokenBase;\n      }\n      return style;\n    };\n  }\n\n  // Interface\n  return {\n    startState: function() {\n      return {\n        tokenize: tokenBase,\n        currentIndent: 0\n      };\n    },\n    token: function(stream, state) {\n      if (stream.eatSpace())\n        return null;\n      var style = state.tokenize(stream, state);\n      return style;\n    },\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-dylan\", \"dylan\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","forEach","arr","f","i","length","some","defineMode","_config","chain","stream","state","tokenize","tokenBase","ch","peek","next","tokenString","eat","tokenComment","skipToEnd","backUp","test","match","eatWhile","indexOf","name","patterns","hasOwnProperty","pattern","Array","p","patternStyles","wordLookup","current","styleLookup","symbol","maybeEnd","maybeNested","nestedCount","quote","style","escaped","end","words","unnamedDefinition","namedDefinition","typeParameterizedDefinition","otherParameterizedDefinition","constantSimpleDefinition","variableSimpleDefinition","otherSimpleDefinition","statement","separator","other","signalingCalls","concat","RegExp","symbolKeyword","symbolClass","symbolGlobal","symbolConstant","patternName","styles","type","word","startState","currentIndent","token","eatSpace","blockCommentStart","blockCommentEnd","defineMIME"]
}
