shadow$provide.module$node_modules$fs_extra$lib$ensure$file=function(global,require,module,exports){global=require("module$node_modules$universalify$index").fromCallback;const path=require("module$node_modules$path_browserify$index"),fs=require("module$node_modules$graceful_fs$graceful_fs"),mkdir=require("module$node_modules$fs_extra$lib$mkdirs$index");module.exports={createFile:global(function(file,callback){function makeFile(){fs.writeFile(file,"",err=>{if(err)return callback(err);callback()})}
fs.stat(file,(err$jscomp$1,stats$jscomp$0)=>{if(!err$jscomp$1&&stats$jscomp$0.isFile())return callback();const dir=path.dirname(file);fs.stat(dir,(err$jscomp$0,stats)=>{if(err$jscomp$0)return"ENOENT"===err$jscomp$0.code?mkdir.mkdirs(dir,err=>{if(err)return callback(err);makeFile()}):callback(err$jscomp$0);stats.isDirectory()?makeFile():fs.readdir(dir,err=>{if(err)return callback(err)})})})}),createFileSync:function(file){try{var stats=fs.statSync(file)}catch{}if(!stats||!stats.isFile()){stats=path.dirname(file);
try{fs.statSync(stats).isDirectory()||fs.readdirSync(stats)}catch(err){if(err&&"ENOENT"===err.code)mkdir.mkdirsSync(stats);else throw err;}fs.writeFileSync(file,"")}}}}
//# sourceMappingURL=module$node_modules$fs_extra$lib$ensure$file.js.map
