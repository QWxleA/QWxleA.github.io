{
"version":3,
"file":"module$node_modules$codemirror$mode$d$d.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/codemirror/mode/d/d.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$d$d\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"d\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      statementIndentUnit = parserConfig.statementIndentUnit || indentUnit,\n      keywords = parserConfig.keywords || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings;\n  var isOperatorChar = /[+\\-*&%=<>!?|\\/]/;\n\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w\\.]/);\n      return \"number\";\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"+\")) {\n        state.tokenize = tokenNestedComment;\n        return tokenNestedComment(stream, state);\n      }\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur)) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"keyword\";\n    }\n    if (builtin.propertyIsEnumerable(cur)) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"builtin\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function tokenNestedComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"+\");\n    }\n    return \"comment\";\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    var indent = state.indented;\n    if (state.context && state.context.type == \"statement\")\n      indent = state.context.indented;\n    return state.context = new Context(indent, col, type, null, state.context);\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\") && ctx.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != ';') || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n        pushContext(state, stream.column(), \"statement\");\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return CodeMirror.Pass;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit);\n      else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    blockCommentContinue: \" * \",\n    lineComment: \"//\",\n    fold: \"brace\"\n  };\n});\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  var blockKeywords = \"body catch class do else enum for foreach foreach_reverse if in interface mixin \" +\n                      \"out scope struct switch try union unittest version while with\";\n\n  CodeMirror.defineMIME(\"text/x-d\", {\n    name: \"d\",\n    keywords: words(\"abstract alias align asm assert auto break case cast cdouble cent cfloat const continue \" +\n                    \"debug default delegate delete deprecated export extern final finally function goto immutable \" +\n                    \"import inout invariant is lazy macro module new nothrow override package pragma private \" +\n                    \"protected public pure ref return shared short static super synchronized template this \" +\n                    \"throw typedef typeid typeof volatile __FILE__ __LINE__ __gshared __traits __vector __parameters \" +\n                    blockKeywords),\n    blockKeywords: words(blockKeywords),\n    builtin: words(\"bool byte char creal dchar double float idouble ifloat int ireal long real short ubyte \" +\n                   \"ucent uint ulong ushort wchar wstring void size_t sizediff_t\"),\n    atoms: words(\"exit failure success true false null\"),\n    hooks: {\n      \"@\": function(stream, _state) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    }\n  });\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","words","str","obj","split","i","length","defineMode","config","parserConfig","tokenBase","stream","state","ch","next","hooks","result","tokenize","tokenString","test","curPunc","eatWhile","eat","tokenNestedComment","tokenComment","skipToEnd","isOperatorChar","cur","current","keywords","propertyIsEnumerable","blockKeywords","builtin","atoms","quote","escaped","end","multiLineStrings","maybeEnd","Context","indented","column","type","align","prev","pushContext","col","indent","context","popContext","t","indentUnit","statementIndentUnit","startState","basecolumn","startOfLine","token","ctx","sol","indentation","eatSpace","style","textAfter","Pass","firstChar","charAt","closing","electricChars","blockCommentStart","blockCommentEnd","blockCommentContinue","lineComment","fold","defineMIME","name","@","_state"]
}
