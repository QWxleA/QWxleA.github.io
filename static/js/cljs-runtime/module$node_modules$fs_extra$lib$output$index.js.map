{
"version":3,
"file":"module$node_modules$fs_extra$lib$output$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,6CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpGC,MAAAA,CAAIH,OAAA,CAAQ,wCAAR,CAAwBI,CAAAA,YAClC,OAAMC,GAAKL,OAAA,CAAQ,6CAAR,CAAX,CACMM,KAAON,OAAA,CAAQ,2CAAR,CADb,CAEMO,MAAQP,OAAA,CAAQ,+CAAR,CAFd,CAGMQ,WAAaR,OAAA,CAAQ,oDAAR,CAA0BQ,CAAAA,UA8B7CP,OAAOC,CAAAA,OAAP,CAAiB,CACfO,WAAYN,MAAA,CA7BdM,QAAoB,CAACC,IAAD,CAAOC,IAAP,CAAaC,QAAb;AAAuBC,QAAvB,CAAiC,CAC3B,UAAxB,GAAI,MAAOD,SAAX,GACEC,QACA,CADWD,QACX,CAAAA,QAAA,CAAW,MAFb,CAKA,OAAME,IAAMR,IAAKS,CAAAA,OAAL,CAAaL,IAAb,CACZF,WAAA,CAAWM,GAAX,CAAgB,CAACE,YAAD,CAAMC,MAAN,CAAA,EAAiB,CAC/B,GAAID,YAAJ,CAAS,MAAOH,SAAA,CAASG,YAAT,CAChB,IAAIC,MAAJ,CAAY,MAAOZ,GAAGa,CAAAA,SAAH,CAAaR,IAAb,CAAmBC,IAAnB,CAAyBC,QAAzB,CAAmCC,QAAnC,CAEnBN,MAAMY,CAAAA,MAAN,CAAaL,GAAb,CAAkBE,GAAA,EAAO,CACvB,GAAIA,GAAJ,CAAS,MAAOH,SAAA,CAASG,GAAT,CAEhBX,GAAGa,CAAAA,SAAH,CAAaR,IAAb,CAAmBC,IAAnB,CAAyBC,QAAzB,CAAmCC,QAAnC,CAHuB,CAAzB,CAJ+B,CAAjC,CAPmD,CA6BvC,CADG,CAEfO,eAXFA,QAAwB,CAACV,IAAD,CAAO,GAAGW,IAAV,CAAgB,CACtC,MAAMP,IAAMR,IAAKS,CAAAA,OAAL,CAAaL,IAAb,CACZ,IAAIL,EAAGiB,CAAAA,UAAH,CAAcR,GAAd,CAAJ,CACE,MAAOT,GAAGkB,CAAAA,aAAH,CAAiBb,IAAjB,CAAuB,GAAGW,IAA1B,CAETd,MAAMiB,CAAAA,UAAN,CAAiBV,GAAjB,CACAT,GAAGkB,CAAAA,aAAH,CAAiBb,IAAjB;AAAuB,GAAGW,IAA1B,CANsC,CASvB,CArCyF;",
"sources":["node_modules/fs-extra/lib/output/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fs_extra$lib$output$index\"] = function(global,require,module,exports) {\n'use strict'\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction outputFile (file, data, encoding, callback) {\n  if (typeof encoding === 'function') {\n    callback = encoding\n    encoding = 'utf8'\n  }\n\n  const dir = path.dirname(file)\n  pathExists(dir, (err, itDoes) => {\n    if (err) return callback(err)\n    if (itDoes) return fs.writeFile(file, data, encoding, callback)\n\n    mkdir.mkdirs(dir, err => {\n      if (err) return callback(err)\n\n      fs.writeFile(file, data, encoding, callback)\n    })\n  })\n}\n\nfunction outputFileSync (file, ...args) {\n  const dir = path.dirname(file)\n  if (fs.existsSync(dir)) {\n    return fs.writeFileSync(file, ...args)\n  }\n  mkdir.mkdirsSync(dir)\n  fs.writeFileSync(file, ...args)\n}\n\nmodule.exports = {\n  outputFile: u(outputFile),\n  outputFileSync\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","u","fromCallback","fs","path","mkdir","pathExists","outputFile","file","data","encoding","callback","dir","dirname","err","itDoes","writeFile","mkdirs","outputFileSync","args","existsSync","writeFileSync","mkdirsSync"]
}
