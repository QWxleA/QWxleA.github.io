shadow$provide.module$node_modules$chrono_node$dist$locales$ja$index=function(global,require,module,exports){function createCasualConfiguration(){const option=createConfiguration();option.parsers.unshift(new JPCasualDateParser_1.default);return option}function createConfiguration(){return{parsers:[new JPStandardParser_1.default],refiners:[new JPMergeDateRangeRefiner_1.default]}}global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,
"__esModule",{value:!0});exports.createConfiguration=exports.createCasualConfiguration=exports.parseDate=exports.parse=exports.strict=exports.casual=void 0;const JPStandardParser_1=global(require("module$node_modules$chrono_node$dist$locales$ja$parsers$JPStandardParser")),JPMergeDateRangeRefiner_1=global(require("module$node_modules$chrono_node$dist$locales$ja$refiners$JPMergeDateRangeRefiner")),JPCasualDateParser_1=global(require("module$node_modules$chrono_node$dist$locales$ja$parsers$JPCasualDateParser"));
require=require("module$node_modules$chrono_node$dist$chrono");exports.casual=new require.Chrono(createCasualConfiguration());exports.strict=new require.Chrono(createConfiguration());exports.parse=function(text,ref,option){return exports.casual.parse(text,ref,option)};exports.parseDate=function(text,ref,option){return exports.casual.parseDate(text,ref,option)};exports.createCasualConfiguration=createCasualConfiguration;exports.createConfiguration=createConfiguration}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$ja$index.js.map
