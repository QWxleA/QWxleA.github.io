shadow$provide.module$node_modules$codemirror$mode$mumps$mumps=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)})(function(CodeMirror){CodeMirror.defineMode("mumps",function(){function wordRegexp(words){return new RegExp("^(("+words.join(")|(")+"))\\b","i")}function tokenBase(stream,state){stream.sol()&&
(state.label=!0,state.commandMode=0);var ch=stream.peek();if(" "==ch||"\t"==ch)if(state.label=!1,0==state.commandMode)state.commandMode=1;else{if(0>state.commandMode||2==state.commandMode)state.commandMode=0}else"."!=ch&&0<state.commandMode&&(state.commandMode=":"==ch?-1:2);if("("===ch||"\t"===ch)state.label=!1;if(";"===ch)return stream.skipToEnd(),"comment";if(stream.match(/^[-+]?\d+(\.\d+)?([eE][-+]?\d+)?/))return"number";if('"'==ch){if(stream.skipTo('"'))return stream.next(),"string";stream.skipToEnd();
return"error"}if(stream.match(doubleOperators)||stream.match(singleOperators))return"operator";if(stream.match(singleDelimiters))return null;if(brackets.test(ch))return stream.next(),"bracket";if(0<state.commandMode&&stream.match(command))return"variable-2";if(stream.match(intrinsicFuncs))return"builtin";if(stream.match(identifiers))return"variable";if("$"===ch||"^"===ch)return stream.next(),"builtin";if("@"===ch)return stream.next(),"string-2";if(/[\w%]/.test(ch))return stream.eatWhile(/[\w%]/),
"variable";stream.next();return"error"}var singleOperators=RegExp("^[\\+\\-\\*/\x26#!_?\\\\\x3c\x3e\x3d\\'\\[\\]]"),doubleOperators=RegExp("^(('\x3d)|(\x3c\x3d)|(\x3e\x3d)|('\x3e)|('\x3c)|([[)|(]])|(^$))"),singleDelimiters=RegExp("^[\\.,:]"),brackets=RegExp("[()]"),identifiers=RegExp("^[%A-Za-z][A-Za-z0-9]*"),intrinsicFuncs=wordRegexp("\\$ascii \\$char \\$data \\$ecode \\$estack \\$etrap \\$extract \\$find \\$fnumber \\$get \\$horolog \\$io \\$increment \\$job \\$justify \\$length \\$name \\$next \\$order \\$piece \\$qlength \\$qsubscript \\$query \\$quit \\$random \\$reverse \\$select \\$stack \\$test \\$text \\$translate \\$view \\$x \\$y \\$a \\$c \\$d \\$e \\$ec \\$es \\$et \\$f \\$fn \\$g \\$h \\$i \\$j \\$l \\$n \\$na \\$o \\$p \\$q \\$ql \\$qs \\$r \\$re \\$s \\$st \\$t \\$tr \\$v \\$z".split(" ")),
command=wordRegexp("break close do else for goto halt hang if job kill lock merge new open quit read set tcommit trollback tstart use view write xecute b c d e f g h i j k l m n o q r s tc tro ts u v w x".split(" "));return{startState:function(){return{label:!1,commandMode:0}},token:function(stream,state){stream=tokenBase(stream,state);return state.label?"tag":stream}}});CodeMirror.defineMIME("text/x-mumps","mumps")})}
//# sourceMappingURL=module$node_modules$codemirror$mode$mumps$mumps.js.map
