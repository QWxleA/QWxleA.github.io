shadow$provide.module$node_modules$codemirror$mode$xquery$xquery=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)})(function(CodeMirror){CodeMirror.defineMode("xquery",function(){function chain(stream,state,f){state.tokenize=f;return f(stream,state)}function tokenBase(stream,state){var ch=stream.next(),
mightBeFunction=!1;var isEQName='"'===stream.current()?stream.match(/^[^"]+":/,!1):"'"===stream.current()?stream.match(/^[^"]+':/,!1):!1;if("\x3c"==ch){if(stream.match("!--",!0))return chain(stream,state,tokenXMLComment);if(stream.match("![CDATA",!1))return state.tokenize=tokenCDATA,"tag";if(stream.match("?",!1))return chain(stream,state,tokenPreProcessing);mightBeFunction=stream.eat("/");stream.eatSpace();for(var tagName="";ch=stream.eat(/[^\s\u00a0=<>"'\/?]/);)tagName+=ch;return chain(stream,state,
tokenTag(tagName,mightBeFunction))}if("{"==ch)return state.stack.push({type:"codeblock"}),null;if("}"==ch)return popStateStack(state),null;if(isIn(state,"tag"))return"\x3e"==ch?"tag":"/"==ch&&stream.eat("\x3e")?(popStateStack(state),"tag"):"variable";if(/\d/.test(ch))return stream.match(/^\d*(?:\.\d*)?(?:E[+\-]?\d+)?/),"atom";if("("===ch&&stream.eat(":"))return state.stack.push({type:"comment"}),chain(stream,state,tokenComment);if(isEQName||'"'!==ch&&"'"!==ch){if("$"===ch)return chain(stream,state,
tokenVariable);if(":"===ch&&stream.eat("\x3d"))return"keyword";if("("===ch)return state.stack.push({type:"paren"}),null;if(")"===ch)return popStateStack(state),null;if("["===ch)return state.stack.push({type:"bracket"}),null;if("]"===ch)return popStateStack(state),null;tagName=keywords.propertyIsEnumerable(ch)&&keywords[ch];if(isEQName&&'"'===ch)for(;'"'!==stream.next(););if(isEQName&&"'"===ch)for(;"'"!==stream.next(););tagName||stream.eatWhile(/[\w\$_-]/);tagName=stream.eat(":");!stream.eat(":")&&
tagName&&stream.eatWhile(/[\w\$_-]/);stream.match(/^[ \t]*\(/,!1)&&(mightBeFunction=!0);stream=stream.current();tagName=keywords.propertyIsEnumerable(stream)&&keywords[stream];mightBeFunction&&!tagName&&(tagName={type:"function_call",style:"variable def"});if(isIn(state,"xmlconstructor"))return popStateStack(state),"variable";"element"!=stream&&"attribute"!=stream&&"axis_specifier"!=tagName.type||state.stack.push({type:"xmlconstructor"});return tagName?tagName.style:"variable"}return chain(stream,
state,tokenString(ch))}function tokenComment(stream,state){for(var maybeEnd=!1,maybeNested=!1,nestedCount=0,ch;ch=stream.next();){if(")"==ch&&maybeEnd)if(0<nestedCount)nestedCount--;else{popStateStack(state);break}else":"==ch&&maybeNested&&nestedCount++;maybeEnd=":"==ch;maybeNested="("==ch}return"comment"}function tokenString(quote,f){return function(stream,state){if(isIn(state,"string")&&stream.current()==quote)return popStateStack(state),f&&(state.tokenize=f),"string";var ch={type:"string",name:quote,
tokenize:tokenString(quote,f)};state.stack.push(ch);if(stream.match("{",!1)&&isInXmlAttributeBlock(state))return state.tokenize=tokenBase,"string";for(;ch=stream.next();)if(ch==quote){popStateStack(state);f&&(state.tokenize=f);break}else if(stream.match("{",!1)&&isInXmlAttributeBlock(state)){state.tokenize=tokenBase;break}return"string"}}function tokenVariable(stream,state){var isVariableChar=/[\w\$_-]/;if(stream.eat('"')){for(;'"'!==stream.next(););stream.eat(":")}else stream.eatWhile(isVariableChar),
stream.match(":\x3d",!1)||stream.eat(":");stream.eatWhile(isVariableChar);state.tokenize=tokenBase;return"variable"}function tokenTag(name,isclose){return function(stream,state){stream.eatSpace();if(isclose&&stream.eat("\x3e"))return popStateStack(state),state.tokenize=tokenBase,"tag";stream.eat("/")||state.stack.push({type:"tag",name,tokenize:tokenBase});stream.eat("\x3e")?state.tokenize=tokenBase:state.tokenize=tokenAttribute;return"tag"}}function tokenAttribute(stream,state){var ch=stream.next();
if("/"==ch&&stream.eat("\x3e"))return isInXmlAttributeBlock(state)&&popStateStack(state),isIn(state,"tag")&&popStateStack(state),"tag";if("\x3e"==ch)return isInXmlAttributeBlock(state)&&popStateStack(state),"tag";if("\x3d"==ch)return null;if('"'==ch||"'"==ch)return chain(stream,state,tokenString(ch,tokenAttribute));isInXmlAttributeBlock(state)||state.stack.push({type:"attribute",tokenize:tokenAttribute});stream.eat(/[a-zA-Z_:]/);stream.eatWhile(/[-a-zA-Z0-9_:.]/);stream.eatSpace();if(stream.match("\x3e",
!1)||stream.match("/",!1))popStateStack(state),state.tokenize=tokenBase;return"attribute"}function tokenXMLComment(stream,state){for(var ch;ch=stream.next();)if("-"==ch&&stream.match("-\x3e",!0))return state.tokenize=tokenBase,"comment"}function tokenCDATA(stream,state){for(var ch;ch=stream.next();)if("]"==ch&&stream.match("]",!0))return state.tokenize=tokenBase,"comment"}function tokenPreProcessing(stream,state){for(var ch;ch=stream.next();)if("?"==ch&&stream.match("\x3e",!0))return state.tokenize=
tokenBase,"comment meta"}function isInXmlAttributeBlock(state){return isIn(state,"attribute")}function isIn(state,type){return state.stack.length&&state.stack[state.stack.length-1].type==type}function popStateStack(state){state.stack.pop();state.tokenize=state.stack.length&&state.stack[state.stack.length-1].tokenize||tokenBase}var keywords=function(){for(var operator={type:"operator",style:"keyword"},atom={type:"atom",style:"atom"},qualifier={type:"axis_specifier",style:"qualifier"},kwObj={",":{type:"punctuation",
style:null}},basic="after all allowing ancestor ancestor-or-self any array as ascending at attribute base-uri before boundary-space by case cast castable catch child collation comment construction contains content context copy copy-namespaces count decimal-format declare default delete descendant descendant-or-self descending diacritics different distance document document-node element else empty empty-sequence encoding end entire every exactly except external first following following-sibling for from ftand ftnot ft-option ftor function fuzzy greatest group if import in inherit insensitive insert instance intersect into invoke is item language last lax least let levels lowercase map modify module most namespace next no node nodes no-inherit no-preserve not occurs of only option order ordered ordering paragraph paragraphs parent phrase preceding preceding-sibling preserve previous processing-instruction relationship rename replace return revalidation same satisfies schema schema-attribute schema-element score self sensitive sentence sentences sequence skip sliding some stable start stemming stop strict strip switch text then thesaurus times to transform treat try tumbling type typeswitch union unordered update updating uppercase using validate value variable version weight when where wildcards window with without word words xquery".split(" "),
i=0,l=basic.length;i<l;i++)kwObj[basic[i]]={type:basic[i],style:"keyword"};basic="xs:anyAtomicType xs:anySimpleType xs:anyType xs:anyURI xs:base64Binary xs:boolean xs:byte xs:date xs:dateTime xs:dateTimeStamp xs:dayTimeDuration xs:decimal xs:double xs:duration xs:ENTITIES xs:ENTITY xs:float xs:gDay xs:gMonth xs:gMonthDay xs:gYear xs:gYearMonth xs:hexBinary xs:ID xs:IDREF xs:IDREFS xs:int xs:integer xs:item xs:java xs:language xs:long xs:Name xs:NCName xs:negativeInteger xs:NMTOKEN xs:NMTOKENS xs:nonNegativeInteger xs:nonPositiveInteger xs:normalizedString xs:NOTATION xs:numeric xs:positiveInteger xs:precisionDecimal xs:QName xs:short xs:string xs:time xs:token xs:unsignedByte xs:unsignedInt xs:unsignedLong xs:unsignedShort xs:untyped xs:untypedAtomic xs:yearMonthDuration".split(" ");
i=0;for(l=basic.length;i<l;i++)kwObj[basic[i]]=atom;atom="eq ne lt le gt ge :\x3d \x3d \x3e \x3e\x3d \x3c \x3c\x3d . | ? and or div idiv mod * / + -".split(" ");i=0;for(l=atom.length;i<l;i++)kwObj[atom[i]]=operator;operator="self:: attribute:: child:: descendant:: descendant-or-self:: parent:: ancestor:: ancestor-or-self:: following:: preceding:: following-sibling:: preceding-sibling::".split(" ");i=0;for(l=operator.length;i<l;i++)kwObj[operator[i]]=qualifier;return kwObj}();return{startState:function(){return{tokenize:tokenBase,
cc:[],stack:[]}},token:function(stream,state){return stream.eatSpace()?null:state.tokenize(stream,state)},blockCommentStart:"(:",blockCommentEnd:":)"}});CodeMirror.defineMIME("application/xquery","xquery")})}
//# sourceMappingURL=module$node_modules$codemirror$mode$xquery$xquery.js.map
