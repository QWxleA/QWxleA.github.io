shadow$provide.module$node_modules$codemirror$mode$elm$elm=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)})(function(CodeMirror){CodeMirror.defineMode("elm",function(){function switchState(source,setState,f){setState(f);return f(source,setState)}function normal(){return function(source,setState){if(source.eatWhile(spacesRE))return null;
var char=source.next();if(specialRE.test(char))return"{"===char&&source.eat("-")?switchState(source,setState,chompMultiComment(1)):"["===char&&source.match("glsl|")?switchState(source,setState,chompGlsl):"builtin";if("'"===char)return switchState(source,setState,chompChar);if('"'===char)return source.eat('"')?source.eat('"')?switchState(source,setState,chompMultiString):"string":switchState(source,setState,chompSingleString);if(upperRE.test(char))return source.eatWhile(innerRE),"variable-2";if(lowerRE.test(char))return setState=
1===source.pos,source.eatWhile(innerRE),setState?"def":"variable";if(digitRE.test(char)){if("0"===char){if(source.eat(/[xX]/))return source.eatWhile(hexRE),"number"}else source.eatWhile(digitRE);source.eat(".")&&source.eatWhile(digitRE);source.eat(/[eE]/)&&(source.eat(/[-+]/),source.eatWhile(digitRE));return"number"}if(symbolRE.test(char)){if("-"===char&&source.eat("-"))return source.skipToEnd(),"comment";source.eatWhile(symbolRE);return"keyword"}return"_"===char?"keyword":"error"}}function chompMultiComment(nest){return 0==
nest?normal():function(source,setState){for(;!source.eol();){var char=source.next();if("{"==char&&source.eat("-"))++nest;else if("-"==char&&source.eat("}")&&(--nest,0===nest))return setState(normal()),"comment"}setState(chompMultiComment(nest));return"comment"}}function chompMultiString(source,setState){for(;!source.eol();)if('"'===source.next()&&source.eat('"')&&source.eat('"')){setState(normal());break}return"string"}function chompSingleString(source,setState){for(;source.skipTo('\\"');)source.next(),
source.next();if(source.skipTo('"'))return source.next(),setState(normal()),"string";source.skipToEnd();setState(normal());return"error"}function chompChar(source,setState){for(;source.skipTo("\\'");)source.next(),source.next();if(source.skipTo("'"))return source.next(),setState(normal()),"string";source.skipToEnd();setState(normal());return"error"}function chompGlsl(source,setState){for(;!source.eol();)if("|"===source.next()&&source.eat("]")){setState(normal());break}return"string"}var lowerRE=/[a-z]/,
upperRE=/[A-Z]/,innerRE=/[a-zA-Z0-9_]/,digitRE=/[0-9]/,hexRE=/[0-9A-Fa-f]/,symbolRE=/[-&*+.\\/<>=?^|:]/,specialRE=/[(),[\]{}]/,spacesRE=/[ \v\f]/,wellKnownWords={case:1,of:1,as:1,if:1,then:1,else:1,let:1,in:1,type:1,alias:1,module:1,where:1,import:1,exposing:1,port:1};return{startState:function(){return{f:normal()}},copyState:function(s){return{f:s.f}},token:function(stream,state){var type=state.f(stream,function(s){state.f=s});stream=stream.current();return wellKnownWords.hasOwnProperty(stream)?
"keyword":type}}});CodeMirror.defineMIME("text/x-elm","elm")})}
//# sourceMappingURL=module$node_modules$codemirror$mode$elm$elm.js.map
