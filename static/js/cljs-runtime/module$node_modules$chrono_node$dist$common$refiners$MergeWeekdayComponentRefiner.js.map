{
"version":3,
"file":"module$node_modules$chrono_node$dist$common$refiners$MergeWeekdayComponentRefiner.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,iFAAA,CAAsG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE9IC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACMC,OAAAA,CAAqBN,OAAA,CAAQ,8DAAR,CAC3B,MAAMO,6BAAN,QAA2CD,OAAmBE,CAAAA,cAA9D,CACIC,YAAY,CAACC,WAAD,CAAcC,aAAd,CAA6BC,UAA7B,CAAyC,CAC3CC,UAAAA,CAAYD,UAAWE,CAAAA,KAAX,EAClBD,WAAUE,CAAAA,KAAV,CAAkBJ,aAAcI,CAAAA,KAChCF,WAAUG,CAAAA,IAAV,CAAiBL,aAAcK,CAAAA,IAA/B,CAAsCN,WAAtC;AAAoDG,UAAUG,CAAAA,IAC9DH,WAAUI,CAAAA,KAAMC,CAAAA,MAAhB,CAAuB,SAAvB,CAAkCP,aAAcM,CAAAA,KAAME,CAAAA,GAApB,CAAwB,SAAxB,CAAlC,CACIN,WAAUO,CAAAA,GAAd,EACIP,UAAUO,CAAAA,GAAIF,CAAAA,MAAd,CAAqB,SAArB,CAAgCP,aAAcM,CAAAA,KAAME,CAAAA,GAApB,CAAwB,SAAxB,CAAhC,CAEJ,OAAON,WAR0C,CAUrDQ,kBAAkB,CAACX,WAAD,CAAcC,aAAd,CAA6BC,UAA7B,CAAyC,CAIvD,MAH8BD,cAAcM,CAAAA,KAAMK,CAAAA,sBAApB,EAG9B,EAFI,CAACX,aAAcM,CAAAA,KAAMM,CAAAA,SAApB,CAA8B,MAA9B,CAEL,EADIX,UAAWK,CAAAA,KAAMM,CAAAA,SAAjB,CAA2B,KAA3B,CACJ,EAAgE,IAAhE,EAAgCb,WAAYc,CAAAA,KAAZ,CAAkB,SAAlB,CAJuB,CAX/D,CAkBAtB,OAAQuB,CAAAA,OAAR,CAAkBlB,4BAtB4H;",
"sources":["node_modules/chrono-node/dist/common/refiners/MergeWeekdayComponentRefiner.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$common$refiners$MergeWeekdayComponentRefiner\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abstractRefiners_1 = require(\"../abstractRefiners\");\nclass MergeWeekdayComponentRefiner extends abstractRefiners_1.MergingRefiner {\n    mergeResults(textBetween, currentResult, nextResult) {\n        const newResult = nextResult.clone();\n        newResult.index = currentResult.index;\n        newResult.text = currentResult.text + textBetween + newResult.text;\n        newResult.start.assign(\"weekday\", currentResult.start.get(\"weekday\"));\n        if (newResult.end) {\n            newResult.end.assign(\"weekday\", currentResult.start.get(\"weekday\"));\n        }\n        return newResult;\n    }\n    shouldMergeResults(textBetween, currentResult, nextResult) {\n        const weekdayThenNormalDate = currentResult.start.isOnlyWeekdayComponent() &&\n            !currentResult.start.isCertain(\"hour\") &&\n            nextResult.start.isCertain(\"day\");\n        return weekdayThenNormalDate && textBetween.match(/^,?\\s*$/) != null;\n    }\n}\nexports.default = MergeWeekdayComponentRefiner;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","abstractRefiners_1","MergeWeekdayComponentRefiner","MergingRefiner","mergeResults","textBetween","currentResult","nextResult","newResult","clone","index","text","start","assign","get","end","shouldMergeResults","isOnlyWeekdayComponent","isCertain","match","default"]
}
