shadow$provide.module$node_modules$chrono_node$dist$locales$en$parsers$ENRelativeDateFormatParser=function(global,require,module,exports){global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});const constants_1=require("module$node_modules$chrono_node$dist$locales$en$constants"),results_1=require("module$node_modules$chrono_node$dist$results"),dayjs_1=global(require("module$node_modules$dayjs$dayjs_min"));
global=require("module$node_modules$chrono_node$dist$common$parsers$AbstractParserWithWordBoundary");require=require("module$node_modules$chrono_node$dist$utils$pattern");const PATTERN=new RegExp(`(this|next|last|past)\\s*(${require.matchAnyPattern(constants_1.TIME_UNIT_DICTIONARY)})(?=\\s*)`+"(?\x3d\\W|$)","i");class ENRelativeDateFormatParser extends global.AbstractParserWithWordBoundaryChecking{innerPattern(){return PATTERN}innerExtract(context,match){const modifier=match[1].toLowerCase();match=
match[2].toLowerCase();var timeunit=constants_1.TIME_UNIT_DICTIONARY[match];if("next"==modifier)return match={},match[timeunit]=1,results_1.ParsingComponents.createRelativeFromRefDate(context.refDate,match);if("last"==modifier||"past"==modifier)return match={},match[timeunit]=-1,results_1.ParsingComponents.createRelativeFromRefDate(context.refDate,match);timeunit=context.createParsingComponents();context=dayjs_1.default(context.refDate);match.match(/week/i)?(context=context.add(-context.get("d"),
"d"),timeunit.imply("day",context.date()),timeunit.imply("month",context.month()+1),timeunit.imply("year",context.year())):match.match(/month/i)?(context=context.add(-context.date()+1,"d"),timeunit.imply("day",context.date()),timeunit.assign("year",context.year()),timeunit.assign("month",context.month()+1)):match.match(/year/i)&&(context=context.add(-context.date()+1,"d"),context=context.add(-context.month(),"month"),timeunit.imply("day",context.date()),timeunit.imply("month",context.month()+1),timeunit.assign("year",
context.year()));return timeunit}}exports.default=ENRelativeDateFormatParser}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$en$parsers$ENRelativeDateFormatParser.js.map
