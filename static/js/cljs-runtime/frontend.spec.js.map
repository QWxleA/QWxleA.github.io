{"version":3,"sources":["frontend/spec.cljs"],"mappings":";AASA,8BAAA,9BAACA;AAED,CAAMC,0CAAgBC;AAEtB;;;yBAAA,zBAAMC,0DAEHC,KAAKC;AAFR,AAGE,oBAAMC;AAAN,AACE,oBAAI,AAACC,6BAAeH,KAAKC;AACxB,IAAMG,gBAAc,AAACC,wDAAoBL,KAAKC;IACxCK,KAAG,gDAAA,oBAAA,2CAAA,/GAACC,qKAAoCN;AAD9C,AAEE,AAAAO,qDAAA,gBAAA,uDAAA,AAAAC,mBAAA,2CAAA,kEAAA,+FAAA,oDAAA,tJAAsBH,kKAAAA,9EAAyBF;;AAFjD;;AADD;;;AADF;;;AAUF,AAAAM,yBAAA,AAAA,2DAAA,AAAA,iFAAkBC;AAClB,AAAAD,yBAAA,AAAA,kEAAA,AAAA,iFAAqBC","names":["cljs.spec.alpha/check-asserts","cljs.spec.alpha/*explain-out*","expound.alpha/printer","frontend.spec/validate","spec","value","frontend.config/dev?","cljs.spec.alpha/explain-data","error-message","expound.alpha.expound_str","ex","cljs.core.ex_info","lambdaisland.glogi.log","cljs.core/identity","cljs.spec.alpha/def-impl","cljs.core/string?"],"sourcesContent":["(ns frontend.spec\n  (:require [cljs.spec.alpha :as s]\n            [frontend.config :as config]\n            [lambdaisland.glogi :as log]\n            [expound.alpha :as expound]))\n\n;; Enabled for all environments. We want asserts to run in production e.g.\n;; frontend.storage one is preventing data corruption. If we introduce asserts\n;; that are not perf sensitive, we will need to reconsider.\n(s/check-asserts true)\n\n(set! s/*explain-out* expound/printer)\n\n(defn validate\n  \"This function won't crash the current thread, just log error.\"\n  [spec value]\n  (when config/dev?\n    (if (s/explain-data spec value)\n     (let [error-message (expound/expound-str spec value)\n           ex (ex-info \"Error in validate\" {:value value})]\n       (log/error :exception ex :spec/validate-failed error-message)\n       false)\n     true)))\n\n;; repo\n\n(s/def :repos/url string?)\n(s/def :repos/branch string?)\n"]}