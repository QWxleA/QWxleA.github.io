{
"version":3,
"file":"module$node_modules$codemirror$mode$yacas$yacas.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/codemirror/mode/yacas/yacas.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$yacas$yacas\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Yacas mode copyright (c) 2015 by Grzegorz Mazur\n// Loosely based on mathematica mode by Calin Barbat\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('yacas', function(_config, _parserConfig) {\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  var bodiedOps = words(\"Assert BackQuote D Defun Deriv For ForEach FromFile \" +\n                        \"FromString Function Integrate InverseTaylor Limit \" +\n                        \"LocalSymbols Macro MacroRule MacroRulePattern \" +\n                        \"NIntegrate Rule RulePattern Subst TD TExplicitSum \" +\n                        \"TSum Taylor Taylor1 Taylor2 Taylor3 ToFile \" +\n                        \"ToStdout ToString TraceRule Until While\");\n\n  // patterns\n  var pFloatForm  = \"(?:(?:\\\\.\\\\d+|\\\\d+\\\\.\\\\d*|\\\\d+)(?:[eE][+-]?\\\\d+)?)\";\n  var pIdentifier = \"(?:[a-zA-Z\\\\$'][a-zA-Z0-9\\\\$']*)\";\n\n  // regular expressions\n  var reFloatForm    = new RegExp(pFloatForm);\n  var reIdentifier   = new RegExp(pIdentifier);\n  var rePattern      = new RegExp(pIdentifier + \"?_\" + pIdentifier);\n  var reFunctionLike = new RegExp(pIdentifier + \"\\\\s*\\\\(\");\n\n  function tokenBase(stream, state) {\n    var ch;\n\n    // get next character\n    ch = stream.next();\n\n    // string\n    if (ch === '\"') {\n      state.tokenize = tokenString;\n      return state.tokenize(stream, state);\n    }\n\n    // comment\n    if (ch === '/') {\n      if (stream.eat('*')) {\n        state.tokenize = tokenComment;\n        return state.tokenize(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n\n    // go back one character\n    stream.backUp(1);\n\n    // update scope info\n    var m = stream.match(/^(\\w+)\\s*\\(/, false);\n    if (m !== null && bodiedOps.hasOwnProperty(m[1]))\n      state.scopes.push('bodied');\n\n    var scope = currentScope(state);\n\n    if (scope === 'bodied' && ch === '[')\n      state.scopes.pop();\n\n    if (ch === '[' || ch === '{' || ch === '(')\n      state.scopes.push(ch);\n\n    scope = currentScope(state);\n\n    if (scope === '[' && ch === ']' ||\n        scope === '{' && ch === '}' ||\n        scope === '(' && ch === ')')\n      state.scopes.pop();\n\n    if (ch === ';') {\n      while (scope === 'bodied') {\n        state.scopes.pop();\n        scope = currentScope(state);\n      }\n    }\n\n    // look for ordered rules\n    if (stream.match(/\\d+ *#/, true, false)) {\n      return 'qualifier';\n    }\n\n    // look for numbers\n    if (stream.match(reFloatForm, true, false)) {\n      return 'number';\n    }\n\n    // look for placeholders\n    if (stream.match(rePattern, true, false)) {\n      return 'variable-3';\n    }\n\n    // match all braces separately\n    if (stream.match(/(?:\\[|\\]|{|}|\\(|\\))/, true, false)) {\n      return 'bracket';\n    }\n\n    // literals looking like function calls\n    if (stream.match(reFunctionLike, true, false)) {\n      stream.backUp(1);\n      return 'variable';\n    }\n\n    // all other identifiers\n    if (stream.match(reIdentifier, true, false)) {\n      return 'variable-2';\n    }\n\n    // operators; note that operators like @@ or /; are matched separately for each symbol.\n    if (stream.match(/(?:\\\\|\\+|\\-|\\*|\\/|,|;|\\.|:|@|~|=|>|<|&|\\||_|`|'|\\^|\\?|!|%|#)/, true, false)) {\n      return 'operator';\n    }\n\n    // everything else is an error\n    return 'error';\n  }\n\n  function tokenString(stream, state) {\n    var next, end = false, escaped = false;\n    while ((next = stream.next()) != null) {\n      if (next === '\"' && !escaped) {\n        end = true;\n        break;\n      }\n      escaped = !escaped && next === '\\\\';\n    }\n    if (end && !escaped) {\n      state.tokenize = tokenBase;\n    }\n    return 'string';\n  };\n\n  function tokenComment(stream, state) {\n    var prev, next;\n    while((next = stream.next()) != null) {\n      if (prev === '*' && next === '/') {\n        state.tokenize = tokenBase;\n        break;\n      }\n      prev = next;\n    }\n    return 'comment';\n  }\n\n  function currentScope(state) {\n    var scope = null;\n    if (state.scopes.length > 0)\n      scope = state.scopes[state.scopes.length - 1];\n    return scope;\n  }\n\n  return {\n    startState: function() {\n      return {\n        tokenize: tokenBase,\n        scopes: []\n      };\n    },\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      return state.tokenize(stream, state);\n    },\n    indent: function(state, textAfter) {\n      if (state.tokenize !== tokenBase && state.tokenize !== null)\n        return CodeMirror.Pass;\n\n      var delta = 0;\n      if (textAfter === ']' || textAfter === '];' ||\n          textAfter === '}' || textAfter === '};' ||\n          textAfter === ');')\n        delta = -1;\n\n      return (state.scopes.length + delta) * _config.indentUnit;\n    },\n    electricChars: \"{}[]();\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\"\n  };\n});\n\nCodeMirror.defineMIME('text/x-yacas', {\n  name: 'yacas'\n});\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","_config","_parserConfig","tokenBase","stream","state","ch","next","tokenize","tokenString","eat","tokenComment","skipToEnd","backUp","m","match","bodiedOps","hasOwnProperty","scopes","push","scope","currentScope","pop","reFloatForm","rePattern","reFunctionLike","reIdentifier","end","escaped","prev","length","words","str","obj","split","i","RegExp","pFloatForm","pIdentifier","startState","token","eatSpace","indent","textAfter","Pass","delta","indentUnit","electricChars","blockCommentStart","blockCommentEnd","lineComment","defineMIME","name"]
}
