{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$integrations$globalhandlers.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@sentry/browser/dist/integrations/globalhandlers.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$integrations$globalhandlers\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nvar core_1 = require(\"@sentry/core\");\nvar types_1 = require(\"@sentry/types\");\nvar utils_1 = require(\"@sentry/utils\");\nvar eventbuilder_1 = require(\"../eventbuilder\");\nvar helpers_1 = require(\"../helpers\");\n/** Global handlers */\nvar GlobalHandlers = /** @class */ (function () {\n    /** JSDoc */\n    function GlobalHandlers(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = GlobalHandlers.id;\n        /**\n         * Stores references functions to installing handlers. Will set to undefined\n         * after they have been run so that they are not used twice.\n         */\n        this._installFunc = {\n            onerror: _installGlobalOnErrorHandler,\n            onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n        };\n        this._options = tslib_1.__assign({ onerror: true, onunhandledrejection: true }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.prototype.setupOnce = function () {\n        Error.stackTraceLimit = 50;\n        var options = this._options;\n        // We can disable guard-for-in as we construct the options object above + do checks against\n        // `this._installFunc` for the property.\n        // eslint-disable-next-line guard-for-in\n        for (var key in options) {\n            var installFunc = this._installFunc[key];\n            if (installFunc && options[key]) {\n                globalHandlerLog(key);\n                installFunc();\n                this._installFunc[key] = undefined;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.id = 'GlobalHandlers';\n    return GlobalHandlers;\n}());\nexports.GlobalHandlers = GlobalHandlers;\n/** JSDoc */\nfunction _installGlobalOnErrorHandler() {\n    utils_1.addInstrumentationHandler('error', \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function (data) {\n        var _a = tslib_1.__read(getHubAndAttachStacktrace(), 2), hub = _a[0], attachStacktrace = _a[1];\n        if (!hub.getIntegration(GlobalHandlers)) {\n            return;\n        }\n        var msg = data.msg, url = data.url, line = data.line, column = data.column, error = data.error;\n        if (helpers_1.shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n            return;\n        }\n        var event = error === undefined && utils_1.isString(msg)\n            ? _eventFromIncompleteOnError(msg, url, line, column)\n            : _enhanceEventWithInitialFrame(eventbuilder_1.eventFromUnknownInput(error || msg, undefined, attachStacktrace, false), url, line, column);\n        event.level = types_1.Severity.Error;\n        addMechanismAndCapture(hub, error, event, 'onerror');\n    });\n}\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler() {\n    utils_1.addInstrumentationHandler('unhandledrejection', \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function (e) {\n        var _a = tslib_1.__read(getHubAndAttachStacktrace(), 2), hub = _a[0], attachStacktrace = _a[1];\n        if (!hub.getIntegration(GlobalHandlers)) {\n            return;\n        }\n        var error = e;\n        // dig the object of the rejection out of known event types\n        try {\n            // PromiseRejectionEvents store the object of the rejection under 'reason'\n            // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n            if ('reason' in e) {\n                error = e.reason;\n            }\n            // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n            // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n            // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n            // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n            // https://github.com/getsentry/sentry-javascript/issues/2380\n            else if ('detail' in e && 'reason' in e.detail) {\n                error = e.detail.reason;\n            }\n        }\n        catch (_oO) {\n            // no-empty\n        }\n        if (helpers_1.shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n            return true;\n        }\n        var event = utils_1.isPrimitive(error)\n            ? _eventFromRejectionWithPrimitive(error)\n            : eventbuilder_1.eventFromUnknownInput(error, undefined, attachStacktrace, true);\n        event.level = types_1.Severity.Error;\n        addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n        return;\n    });\n}\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n    return {\n        exception: {\n            values: [\n                {\n                    type: 'UnhandledRejection',\n                    // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n                    value: \"Non-Error promise rejection captured with value: \" + String(reason),\n                },\n            ],\n        },\n    };\n}\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n    var ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n    // If 'message' is ErrorEvent, get real message from inside\n    var message = utils_1.isErrorEvent(msg) ? msg.message : msg;\n    var name = 'Error';\n    var groups = message.match(ERROR_TYPES_RE);\n    if (groups) {\n        name = groups[1];\n        message = groups[2];\n    }\n    var event = {\n        exception: {\n            values: [\n                {\n                    type: name,\n                    value: message,\n                },\n            ],\n        },\n    };\n    return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n    // event.exception\n    var e = (event.exception = event.exception || {});\n    // event.exception.values\n    var ev = (e.values = e.values || []);\n    // event.exception.values[0]\n    var ev0 = (ev[0] = ev[0] || {});\n    // event.exception.values[0].stacktrace\n    var ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n    // event.exception.values[0].stacktrace.frames\n    var ev0sf = (ev0s.frames = ev0s.frames || []);\n    var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n    var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n    var filename = utils_1.isString(url) && url.length > 0 ? url : utils_1.getLocationHref();\n    // event.exception.values[0].stacktrace.frames\n    if (ev0sf.length === 0) {\n        ev0sf.push({\n            colno: colno,\n            filename: filename,\n            function: '?',\n            in_app: true,\n            lineno: lineno,\n        });\n    }\n    return event;\n}\nfunction globalHandlerLog(type) {\n    if (utils_1.isDebugBuild()) {\n        utils_1.logger.log(\"Global Handler attached: \" + type);\n    }\n}\nfunction addMechanismAndCapture(hub, error, event, type) {\n    utils_1.addExceptionMechanism(event, {\n        handled: false,\n        type: type,\n    });\n    hub.captureEvent(event, {\n        originalException: error,\n    });\n}\nfunction getHubAndAttachStacktrace() {\n    var hub = core_1.getCurrentHub();\n    var client = hub.getClient();\n    var attachStacktrace = client && client.getOptions().attachStacktrace;\n    return [hub, attachStacktrace];\n}\n//# sourceMappingURL=globalhandlers.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_installGlobalOnErrorHandler","utils_1","addInstrumentationHandler","data","_a","tslib_1","__read","getHubAndAttachStacktrace","hub","attachStacktrace","getIntegration","GlobalHandlers","msg","url","line","column","error","helpers_1","shouldIgnoreOnError","__sentry_own_request__","undefined","isString","message","isErrorEvent","name","groups","match","ERROR_TYPES_RE","_enhanceEventWithInitialFrame","event","exception","values","type","value","level","types_1","Severity","Error","addMechanismAndCapture","_installGlobalOnUnhandledRejectionHandler","e","reason","detail","_oO","isPrimitive","String","eventbuilder_1","eventFromUnknownInput","ev","ev0","ev0s","stacktrace","ev0sf","frames","colno","isNaN","parseInt","lineno","filename","length","getLocationHref","push","function","in_app","addExceptionMechanism","handled","captureEvent","originalException","core_1","getCurrentHub","client","getClient","getOptions","Object","defineProperty","options","id","_installFunc","onerror","onunhandledrejection","_options","__assign","prototype","setupOnce","GlobalHandlers.prototype.setupOnce","stackTraceLimit","key","installFunc","isDebugBuild","logger","log"]
}
