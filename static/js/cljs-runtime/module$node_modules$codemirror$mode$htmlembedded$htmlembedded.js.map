{
"version":3,
"file":"module$node_modules$codemirror$mode$htmlembedded$htmlembedded.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAIzH,SAAQ,CAACC,GAAD,CAAM,CACS,QAAtB,EAAI,MAAOD,QAAX,EAAmD,QAAnD,EAAkC,MAAOD,OAAzC,CACEE,GAAA,CAAIH,OAAA,CAAQ,+CAAR,CAAJ,CAAqCA,OAAA,CAAQ,yDAAR,CAArC,CACIA,OAAA,CAAQ,qDAAR,CADJ,CADF,CAG0B,UAArB,EAAI,MAAOI,OAAX,EAAmCA,MAAOC,CAAAA,GAA1C,CACHD,MAAA,CAAO,CAAC,sBAAD,CAAyB,wBAAzB,CACC,4BADD,CAAP,CACuCD,GADvC,CADG;AAIHA,GAAA,CAAIG,UAAJ,CARW,CAAd,CAAD,CASG,QAAQ,CAACA,UAAD,CAAa,CAGtBA,UAAWC,CAAAA,UAAX,CAAsB,cAAtB,CAAsC,QAAQ,CAACC,MAAD,CAASC,YAAT,CAAuB,CACnE,IAAIC,aAAeD,YAAaC,CAAAA,YAA5BA,EAA4C,SAChD,OAAOJ,WAAWK,CAAAA,gBAAX,CAA4BL,UAAWM,CAAAA,OAAX,CAAmBJ,MAAnB,CAA2B,WAA3B,CAA5B,CAAqE,CAC1EK,KAAMJ,YAAaK,CAAAA,WAAnBD,EAAkC,SADwC,CAE1EE,MAAOL,YAFmE,CAG1EM,WAAY,SAH8D,CAI1EC,KAAM,CAACC,MAAOA,QAAQ,CAACC,MAAD,CAAS,CAC7BA,MAAOC,CAAAA,MAAP,CAAcV,YAAd,CAAA,EAA+BS,MAAOE,CAAAA,SAAP,EAC/B,OAAO,SAFsB,CAAzB,CAJoE,CAArE,CAQJ,CACDR,KAAMJ,YAAaI,CAAAA,IAAnBA,EAA2BJ,YAAaa,CAAAA,gBAAxCT,EAA4D,OAD3D,CAEDE,MAAON,YAAaM,CAAAA,KAApBA;AAA6BN,YAAac,CAAAA,cAA1CR,EAA4D,OAF3D,CAGDE,KAAMX,UAAWM,CAAAA,OAAX,CAAmBJ,MAAnB,CAA2BC,YAAae,CAAAA,iBAAxC,CAHL,CARI,CAF4D,CAArE,CAeG,WAfH,CAiBAlB,WAAWmB,CAAAA,UAAX,CAAsB,mBAAtB,CAA2C,CAACC,KAAM,cAAP,CAAuBF,kBAAkB,YAAzC,CAA3C,CACAlB,WAAWmB,CAAAA,UAAX,CAAsB,oBAAtB,CAA4C,CAACC,KAAM,cAAP,CAAuBF,kBAAkB,eAAzC,CAA5C,CACAlB,WAAWmB,CAAAA,UAAX,CAAsB,mBAAtB,CAA2C,CAACC,KAAM,cAAP,CAAuBF,kBAAkB,aAAzC,CAA3C,CACAlB,WAAWmB,CAAAA,UAAX,CAAsB,mBAAtB,CAA2C,CAACC,KAAM,cAAP,CAAuBF,kBAAkB,MAAzC,CAA3C,CAvBsB,CATxB,CAJ0H;",
"sources":["node_modules/codemirror/mode/htmlembedded/htmlembedded.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$htmlembedded$htmlembedded\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"htmlembedded\", function(config, parserConfig) {\n    var closeComment = parserConfig.closeComment || \"--%>\"\n    return CodeMirror.multiplexingMode(CodeMirror.getMode(config, \"htmlmixed\"), {\n      open: parserConfig.openComment || \"<%--\",\n      close: closeComment,\n      delimStyle: \"comment\",\n      mode: {token: function(stream) {\n        stream.skipTo(closeComment) || stream.skipToEnd()\n        return \"comment\"\n      }}\n    }, {\n      open: parserConfig.open || parserConfig.scriptStartRegex || \"<%\",\n      close: parserConfig.close || parserConfig.scriptEndRegex || \"%>\",\n      mode: CodeMirror.getMode(config, parserConfig.scriptingModeSpec)\n    });\n  }, \"htmlmixed\");\n\n  CodeMirror.defineMIME(\"application/x-ejs\", {name: \"htmlembedded\", scriptingModeSpec:\"javascript\"});\n  CodeMirror.defineMIME(\"application/x-aspx\", {name: \"htmlembedded\", scriptingModeSpec:\"text/x-csharp\"});\n  CodeMirror.defineMIME(\"application/x-jsp\", {name: \"htmlembedded\", scriptingModeSpec:\"text/x-java\"});\n  CodeMirror.defineMIME(\"application/x-erb\", {name: \"htmlembedded\", scriptingModeSpec:\"ruby\"});\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","config","parserConfig","closeComment","multiplexingMode","getMode","open","openComment","close","delimStyle","mode","token","stream","skipTo","skipToEnd","scriptStartRegex","scriptEndRegex","scriptingModeSpec","defineMIME","name"]
}
