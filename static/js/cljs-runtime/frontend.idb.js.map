{"version":3,"sources":["frontend/idb.cljs"],"mappings":";;;;;AAcA,GAAA,QAAAA,qCAAAC,yCAAAC;AAAA;AAAA,AAAA,AAASC,qBAAM,KAAAC,4BAAA,cAAA,gBAAA;;AAEf,+BAAA,/BAAMC;AAAN,yDAGG,AAAAC,gDAAA,KAAA,WAAAC,zHAIA,OAACsB;AAJD,AAAA,OAAAvB,gGAAA,WAAQG,3DAAE,AAACC,4BAAiBP;AAA5B,AAAA,OAAAG,6EAAA,WACQK,xCAAI,AAACC;AADb,AAAA,OAAAJ,2BAAA,AAEE,iBAAAK,aAAA,AAAAC,cAAWH;IAAXI,eAAA;IAAAC,eAAA;IAAAC,WAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,WAAAD;AAAA,SAAA,AAAAD,kDAAAE,vDAAQS;AAAR,AAAA,AACE,AAACC,gCAAmC,4CAAA,5CAACC,yCAASF;;AADhD;AAAA,eAAAb;eAAAE;eAAAC;eAAA,CAAAC,WAAA;;;;;;;AAAA,IAAAC,qBAAA,AAAAJ,cAAAD;AAAA,AAAA,GAAAK;AAAA,AAAA,IAAAL,iBAAAK;AAAA,AAAA,GAAA,AAAAC,6BAAAN;AAAA,IAAAO,kBAAA,AAAAC,sBAAAR;AAAA,AAAA,eAAA,AAAAS,qBAAAT;eAAAO;eAAA,AAAAG,gBAAAH;eAAA;;;;;;;AAAA,SAAA,AAAAI,gBAAAX,rBAAQa;AAAR,AAAA,AACE,AAACC,gCAAmC,4CAAA,5CAACC,yCAASF;;AADhD;AAAA,eAAA,AAAAD,eAAAZ;eAAA;eAAA;eAAA;;;;;;;;AAAA;;;;;;;;IAEO,WAAKiB;AAAL,AAAA;;;AAEZ,iDAAA,jDAAMC;AAAN,AAEE,AAACC;;AACD,OAAC3B;;AAEH,iCAAA,jCAAM4B,0EACHC;AADH,AAEE,oBAAMA;AAAN,AACE,OAACC,0BAAeD,IAAI/B;;AADtB;;;AAGF,8BAAA,9BAAMiC,oEACHF,IAAIG;AADP,AAEE,oBAAMH;AAAN,AACE,OAACI,0BAAeJ,IAAIG,MAAMlC;;AAD5B;;;AAGF,+BAAA,/BAAMoC,sEACHC;AADH,AAEE,GAAM,AAAC1B,cAAI0B;AAAX,AACE,OAACC,+BAAoB,AAACC,qBAAQF,OAAOrC;;AADvC;;;AAGF,wBAAA,xBAAMwC,wDACHT;AADH,AAEE,oBAAMA;AAAN,AACE,OAACU,0BAAeV,IAAI/B;;AADtB;;;AAGF,wBAAA,xBAAM0C;AAAN,AAEE,OAACC,2BAAgB3C;;AAEnB,2BAAA,3BAAM4C;AAAN,AAEE,OAAAzC,gDAAA,KAAA,WAAAC;AAAA,AAAA,OAAAD,wEAAA,WAAQ0C,nCAAG,AAACH;AAAZ,AAAA,OAAArC,2BAAA,AAEO,4CAAA,WAAA8C,vDAACC;AAAD,AAAM,oCAAAD,+CAAA,5EAACE,8CAAuBJ;GAD9B,AAACH,+CAAO,WAAKC;AAAL,AAAQ,OAACC,kCAAoBD,EAAE,CAAKE,8BAAqBC;GAA0BL;;;;AAGpG,oCAAA,pCAAMS,gFACHC;AADH,AAEE,oBAAMA;AAAN,AACE,OAAApD,gDAAA,KAAA,WAAAC;AAAA,AAAA,OAAAD,wEAAA,WAAQ0C,nCAAG,AAACH;AAAZ,AAAA,OAAAvC,gDACW,AAAC2C,+CAAO,WAAKC;AAAL,AAAQ,OAACC,kCAAoBD,EAAE,8BAAA,7BAAKS,6EAAwBD;OAD/E,WACQV,fAA+EA;AADvF,AAAA,OAAAxC,2BAAA,AAEE,yBAAA,vBAAM,AAACM,cAAIkC,SACT,AAACY,iBAAM,AAACL,4CAAI,WAAKrB;AAAL,AACE,OAACD,+BAAaC;YAF9B,TAEoCc;;;;;AALxC","names":["js/frontend","js/frontend.idb","js/frontend.idb.store","frontend.idb/store","js/module$frontend$idbkv.Store","frontend.idb/clear-idb!","promesa.core.bind","___42626__auto__","promesa.protocols/-promise","_","js/module$frontend$idbkv.clear","dbs","js/window.indexedDB.databases","seq__63478","cljs.core/seq","chunk__63479","count__63480","i__63481","temp__5720__auto__","cljs.core/chunked-seq?","c__4679__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","db","js/window.indexedDB.deleteDatabase","frontend.idb.goog$module$goog$object.get","promesa.core.catch$","_e","frontend.idb/clear-local-storage-and-idb!","frontend.storage/clear","frontend.idb/remove-item!","key","js/module$frontend$idbkv.del","frontend.idb/set-item!","value","js/module$frontend$idbkv.set","frontend.idb/set-batch!","items","js/module$frontend$idbkv.setBatch","cljs.core/clj->js","frontend.idb/get-item","js/module$frontend$idbkv.get","frontend.idb/get-keys","js/module$frontend$idbkv.keys","frontend.idb/get-nfs-dbs","ks","cljs.core.filter","k","clojure.string/starts-with?","frontend.config/idb-db-prefix","frontend.config/local-db-prefix","p1__63491#","cljs.core.map","clojure.string/replace-first","frontend.idb/clear-local-db!","repo","frontend.config/local-handle","promesa.core/all"],"sourcesContent":["(ns frontend.idb\n  (:require [\"/frontend/idbkv\" :as idb-keyval :refer [Store]]\n            [clojure.string :as string]\n            [frontend.config :as config]\n            [frontend.storage :as storage]\n            [goog.object :as gobj]\n            [promesa.core :as p]))\n\n\n;; offline db\n\n;; To maintain backward compatibility\n\n\n(defonce store (Store. \"localforage\" \"keyvaluepairs\" 2))\n\n(defn clear-idb!\n  []\n  (->\n   (p/let [_ (idb-keyval/clear store)\n           dbs (js/window.indexedDB.databases)]\n     (doseq [db dbs]\n       (js/window.indexedDB.deleteDatabase (gobj/get db \"name\"))))\n   (p/catch (fn [_e]))))\n\n(defn clear-local-storage-and-idb!\n  []\n  (storage/clear)\n  (clear-idb!))\n\n(defn remove-item!\n  [key]\n  (when key\n    (idb-keyval/del key store)))\n\n(defn set-item!\n  [key value]\n  (when key\n    (idb-keyval/set key value store)))\n\n(defn set-batch!\n  [items]\n  (when (seq items)\n    (idb-keyval/setBatch (clj->js items) store)))\n\n(defn get-item\n  [key]\n  (when key\n    (idb-keyval/get key store)))\n\n(defn get-keys\n  []\n  (idb-keyval/keys store))\n\n(defn get-nfs-dbs\n  []\n  (p/let [ks (get-keys)]\n    (->> (filter (fn [k] (string/starts-with? k (str config/idb-db-prefix config/local-db-prefix))) ks)\n         (map #(string/replace-first % config/idb-db-prefix \"\")))))\n\n(defn clear-local-db!\n  [repo]\n  (when repo\n    (p/let [ks (get-keys)\n            ks (filter (fn [k] (string/starts-with? k (str config/local-handle \"/\" repo))) ks)]\n      (when (seq ks)\n        (p/all (map (fn [key]\n                      (remove-item! key)) ks))))))\n"]}