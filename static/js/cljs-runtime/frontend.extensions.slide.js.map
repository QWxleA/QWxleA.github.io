{"version":3,"sources":["frontend/extensions/slide.cljs"],"mappings":"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","names":["frontend.extensions.slide/loaded?","js/window.Reveal","frontend.extensions.slide/with-properties","m","block","properties","cljs.core/seq","cljs.core.merge","cljs.core/update-keys","k","cljs.core/name","clojure.string/replace","js/frontend","js/frontend.extensions","js/frontend.extensions.slide","js/frontend.extensions.slide.*loading?","frontend.extensions.slide/*loading?","cljs.core.atom","frontend.extensions.slide/render!","deck","js/document.querySelector","cljs-bean.core/->js","rum.core/lazy-build","rum.core/build-defc","attrs61323","daiquiri.core/create-element","cljs.core/map?","daiquiri.interpreter/element-attributes","attrs61324","daiquiri.normalize.merge_with_class","daiquiri.interpreter/interpret","attrs61332","attrs61340","frontend.extensions.slide/block-container","config","level","deep-level?","children","has-children?","cljs.core.map","G__61316","G__61317","G__61318","block-el","frontend.components.block/block-container","cljs.core.dissoc","dom-attrs","frontend.extensions.slide/slide-content","loading?","style","blocks","frontend.ui/loading","p1__61341#","frontend.extensions.slide/slide","rum.core/reactive","frontend.db-mixins/query","state","cljs.core/reset!","frontend.loader.load","frontend.config/asset-uri","page-name","rum.core/react","page","G__61342","frontend.db/entity","journal?","repo","frontend.state/get-current-repo","G__61343","G__61344","frontend.db/get-paginated-blocks","frontend.modules.outliner.tree.blocks__GT_vec_tree","cljs.core/rest"],"sourcesContent":["(ns frontend.extensions.slide\n  (:require [rum.core :as rum]\n            [cljs-bean.core :as bean]\n            [frontend.loader :as loader]\n            [frontend.ui :as ui]\n            [frontend.config :as config]\n            [frontend.components.block :as block]\n            [clojure.string :as string]\n            [frontend.db-mixins :as db-mixins]\n            [frontend.db :as db]\n            [frontend.modules.outliner.tree :as outliner-tree]\n            [frontend.state :as state]))\n\n(defn loaded? []\n  js/window.Reveal)\n\n(defn- with-properties\n  [m block]\n  (let [properties (:block/properties block)]\n    (if (seq properties)\n      (merge m\n             (update-keys\n              properties\n              (fn [k]\n                (-> (str \"data-\" (name k))\n                    (string/replace \"data-data-\" \"data-\")))))\n      m)))\n\n(defonce *loading? (atom false))\n\n(defn render!\n  []\n  (let [deck (js/window.Reveal.\n              (js/document.querySelector \".reveal\")\n              (bean/->js\n               {:embedded true\n                :controls true\n                :history false\n                :center true\n                :transition \"slide\"}))]\n    (.initialize deck)))\n\n;; reveal.js doesn't support multiple nested sections yet.\n;; https://github.com/hakimel/reveal.js/issues/1440\n(rum/defc block-container\n  [config block level]\n  (let [deep-level? (>= level 2)\n        children (:block/children block)\n        has-children? (seq children)\n        children (when (and has-children? (not deep-level?))\n                   (map (fn [block]\n                          (block-container config block (inc level))) children))\n        block-el (block/block-container config (dissoc block :block/children))\n        dom-attrs (with-properties {:key (str \"slide-block-\" (:block/uuid block))} block)]\n    (if has-children?\n      [:section dom-attrs\n       [:section.relative\n        block-el\n        (when deep-level?\n          [:span.opacity-30.text-xl \"Hidden children\"])]\n       children]\n      [:section dom-attrs block-el])))\n\n(defn slide-content\n  [loading? style config blocks]\n  [:div\n   [:p.text-sm\n    [:span.opacity-70 \"Tip: press \"]\n    [:code \"f\"]\n    [:span.opacity-70 \" to go fullscreen\"]]\n   [:div.reveal {:style style}\n    (when loading?\n      [:div.ls-center (ui/loading \"\")])\n    [:div.slides\n     (map #(block-container config % 1) blocks)]]])\n\n(rum/defc slide < rum/reactive db-mixins/query\n  {:did-mount (fn [state]\n                (if (loaded?)\n                  (do\n                    (reset! *loading? false)\n                    (render!))\n                  (do\n                    (reset! *loading? true)\n                    (loader/load\n                     (config/asset-uri \"/static/js/reveal.min.js\")\n                     (fn []\n                       (reset! *loading? false)\n                       (render!)))))\n                state)}\n  [page-name]\n  (let [loading? (rum/react *loading?)\n        page (db/entity [:block/name page-name])\n        journal? (:journal? page)\n        repo (state/get-current-repo)\n        blocks (-> (db/get-paginated-blocks repo (:db/id page))\n                   (outliner-tree/blocks->vec-tree page-name))\n        blocks (if journal?\n                 (rest blocks)\n                 blocks)\n        config {:id          \"slide-reveal-js\"\n                :slide?      true\n                :sidebar?    true\n                :page-name   page-name}]\n    (slide-content loading? {:height 400} config blocks)))\n"]}