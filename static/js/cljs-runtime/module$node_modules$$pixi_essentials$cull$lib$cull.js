shadow$provide.module$node_modules$$pixi_essentials$cull$lib$cull=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});const tempRect=new (require("module$node_modules$$pixi$math$dist$cjs$math").Rectangle);class Cull{constructor(options={}){this._recursive="boolean"===typeof options.recursive?options.recursive:!0;this._toggle=options.toggle||"visible";this._targetList=new Set}add(target){this._targetList.add(target);return this}addAll(targets){for(let i=0,
j=targets.length;i<j;i++)this._targetList.add(targets[i]);return this}remove(target){this._targetList.delete(target);return this}removeAll(targets){for(let i=0,j=targets.length;i<j;i++)this._targetList.delete(targets[i]);return this}clear(){this._targetList.clear();return this}cull(rect,skipUpdate=!1){skipUpdate||this.uncull();this._targetList.forEach(target=>{skipUpdate||target.getBounds(!1,tempRect);this._recursive?this.cullRecursive(rect,target,skipUpdate):(skipUpdate&&target._bounds.getRectangle(rect),
target[this._toggle]=tempRect.right>rect.left&&tempRect.left<rect.right&&tempRect.bottom>rect.top&&tempRect.top<rect.bottom)});return this}uncull(){this._targetList.forEach(target=>{this._recursive?this.uncullRecursive(target):target[this._toggle]=!1});return this}cullRecursive(rect,displayObject,skipUpdate){skipUpdate=skipUpdate?displayObject._bounds.getRectangle(tempRect):displayObject.getBounds(!0,tempRect);displayObject[this._toggle]=skipUpdate.right>rect.left&&skipUpdate.left<rect.right&&skipUpdate.bottom>
rect.top&&skipUpdate.top<rect.bottom;if(!(skipUpdate.left>=rect.left&&skipUpdate.top>=rect.top&&skipUpdate.right<=rect.right&&skipUpdate.bottom<=rect.bottom)&&displayObject[this._toggle]&&displayObject.children&&displayObject.children.length){displayObject=displayObject.children;for(let i=0,j=displayObject.length;i<j;i++)this.cullRecursive(rect,displayObject[i])}}uncullRecursive(displayObject){displayObject[this._toggle]=!0;if(displayObject.children&&displayObject.children.length){displayObject=displayObject.children;
for(let i=0,j=displayObject.length;i<j;i++)this.uncullRecursive(displayObject[i])}}}exports.Cull=Cull}
//# sourceMappingURL=module$node_modules$$pixi_essentials$cull$lib$cull.js.map
