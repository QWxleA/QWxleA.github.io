{
"version":3,
"file":"module$node_modules$codemirror$mode$ebnf$ebnf.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/codemirror/mode/ebnf/ebnf.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$ebnf$ebnf\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"ebnf\", function (config) {\n    var commentType = {slash: 0, parenthesis: 1};\n    var stateType = {comment: 0, _string: 1, characterClass: 2};\n    var bracesMode = null;\n\n    if (config.bracesMode)\n      bracesMode = CodeMirror.getMode(config, config.bracesMode);\n\n    return {\n      startState: function () {\n        return {\n          stringType: null,\n          commentType: null,\n          braced: 0,\n          lhs: true,\n          localState: null,\n          stack: [],\n          inDefinition: false\n        };\n      },\n      token: function (stream, state) {\n        if (!stream) return;\n\n        //check for state changes\n        if (state.stack.length === 0) {\n          //strings\n          if ((stream.peek() == '\"') || (stream.peek() == \"'\")) {\n            state.stringType = stream.peek();\n            stream.next(); // Skip quote\n            state.stack.unshift(stateType._string);\n          } else if (stream.match(/^\\/\\*/)) { //comments starting with /*\n            state.stack.unshift(stateType.comment);\n            state.commentType = commentType.slash;\n          } else if (stream.match(/^\\(\\*/)) { //comments starting with (*\n            state.stack.unshift(stateType.comment);\n            state.commentType = commentType.parenthesis;\n          }\n        }\n\n        //return state\n        //stack has\n        switch (state.stack[0]) {\n        case stateType._string:\n          while (state.stack[0] === stateType._string && !stream.eol()) {\n            if (stream.peek() === state.stringType) {\n              stream.next(); // Skip quote\n              state.stack.shift(); // Clear flag\n            } else if (stream.peek() === \"\\\\\") {\n              stream.next();\n              stream.next();\n            } else {\n              stream.match(/^.[^\\\\\\\"\\']*/);\n            }\n          }\n          return state.lhs ? \"property string\" : \"string\"; // Token style\n\n        case stateType.comment:\n          while (state.stack[0] === stateType.comment && !stream.eol()) {\n            if (state.commentType === commentType.slash && stream.match(/\\*\\//)) {\n              state.stack.shift(); // Clear flag\n              state.commentType = null;\n            } else if (state.commentType === commentType.parenthesis && stream.match(/\\*\\)/)) {\n              state.stack.shift(); // Clear flag\n              state.commentType = null;\n            } else {\n              stream.match(/^.[^\\*]*/);\n            }\n          }\n          return \"comment\";\n\n        case stateType.characterClass:\n          while (state.stack[0] === stateType.characterClass && !stream.eol()) {\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./))) {\n              state.stack.shift();\n            }\n          }\n          return \"operator\";\n        }\n\n        var peek = stream.peek();\n\n        if (bracesMode !== null && (state.braced || peek === \"{\")) {\n          if (state.localState === null)\n            state.localState = CodeMirror.startState(bracesMode);\n\n          var token = bracesMode.token(stream, state.localState),\n          text = stream.current();\n\n          if (!token) {\n            for (var i = 0; i < text.length; i++) {\n              if (text[i] === \"{\") {\n                if (state.braced === 0) {\n                  token = \"matchingbracket\";\n                }\n                state.braced++;\n              } else if (text[i] === \"}\") {\n                state.braced--;\n                if (state.braced === 0) {\n                  token = \"matchingbracket\";\n                }\n              }\n            }\n          }\n          return token;\n        }\n\n        //no stack\n        switch (peek) {\n        case \"[\":\n          stream.next();\n          state.stack.unshift(stateType.characterClass);\n          return \"bracket\";\n        case \":\":\n        case \"|\":\n        case \";\":\n          stream.next();\n          return \"operator\";\n        case \"%\":\n          if (stream.match(\"%%\")) {\n            return \"header\";\n          } else if (stream.match(/[%][A-Za-z]+/)) {\n            return \"keyword\";\n          } else if (stream.match(/[%][}]/)) {\n            return \"matchingbracket\";\n          }\n          break;\n        case \"/\":\n          if (stream.match(/[\\/][A-Za-z]+/)) {\n          return \"keyword\";\n        }\n        case \"\\\\\":\n          if (stream.match(/[\\][a-z]+/)) {\n            return \"string-2\";\n          }\n        case \".\":\n          if (stream.match(\".\")) {\n            return \"atom\";\n          }\n        case \"*\":\n        case \"-\":\n        case \"+\":\n        case \"^\":\n          if (stream.match(peek)) {\n            return \"atom\";\n          }\n        case \"$\":\n          if (stream.match(\"$$\")) {\n            return \"builtin\";\n          } else if (stream.match(/[$][0-9]+/)) {\n            return \"variable-3\";\n          }\n        case \"<\":\n          if (stream.match(/<<[a-zA-Z_]+>>/)) {\n            return \"builtin\";\n          }\n        }\n\n        if (stream.match(/^\\/\\//)) {\n          stream.skipToEnd();\n          return \"comment\";\n        } else if (stream.match(/return/)) {\n          return \"operator\";\n        } else if (stream.match(/^[a-zA-Z_][a-zA-Z0-9_]*/)) {\n          if (stream.match(/(?=[\\(.])/)) {\n            return \"variable\";\n          } else if (stream.match(/(?=[\\s\\n]*[:=])/)) {\n            return \"def\";\n          }\n          return \"variable-2\";\n        } else if ([\"[\", \"]\", \"(\", \")\"].indexOf(stream.peek()) != -1) {\n          stream.next();\n          return \"bracket\";\n        } else if (!stream.eatSpace()) {\n          stream.next();\n        }\n        return null;\n      }\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-ebnf\", \"ebnf\");\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","config","bracesMode","getMode","startState","stringType","commentType","braced","lhs","localState","stack","inDefinition","token","stream","state","length","peek","next","unshift","_string","match","comment","slash","parenthesis","eol","shift","characterClass","text","current","i","skipToEnd","indexOf","eatSpace","defineMIME"]
}
