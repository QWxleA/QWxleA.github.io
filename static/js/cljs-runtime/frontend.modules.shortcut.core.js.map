{"version":3,"sources":["frontend/modules/shortcut/core.cljs"],"mappings":"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","names":["frontend.modules.shortcut.core/*installed","cljs.core.atom","frontend.modules.shortcut.core/*inited?","frontend.modules.shortcut.core/*pending","frontend.modules.shortcut.core/global-keys","goog.events.KeyCodes/TAB","goog.events.KeyCodes/ENTER","goog.events.KeyCodes/BACKSPACE","goog.events.KeyCodes/DELETE","goog.events.KeyCodes/UP","goog.events.KeyCodes/LEFT","goog.events.KeyCodes/DOWN","goog.events.KeyCodes/RIGHT","frontend.modules.shortcut.core/key-names","cljs.core.js__GT_clj","js/goog.events.KeyNames","frontend.modules.shortcut.core/consume-pending-shortcuts!","and__4251__auto__","cljs.core/deref","cljs.core/seq","seq__64486","chunk__64487","count__64488","i__64489","vec__64543","cljs.core.nth","temp__5720__auto__","cljs.core/chunked-seq?","c__4679__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__64548","cljs.core/first","cljs.core/next","handler-id","id","shortcut","frontend.modules.shortcut.core/register-shortcut!","cljs.core/reset!","frontend.modules.shortcut.core/get-handler-by-id","p1__64553#","cljs.core.filter","cljs.core._EQ_","cljs.core/vals","var_args","G__64559","js/Error","frontend.modules.shortcut.core.register_shortcut_BANG_","shortcut-map","cljs.core/Keyword","cljs.core/not","cljs.core.swap_BANG_","cljs.core/conj","handler","cljs.core.keyword","frontend.modules.shortcut.config/add-shortcut!","frontend.modules.shortcut.data-helper/shortcut-binding","seq__64564","chunk__64565","count__64566","i__64567","k","e64575","e64577","lambdaisland.glogi.log","cljs.core/identity","frontend.util/keyname","frontend.modules.shortcut.data-helper/normalize-user-keyname","js/Object","e","frontend.handler.notification.show_BANG_","clojure.string.join","frontend.modules.shortcut.core/unregister-shortcut!","shortcut-id","ks","seq__64581","chunk__64582","count__64583","i__64584","frontend.modules.shortcut.config/remove-shortcut!","frontend.modules.shortcut.core/uninstall-shortcut!","install-id","cljs.core.get","cljs.core/dissoc","p__64597","map__64598","cljs.core/--destructure-map","frontend.modules.shortcut.core/install-shortcut!","set-global-keys?","prevent-default?","skip-installed?","state","frontend.modules.shortcut.data_helper.shortcut_map","js/goog.ui.KeyboardShortcutHandler","js/window","seq__64602","chunk__64603","count__64604","i__64605","vec__64618","vec__64621","_","f","dispatch-fn","medley.core/random-uuid","data","goog.ui.KeyboardShortcutHandler.EventType/SHORTCUT_TRIGGERED","cljs.core/merge","frontend.modules.shortcut.core/install-shortcuts!","p1__64629#","cljs.core.map","cljs.core.doall","frontend.modules.shortcut.core/mixin","cljs.core.assoc","old-state","new-state","frontend.modules.shortcut.core/unlisten-all","seq__64652","chunk__64654","count__64655","i__64656","map__64666","map__64668","group","cljs.core.not_EQ_","frontend.modules.shortcut.core/listen-all","seq__64669","chunk__64671","count__64672","i__64673","map__64677","map__64678","goog.events/listen","frontend.modules.shortcut.core/disable-all-shortcuts","frontend.modules.shortcut.core/refresh!","seq__64679","chunk__64680","count__64681","i__64682","cljs.core/keys","frontend.state/pub-event!","frontend.modules.shortcut.core/name-with-meta","ctrl","alt","meta","shift","keyname","G__64683","frontend.modules.shortcut.core/keyname","name","G__64685","frontend.modules.shortcut.core/record!","js/goog.events.KeyHandler","js/document","keystroke","seq__64690","chunk__64691","count__64692","i__64693","p1__64689#","p__64695","map__64696","args","local","clojure.string/trim","cljs.core/empty?","frontend.handler.config/set-config!","cljs.core.merge","frontend.state.get_config","js/setTimeout","cljs.core.dissoc"],"sourcesContent":["(ns frontend.modules.shortcut.core\n  (:require [clojure.string :as str]\n            [frontend.handler.config :as config]\n            [frontend.handler.notification :as notification]\n            [frontend.modules.shortcut.data-helper :as dh]\n            [frontend.modules.shortcut.config :as shortcut-config]\n            [frontend.state :as state]\n            [frontend.util :as util]\n            [goog.events :as events]\n            [goog.ui.KeyboardShortcutHandler.EventType :as EventType]\n            [lambdaisland.glogi :as log]\n            [medley.core :as medley])\n  (:import [goog.events KeyCodes KeyHandler KeyNames]\n           [goog.ui KeyboardShortcutHandler]))\n\n(def *installed (atom {}))\n(def *inited? (atom false))\n(def *pending (atom []))\n\n(def global-keys #js\n                  [KeyCodes/TAB\n                   KeyCodes/ENTER\n                   KeyCodes/BACKSPACE KeyCodes/DELETE\n                   KeyCodes/UP KeyCodes/LEFT KeyCodes/DOWN KeyCodes/RIGHT])\n\n(def key-names (js->clj KeyNames))\n\n(declare register-shortcut!)\n\n(defn consume-pending-shortcuts!\n  []\n  (when (and @*inited? (seq @*pending))\n    (doseq [[handler-id id shortcut] @*pending]\n      (register-shortcut! handler-id id shortcut))\n    (reset! *pending [])))\n\n(defn- get-handler-by-id\n  [handler-id]\n  (-> (filter #(= (:group %) handler-id) (vals @*installed))\n      first\n      :handler))\n\n(defn register-shortcut!\n  \"Register a shortcut, notice the id need to be a namespaced keyword to avoid\n  conflicts.\n  Example:\n  (register-shortcut! :shortcut.handler/misc :foo/bar {:binding \\\"mod+shift+8\\\"\n     :fn (fn [_state _event]\n     (js/alert \\\"test shortcut\\\"))})\"\n  ([handler-id id]\n   (register-shortcut! handler-id id nil))\n  ([handler-id id shortcut-map]\n   (if (and (keyword? handler-id) (not @*inited?))\n     (swap! *pending conj [handler-id id shortcut-map])\n     (when-let [handler (if (or (string? handler-id) (keyword? handler-id))\n                          (let [handler-id (keyword handler-id)]\n                            (get-handler-by-id handler-id))\n\n                          ;; handler\n                          handler-id)]\n\n       (when shortcut-map\n         (shortcut-config/add-shortcut! handler-id id shortcut-map))\n\n       (when-not (false? (dh/shortcut-binding id))\n         (doseq [k (dh/shortcut-binding id)]\n           (try\n             (log/debug :shortcut/register-shortcut {:id id :binding k})\n             (.registerShortcut handler (util/keyname id) (dh/normalize-user-keyname k))\n             (catch js/Object e\n               (log/error :shortcut/register-shortcut {:id      id\n                                                       :binding k\n                                                       :error   e})\n               (notification/show! (str/join \" \" [id k (.-message e)]) :error false)))))))))\n\n(defn unregister-shortcut!\n  \"Unregister a shortcut.\n  Example:\n  (unregister-shortcut! :shortcut.handler/misc :foo/bar)\"\n  [handler-id shortcut-id]\n  (when-let [handler (get-handler-by-id handler-id)]\n    (when-let [ks (dh/shortcut-binding shortcut-id)]\n      (doseq [k ks]\n        (.unregisterShortcut ^js handler (dh/normalize-user-keyname k))))\n    (shortcut-config/remove-shortcut! handler-id shortcut-id)))\n\n(defn uninstall-shortcut!\n  [install-id]\n  (when-let [handler (-> (get @*installed install-id)\n                         :handler)]\n    (.dispose ^js handler)\n    (swap! *installed dissoc install-id)))\n\n(defn install-shortcut!\n  [handler-id {:keys [set-global-keys?\n                      prevent-default?\n                      skip-installed?\n                      state]\n               :or   {set-global-keys? true\n                      prevent-default? false\n                      skip-installed? false}}]\n  (let [shortcut-map (dh/shortcut-map handler-id state)\n        handler      (new KeyboardShortcutHandler js/window)]\n    ;; set arrows enter, tab to global\n    (when set-global-keys?\n      (.setGlobalKeys handler global-keys))\n\n    (.setAlwaysPreventDefault handler prevent-default?)\n\n    ;; register shortcuts\n    (doseq [[id _] shortcut-map]\n      ;; (log/info :shortcut/install-shortcut {:id id :shortcut (str (dh/shortcut-binding id))})\n      (register-shortcut! handler id))\n\n    (let [f (fn [e]\n              (let [shortcut-map (dh/shortcut-map handler-id state)\n                    dispatch-fn (get shortcut-map (keyword (.-identifier e)))]\n                ;; trigger fn\n                (when dispatch-fn (dispatch-fn e))))\n          install-id (medley/random-uuid)\n          data       {install-id\n                      {:group      handler-id\n                       :dispatch-fn f\n                       :handler    handler}}]\n\n      (.listen handler EventType/SHORTCUT_TRIGGERED f)\n\n      (when-not skip-installed?\n        (swap! *installed merge data))\n\n      install-id)))\n\n(defn- install-shortcuts!\n  []\n  (->> [:shortcut.handler/misc\n        :shortcut.handler/editor-global\n        :shortcut.handler/global-non-editing-only\n        :shortcut.handler/global-prevent-default]\n       (map #(install-shortcut! % {}))\n       doall))\n\n(defn mixin [handler-id]\n  {:did-mount\n   (fn [state]\n     (let [install-id (install-shortcut! handler-id {:state state})]\n       (assoc state ::install-id install-id)))\n\n   :did-remount (fn [old-state new-state]\n                  (uninstall-shortcut! (::install-id old-state))\n                  (when-let [install-id (install-shortcut! handler-id {:state new-state})]\n                    (assoc new-state ::install-id install-id)))\n   :will-unmount\n   (fn [state]\n     (when-let [install-id (::install-id state)]\n       (uninstall-shortcut! install-id))\n     state)})\n\n(defn unlisten-all []\n  (doseq [{:keys [handler group]} (vals @*installed)\n          :when (not= group :shortcut.handler/misc)]\n    (.removeAllListeners handler)))\n\n(defn listen-all []\n  (doseq [{:keys [handler group dispatch-fn]} (vals @*installed)\n          :when (not= group :shortcut.handler/misc)]\n    (events/listen handler EventType/SHORTCUT_TRIGGERED dispatch-fn)))\n\n(defn disable-all-shortcuts []\n  {:did-mount\n   (fn [state]\n     (unlisten-all)\n     state)\n\n   :will-unmount\n   (fn [state]\n     (listen-all)\n     state)})\n\n(defn refresh!\n  \"Always use this function to refresh shortcuts\"\n  []\n  (log/info :shortcut/refresh @*installed)\n  (doseq [id (keys @*installed)]\n    (uninstall-shortcut! id))\n  (install-shortcuts!)\n  (state/pub-event! [:shortcut-handler-refreshed]))\n\n(defn- name-with-meta [e]\n  (let [ctrl    (.-ctrlKey e)\n        alt     (.-altKey e)\n        meta    (.-metaKey e)\n        shift   (.-shiftKey e)\n        keyname (get key-names (str (.-keyCode e)))]\n    (cond->> keyname\n      ctrl  (str \"ctrl+\")\n      alt   (str \"alt+\")\n      meta  (str \"meta+\")\n      shift (str \"shift+\"))))\n\n(defn- keyname [e]\n  (let [name (get key-names (str (.-keyCode e)))]\n    (case name\n      nil nil\n      (\"ctrl\" \"shift\" \"alt\" \"esc\") nil\n      (str \" \" (name-with-meta e)))))\n\n(defn record! []\n  {:did-mount\n   (fn [state]\n     (let [handler (KeyHandler. js/document)\n           keystroke (:rum/local state)]\n\n       (doseq [id (keys @*installed)]\n         (uninstall-shortcut! id))\n\n       (events/listen handler \"key\"\n                      (fn [e]\n                        (.preventDefault e)\n                        (swap! keystroke #(str % (keyname e)))))\n\n       (assoc state ::key-record-handler handler)))\n\n   :will-unmount\n   (fn [{:rum/keys [args local] :as state}]\n     (let [k (first args)\n           keystroke (str/trim @local)]\n       (when-not (empty? keystroke)\n         (config/set-config! :shortcuts (merge\n                                         (:shortcuts (state/get-config))\n                                         {k keystroke}))))\n\n     (when-let [^js handler (::key-record-handler state)]\n       (.dispose handler))\n\n     (js/setTimeout #(refresh!) 500)\n\n     (dissoc state ::key-record-handler))})\n"]}