{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$stack_parsers.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@sentry/browser/dist/stack-parsers.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$stack_parsers\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\nvar OPERA10_PRIORITY = 10;\nvar OPERA11_PRIORITY = 20;\nvar CHROME_PRIORITY = 30;\nvar WINJS_PRIORITY = 40;\nvar GECKO_PRIORITY = 50;\nfunction createFrame(filename, func, lineno, colno) {\n    var frame = {\n        filename: filename,\n        function: func,\n        // All browser frames are considered in_app\n        in_app: true,\n    };\n    if (lineno !== undefined) {\n        frame.lineno = lineno;\n    }\n    if (colno !== undefined) {\n        frame.colno = colno;\n    }\n    return frame;\n}\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chromeRegex = /^\\s*at (?:(.*?) ?\\((?:address at )?)?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\nvar chrome = function (line) {\n    var parts = chromeRegex.exec(line);\n    if (parts) {\n        var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n        if (isEval) {\n            var subMatch = chromeEvalRegex.exec(parts[2]);\n            if (subMatch) {\n                // throw out eval line/column and use top-most line/column number\n                parts[2] = subMatch[1]; // url\n                parts[3] = subMatch[2]; // line\n                parts[4] = subMatch[3]; // column\n            }\n        }\n        // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n        // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n        var _a = tslib_1.__read(extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]), 2), func = _a[0], filename = _a[1];\n        return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n    }\n    return;\n};\nexports.chromeStackParser = [CHROME_PRIORITY, chrome];\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar geckoREgex = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nvar gecko = function (line) {\n    var _a;\n    var parts = geckoREgex.exec(line);\n    if (parts) {\n        var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n        if (isEval) {\n            var subMatch = geckoEvalRegex.exec(parts[3]);\n            if (subMatch) {\n                // throw out eval line/column and use top-most line number\n                parts[1] = parts[1] || 'eval';\n                parts[3] = subMatch[1];\n                parts[4] = subMatch[2];\n                parts[5] = ''; // no column when eval\n            }\n        }\n        var filename = parts[3];\n        var func = parts[1] || UNKNOWN_FUNCTION;\n        _a = tslib_1.__read(extractSafariExtensionDetails(func, filename), 2), func = _a[0], filename = _a[1];\n        return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n    }\n    return;\n};\nexports.geckoStackParser = [GECKO_PRIORITY, gecko];\nvar winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nvar winjs = function (line) {\n    var parts = winjsRegex.exec(line);\n    return parts\n        ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n        : undefined;\n};\nexports.winjsStackParser = [WINJS_PRIORITY, winjs];\nvar opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\nvar opera10 = function (line) {\n    var parts = opera10Regex.exec(line);\n    return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\nexports.opera10StackParser = [OPERA10_PRIORITY, opera10];\nvar opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\nvar opera11 = function (line) {\n    var parts = opera11Regex.exec(line);\n    return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\nexports.opera11StackParser = [OPERA11_PRIORITY, opera11];\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nvar extractSafariExtensionDetails = function (func, filename) {\n    var isSafariExtension = func.indexOf('safari-extension') !== -1;\n    var isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n    return isSafariExtension || isSafariWebExtension\n        ? [\n            func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n            isSafariExtension ? \"safari-extension:\" + filename : \"safari-web-extension:\" + filename,\n        ]\n        : [func, filename];\n};\n//# sourceMappingURL=stack-parsers.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","createFrame","filename","func","lineno","colno","frame","function","in_app","undefined","Object","defineProperty","value","tslib_1","chromeRegex","chromeEvalRegex","chromeStackParser","CHROME_PRIORITY","chrome","line","parts","exec","indexOf","subMatch","_a","__read","extractSafariExtensionDetails","UNKNOWN_FUNCTION","geckoREgex","geckoEvalRegex","geckoStackParser","GECKO_PRIORITY","gecko","winjsRegex","winjsStackParser","WINJS_PRIORITY","winjs","opera10Regex","opera10StackParser","OPERA10_PRIORITY","opera10","opera11Regex","opera11StackParser","OPERA11_PRIORITY","opera11","isSafariExtension","isSafariWebExtension","split"]
}
