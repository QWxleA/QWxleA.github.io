shadow$provide.module$node_modules$chrono_node$dist$locales$fr$index=function(global,require,module,exports){function createCasualConfiguration(littleEndian=!0){littleEndian=createConfiguration(!1,littleEndian);littleEndian.parsers.unshift(new FRCasualDateParser_1.default);littleEndian.parsers.unshift(new FRCasualTimeParser_1.default);littleEndian.parsers.unshift(new FRTimeUnitRelativeFormatParser_1.default);return littleEndian}function createConfiguration(strictMode=!0,littleEndian=!0){return configurations_1.includeCommonConfiguration({parsers:[new SlashDateFormatParser_1.default(littleEndian),
new FRMonthNameLittleEndianParser_1.default,new FRTimeExpressionParser_1.default,new FRSpecificTimeExpressionParser_1.default,new FRTimeUnitAgoFormatParser_1.default,new FRTimeUnitWithinFormatParser_1.default,new FRWeekdayParser_1.default],refiners:[new FRMergeDateTimeRefiner_1.default,new FRMergeDateRangeRefiner_1.default]},strictMode)}global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});exports.createConfiguration=
exports.createCasualConfiguration=exports.parseDate=exports.parse=exports.strict=exports.casual=void 0;const configurations_1=require("module$node_modules$chrono_node$dist$configurations");module=require("module$node_modules$chrono_node$dist$chrono");const FRCasualDateParser_1=global(require("module$node_modules$chrono_node$dist$locales$fr$parsers$FRCasualDateParser")),FRCasualTimeParser_1=global(require("module$node_modules$chrono_node$dist$locales$fr$parsers$FRCasualTimeParser")),SlashDateFormatParser_1=
global(require("module$node_modules$chrono_node$dist$common$parsers$SlashDateFormatParser")),FRTimeExpressionParser_1=global(require("module$node_modules$chrono_node$dist$locales$fr$parsers$FRTimeExpressionParser")),FRMergeDateTimeRefiner_1=global(require("module$node_modules$chrono_node$dist$locales$fr$refiners$FRMergeDateTimeRefiner")),FRMergeDateRangeRefiner_1=global(require("module$node_modules$chrono_node$dist$locales$fr$refiners$FRMergeDateRangeRefiner")),FRWeekdayParser_1=global(require("module$node_modules$chrono_node$dist$locales$fr$parsers$FRWeekdayParser")),
FRSpecificTimeExpressionParser_1=global(require("module$node_modules$chrono_node$dist$locales$fr$parsers$FRSpecificTimeExpressionParser")),FRMonthNameLittleEndianParser_1=global(require("module$node_modules$chrono_node$dist$locales$fr$parsers$FRMonthNameLittleEndianParser")),FRTimeUnitAgoFormatParser_1=global(require("module$node_modules$chrono_node$dist$locales$fr$parsers$FRTimeUnitAgoFormatParser")),FRTimeUnitWithinFormatParser_1=global(require("module$node_modules$chrono_node$dist$locales$fr$parsers$FRTimeUnitWithinFormatParser")),
FRTimeUnitRelativeFormatParser_1=global(require("module$node_modules$chrono_node$dist$locales$fr$parsers$FRTimeUnitRelativeFormatParser"));exports.casual=new module.Chrono(createCasualConfiguration());exports.strict=new module.Chrono(createConfiguration(!0));exports.parse=function(text,ref,option){return exports.casual.parse(text,ref,option)};exports.parseDate=function(text,ref,option){return exports.casual.parseDate(text,ref,option)};exports.createCasualConfiguration=createCasualConfiguration;exports.createConfiguration=
createConfiguration}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$fr$index.js.map
