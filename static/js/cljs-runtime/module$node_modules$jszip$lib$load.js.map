{
"version":3,
"file":"module$node_modules$jszip$lib$load.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/jszip/lib/load.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jszip$lib$load\"] = function(global,require,module,exports) {\n'use strict';\nvar utils = require('./utils');\nvar external = require(\"./external\");\nvar utf8 = require('./utf8');\nvar utils = require('./utils');\nvar ZipEntries = require('./zipEntries');\nvar Crc32Probe = require('./stream/Crc32Probe');\nvar nodejsUtils = require(\"./nodejsUtils\");\n\n/**\n * Check the CRC32 of an entry.\n * @param {ZipEntry} zipEntry the zip entry to check.\n * @return {Promise} the result.\n */\nfunction checkEntryCRC32(zipEntry) {\n    return new external.Promise(function (resolve, reject) {\n        var worker = zipEntry.decompressed.getContentWorker().pipe(new Crc32Probe());\n        worker.on(\"error\", function (e) {\n            reject(e);\n        })\n        .on(\"end\", function () {\n            if (worker.streamInfo.crc32 !== zipEntry.decompressed.crc32) {\n                reject(new Error(\"Corrupted zip : CRC32 mismatch\"));\n            } else {\n                resolve();\n            }\n        })\n        .resume();\n    });\n}\n\nmodule.exports = function(data, options) {\n    var zip = this;\n    options = utils.extend(options || {}, {\n        base64: false,\n        checkCRC32: false,\n        optimizedBinaryString: false,\n        createFolders: false,\n        decodeFileName: utf8.utf8decode\n    });\n\n    if (nodejsUtils.isNode && nodejsUtils.isStream(data)) {\n        return external.Promise.reject(new Error(\"JSZip can't accept a stream when loading a zip file.\"));\n    }\n\n    return utils.prepareContent(\"the loaded zip file\", data, true, options.optimizedBinaryString, options.base64)\n    .then(function(data) {\n        var zipEntries = new ZipEntries(options);\n        zipEntries.load(data);\n        return zipEntries;\n    }).then(function checkCRC32(zipEntries) {\n        var promises = [external.Promise.resolve(zipEntries)];\n        var files = zipEntries.files;\n        if (options.checkCRC32) {\n            for (var i = 0; i < files.length; i++) {\n                promises.push(checkEntryCRC32(files[i]));\n            }\n        }\n        return external.Promise.all(promises);\n    }).then(function addFiles(results) {\n        var zipEntries = results.shift();\n        var files = zipEntries.files;\n        for (var i = 0; i < files.length; i++) {\n            var input = files[i];\n            zip.file(input.fileNameStr, input.decompressed, {\n                binary: true,\n                optimizedBinaryString: true,\n                date: input.date,\n                dir: input.dir,\n                comment : input.fileCommentStr.length ? input.fileCommentStr : null,\n                unixPermissions : input.unixPermissions,\n                dosPermissions : input.dosPermissions,\n                createFolders: options.createFolders\n            });\n        }\n        if (zipEntries.zipComment.length) {\n            zip.comment = zipEntries.zipComment;\n        }\n\n        return zip;\n    });\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","checkEntryCRC32","zipEntry","external","Promise","resolve","reject","worker","decompressed","getContentWorker","pipe","Crc32Probe","on","e","streamInfo","crc32","Error","resume","utils","utf8","ZipEntries","nodejsUtils","module.exports","data","options","zip","extend","base64","checkCRC32","optimizedBinaryString","createFolders","decodeFileName","utf8decode","isNode","isStream","prepareContent","then","zipEntries","load","promises","files","i","length","push","all","addFiles","results","shift","input","file","fileNameStr","binary","date","dir","comment","fileCommentStr","unixPermissions","dosPermissions","zipComment"]
}
