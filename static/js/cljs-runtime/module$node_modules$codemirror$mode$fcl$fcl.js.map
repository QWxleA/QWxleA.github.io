{
"version":3,
"file":"module$node_modules$codemirror$mode$fcl$fcl.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/codemirror/mode/fcl/fcl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$fcl$fcl\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"fcl\", function(config) {\n  var indentUnit = config.indentUnit;\n\n  var keywords = {\n      \"term\": true,\n      \"method\": true, \"accu\": true,\n      \"rule\": true, \"then\": true, \"is\": true, \"and\": true, \"or\": true,\n      \"if\": true, \"default\": true\n  };\n\n  var start_blocks = {\n      \"var_input\": true,\n      \"var_output\": true,\n      \"fuzzify\": true,\n      \"defuzzify\": true,\n      \"function_block\": true,\n      \"ruleblock\": true\n  };\n\n  var end_blocks = {\n      \"end_ruleblock\": true,\n      \"end_defuzzify\": true,\n      \"end_function_block\": true,\n      \"end_fuzzify\": true,\n      \"end_var\": true\n  };\n\n  var atoms = {\n      \"true\": true, \"false\": true, \"nan\": true,\n      \"real\": true, \"min\": true, \"max\": true, \"cog\": true, \"cogs\": true\n  };\n\n  var isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n\n    if (/[\\d\\.]/.test(ch)) {\n      if (ch == \".\") {\n        stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n      } else if (ch == \"0\") {\n        stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n      } else {\n        stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n      }\n      return \"number\";\n    }\n\n    if (ch == \"/\" || ch == \"(\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n\n    var cur = stream.current().toLowerCase();\n    if (keywords.propertyIsEnumerable(cur) ||\n        start_blocks.propertyIsEnumerable(cur) ||\n        end_blocks.propertyIsEnumerable(cur)) {\n      return \"keyword\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if ((ch == \"/\" || ch == \")\") && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n\n  function pushContext(state, col, type) {\n    return state.context = new Context(state.indented, col, type, null, state.context);\n  }\n\n  function popContext(state) {\n    if (!state.context.prev) return;\n    var t = state.context.type;\n    if (t == \"end_block\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n        var ctx = state.context;\n        if (stream.sol()) {\n            if (ctx.align == null) ctx.align = false;\n            state.indented = stream.indentation();\n            state.startOfLine = true;\n        }\n        if (stream.eatSpace()) return null;\n\n        var style = (state.tokenize || tokenBase)(stream, state);\n        if (style == \"comment\") return style;\n        if (ctx.align == null) ctx.align = true;\n\n        var cur = stream.current().toLowerCase();\n\n        if (start_blocks.propertyIsEnumerable(cur)) pushContext(state, stream.column(), \"end_block\");\n        else if (end_blocks.propertyIsEnumerable(cur))  popContext(state);\n\n        state.startOfLine = false;\n        return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n      var ctx = state.context;\n\n      var closing = end_blocks.propertyIsEnumerable(textAfter);\n      if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"ryk\",\n    fold: \"brace\",\n    blockCommentStart: \"(*\",\n    blockCommentEnd: \"*)\",\n    lineComment: \"//\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-fcl\", \"fcl\");\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","config","tokenBase","stream","state","ch","next","test","match","eat","tokenize","tokenComment","skipToEnd","isOperatorChar","eatWhile","cur","current","toLowerCase","keywords","propertyIsEnumerable","start_blocks","end_blocks","atoms","maybeEnd","Context","indented","column","type","align","prev","indentUnit","startState","basecolumn","context","startOfLine","token","ctx","sol","indentation","eatSpace","style","col","indent","textAfter","closing","electricChars","fold","blockCommentStart","blockCommentEnd","lineComment","defineMIME"]
}
