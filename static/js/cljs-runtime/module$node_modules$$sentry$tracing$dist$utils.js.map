{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$utils.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC3GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,MAAQN,OAAA,CAAQ,4CAAR,CAaRO,OAAAA,CAAUP,OAAA,CAAQ,8CAAR,CACdE,QAAQM,CAAAA,kBAAR,CAA6BD,MAAQC,CAAAA,kBACrCN,QAAQO,CAAAA,sBAAR,CAAiCF,MAAQE,CAAAA,sBAWzCP,QAAQQ,CAAAA,iBAAR,CALAA,QAA0B,CAACC,YAAD,CAAe,CACrC,IAAIC,OAASN,KAAMO,CAAAA,aAAN,EAAsBC,CAAAA,SAAtB,EACTC,aAAAA;AAAUJ,YAAVI,EAA2BH,MAA3BG,EAAqCH,MAAOI,CAAAA,UAAP,EACzC,OAAO,CAAC,CAACD,YAAT,GAAqB,kBAArB,EAA2CA,aAA3C,EAAsD,eAAtD,EAAyEA,aAAzE,CAHqC,CAYzCb,QAAQe,CAAAA,oBAAR,CALAA,QAA6B,CAACC,QAAD,CAAW,CAGpC,OADIC,QACJ,CADgBC,CADNF,QACME,EADMd,KAAMO,CAAAA,aAAN,EACNO,EAAAA,QAAJ,EACZ,GAAgBD,QAAME,CAAAA,cAAN,EAHoB,CAaxCnB,QAAQoB,CAAAA,OAAR,CAHAA,QAAgB,CAACC,IAAD,CAAO,CACnB,MAAOA,KAAP,CAAc,GADK,CAWvBrB,QAAQsB,CAAAA,OAAR,CAHAA,QAAgB,CAACD,IAAD,CAAO,CACnB,MAAc,IAAd,CAAOA,IADY,CAKnBE,QAAAA,CAAUzB,OAAA,CAAQ,8CAAR,CACdE,QAAQwB,CAAAA,wBAAR,CAAmCD,OAAQC,CAAAA,wBAtDgE;",
"sources":["node_modules/@sentry/tracing/dist/utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$utils\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hub_1 = require(\"@sentry/hub\");\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability's sake.\n *\n * TODO(v7): Reorganize these exports\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n */\nvar utils_1 = require(\"@sentry/utils\");\nexports.TRACEPARENT_REGEXP = utils_1.TRACEPARENT_REGEXP;\nexports.extractTraceparentData = utils_1.extractTraceparentData;\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(maybeOptions) {\n    var client = hub_1.getCurrentHub().getClient();\n    var options = maybeOptions || (client && client.getOptions());\n    return !!options && ('tracesSampleRate' in options || 'tracesSampler' in options);\n}\nexports.hasTracingEnabled = hasTracingEnabled;\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(maybeHub) {\n    var hub = maybeHub || hub_1.getCurrentHub();\n    var scope = hub.getScope();\n    return scope && scope.getTransaction();\n}\nexports.getActiveTransaction = getActiveTransaction;\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n    return time / 1000;\n}\nexports.msToSec = msToSec;\n/**\n * Converts from seconds to milliseconds\n * @param time time in seconds\n */\nfunction secToMs(time) {\n    return time * 1000;\n}\nexports.secToMs = secToMs;\n// so it can be used in manual instrumentation without necessitating a hard dependency on @sentry/utils\nvar utils_2 = require(\"@sentry/utils\");\nexports.stripUrlQueryAndFragment = utils_2.stripUrlQueryAndFragment;\n//# sourceMappingURL=utils.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","hub_1","utils_1","TRACEPARENT_REGEXP","extractTraceparentData","hasTracingEnabled","maybeOptions","client","getCurrentHub","getClient","options","getOptions","getActiveTransaction","maybeHub","scope","getScope","getTransaction","msToSec","time","secToMs","utils_2","stripUrlQueryAndFragment"]
}
