shadow$provide.module$node_modules$chrono_node$dist$calculation$weeks=function(global,require,module,exports){function toDayJSClosestWeekday(refDate,offset){refDate=dayjs_1.default(refDate);const refOffset=refDate.day();return refDate=Math.abs(offset-7-refOffset)<Math.abs(offset-refOffset)?refDate.day(offset-7):Math.abs(offset+7-refOffset)<Math.abs(offset-refOffset)?refDate.day(offset+7):refDate.day(offset)}global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};
Object.defineProperty(exports,"__esModule",{value:!0});exports.toDayJSClosestWeekday=exports.toDayJSWeekday=void 0;const dayjs_1=global(require("module$node_modules$dayjs$dayjs_min"));exports.toDayJSWeekday=function(refDate,offset,modifier){if(!modifier)return toDayJSClosestWeekday(refDate,offset);refDate=dayjs_1.default(refDate);switch(modifier){case "this":refDate=refDate.day(offset);break;case "next":refDate=refDate.day(offset+7);break;case "last":refDate=refDate.day(offset-7)}return refDate};
exports.toDayJSClosestWeekday=toDayJSClosestWeekday}
//# sourceMappingURL=module$node_modules$chrono_node$dist$calculation$weeks.js.map
