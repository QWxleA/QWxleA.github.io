{"version":3,"sources":["frontend/external.cljs"],"mappings":";AAIA,GAAA,QAAAA,qCAAAC,8CAAAC;AAAA;AAAA,AAAA,AAASC,gCAAY,AAACC;;AAEtB,+BAAA,/BAAMC,sEACHC;AADH,AAEE,IAAAC,YAAMD;IAANC,gBAAA,EAAA,CAAAA,qBAAAC,oBAAA,AAAAD,cAAA;AAAA,AAAA,QAAAA;KAAA;AAEEJ;;;;AAFF;;;;AAKF,sCAAA,tCAAMM,oFACHH,KAAKI,QAAQC;AADhB,AAEE,IAAAC,qBAAkB,AAACP,6BAAW,AAACS,gDAAQR;AAAvC,AAAA,oBAAAM;AAAA,AAAA,aAAAA,TAAWC;AAAX,AACE,OAACE,2CAAyBF,OAAOH,QAAQC;;AAD3C","names":["js/frontend","js/frontend.external","js/frontend.external.roam-record","frontend.external/roam-record","frontend.external.roam/->Roam","frontend.external/get-record","type","G__108540","cljs.core/Keyword","frontend.external/to-markdown-files","content","config","temp__5720__auto__","record","cljs.core.keyword","frontend.external.protocol/toMarkdownFiles"],"sourcesContent":["(ns frontend.external\n  (:require [frontend.external.roam :refer [->Roam]]\n            [frontend.external.protocol :as protocol]))\n\n(defonce roam-record (->Roam))\n\n(defn get-record\n  [type]\n  (case type\n    :roam\n    roam-record\n    nil))\n\n(defn to-markdown-files\n  [type content config]\n  (when-let [record (get-record (keyword type))]\n    (protocol/toMarkdownFiles record content config)))\n"]}