shadow$provide.module$node_modules$$sentry$tracing$dist$browser$request=function(global,require,module,exports){function fetchCallback(handlerData,shouldCreateSpan,spans){if(utils_2.hasTracingEnabled()&&handlerData.fetchData&&shouldCreateSpan(handlerData.fetchData.url))if(handlerData.endTimestamp){var spanId=handlerData.fetchData.__span;spanId&&(shouldCreateSpan=spans[spanId])&&(handlerData.response?shouldCreateSpan.setHttpStatus(handlerData.response.status):handlerData.error&&shouldCreateSpan.setStatus("internal_error"),
shouldCreateSpan.finish(),delete spans[spanId])}else if(shouldCreateSpan=utils_2.getActiveTransaction())shouldCreateSpan=shouldCreateSpan.startChild({data:tslib_1.__assign(tslib_1.__assign({},handlerData.fetchData),{type:"fetch"}),description:handlerData.fetchData.method+" "+handlerData.fetchData.url,op:"http.client"}),handlerData.fetchData.__span=shouldCreateSpan.spanId,spans[shouldCreateSpan.spanId]=shouldCreateSpan,spans=handlerData.args[0]=handlerData.args[0],handlerData=handlerData.args[1]=handlerData.args[1]||
{},spanId=handlerData.headers,utils_1.isInstanceOf(spans,Request)&&(spanId=spans.headers),spanId?"function"===typeof spanId.append?spanId.append("sentry-trace",shouldCreateSpan.toTraceparent()):spanId=Array.isArray(spanId)?tslib_1.__spread(spanId,[["sentry-trace",shouldCreateSpan.toTraceparent()]]):tslib_1.__assign(tslib_1.__assign({},spanId),{"sentry-trace":shouldCreateSpan.toTraceparent()}):spanId={"sentry-trace":shouldCreateSpan.toTraceparent()},handlerData.headers=spanId}function xhrCallback(handlerData,
shouldCreateSpan,spans){if(!(!utils_2.hasTracingEnabled()||handlerData.xhr&&handlerData.xhr.__sentry_own_request__)&&handlerData.xhr&&handlerData.xhr.__sentry_xhr__&&shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))if(shouldCreateSpan=handlerData.xhr.__sentry_xhr__,handlerData.endTimestamp){if(handlerData=handlerData.xhr.__sentry_xhr_span_id__){var span=spans[handlerData];span&&(span.setHttpStatus(shouldCreateSpan.status_code),span.finish(),delete spans[handlerData])}}else if(span=utils_2.getActiveTransaction())if(span=
span.startChild({data:tslib_1.__assign(tslib_1.__assign({},shouldCreateSpan.data),{type:"xhr",method:shouldCreateSpan.method,url:shouldCreateSpan.url}),description:shouldCreateSpan.method+" "+shouldCreateSpan.url,op:"http.client"}),handlerData.xhr.__sentry_xhr_span_id__=span.spanId,spans[handlerData.xhr.__sentry_xhr_span_id__]=span,handlerData.xhr.setRequestHeader)try{handlerData.xhr.setRequestHeader("sentry-trace",span.toTraceparent())}catch(_){}}Object.defineProperty(exports,"__esModule",{value:!0});
var tslib_1=require("module$node_modules$$sentry$tracing$node_modules$tslib$tslib"),utils_1=require("module$node_modules$$sentry$utils$dist$index"),utils_2=require("module$node_modules$$sentry$tracing$dist$utils");exports.DEFAULT_TRACING_ORIGINS=["localhost",/^\//];exports.defaultRequestInstrumentationOptions={traceFetch:!0,traceXHR:!0,tracingOrigins:exports.DEFAULT_TRACING_ORIGINS};exports.instrumentOutgoingRequests=function(_options){_options=tslib_1.__assign(tslib_1.__assign({},exports.defaultRequestInstrumentationOptions),
_options);var traceFetch=_options.traceFetch,traceXHR=_options.traceXHR,tracingOrigins=_options.tracingOrigins,shouldCreateSpanForRequest=_options.shouldCreateSpanForRequest,urlMap={},defaultShouldCreateSpan=function(url){if(urlMap[url])return urlMap[url];urlMap[url]=tracingOrigins.some(function(origin){return utils_1.isMatchingPattern(url,origin)})&&!utils_1.isMatchingPattern(url,"sentry_key");return urlMap[url]},shouldCreateSpan=defaultShouldCreateSpan;"function"===typeof shouldCreateSpanForRequest&&
(shouldCreateSpan=function(url){return defaultShouldCreateSpan(url)&&shouldCreateSpanForRequest(url)});var spans={};traceFetch&&utils_1.addInstrumentationHandler("fetch",function(handlerData){fetchCallback(handlerData,shouldCreateSpan,spans)});traceXHR&&utils_1.addInstrumentationHandler("xhr",function(handlerData){xhrCallback(handlerData,shouldCreateSpan,spans)})};exports.fetchCallback=fetchCallback;exports.xhrCallback=xhrCallback}
//# sourceMappingURL=module$node_modules$$sentry$tracing$dist$browser$request.js.map
