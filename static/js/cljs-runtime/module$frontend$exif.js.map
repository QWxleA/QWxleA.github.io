{
"version":3,
"file":"module$frontend$exif.js",
"lineCount":54,
"mappings":"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",
"sources":["frontend/exif.js"],
"sourcesContent":["// copied from https://stackoverflow.com/questions/7584794/accessing-jpeg-exif-rotation-data-in-javascript-on-the-client-side\n\nconst objectURLToBlob=(url, callback)=> {\n  const http = new XMLHttpRequest();\n  http.open(\"GET\", url, true);\n  http.responseType = \"blob\";\n  http.onload = (e)=> {\n    if (http.status == 200 || http.status === 0) {\n      callback(http.response);\n    }\n  };\n  http.send();\n}\n\nexport const getEXIFOrientation =  (img, callback)=> {\n  const reader = new FileReader();\n  reader.onload = e => {\n    const view = new DataView(e.target.result)\n\n    if (view.getUint16(0, false) !== 0xFFD8) {\n      return callback(-2)\n    }\n    const length = view.byteLength\n    let offset = 2\n    while (offset < length) {\n      const marker = view.getUint16(offset, false)\n      offset += 2\n      if (marker === 0xFFE1) {\n        if (view.getUint32(offset += 2, false) !== 0x45786966) {\n          return callback(-1)\n        }\n        const little = view.getUint16(offset += 6, false) === 0x4949\n        offset += view.getUint32(offset + 4, little)\n        const tags = view.getUint16(offset, little)\n        offset += 2\n        for (let i = 0; i < tags; i++) {\n          if (view.getUint16(offset + (i * 12), little) === 0x0112) {\n            const o = view.getUint16(offset + (i * 12) + 8, little);\n            return callback(o)\n          }\n        }\n      } else if ((marker & 0xFF00) !== 0xFF00) {\n        break\n      } else {\n        offset += view.getUint16(offset, false)\n      }\n    }\n    return callback(-1)\n  };\n\n  objectURLToBlob(img.src,  (blob)=> {\n    reader.readAsArrayBuffer(blob.slice(0, 65536));\n  });\n}\n"],
"names":["objectURLToBlob","url","callback","http","XMLHttpRequest","open","responseType","onload","e","http.onload","status","response","send","getEXIFOrientation","img","reader","FileReader","reader.onload","view","DataView","target","result","getUint16","length","byteLength","offset","marker","getUint32","little","tags","i","o","src","blob","readAsArrayBuffer","slice","$jscomp$tmp$exports$module$name"]
}
