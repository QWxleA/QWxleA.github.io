{
"version":3,
"file":"module$node_modules$$sentry$utils$dist$ratelimit.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@sentry/utils/dist/ratelimit.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$utils$dist$ratelimit\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nexports.DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now) {\n    if (now === void 0) { now = Date.now(); }\n    var headerDelay = parseInt(\"\" + header, 10);\n    if (!isNaN(headerDelay)) {\n        return headerDelay * 1000;\n    }\n    var headerDate = Date.parse(\"\" + header);\n    if (!isNaN(headerDate)) {\n        return headerDate - now;\n    }\n    return exports.DEFAULT_RETRY_AFTER;\n}\nexports.parseRetryAfterHeader = parseRetryAfterHeader;\n/**\n * Gets the time that given category is disabled until for rate limiting\n */\nfunction disabledUntil(limits, category) {\n    return limits[category] || limits.all || 0;\n}\nexports.disabledUntil = disabledUntil;\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now) {\n    if (now === void 0) { now = Date.now(); }\n    return disabledUntil(limits, category) > now;\n}\nexports.isRateLimited = isRateLimited;\n/**\n * Update ratelimits from incoming headers.\n * Returns true if headers contains a non-empty rate limiting header.\n */\nfunction updateRateLimits(limits, headers, now) {\n    var e_1, _a, e_2, _b;\n    if (now === void 0) { now = Date.now(); }\n    var updatedRateLimits = tslib_1.__assign({}, limits);\n    // \"The name is case-insensitive.\"\n    // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n    var rateLimitHeader = headers['x-sentry-rate-limits'];\n    var retryAfterHeader = headers['retry-after'];\n    if (rateLimitHeader) {\n        try {\n            /**\n             * rate limit headers are of the form\n             *     <header>,<header>,..\n             * where each <header> is of the form\n             *     <retry_after>: <categories>: <scope>: <reason_code>\n             * where\n             *     <retry_after> is a delay in seconds\n             *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n             *         <category>;<category>;...\n             *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n             *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n             */\n            for (var _c = tslib_1.__values(rateLimitHeader.trim().split(',')), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var limit = _d.value;\n                var parameters = limit.split(':', 2);\n                var headerDelay = parseInt(parameters[0], 10);\n                var delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n                if (!parameters[1]) {\n                    updatedRateLimits.all = now + delay;\n                }\n                else {\n                    try {\n                        for (var _e = (e_2 = void 0, tslib_1.__values(parameters[1].split(';'))), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var category = _f.value;\n                            updatedRateLimits[category] = now + delay;\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    else if (retryAfterHeader) {\n        updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n    }\n    return updatedRateLimits;\n}\nexports.updateRateLimits = updateRateLimits;\n//# sourceMappingURL=ratelimit.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","parseRetryAfterHeader","header","now","Date","headerDelay","parseInt","isNaN","headerDate","parse","DEFAULT_RETRY_AFTER","disabledUntil","limits","category","all","Object","defineProperty","value","tslib_1","isRateLimited","updateRateLimits","headers","_a","e_2","_b","updatedRateLimits","__assign","rateLimitHeader","retryAfterHeader","_c","__values","trim","split","_d","next","done","parameters","delay","_e","_f","e_2_1","error","return","call","e_1_1","e_1"]
}
