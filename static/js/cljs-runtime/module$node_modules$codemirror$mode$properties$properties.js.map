{
"version":3,
"file":"module$node_modules$codemirror$mode$properties$properties.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAIrH,SAAQ,CAACC,GAAD,CAAM,CACS,QAAtB,EAAI,MAAOD,QAAX,EAAmD,QAAnD,EAAkC,MAAOD,OAAzC,CACEE,GAAA,CAAIH,OAAA,CAAQ,+CAAR,CAAJ,CADF,CAE0B,UAArB,EAAI,MAAOI,OAAX,EAAmCA,MAAOC,CAAAA,GAA1C,CACHD,MAAA,CAAO,CAAC,sBAAD,CAAP,CAAiCD,GAAjC,CADG,CAGHA,GAAA,CAAIG,UAAJ,CANW,CAAd,CAAD,CAOG,QAAQ,CAACA,UAAD,CAAa,CAGxBA,UAAWC,CAAAA,UAAX,CAAsB,YAAtB,CAAoC,QAAQ,EAAG,CAC7C,MAAO,CACLC,MAAOA,QAAQ,CAACC,MAAD,CAASC,KAAT,CAAgB,CAC7B,IAAIC,IAAMF,MAAOE,CAAAA,GAAP,EAANA,EAAsBD,KAAME,CAAAA,YAAhC,CACIC,IAAMJ,MAAOI,CAAAA,GAAP,EAEVH,MAAME,CAAAA,YAAN;AAAqB,CAAA,CAEjBD,IAAJ,GACMD,KAAMI,CAAAA,aAAV,EACEJ,KAAMK,CAAAA,WACN,CADoB,CAAA,CACpB,CAAAL,KAAMI,CAAAA,aAAN,CAAsB,CAAA,CAFxB,EAIEJ,KAAMM,CAAAA,QAJR,CAImB,KALrB,CASIH,IAAJ,EAAW,CAAEH,KAAMI,CAAAA,aAAnB,GACEJ,KAAMK,CAAAA,WACN,CADoB,CAAA,CACpB,CAAAL,KAAMM,CAAAA,QAAN,CAAiB,KAFnB,CAKA,IAAIL,GAAJ,CACE,IAAA,CAAMF,MAAOQ,CAAAA,QAAP,EAAN,CAAA,EAGEC,GAAAA,CAAKT,MAAOU,CAAAA,IAAP,EAET,IAAIR,CAAAA,GAAJ,EAAmB,GAAnB,GAAYO,GAAZ,EAAiC,GAAjC,GAA0BA,GAA1B,EAA+C,GAA/C,GAAwCA,GAAxC,CAIO,CAAA,GAAIP,GAAJ,EAAkB,GAAlB,GAAWO,GAAX,CAGL,MAFAR,MAAME,CAAAA,YAEC,CAFc,CAAA,CAEd,CADPH,MAAOW,CAAAA,MAAP,CAAc,GAAd,CACO,CADaX,MAAOY,CAAAA,GAAP,CAAW,GAAX,CACb,CAAA,QACF,IAAW,MAAX,GAAIH,GAAJ,EAAyB,GAAzB,GAAkBA,GAAlB,CAEL,MADAR,MAAMM,CAAAA,QACC,CADU,OACV,CAAA,IACS,KAAX,GAAIE,GAAJ,EAAsC,OAAtC,GAAmBR,KAAMM,CAAAA,QAAzB,EACDP,MAAOI,CAAAA,GAAP,EADC,GAGHH,KAAMI,CAAAA,aAHH,CAGmB,CAAA,CAHnB,CAPA,CAJP,IAGE,OAFAJ,MAAMM,CAAAA,QAEC;AAFU,SAEV,CADPP,MAAOa,CAAAA,SAAP,EACO,CAAA,SAeT,OAAOZ,MAAMM,CAAAA,QA5CgB,CAD1B,CAgDLO,WAAYA,QAAQ,EAAG,CACrB,MAAO,CACLP,SAAW,KADN,CAELF,cAAgB,CAAA,CAFX,CAGLC,YAAc,CAAA,CAHT,CAILH,aAAe,CAAA,CAJV,CADc,CAhDlB,CADsC,CAA/C,CA6DAN,WAAWkB,CAAAA,UAAX,CAAsB,mBAAtB,CAA2C,YAA3C,CACAlB,WAAWkB,CAAAA,UAAX,CAAsB,YAAtB,CAAoC,YAApC,CAjEwB,CAPxB,CAJsH;",
"sources":["node_modules/codemirror/mode/properties/properties.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$properties$properties\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"properties\", function() {\n  return {\n    token: function(stream, state) {\n      var sol = stream.sol() || state.afterSection;\n      var eol = stream.eol();\n\n      state.afterSection = false;\n\n      if (sol) {\n        if (state.nextMultiline) {\n          state.inMultiline = true;\n          state.nextMultiline = false;\n        } else {\n          state.position = \"def\";\n        }\n      }\n\n      if (eol && ! state.nextMultiline) {\n        state.inMultiline = false;\n        state.position = \"def\";\n      }\n\n      if (sol) {\n        while(stream.eatSpace()) {}\n      }\n\n      var ch = stream.next();\n\n      if (sol && (ch === \"#\" || ch === \"!\" || ch === \";\")) {\n        state.position = \"comment\";\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (sol && ch === \"[\") {\n        state.afterSection = true;\n        stream.skipTo(\"]\"); stream.eat(\"]\");\n        return \"header\";\n      } else if (ch === \"=\" || ch === \":\") {\n        state.position = \"quote\";\n        return null;\n      } else if (ch === \"\\\\\" && state.position === \"quote\") {\n        if (stream.eol()) {  // end of line?\n          // Multiline value\n          state.nextMultiline = true;\n        }\n      }\n\n      return state.position;\n    },\n\n    startState: function() {\n      return {\n        position : \"def\",       // Current position, \"def\", \"quote\" or \"comment\"\n        nextMultiline : false,  // Is the next line multiline value\n        inMultiline : false,    // Is the current line a multiline value\n        afterSection : false    // Did we just open a section\n      };\n    }\n\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-properties\", \"properties\");\nCodeMirror.defineMIME(\"text/x-ini\", \"properties\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","token","stream","state","sol","afterSection","eol","nextMultiline","inMultiline","position","eatSpace","ch","next","skipTo","eat","skipToEnd","startState","defineMIME"]
}
