shadow$provide.module$node_modules$codemirror$mode$haxe$haxe=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)})(function(CodeMirror){CodeMirror.defineMode("haxe",function(config,parserConfig){function kw(type){return{type,style:"keyword"}}function toUnescaped(stream,end){for(var escaped=!1,next;null!=
(next=stream.next());){if(next==end&&!escaped)return!0;escaped=!escaped&&"\\"==next}}function ret(tp,style,cont){type$jscomp$0=tp;content$jscomp$0=cont;return style}function haxeTokenBase(stream,state){var ch=stream.next();if('"'==ch||"'"==ch)return ch=haxeTokenString(ch),state.tokenize=ch,ch(stream,state);if(/[\[\]{}\(\),;:\.]/.test(ch))return ret(ch);if("0"==ch&&stream.eat(/x/i))return stream.eatWhile(/[\da-f]/i),ret("number","number");if(/\d/.test(ch)||"-"==ch&&stream.eat(/\d/))return stream.match(/^\d*(?:\.\d*(?!\.))?(?:[eE][+\-]?\d+)?/),
ret("number","number");if(state.reAllowed&&"~"==ch&&stream.eat(/\//))return toUnescaped(stream,"/"),stream.eatWhile(/[gimsu]/),ret("regexp","string-2");if("/"==ch){if(stream.eat("*"))return ch=haxeTokenComment,state.tokenize=ch,ch(stream,state);if(stream.eat("/"))return stream.skipToEnd(),ret("comment","comment");stream.eatWhile(isOperatorChar);return ret("operator",null,stream.current())}if("#"==ch)return stream.skipToEnd(),ret("conditional","meta");if("@"==ch)return stream.eat(/:/),stream.eatWhile(/[\w_]/),
ret("metadata","meta");if(isOperatorChar.test(ch))return stream.eatWhile(isOperatorChar),ret("operator",null,stream.current());if(/[A-Z]/.test(ch))return stream.eatWhile(/[\w_<>]/),stream=stream.current(),ret("type","variable-3",stream);stream.eatWhile(/[\w_]/);stream=stream.current();return(ch=keywords.propertyIsEnumerable(stream)&&keywords[stream])&&state.kwAllowed?ret(ch.type,ch.style,stream):ret("variable","variable",stream)}function haxeTokenString(quote){return function(stream,state){toUnescaped(stream,
quote)&&(state.tokenize=haxeTokenBase);return ret("string","string")}}function haxeTokenComment(stream,state){for(var maybeEnd=!1,ch;ch=stream.next();){if("/"==ch&&maybeEnd){state.tokenize=haxeTokenBase;break}maybeEnd="*"==ch}return ret("comment","comment")}function HaxeLexical(indented,column,type,align,prev,info){this.indented=indented;this.column=column;this.type=type;this.prev=prev;this.info=info;null!=align&&(this.align=align)}function registerimport(importname){for(var state=cx.state,t=state.importedtypes;t;t=
t.next)if(t.name==importname)return;state.importedtypes={name:importname,next:state.importedtypes}}function pass(){for(var i=arguments.length-1;0<=i;i--)cx.cc.push(arguments[i])}function cont$jscomp$0(){pass.apply(null,arguments);return!0}function inList(name,list){for(;list;list=list.next)if(list.name==name)return!0;return!1}function register(varname){var state=cx.state;state.context?(cx.marked="def",inList(varname,state.localVars)||(state.localVars={name:varname,next:state.localVars})):state.globalVars&&
!inList(varname,state.globalVars)&&(state.globalVars={name:varname,next:state.globalVars})}function pushcontext(){cx.state.context||(cx.state.localVars=defaultVars);cx.state.context={prev:cx.state.context,vars:cx.state.localVars}}function popcontext(){cx.state.localVars=cx.state.context.vars;cx.state.context=cx.state.context.prev}function pushlex(type,info){var result=function(){var state=cx.state;state.lexical=new HaxeLexical(state.indented,cx.stream.column(),type,null,state.lexical,info)};result.lex=
!0;return result}function poplex(){var state=cx.state;state.lexical.prev&&(")"==state.lexical.type&&(state.indented=state.lexical.indented),state.lexical=state.lexical.prev)}function expect(wanted){function f(type){return type==wanted?cont$jscomp$0():";"==wanted?pass():cont$jscomp$0(f)}return f}function statement(type){return"@"==type?cont$jscomp$0(metadef):"var"==type?cont$jscomp$0(pushlex("vardef"),vardef1,expect(";"),poplex):"keyword a"==type?cont$jscomp$0(pushlex("form"),expression,statement,
poplex):"keyword b"==type?cont$jscomp$0(pushlex("form"),statement,poplex):"{"==type?cont$jscomp$0(pushlex("}"),pushcontext,block,poplex,popcontext):";"==type?cont$jscomp$0():"attribute"==type?cont$jscomp$0(maybeattribute):"function"==type?cont$jscomp$0(functiondef):"for"==type?cont$jscomp$0(pushlex("form"),expect("("),pushlex(")"),forspec1,expect(")"),poplex,statement,poplex):"variable"==type?cont$jscomp$0(pushlex("stat"),maybelabel):"switch"==type?cont$jscomp$0(pushlex("form"),expression,pushlex("}",
"switch"),expect("{"),block,poplex,poplex):"case"==type?cont$jscomp$0(expression,expect(":")):"default"==type?cont$jscomp$0(expect(":")):"catch"==type?cont$jscomp$0(pushlex("form"),pushcontext,expect("("),funarg,expect(")"),statement,poplex,popcontext):"import"==type?cont$jscomp$0(importdef,expect(";")):"typedef"==type?cont$jscomp$0(typedef):pass(pushlex("stat"),expression,expect(";"),poplex)}function expression(type){return atomicTypes.hasOwnProperty(type)||"type"==type?cont$jscomp$0(maybeoperator):
"function"==type?cont$jscomp$0(functiondef):"keyword c"==type?cont$jscomp$0(maybeexpression):"("==type?cont$jscomp$0(pushlex(")"),maybeexpression,expect(")"),poplex,maybeoperator):"operator"==type?cont$jscomp$0(expression):"["==type?cont$jscomp$0(pushlex("]"),commasep(maybeexpression,"]"),poplex,maybeoperator):"{"==type?cont$jscomp$0(pushlex("}"),commasep(objprop,"}"),poplex,maybeoperator):cont$jscomp$0()}function maybeexpression(type){return type.match(/[;\}\)\],]/)?pass():pass(expression)}function maybeoperator(type,
value){if("operator"==type&&/\+\+|--/.test(value))return cont$jscomp$0(maybeoperator);if("operator"==type||":"==type)return cont$jscomp$0(expression);if(";"!=type){if("("==type)return cont$jscomp$0(pushlex(")"),commasep(expression,")"),poplex,maybeoperator);if("."==type)return cont$jscomp$0(property,maybeoperator);if("["==type)return cont$jscomp$0(pushlex("]"),expression,expect("]"),poplex,maybeoperator)}}function maybeattribute(type){if("attribute"==type)return cont$jscomp$0(maybeattribute);if("function"==
type)return cont$jscomp$0(functiondef);if("var"==type)return cont$jscomp$0(vardef1)}function metadef(type){if(":"==type||"variable"==type)return cont$jscomp$0(metadef);if("("==type)return cont$jscomp$0(pushlex(")"),commasep(metaargs,")"),poplex,statement)}function metaargs(type){if("variable"==type)return cont$jscomp$0()}function importdef(type,value){if("variable"==type&&/[A-Z]/.test(value.charAt(0)))return registerimport(value),cont$jscomp$0();if("variable"==type||"property"==type||"."==type||"*"==
value)return cont$jscomp$0(importdef)}function typedef(type,value){if("variable"==type&&/[A-Z]/.test(value.charAt(0)))return registerimport(value),cont$jscomp$0();if("type"==type&&/[A-Z]/.test(value.charAt(0)))return cont$jscomp$0()}function maybelabel(type){return":"==type?cont$jscomp$0(poplex,statement):pass(maybeoperator,expect(";"),poplex)}function property(type){if("variable"==type)return cx.marked="property",cont$jscomp$0()}function objprop(type){"variable"==type&&(cx.marked="property");if(atomicTypes.hasOwnProperty(type))return cont$jscomp$0(expect(":"),
expression)}function commasep(what,end){function proceed(type){return","==type?cont$jscomp$0(what,proceed):type==end?cont$jscomp$0():cont$jscomp$0(expect(end))}return function(type){return type==end?cont$jscomp$0():pass(what,proceed)}}function block(type){return"}"==type?cont$jscomp$0():pass(statement,block)}function vardef1(type,value){return"variable"==type?(register(value),cont$jscomp$0(typeuse,vardef2)):cont$jscomp$0()}function vardef2(type,value){if("\x3d"==value)return cont$jscomp$0(expression,
vardef2);if(","==type)return cont$jscomp$0(vardef1)}function forspec1(type,value){return"variable"==type?(register(value),cont$jscomp$0(forin,expression)):pass()}function forin(_type,value){if("in"==value)return cont$jscomp$0()}function functiondef(type,value){if("variable"==type||"type"==type)return register(value),cont$jscomp$0(functiondef);if("new"==value)return cont$jscomp$0(functiondef);if("("==type)return cont$jscomp$0(pushlex(")"),pushcontext,commasep(funarg,")"),poplex,typeuse,statement,popcontext)}
function typeuse(type){if(":"==type)return cont$jscomp$0(typestring)}function typestring(type){if("type"==type||"variable"==type)return cont$jscomp$0();if("{"==type)return cont$jscomp$0(pushlex("}"),commasep(typeprop,"}"),poplex)}function typeprop(type){if("variable"==type)return cont$jscomp$0(typeuse)}function funarg(type,value){if("variable"==type)return register(value),cont$jscomp$0(typeuse)}var indentUnit=config.indentUnit;config=kw("keyword a");var B=kw("keyword b"),C=kw("keyword c"),operator=
kw("operator"),atom={type:"atom",style:"atom"},attribute={type:"attribute",style:"attribute"},type$jscomp$0=kw("typedef"),keywords={"if":config,"while":config,"else":B,"do":B,"try":B,"return":C,"break":C,"continue":C,"new":C,"throw":C,"var":kw("var"),inline:attribute,"static":attribute,using:kw("import"),"public":attribute,"private":attribute,cast:kw("cast"),"import":kw("import"),macro:kw("macro"),"function":kw("function"),"catch":kw("catch"),untyped:kw("untyped"),callback:kw("cb"),"for":kw("for"),
"switch":kw("switch"),"case":kw("case"),"default":kw("default"),"in":operator,never:kw("property_access"),trace:kw("trace"),"class":type$jscomp$0,"abstract":type$jscomp$0,"enum":type$jscomp$0,"interface":type$jscomp$0,typedef:type$jscomp$0,"extends":type$jscomp$0,"implements":type$jscomp$0,dynamic:type$jscomp$0,"true":atom,"false":atom,"null":atom},isOperatorChar=/[+\-*&%=<>!?|]/,content$jscomp$0,atomicTypes={atom:!0,number:!0,variable:!0,string:!0,regexp:!0},cx={state:null,column:null,marked:null,
cc:null},defaultVars={name:"this",next:null};popcontext.lex=!0;poplex.lex=!0;return{startState:function(basecolumn){basecolumn={tokenize:haxeTokenBase,reAllowed:!0,kwAllowed:!0,cc:[],lexical:new HaxeLexical((basecolumn||0)-indentUnit,0,"block",!1),localVars:parserConfig.localVars,importedtypes:"Int Float String Void Std Bool Dynamic Array".split(" "),context:parserConfig.localVars&&{vars:parserConfig.localVars},indented:0};parserConfig.globalVars&&"object"==typeof parserConfig.globalVars&&(basecolumn.globalVars=
parserConfig.globalVars);return basecolumn},token:function(stream,state){stream.sol()&&(state.lexical.hasOwnProperty("align")||(state.lexical.align=!1),state.indented=stream.indentation());if(stream.eatSpace())return null;var style=state.tokenize(stream,state);if("comment"==type$jscomp$0)return style;state.reAllowed=!("operator"!=type$jscomp$0&&"keyword c"!=type$jscomp$0&&!type$jscomp$0.match(/^[\[{}\(,;:]$/));state.kwAllowed="."!=type$jscomp$0;a:{var type=type$jscomp$0,content=content$jscomp$0,cc=
state.cc;cx.state=state;cx.stream=stream;cx.marked=null;cx.cc=cc;state.lexical.hasOwnProperty("align")||(state.lexical.align=!0);for(;;)if((cc.length?cc.pop():statement)(type,content)){for(;cc.length&&cc[cc.length-1].lex;)cc.pop()();if(cx.marked){style=cx.marked;break a}if(stream="variable"==type)b:{for(stream=state.localVars;stream;stream=stream.next)if(stream.name==content){stream=!0;break b}stream=void 0}if(stream){style="variable-2";break a}if(type="variable"==type)b:if(/[a-z]/.test(content.charAt(0)))type=
!1;else{type=state.importedtypes.length;for(stream=0;stream<type;stream++)if(state.importedtypes[stream]==content){type=!0;break b}type=void 0}if(type){style="variable-3";break a}break a}}return style},indent:function(state,textAfter){if(state.tokenize!=haxeTokenBase)return 0;var firstChar=textAfter&&textAfter.charAt(0);state=state.lexical;"stat"==state.type&&"}"==firstChar&&(state=state.prev);var type=state.type,closing=firstChar==type;return"vardef"==type?state.indented+4:"form"==type&&"{"==firstChar?
state.indented:"stat"==type||"form"==type?state.indented+indentUnit:"switch"!=state.info||closing?state.align?state.column+(closing?0:1):state.indented+(closing?0:indentUnit):state.indented+(/^(?:case|default)\b/.test(textAfter)?indentUnit:2*indentUnit)},electricChars:"{}",blockCommentStart:"/*",blockCommentEnd:"*/",lineComment:"//"}});CodeMirror.defineMIME("text/x-haxe","haxe");CodeMirror.defineMode("hxml",function(){return{startState:function(){return{define:!1,inString:!1}},token:function(stream,
state){var ch=stream.peek(),sol=stream.sol();if("#"==ch)return stream.skipToEnd(),"comment";if(sol&&"-"==ch)return ch="variable-2",stream.eat(/-/),"-"==stream.peek()&&(stream.eat(/-/),ch="keyword a"),"D"==stream.peek()&&(stream.eat(/[D]/),ch="keyword c",state.define=!0),stream.eatWhile(/[A-Z]/i),ch;ch=stream.peek();0==state.inString&&"'"==ch&&(state.inString=!0,stream.next());if(1==state.inString)return stream.skipTo("'")||stream.skipToEnd(),"'"==stream.peek()&&(stream.next(),state.inString=!1),"string";
stream.next();return null},lineComment:"#"}});CodeMirror.defineMIME("text/x-hxml","hxml")})}
//# sourceMappingURL=module$node_modules$codemirror$mode$haxe$haxe.js.map
