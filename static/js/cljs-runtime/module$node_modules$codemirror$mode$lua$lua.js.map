{
"version":3,
"file":"module$node_modules$codemirror$mode$lua$lua.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/codemirror/mode/lua/lua.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$lua$lua\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// LUA mode. Ported to CodeMirror 2 from Franciszek Wawrzak's\n// CodeMirror 1 mode.\n// highlights keywords, strings, comments (no leveling supported! (\"[==[\")), tokens, basic indenting\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"lua\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit;\n\n  function prefixRE(words) {\n    return new RegExp(\"^(?:\" + words.join(\"|\") + \")\", \"i\");\n  }\n  function wordRE(words) {\n    return new RegExp(\"^(?:\" + words.join(\"|\") + \")$\", \"i\");\n  }\n  var specials = wordRE(parserConfig.specials || []);\n\n  // long list of standard functions from lua manual\n  var builtins = wordRE([\n    \"_G\",\"_VERSION\",\"assert\",\"collectgarbage\",\"dofile\",\"error\",\"getfenv\",\"getmetatable\",\"ipairs\",\"load\",\n    \"loadfile\",\"loadstring\",\"module\",\"next\",\"pairs\",\"pcall\",\"print\",\"rawequal\",\"rawget\",\"rawset\",\"require\",\n    \"select\",\"setfenv\",\"setmetatable\",\"tonumber\",\"tostring\",\"type\",\"unpack\",\"xpcall\",\n\n    \"coroutine.create\",\"coroutine.resume\",\"coroutine.running\",\"coroutine.status\",\"coroutine.wrap\",\"coroutine.yield\",\n\n    \"debug.debug\",\"debug.getfenv\",\"debug.gethook\",\"debug.getinfo\",\"debug.getlocal\",\"debug.getmetatable\",\n    \"debug.getregistry\",\"debug.getupvalue\",\"debug.setfenv\",\"debug.sethook\",\"debug.setlocal\",\"debug.setmetatable\",\n    \"debug.setupvalue\",\"debug.traceback\",\n\n    \"close\",\"flush\",\"lines\",\"read\",\"seek\",\"setvbuf\",\"write\",\n\n    \"io.close\",\"io.flush\",\"io.input\",\"io.lines\",\"io.open\",\"io.output\",\"io.popen\",\"io.read\",\"io.stderr\",\"io.stdin\",\n    \"io.stdout\",\"io.tmpfile\",\"io.type\",\"io.write\",\n\n    \"math.abs\",\"math.acos\",\"math.asin\",\"math.atan\",\"math.atan2\",\"math.ceil\",\"math.cos\",\"math.cosh\",\"math.deg\",\n    \"math.exp\",\"math.floor\",\"math.fmod\",\"math.frexp\",\"math.huge\",\"math.ldexp\",\"math.log\",\"math.log10\",\"math.max\",\n    \"math.min\",\"math.modf\",\"math.pi\",\"math.pow\",\"math.rad\",\"math.random\",\"math.randomseed\",\"math.sin\",\"math.sinh\",\n    \"math.sqrt\",\"math.tan\",\"math.tanh\",\n\n    \"os.clock\",\"os.date\",\"os.difftime\",\"os.execute\",\"os.exit\",\"os.getenv\",\"os.remove\",\"os.rename\",\"os.setlocale\",\n    \"os.time\",\"os.tmpname\",\n\n    \"package.cpath\",\"package.loaded\",\"package.loaders\",\"package.loadlib\",\"package.path\",\"package.preload\",\n    \"package.seeall\",\n\n    \"string.byte\",\"string.char\",\"string.dump\",\"string.find\",\"string.format\",\"string.gmatch\",\"string.gsub\",\n    \"string.len\",\"string.lower\",\"string.match\",\"string.rep\",\"string.reverse\",\"string.sub\",\"string.upper\",\n\n    \"table.concat\",\"table.insert\",\"table.maxn\",\"table.remove\",\"table.sort\"\n  ]);\n  var keywords = wordRE([\"and\",\"break\",\"elseif\",\"false\",\"nil\",\"not\",\"or\",\"return\",\n                         \"true\",\"function\", \"end\", \"if\", \"then\", \"else\", \"do\",\n                         \"while\", \"repeat\", \"until\", \"for\", \"in\", \"local\" ]);\n\n  var indentTokens = wordRE([\"function\", \"if\",\"repeat\",\"do\", \"\\\\(\", \"{\"]);\n  var dedentTokens = wordRE([\"end\", \"until\", \"\\\\)\", \"}\"]);\n  var dedentPartial = prefixRE([\"end\", \"until\", \"\\\\)\", \"}\", \"else\", \"elseif\"]);\n\n  function readBracket(stream) {\n    var level = 0;\n    while (stream.eat(\"=\")) ++level;\n    stream.eat(\"[\");\n    return level;\n  }\n\n  function normal(stream, state) {\n    var ch = stream.next();\n    if (ch == \"-\" && stream.eat(\"-\")) {\n      if (stream.eat(\"[\") && stream.eat(\"[\"))\n        return (state.cur = bracketed(readBracket(stream), \"comment\"))(stream, state);\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    if (ch == \"\\\"\" || ch == \"'\")\n      return (state.cur = string(ch))(stream, state);\n    if (ch == \"[\" && /[\\[=]/.test(stream.peek()))\n      return (state.cur = bracketed(readBracket(stream), \"string\"))(stream, state);\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w.%]/);\n      return \"number\";\n    }\n    if (/[\\w_]/.test(ch)) {\n      stream.eatWhile(/[\\w\\\\\\-_.]/);\n      return \"variable\";\n    }\n    return null;\n  }\n\n  function bracketed(level, style) {\n    return function(stream, state) {\n      var curlev = null, ch;\n      while ((ch = stream.next()) != null) {\n        if (curlev == null) {if (ch == \"]\") curlev = 0;}\n        else if (ch == \"=\") ++curlev;\n        else if (ch == \"]\" && curlev == level) { state.cur = normal; break; }\n        else curlev = null;\n      }\n      return style;\n    };\n  }\n\n  function string(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped) break;\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      if (!escaped) state.cur = normal;\n      return \"string\";\n    };\n  }\n\n  return {\n    startState: function(basecol) {\n      return {basecol: basecol || 0, indentDepth: 0, cur: normal};\n    },\n\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      var style = state.cur(stream, state);\n      var word = stream.current();\n      if (style == \"variable\") {\n        if (keywords.test(word)) style = \"keyword\";\n        else if (builtins.test(word)) style = \"builtin\";\n        else if (specials.test(word)) style = \"variable-2\";\n      }\n      if ((style != \"comment\") && (style != \"string\")){\n        if (indentTokens.test(word)) ++state.indentDepth;\n        else if (dedentTokens.test(word)) --state.indentDepth;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var closing = dedentPartial.test(textAfter);\n      return state.basecol + indentUnit * (state.indentDepth - (closing ? 1 : 0));\n    },\n\n    lineComment: \"--\",\n    blockCommentStart: \"--[[\",\n    blockCommentEnd: \"]]\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-lua\", \"lua\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","config","parserConfig","wordRE","words","RegExp","join","readBracket","stream","level","eat","normal","state","ch","next","cur","bracketed","skipToEnd","string","test","peek","eatWhile","style","curlev","quote","escaped","indentUnit","specials","builtins","keywords","indentTokens","dedentTokens","dedentPartial","startState","basecol","indentDepth","token","eatSpace","word","current","indent","textAfter","closing","lineComment","blockCommentStart","blockCommentEnd","defineMIME"]
}
