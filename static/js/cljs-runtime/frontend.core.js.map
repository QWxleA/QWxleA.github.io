{"version":3,"sources":["frontend/core.cljs"],"mappings":";AAeA,iCAAA,jCAAMA;AAAN,AAEE,OAACC,iCACA,4EAAA,5EAACC,qDAAUC,6BACX,WAAKC;AAAL,AACE,AAACC,6CAAuBD;;AACxB,6EAAA,tEAACE,4IACe,4BAAA,mFAAA,6DAAA,qDAAA,jOAACC,sBAAYH;GALhC,2CAAA,sEAAA;;AAUF,wCAAA,xCAAMI;AAAN,AAEE,mBAAA,ZAACC;;AAaH,sBAAA,tBAAMC;AAAN,AACE,IAAAC,qBAAgB,wBAAA,xBAAiBE;AAAjC,AAAA,oBAAAF;AAAA,AAAA,WAAAA,PAAWC;AAAX,AACE,AAACZ;;AACD,AAACc,eAAU,AAACC,6BAAmBH;;AAC/B,AAACJ;;AACD,OAACQ;;AAJH;;;AAMF,qBAAA,rBAAeC;AAAf,AAKE,2CAAA,pCAACC;AAAD,AACE,OAACC,6BAAeT;;;;AAQpB,qBAAA,rBAAMU;AAAN,AAGE,AAACC;;AACD,AAACC;;AACD,mBAAA,ZAACb","names":["frontend.core/set-router!","reitit.frontend.easy/start!","reitit.frontend.router","frontend.routes/routes","route","frontend.handler.route/set-route-match!","frontend.handler.plugin.hook_plugin_app","cljs.core/select-keys","frontend.core/display-welcome-message","js/console.log","frontend.core/start","temp__5720__auto__","node","js/document","rum.core/mount","frontend.page/current-page","frontend.util.persist-var/load-vars","frontend.core/init","frontend.handler.plugin/setup!","frontend.handler/start!","frontend.core/stop","frontend.handler/stop!","frontend.fs.sync/sync-stop"],"sourcesContent":["(ns frontend.core\n  (:require [rum.core :as rum]\n            [frontend.handler :as handler]\n            [frontend.handler.plugin :as plugin-handler]\n            [frontend.handler.route :as route]\n            [frontend.page :as page]\n            [frontend.routes :as routes]\n            [frontend.spec]\n            [frontend.log]\n            [frontend.util.persist-var :as persist-var]\n            [reitit.frontend :as rf]\n            [reitit.frontend.easy :as rfe]\n            [logseq.api]\n            [frontend.fs.sync :as sync]))\n\n(defn set-router!\n  []\n  (rfe/start!\n   (rf/router routes/routes nil)\n   (fn [route]\n     (route/set-route-match! route)\n     (plugin-handler/hook-plugin-app\n      :route-changed (select-keys route [:template :path :parameters])))\n\n   ;; set to false to enable HistoryAPI\n   {:use-fragment true}))\n\n(defn display-welcome-message\n  []\n  (js/console.log\n   \"\n    Welcome to Logseq!\n    If you encounter any problem, feel free to file an issue on GitHub (https://github.com/logseq/logseq)\n    or join our Discord server (https://discord.gg/KpN4eHY).\n    .____\n    |    |    ____   ____  ______ ____  ______\n    |    |   /  _ \\\\ / ___\\\\/  ___// __ \\\\/ ____/\n    |    |__(  <_> ) /_/  >___ \\\\\\\\  ___< <_|  |\n    |_______ \\\\____/\\\\___  /____  >\\\\___  >__   |\n            \\\\/    /_____/     \\\\/     \\\\/   |__|\n     \"))\n\n(defn start []\n  (when-let [node (.getElementById js/document \"root\")]\n    (set-router!)\n    (rum/mount (page/current-page) node)\n    (display-welcome-message)\n    (persist-var/load-vars)))\n\n(defn ^:export init []\n  ;; init is called ONCE when the page loads\n  ;; this is called in the index.html and must be exported\n  ;; so it is available even in :advanced release builds\n\n  (plugin-handler/setup!\n   #(handler/start! start))\n\n  ;; popup to notify user, could be toggled in settings\n  ;; (handler/request-notifications-if-not-asked)\n\n  ;; (handler/run-notify-worker!)\n)\n\n(defn stop []\n  ;; stop is called before any code is reloaded\n  ;; this is controlled by :before-load in the config\n  (handler/stop!)\n  (sync/sync-stop)\n  (js/console.log \"stop\"))\n"]}