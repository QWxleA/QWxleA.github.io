shadow$provide.module$node_modules$chrono_node$dist$locales$fr$parsers$FRTimeUnitRelativeFormatParser=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});const constants_1=require("module$node_modules$chrono_node$dist$locales$fr$constants"),results_1=require("module$node_modules$chrono_node$dist$results");global=require("module$node_modules$chrono_node$dist$common$parsers$AbstractParserWithWordBoundary");const timeunits_1=require("module$node_modules$chrono_node$dist$utils$timeunits"),
pattern_1=require("module$node_modules$chrono_node$dist$utils$pattern");class FRTimeUnitAgoFormatParser extends global.AbstractParserWithWordBoundaryChecking{constructor(){super()}innerPattern(){return new RegExp("(?:les?|la|l'|du|des?)\\s*"+`(${constants_1.NUMBER_PATTERN})?`+"(?:\\s*(prochaine?s?|derni[eè]re?s?|pass[ée]e?s?|pr[ée]c[ée]dents?|suivante?s?))?"+`\\s*(${pattern_1.matchAnyPattern(constants_1.TIME_UNIT_DICTIONARY)})`+"(?:\\s*(prochaine?s?|derni[eè]re?s?|pass[ée]e?s?|pr[ée]c[ée]dents?|suivante?s?))?",
"i")}innerExtract(context,match){const num=match[1]?constants_1.parseNumberPattern(match[1]):1,unit=constants_1.TIME_UNIT_DICTIONARY[match[3].toLowerCase()];let timeUnits={};timeUnits[unit]=num;match=match[2]||match[4]||"";if(match=match.toLowerCase()){if(/derni[eè]re?s?/.test(match)||/pass[ée]e?s?/.test(match)||/pr[ée]c[ée]dents?/.test(match))timeUnits=timeunits_1.reverseTimeUnits(timeUnits);return results_1.ParsingComponents.createRelativeFromRefDate(context.refDate,timeUnits)}}}exports.default=
FRTimeUnitAgoFormatParser}
//# sourceMappingURL=module$node_modules$chrono_node$dist$locales$fr$parsers$FRTimeUnitRelativeFormatParser.js.map
