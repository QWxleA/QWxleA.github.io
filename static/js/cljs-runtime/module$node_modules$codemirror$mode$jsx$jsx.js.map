{
"version":3,
"file":"module$node_modules$codemirror$mode$jsx$jsx.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/codemirror/mode/jsx/jsx.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$jsx$jsx\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n\n  // Depth means the amount of open braces in JS context, in XML\n  // context 0 means not in tag, 1 means in tag, and 2 means in tag\n  // and js block comment.\n  function Context(state, mode, depth, prev) {\n    this.state = state; this.mode = mode; this.depth = depth; this.prev = prev\n  }\n\n  function copyContext(context) {\n    return new Context(CodeMirror.copyState(context.mode, context.state),\n                       context.mode,\n                       context.depth,\n                       context.prev && copyContext(context.prev))\n  }\n\n  CodeMirror.defineMode(\"jsx\", function(config, modeConfig) {\n    var xmlMode = CodeMirror.getMode(config, {name: \"xml\", allowMissing: true, multilineTagIndentPastTag: false, allowMissingTagName: true})\n    var jsMode = CodeMirror.getMode(config, modeConfig && modeConfig.base || \"javascript\")\n\n    function flatXMLIndent(state) {\n      var tagName = state.tagName\n      state.tagName = null\n      var result = xmlMode.indent(state, \"\", \"\")\n      state.tagName = tagName\n      return result\n    }\n\n    function token(stream, state) {\n      if (state.context.mode == xmlMode)\n        return xmlToken(stream, state, state.context)\n      else\n        return jsToken(stream, state, state.context)\n    }\n\n    function xmlToken(stream, state, cx) {\n      if (cx.depth == 2) { // Inside a JS /* */ comment\n        if (stream.match(/^.*?\\*\\//)) cx.depth = 1\n        else stream.skipToEnd()\n        return \"comment\"\n      }\n\n      if (stream.peek() == \"{\") {\n        xmlMode.skipAttribute(cx.state)\n\n        var indent = flatXMLIndent(cx.state), xmlContext = cx.state.context\n        // If JS starts on same line as tag\n        if (xmlContext && stream.match(/^[^>]*>\\s*$/, false)) {\n          while (xmlContext.prev && !xmlContext.startOfLine)\n            xmlContext = xmlContext.prev\n          // If tag starts the line, use XML indentation level\n          if (xmlContext.startOfLine) indent -= config.indentUnit\n          // Else use JS indentation level\n          else if (cx.prev.state.lexical) indent = cx.prev.state.lexical.indented\n        // Else if inside of tag\n        } else if (cx.depth == 1) {\n          indent += config.indentUnit\n        }\n\n        state.context = new Context(CodeMirror.startState(jsMode, indent),\n                                    jsMode, 0, state.context)\n        return null\n      }\n\n      if (cx.depth == 1) { // Inside of tag\n        if (stream.peek() == \"<\") { // Tag inside of tag\n          xmlMode.skipAttribute(cx.state)\n          state.context = new Context(CodeMirror.startState(xmlMode, flatXMLIndent(cx.state)),\n                                      xmlMode, 0, state.context)\n          return null\n        } else if (stream.match(\"//\")) {\n          stream.skipToEnd()\n          return \"comment\"\n        } else if (stream.match(\"/*\")) {\n          cx.depth = 2\n          return token(stream, state)\n        }\n      }\n\n      var style = xmlMode.token(stream, cx.state), cur = stream.current(), stop\n      if (/\\btag\\b/.test(style)) {\n        if (/>$/.test(cur)) {\n          if (cx.state.context) cx.depth = 0\n          else state.context = state.context.prev\n        } else if (/^</.test(cur)) {\n          cx.depth = 1\n        }\n      } else if (!style && (stop = cur.indexOf(\"{\")) > -1) {\n        stream.backUp(cur.length - stop)\n      }\n      return style\n    }\n\n    function jsToken(stream, state, cx) {\n      if (stream.peek() == \"<\" && jsMode.expressionAllowed(stream, cx.state)) {\n        jsMode.skipExpression(cx.state)\n        state.context = new Context(CodeMirror.startState(xmlMode, jsMode.indent(cx.state, \"\", \"\")),\n                                    xmlMode, 0, state.context)\n        return null\n      }\n\n      var style = jsMode.token(stream, cx.state)\n      if (!style && cx.depth != null) {\n        var cur = stream.current()\n        if (cur == \"{\") {\n          cx.depth++\n        } else if (cur == \"}\") {\n          if (--cx.depth == 0) state.context = state.context.prev\n        }\n      }\n      return style\n    }\n\n    return {\n      startState: function() {\n        return {context: new Context(CodeMirror.startState(jsMode), jsMode)}\n      },\n\n      copyState: function(state) {\n        return {context: copyContext(state.context)}\n      },\n\n      token: token,\n\n      indent: function(state, textAfter, fullLine) {\n        return state.context.mode.indent(state.context.state, textAfter, fullLine)\n      },\n\n      innerMode: function(state) {\n        return state.context\n      }\n    }\n  }, \"xml\", \"javascript\")\n\n  CodeMirror.defineMIME(\"text/jsx\", \"jsx\")\n  CodeMirror.defineMIME(\"text/typescript-jsx\", {name: \"jsx\", base: {name: \"javascript\", typescript: true}})\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","Context","state","mode","depth","prev","copyContext","context","copyState","defineMode","config","modeConfig","flatXMLIndent","tagName","result","xmlMode","indent","token","stream","xmlToken","peek","jsMode","expressionAllowed","cx","skipExpression","startState","style","cur","current","match","skipToEnd","skipAttribute","xmlContext","startOfLine","indentUnit","lexical","indented","stop","test","indexOf","backUp","length","getMode","name","allowMissing","multilineTagIndentPastTag","allowMissingTagName","base","textAfter","fullLine","innerMode","defineMIME","typescript"]
}
