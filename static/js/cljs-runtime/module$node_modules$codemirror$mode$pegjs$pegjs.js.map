{
"version":3,
"file":"module$node_modules$codemirror$mode$pegjs$pegjs.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/codemirror/mode/pegjs/pegjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$mode$pegjs$pegjs\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../javascript/javascript\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../javascript/javascript\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"pegjs\", function (config) {\n  var jsMode = CodeMirror.getMode(config, \"javascript\");\n\n  function identifier(stream) {\n    return stream.match(/^[a-zA-Z_][a-zA-Z0-9_]*/);\n  }\n\n  return {\n    startState: function () {\n      return {\n        inString: false,\n        stringType: null,\n        inComment: false,\n        inCharacterClass: false,\n        braced: 0,\n        lhs: true,\n        localState: null\n      };\n    },\n    token: function (stream, state) {\n      if (stream)\n\n      //check for state changes\n      if (!state.inString && !state.inComment && ((stream.peek() == '\"') || (stream.peek() == \"'\"))) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.inString = true; // Update state\n      }\n      if (!state.inString && !state.inComment && stream.match(/^\\/\\*/)) {\n        state.inComment = true;\n      }\n\n      //return state\n      if (state.inString) {\n        while (state.inString && !stream.eol()) {\n          if (stream.peek() === state.stringType) {\n            stream.next(); // Skip quote\n            state.inString = false; // Clear flag\n          } else if (stream.peek() === '\\\\') {\n            stream.next();\n            stream.next();\n          } else {\n            stream.match(/^.[^\\\\\\\"\\']*/);\n          }\n        }\n        return state.lhs ? \"property string\" : \"string\"; // Token style\n      } else if (state.inComment) {\n        while (state.inComment && !stream.eol()) {\n          if (stream.match(/\\*\\//)) {\n            state.inComment = false; // Clear flag\n          } else {\n            stream.match(/^.[^\\*]*/);\n          }\n        }\n        return \"comment\";\n      } else if (state.inCharacterClass) {\n          while (state.inCharacterClass && !stream.eol()) {\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./))) {\n              state.inCharacterClass = false;\n            }\n          }\n      } else if (stream.peek() === '[') {\n        stream.next();\n        state.inCharacterClass = true;\n        return 'bracket';\n      } else if (stream.match(/^\\/\\//)) {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (state.braced || stream.peek() === '{') {\n        if (state.localState === null) {\n          state.localState = CodeMirror.startState(jsMode);\n        }\n        var token = jsMode.token(stream, state.localState);\n        var text = stream.current();\n        if (!token) {\n          for (var i = 0; i < text.length; i++) {\n            if (text[i] === '{') {\n              state.braced++;\n            } else if (text[i] === '}') {\n              state.braced--;\n            }\n          };\n        }\n        return token;\n      } else if (identifier(stream)) {\n        if (stream.peek() === ':') {\n          return 'variable';\n        }\n        return 'variable-2';\n      } else if (['[', ']', '(', ')'].indexOf(stream.peek()) != -1) {\n        stream.next();\n        return 'bracket';\n      } else if (!stream.eatSpace()) {\n        stream.next();\n      }\n      return null;\n    }\n  };\n}, \"javascript\");\n\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","defineMode","config","jsMode","getMode","startState","inString","stringType","inComment","inCharacterClass","braced","lhs","localState","token","stream","state","peek","next","match","eol","skipToEnd","text","current","i","length","indexOf","eatSpace"]
}
