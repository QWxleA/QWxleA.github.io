{"version":3,"sources":["frontend/components/theme.cljs"],"mappings":"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","names":["rum.core/lazy-build","rum.core/build-defc","p__72371","map__72372","cljs.core/--destructure-map","cljs.core.get","vec__72373","cljs.core.nth","daiquiri.core/create-element","daiquiri.util/join-classes","daiquiri.interpreter/interpret","frontend.components.theme/container","t","route","theme","on-click","current-repo","nfs-granted?","db-restoring?","settings-open?","sidebar-open?","system-theme?","sidebar-blocks-len","child","mounted-fn","frontend.rum/use-mounted","restored-sidebar?","set-restored-sidebar?","rum.core/use-state","rum.core.use_effect_BANG_","doc","js/document.documentElement","cls","cljs.core._EQ_","frontend.handler.plugin.hook_plugin_app","and__4251__auto__","frontend.handler.ui/persist-right-sidebar-state!","frontend.handler.plugin/lsp-enabled?","frontend.handler.plugin/setup-install-listener!","frontend.handler.ui/add-style-if-exists!","frontend.extensions.pdf.highlights/reset-current-pdf!","db-restored?","frontend.util/set-title!","or__4253__auto__","frontend.handler.route/update-page-title!","repos","frontend.state/get-repos","cljs.core/not","cljs.core/count","cljs.core/first","frontend.util/mobile?","frontend.config/publishing?","cljs.core/seq","frontend.handler.route/redirect!","frontend.handler.ui/restore-right-sidebar-state!","frontend.ui/setup-system-theme-effect!","frontend.state.set_modal_BANG_","frontend.components.settings/settings","frontend.util/classnames","frontend.extensions.pdf.highlights/playground"],"sourcesContent":["(ns frontend.components.theme\n  (:require [frontend.extensions.pdf.highlights :as pdf]\n            [frontend.config :as config]\n            [frontend.handler.plugin :refer [lsp-enabled?] :as plugin-handler]\n            [frontend.handler.route :as route-handler]\n            [frontend.handler.ui :as ui-handler]\n            [frontend.ui :as ui]\n            [frontend.util :as util]\n            [frontend.state :as state]\n            [frontend.components.settings :as settings]\n            [frontend.rum :refer [use-mounted]]\n            [rum.core :as rum]))\n\n(rum/defc container\n  [{:keys [t route theme on-click current-repo nfs-granted? db-restoring?\n           settings-open? sidebar-open? system-theme? sidebar-blocks-len]} child]\n  (let [mounted-fn (use-mounted)\n        [restored-sidebar? set-restored-sidebar?] (rum/use-state false)]\n\n    (rum/use-effect!\n     #(let [doc js/document.documentElement\n            cls (.-classList doc)]\n        (.setAttribute doc \"data-theme\" theme)\n        (if (= theme \"dark\") ;; for tailwind dark mode\n          (.add cls \"dark\")\n          (.remove cls \"dark\"))\n        (plugin-handler/hook-plugin-app :theme-mode-changed {:mode theme} nil))\n     [theme])\n\n    (rum/use-effect!\n     #(when (and restored-sidebar?\n                 (mounted-fn))\n        (plugin-handler/hook-plugin-app :sidebar-visible-changed {:visible sidebar-open?})\n        (ui-handler/persist-right-sidebar-state!))\n     [sidebar-open? restored-sidebar? sidebar-blocks-len])\n\n    (rum/use-effect!\n     #(when lsp-enabled?\n        (plugin-handler/setup-install-listener! t))\n     [t])\n\n    (rum/use-effect!\n     (fn []\n       (ui-handler/add-style-if-exists!)\n       (pdf/reset-current-pdf!)\n       (plugin-handler/hook-plugin-app :current-graph-changed {}))\n     [current-repo])\n\n    (rum/use-effect!\n     #(let [db-restored? (false? db-restoring?)]\n        (if db-restoring?\n          (util/set-title! \"Loading\")\n          (when (or nfs-granted? db-restored?)\n            (route-handler/update-page-title! route))))\n     [nfs-granted? db-restoring? route])\n\n    (rum/use-effect!\n     (fn []\n       (when-not db-restoring?\n         (let [repos (state/get-repos)]\n           (if-not (or\n                    ;; demo graph only\n                    (and (= 1 (count repos)) (:example? (first repos))\n                         (not (util/mobile?)))\n                    ;; not in publising mode\n                    config/publishing?\n                    ;; other graphs exists\n                    (seq repos))\n            (route-handler/redirect! {:to :repo-add})\n            (do\n              (ui-handler/restore-right-sidebar-state!)\n              (set-restored-sidebar? true))))))\n     [db-restoring?])\n\n    (rum/use-effect!\n     #(when system-theme?\n        (ui/setup-system-theme-effect!))\n     [system-theme?])\n\n    (rum/use-effect!\n     #(state/set-modal!\n       (when settings-open?\n         (fn [] [:div.settings-modal (settings/settings)])))\n     [settings-open?])\n\n    [:div\n     {:class    (util/classnames\n                 [(str theme \"-theme\")\n                  {:white-theme (= \"light\" theme)}]) ; The white-theme is for backward compatibility. See: https://github.com/logseq/logseq/pull/4652.\n      :on-click on-click}\n     child\n\n     (pdf/playground)]))\n"]}