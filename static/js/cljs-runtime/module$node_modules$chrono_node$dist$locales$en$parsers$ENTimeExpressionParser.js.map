{
"version":3,
"file":"module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeExpressionParser.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,8EAAA,CAAmG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE3IC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,OAAMC,QAAUN,OAAA,CAAQ,4CAAR,CACVO,OAAAA,CAAiCP,OAAA,CAAQ,kFAAR,CACvC,MAAMQ,uBAAN,QAAqCD,OAA+BE,CAAAA,4BAApE,CACIC,WAAW,CAACC,UAAD,CAAa,CACpB,KAAA,CAAMA,UAAN,CADoB,CAGxBC,cAAc,EAAG,CACb,MAAO,oCADM,CAGjBC,aAAa,EAAG,CACZ,MAAO,uBADK,CAGhBC,aAAa,EAAG,CACZ,MAAO,oFADK,CAGhBC,4BAA4B,CAACC,OAAD;AAAUC,KAAV,CAAiB,CAEzC,GADMC,OACN,CADmB,KAAMH,CAAAA,4BAAN,CAAmCC,OAAnC,CAA4CC,KAA5C,CACnB,CAAgB,CACZ,GAAIA,KAAA,CAAM,CAAN,CAASE,CAAAA,QAAT,CAAkB,OAAlB,CAAJ,CAAgC,CAC5B,IAAMC,KAAOF,OAAWG,CAAAA,GAAX,CAAe,MAAf,CACD,EAAZ,EAAID,IAAJ,EAAwB,EAAxB,CAAiBA,IAAjB,EACIF,OAAWI,CAAAA,MAAX,CAAkB,MAAlB,CAA0BJ,OAAWG,CAAAA,GAAX,CAAe,MAAf,CAA1B,CAAmD,EAAnD,CACA,CAAAH,OAAWI,CAAAA,MAAX,CAAkB,UAAlB,CAA8BhB,OAAQiB,CAAAA,QAASC,CAAAA,EAA/C,CAFJ,EAIgB,CAJhB,CAISJ,IAJT,EAKIF,OAAWI,CAAAA,MAAX,CAAkB,UAAlB,CAA8BhB,OAAQiB,CAAAA,QAASE,CAAAA,EAA/C,CAPwB,CAU5BR,KAAA,CAAM,CAAN,CAASE,CAAAA,QAAT,CAAkB,WAAlB,CAAJ,GACID,OAAWI,CAAAA,MAAX,CAAkB,UAAlB,CAA8BhB,OAAQiB,CAAAA,QAASC,CAAAA,EAA/C,CAEA,CADMJ,IACN,CADaF,OAAWG,CAAAA,GAAX,CAAe,MAAf,CACb,CAAY,CAAZ,EAAID,IAAJ,EAAyB,CAAzB,EAAiBA,IAAjB,EACIF,OAAWI,CAAAA,MAAX,CAAkB,MAAlB,CAA0BJ,OAAWG,CAAAA,GAAX,CAAe,MAAf,CAA1B,CAAmD,EAAnD,CAJR,CAOIJ,MAAA,CAAM,CAAN,CAASE,CAAAA,QAAT,CAAkB,SAAlB,CAAJ,GACID,OAAWI,CAAAA,MAAX,CAAkB,UAAlB;AAA8BhB,OAAQiB,CAAAA,QAASE,CAAAA,EAA/C,CAEA,CAAW,EAAX,CADaP,OAAWG,CAAAA,GAAXD,CAAe,MAAfA,CACb,EACIF,OAAWI,CAAAA,MAAX,CAAkB,MAAlB,CAA0BJ,OAAWG,CAAAA,GAAX,CAAe,MAAf,CAA1B,CAJR,CAlBY,CA0BhB,MAAOH,QA5BkC,CAbjD,CA4CAhB,OAAQwB,CAAAA,OAAR,CAAkBlB,sBAjDyH;",
"sources":["node_modules/chrono-node/dist/locales/en/parsers/ENTimeExpressionParser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$chrono_node$dist$locales$en$parsers$ENTimeExpressionParser\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst index_1 = require(\"../../../index\");\nconst AbstractTimeExpressionParser_1 = require(\"../../../common/parsers/AbstractTimeExpressionParser\");\nclass ENTimeExpressionParser extends AbstractTimeExpressionParser_1.AbstractTimeExpressionParser {\n    constructor(strictMode) {\n        super(strictMode);\n    }\n    followingPhase() {\n        return \"\\\\s*(?:\\\\-|\\\\\u2013|\\\\~|\\\\\u301c|to|\\\\?)\\\\s*\";\n    }\n    primaryPrefix() {\n        return \"(?:(?:at|from)\\\\s*)??\";\n    }\n    primarySuffix() {\n        return \"(?:\\\\s*(?:o\\\\W*clock|at\\\\s*night|in\\\\s*the\\\\s*(?:morning|afternoon)))?(?=\\\\W|$)\";\n    }\n    extractPrimaryTimeComponents(context, match) {\n        const components = super.extractPrimaryTimeComponents(context, match);\n        if (components) {\n            if (match[0].endsWith(\"night\")) {\n                const hour = components.get(\"hour\");\n                if (hour >= 6 && hour < 12) {\n                    components.assign(\"hour\", components.get(\"hour\") + 12);\n                    components.assign(\"meridiem\", index_1.Meridiem.PM);\n                }\n                else if (hour < 6) {\n                    components.assign(\"meridiem\", index_1.Meridiem.AM);\n                }\n            }\n            if (match[0].endsWith(\"afternoon\")) {\n                components.assign(\"meridiem\", index_1.Meridiem.PM);\n                const hour = components.get(\"hour\");\n                if (hour >= 0 && hour <= 6) {\n                    components.assign(\"hour\", components.get(\"hour\") + 12);\n                }\n            }\n            if (match[0].endsWith(\"morning\")) {\n                components.assign(\"meridiem\", index_1.Meridiem.AM);\n                const hour = components.get(\"hour\");\n                if (hour < 12) {\n                    components.assign(\"hour\", components.get(\"hour\"));\n                }\n            }\n        }\n        return components;\n    }\n}\nexports.default = ENTimeExpressionParser;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","index_1","AbstractTimeExpressionParser_1","ENTimeExpressionParser","AbstractTimeExpressionParser","constructor","strictMode","followingPhase","primaryPrefix","primarySuffix","extractPrimaryTimeComponents","context","match","components","endsWith","hour","get","assign","Meridiem","PM","AM","default"]
}
