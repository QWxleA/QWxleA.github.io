{"version":3,"sources":["frontend/db/outliner.cljs"],"mappings":";AAGA,iCAAA,jCAAMA,0EACHC,KAAKC;AADR,AAEE,IAAA,AACE,IAAAE,WAAA,AAAAC,gBAASJ;IAATK,WAAA,AAAA;IAAAC,WAAmBL;AAAnB,AAAA,gHAAAE,SAAAE,SAAAC,2CAAAH,SAAAE,SAAAC,vLAACC,qDAAAA,iFAAAA;gBADH,GAAA,CAAAL,kBAESM;AAFT,SAAAN,LAEkBO;AAFlB,AAAA;;AAAA,AAAA,MAAAP;;;;AAMF,wCAAA,AAAA,xCAAKQ;AAML,iCAAA,jCAAMC,0EACHX,KAAKY;AADR,AAEE,yEAAA,mFAAA,mFAAA,xOAACC,6DAAYb,4PAA4BY","names":["frontend.db.outliner/get-by-id","conn","id","e96650","G__96651","cljs.core/deref","G__96652","G__96653","datascript.core/pull","js/Error","_e","frontend.db.outliner/get-by-parent-id","frontend.db.outliner/del-block","id-or-look-ref","datascript.core.transact_BANG_"],"sourcesContent":["(ns frontend.db.outliner\n  (:require [datascript.core :as d]))\n\n(defn get-by-id\n  [conn id]\n  (try\n    (d/pull @conn '[*] id)\n    (catch js/Error _e nil)))\n\n;; key [:block/children parent-id]\n\n(def get-by-parent-id\n  '[:find (pull ?a [*])\n    :in $ ?id\n    :where\n    [?a :block/parent ?id]])\n\n(defn del-block\n  [conn id-or-look-ref]\n  (d/transact! conn [[:db.fn/retractEntity id-or-look-ref]]))\n"]}