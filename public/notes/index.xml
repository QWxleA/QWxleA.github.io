<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on Q&#39;s ðŸŒ±</title>
    <link>https://example.org/notes/</link>
    <description>Recent content in Notes on Q&#39;s ðŸŒ±</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Mon, 06 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://example.org/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>resonance lists howto</title>
      <link>https://example.org/notes/resonance-lists-howto/</link>
      <pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/notes/resonance-lists-howto/</guid>
      <description>From a question on the Logseq forum: Creating a Resonance Calendar from queries
A resonance calendar is taken from a video created by Ali Abdaal How I use Notion as a Resonance Calendar - YouTube. It&amp;rsquo;s a list of interesting (resonating) resources, added to your notes. Resources can be one of:
 Movies Podcasts Articles  How to implement this in logseq?
   Step 1 â€” gather a list of items  query-sort-by:: rating query-sort-desc:: false query-properties:: [:page :type :rating :tags] #+BEGIN_QUERY {:title [:h2 &amp;#34;Resonance list 1&amp;#34;] :query [ :find (pull ?</description>
    </item>
    
    <item>
      <title>Accessing encryped lvm logical volumes</title>
      <link>https://example.org/notes/accessing-encryped-lvm-logical-volumes/</link>
      <pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/notes/accessing-encryped-lvm-logical-volumes/</guid>
      <description>These notes I copied as reference
   How to mount encrypted LVM logical volume â€“ sleeplessbeastie&amp;amp;rsquo;s notes  Error, not matched: @&amp;gt; ## Excerpt@
Error, not matched: @&amp;gt; Some time ago, I have recovered an old hard drive only to learn that it contained encrypted LVM logical volume.@
   Some time ago, I have recovered an old hard drive only to learn that it contained encrypted LVM logical volume.</description>
    </item>
    
    <item>
      <title>elementary OS btrfs home</title>
      <link>https://example.org/notes/elementary-os-btrfs-home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/notes/elementary-os-btrfs-home/</guid>
      <description>Notes:
Accessing encryped lvm logical volumes</description>
    </item>
    
    <item>
      <title>xmonad</title>
      <link>https://example.org/notes/xmonad/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/notes/xmonad/</guid>
      <description>A thoroughly weird window-manager for Linux, written in haskell. The configuration is (completely functional) haskell script.
   Links    home | xmonad - the tiling window manager that rocks
  xmonad - Wikipedia
  </description>
    </item>
    
    <item>
      <title>xmonad-notes</title>
      <link>https://example.org/notes/xmonad-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/notes/xmonad-notes/</guid>
      <description>[[xmonad]] keybindings
use git to make a branch, then merge everything back
, (&amp;quot;M-d&amp;quot; , addName &amp;quot;Duplicate w to all ws&amp;quot; $ toggleCopyToAll) Error, not matched: @for video etc?@
subKeys &amp;quot;Workspaces &amp;amp; Projects&amp;quot; ( [ (&amp;quot;M-w&amp;quot; , addName &amp;quot;Switch to Project&amp;quot; $ switchProjectPrompt warmPromptTheme) , (&amp;quot;M-S-w&amp;quot; , addName &amp;quot;Shift to Project&amp;quot; $ shiftToProjectPrompt warmPromptTheme) , (&amp;quot;M-&amp;lt;Escape&amp;gt;&amp;quot; , addName &amp;quot;Next non-empty workspace&amp;quot; $ nextNonEmptyWS) , (&amp;quot;M-S-&amp;lt;Escape&amp;gt;&amp;quot; , addName &amp;quot;Prev non-empty workspace&amp;quot; $ prevNonEmptyWS) , (&amp;quot;M-`&amp;quot; , addName &amp;quot;Next non-empty workspace&amp;quot; $ nextNonEmptyWS) , (&amp;quot;M-S-`&amp;quot; , addName &amp;quot;Prev non-empty workspace&amp;quot; $ prevNonEmptyWS) , (&amp;quot;M-a&amp;quot; , addName &amp;quot;Toggle last workspace&amp;quot; $ toggleWS&#39; [&amp;quot;NSP&amp;quot;]) ] ++ zipM &amp;quot;M-&amp;quot; &amp;quot;View ws&amp;quot; wsKeys [0.</description>
    </item>
    
  </channel>
</rss>
